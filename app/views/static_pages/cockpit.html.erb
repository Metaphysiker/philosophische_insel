<div class="container">
      <h1>Cockpit - vegan.ch</h1>
      <h2><%= @start_date.strftime("%Y-%m-%d") %> - <%= @end_date.strftime("%Y-%m-%d") %></h2>
      <!-- The Sign-in button. This will run `queryReports()` on success. -->
      <p class="g-signin2" data-onsuccess="startQueries"></p>

      <h2>Monatliche Übersicht</h2>
      <table class="table monthly_overview_table">
        <thead>

          <tr class="head_tr">
            <th scope="col">Monat</th>
            <th scope="col">Pageviews</th>
            <th scope="col">unique Pageviews</th>
            <th scope="col">Sessions</th>
            <th scope="col">Users</th>
                      <!--
            <th scope="col">Monat</th>
                      -->
          </tr>

        </thead>
        <tbody class="tbody">

        </tbody>
      </table>

      <h2>Monatliche Mitgliedseite-Übersicht</h2>
      <table class="table monthly_member_page_report_table">
        <thead>

          <tr class="head_tr">
            <th scope="col">Monat</th>
            <th scope="col">Besucher</th>
            <th scope="col">Effektive Anmeldungen</th>
                      <!--
            <th scope="col">Monat</th>
                      -->
          </tr>

        </thead>
        <tbody class="tbody">

        </tbody>
      </table>

      <h2>Monatliche Spendeseite-Übersicht</h2>
      <table class="table monthly_donation_page_report_table">
        <thead>

          <tr class="head_tr">
            <th scope="col">Monat</th>
            <th scope="col">Besucher</th>
            <th scope="col">Effektive Spenden</th>
                      <!--
            <th scope="col">Monat</th>
                      -->
          </tr>

        </thead>
        <tbody class="tbody">

        </tbody>
      </table>

      <h2>Blogbeiträge</h2>
      <table class="table monthly_blog_report_table">
        <thead>

          <tr class="head_tr">
            <th scope="col">Monat</th>
            <th scope="col">Besucher</th>
                      <!--
            <th scope="col">Monat</th>
                      -->
          </tr>

        </thead>
        <tbody class="tbody">

        </tbody>
      </table>
</div>

<script>
  // Replace with your view ID.
  var VIEW_ID = "235111240";
  var options = {  year: 'numeric', month: 'long' };
  var request = <%= raw @request.to_json %>;
  var dummy_dateRange =
              {
              startDate: '2021-01-01',
                endDate: '2021-01-31'
              };


  function startQueries() {
     //monthly_overview_report(request.dateRanges)
     //.then(() => monthly_member_page_report(request.dateRanges))
     //.then(() => monthly_donation_page_report(request.dateRanges))
     //.then(() => monthly_blog_report(request.dateRanges));
    // .then(monthly_member_page_report(request.dateRanges));
    monthly_blog_report(request.dateRanges);
  }

  //monthly_overview_report
  function monthly_overview_report(dateRanges){
    var table_name = ".monthly_overview_table";
    return new Promise(function(outer_promise_resolve, outer_promise_reject)
    {
      for (let main_index = 0, p = Promise.resolve(); main_index < dateRanges.length; main_index++)
        {
            p = p.then(() => new Promise(function(resolve, reject) {
              gapi.client.request({
                path: '/v4/reports:batchGet',
                root: 'https://analyticsreporting.googleapis.com/',
                method: 'POST',
                body: {
                  reportRequests: [
                    {
                      viewId: VIEW_ID,
                      dateRanges: [dateRanges[main_index]],
                      metrics: [
                        {
                          expression: 'ga:pageviews'
                        },
                        {
                          expression: 'ga:uniquePageviews'
                        },
                        {
                          expression: 'ga:sessions'
                        },
                        {
                          expression: 'ga:users'
                        }
                      ]
                    }
                  ]
                }
              }).then(function(response){
                var metrics = response.result.reports[0].data.rows[0].metrics;
                for (var i = 0; i < metrics.length; i++) {
                  var values = metrics[i].values;
                  $(table_name + " .tbody").append(`
                  <tr>
                  </tr>
                  `);
                  var date_of_current_row = new Date(dateRanges[main_index].startDate);
                  $(table_name + " tr:last").append(`
                    <td>${date_of_current_row.toLocaleDateString('de-DE', options)}</td>
                  `);

                  for (var inner_i = 0; inner_i < values.length; inner_i++) {
                      $(table_name + " tr:last").append(`
                        <td>${values[inner_i]}</td>
                      `);
                  }
                }

                resolve("done");
                if(main_index + 1 >= dateRanges.length){
                  outer_promise_resolve("this report is done");
                  //outer_promise_reject("error");
                }
              }, function(error){
                outer_promise_reject("error");
              })
            } // end of inner promise
        ));
      } // end of for loop
    })
  }

  //monthly_member_page_report
  function monthly_member_page_report(dateRanges){
    var table_name = ".monthly_member_page_report_table";
    return new Promise(function(outer_promise_resolve, outer_promise_reject)
    {
      for (let main_index = 0, p = Promise.resolve(); main_index < dateRanges.length; main_index++)
        {
            p = p.then(() => new Promise(function(resolve, reject) {
              gapi.client.request({
                path: '/v4/reports:batchGet',
                root: 'https://analyticsreporting.googleapis.com/',
                method: 'POST',
                body: {
                  reportRequests: [
                    {
                      viewId: VIEW_ID,
                      dateRanges: [dateRanges[main_index]],
                      metrics: [
                        {
                          expression: 'ga:users'
                        }
                      ],
                      "dimensionFilterClauses": [
                       {
                        "filters": [
                        {
                         "operator": "REGEXP",
                         "dimensionName": "ga:pagePath",
                         "expressions": [
                           "/mitglied-werden"
                          ]
                        }
                        ]
                       }
                      ]
                    }
                  ]
                }
              }).then(function(response){
                var metrics = response.result.reports[0].data.rows[0].metrics;
                for (var i = 0; i < metrics.length; i++) {
                  var values = metrics[i].values;
                  $(table_name + " .tbody").append(`
                  <tr>
                  </tr>
                  `);
                  var date_of_current_row = new Date(dateRanges[main_index].startDate);
                  $(table_name + " tr:last").append(`
                    <td>${date_of_current_row.toLocaleDateString('de-DE', options)}</td>
                  `);

                  for (var inner_i = 0; inner_i < values.length; inner_i++) {
                      $(table_name + " tr:last").append(`
                        <td>${values[inner_i]}</td>
                      `);
                  }
                }

                resolve("done");
                if(main_index + 1 >= dateRanges.length){
                  outer_promise_resolve("this report is done");
                  //outer_promise_reject("error");
                }
              }, function(error){
                outer_promise_reject("error");
              })
            } // end of inner promise
        ));
      } // end of for loop
    })
  }


  //monthly_donation_page_report
  function monthly_donation_page_report(dateRanges){
    var table_name = ".monthly_donation_page_report_table";
    return new Promise(function(outer_promise_resolve, outer_promise_reject)
    {
      for (let main_index = 0, p = Promise.resolve(); main_index < dateRanges.length; main_index++)
        {
            p = p.then(() => new Promise(function(resolve, reject) {
              gapi.client.request({
                path: '/v4/reports:batchGet',
                root: 'https://analyticsreporting.googleapis.com/',
                method: 'POST',
                body: {
                  reportRequests: [
                    {
                      viewId: VIEW_ID,
                      dateRanges: [dateRanges[main_index]],
                      metrics: [
                        {
                          expression: 'ga:users'
                        }
                      ],
                      "dimensionFilterClauses": [
                       {
                        "filters": [
                        {
                         "operator": "REGEXP",
                         "dimensionName": "ga:pagePath",
                         "expressions": [
                           "/aktiv-werden/spenden"
                          ]
                        }
                        ]
                       }
                     ]
                    }
                  ]
                }
              }).then(function(response){
                var metrics = response.result.reports[0].data.rows[0].metrics;
                for (var i = 0; i < metrics.length; i++) {
                  var values = metrics[i].values;
                  $(table_name + " .tbody").append(`
                  <tr>
                  </tr>
                  `);
                  var date_of_current_row = new Date(dateRanges[main_index].startDate);
                  $(table_name + " tr:last").append(`
                    <td>${date_of_current_row.toLocaleDateString('de-DE', options)}</td>
                  `);

                  for (var inner_i = 0; inner_i < values.length; inner_i++) {
                      $(table_name + " tr:last").append(`
                        <td>${values[inner_i]}</td>
                      `);
                  }
                }

                resolve("done");
                if(main_index + 1 >= dateRanges.length){
                  outer_promise_resolve("this report is done");
                  //outer_promise_reject("error");
                }
              }, function(error){
                outer_promise_reject("error");
              })
            } // end of inner promise
        ));
      } // end of for loop
    })
  }

  //monthly_blog_report
  function monthly_blog_report(dateRanges){
    var table_name = ".monthly_blog_report_table";
    return new Promise(function(outer_promise_resolve, outer_promise_reject)
    {
      for (let main_index = 0, p = Promise.resolve(); main_index < dateRanges.length; main_index++)
        {
            p = p.then(() => new Promise(function(resolve, reject) {
              gapi.client.request({
                path: '/v4/reports:batchGet',
                root: 'https://analyticsreporting.googleapis.com/',
                method: 'POST',
                body: {
                  reportRequests: [
                    {
                      viewId: VIEW_ID,
                      dateRanges: [dateRanges[main_index]],
                      "metrics":
                      [
                        {"expression": "ga:users"},
                      ],
                      "dimensions":
                      [
                        {"name": "ga:pagePath"}
                      ],
                      "orderBys": [
                        {"fieldName": "ga:users", "sortOrder": "DESCENDING"},
                      ]


                    }
                  ]
                }
              }).then(function(response){
                console.log(response.body);
                var metrics = response.result.reports[0].data.rows[0].metrics;
                for (var i = 0; i < metrics.length; i++) {
                  var values = metrics[i].values;
                  $(table_name + " .tbody").append(`
                  <tr>
                  </tr>
                  `);
                  var date_of_current_row = new Date(dateRanges[main_index].startDate);
                  $(table_name + " tr:last").append(`
                    <td>${date_of_current_row.toLocaleDateString('de-DE', options)}</td>
                  `);

                  for (var inner_i = 0; inner_i < values.length; inner_i++) {
                      $(table_name + " tr:last").append(`
                        <td>${values[inner_i]}</td>
                      `);
                  }
                }

                resolve("done");
                if(main_index + 1 >= dateRanges.length){
                  outer_promise_resolve("this report is done");
                  //outer_promise_reject("error");
                }
              }, function(error){
                outer_promise_reject("error");
              })
            } // end of inner promise
        ));
      } // end of for loop
    })
  }



</script>

<!-- Load the JavaScript API client and Sign-in library. -->
<script src="https://apis.google.com/js/client:platform.js"></script>
