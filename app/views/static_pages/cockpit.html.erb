<div class="container">
      <h1>Cockpit - vegan.ch</h1>
      <h2><%= Date.today.beginning_of_month.strftime("%Y-%m-%d") %> - <%= Date.today.end_of_month.strftime("%Y-%m-%d") %></h2>
      <!-- The Sign-in button. This will run `queryReports()` on success. -->
      <p class="g-signin2" data-onsuccess="startQueries"></p>

      <table class="table information_table">
        <thead>

          <tr class="head_tr">
            <th scope="col">Monat</th>
            <th scope="col">Sessions</th>
            <th scope="col">Hits</th>
            <th scope="col">Users</th>
            <th scope="col">Session Duration</th>
            <th scope="col">uniquePageviews</th>
                      <!--
            <th scope="col">Monat</th>
                      -->
          </tr>

        </thead>
        <tbody class="tbody">

        </tbody>
      </table>
</div>

<script>
  // Replace with your view ID.
  var VIEW_ID = "235111240";
  var startDate = "<%= Date.today.beginning_of_month.strftime("%Y-%m-%d") %>";
  var endDate = "<%= Date.today.end_of_month.strftime("%Y-%m-%d") %>";
  var request = <%= raw @request.to_json %>;
  var current_step = 0;
  var dummy_dateRanges = [
              {
              startDate: '2020-01-01',
                endDate: '2020-01-31'
              }
            ];


  function startQueries() {
     queryReports(request.dateRanges[current_step]);
  }

  // Query the API and print the results to the page.
  function queryReports(dateRange) {
    gapi.client.request({
      path: '/v4/reports:batchGet',
      root: 'https://analyticsreporting.googleapis.com/',
      method: 'POST',
      body: {
        reportRequests: [
          {
            viewId: VIEW_ID,
            dateRanges: [dateRange],
            metrics: [
              {
                expression: 'ga:sessions'
              },
              {
                expression: 'ga:hits'
              },
              {
                expression: 'ga:users'
              },
              {
                expression: 'ga:sessionDuration'
              },
              {
                expression: 'ga:uniquePageviews'
              }
            ]
          //  "dimensionFilterClauses": [
          //   {
          //    "filters": [
          //    {
          //     "operator": "REGEXP",
          //     "dimensionName": "ga:pagePath",
          //     "expressions": [
          //       "/projekte/"
          //      ]
          //    }
          //    ]
          //   }
        //    ]

          }
        ]
      }
    }).then(function(response){

      var metrics = response.result.reports[0].data.rows[0].metrics;
      for (var i = 0; i < metrics.length; i++) {
        var values = metrics[i].values;
        $(".tbody").append(`
        <tr>
        </tr>
        `);

        $(".information_table tr:last").append(`
          <td>${dateRange.startDate} - ${dateRange.endDate}</td>
        `);

        for (var inner_i = 0; inner_i < values.length; inner_i++) {
            $(".information_table tr:last").append(`
              <td>${values[inner_i]}</td>
            `);
        }
      }

      current_step = current_step + 1;
      if (current_step < request.dateRanges.length) {
        queryReports(request.dateRanges[current_step]);
      }

    })

  }

  function displayResults(response) {

    //var head_row_array = response.result.reports[0].columnHeader.metricHeader.metricHeaderEntries;

    //for (var i = 0; i < head_row_array.length; i++) {
    //    $(".head_tr").append(`
    //      <th scope="col">${head_row_array[i].name}</th>
    //    `);
    //}
    //var body_row_array = response.result.reports[0].data.rows[0].metrics[0].values;

    var metrics = response.result.reports[0].data.rows[0].metrics;
    for (var i = 0; i < metrics.length; i++) {
      var values = metrics[i].values;
      $(".tbody").append(`
      <tr>
      </tr>
      `);

      for (var inner_i = 0; inner_i < values.length; inner_i++) {
          $(".information_table tr:last").append(`
            <td>${values[inner_i]}</td>
          `);
      }

    }

    //var formattedJson = JSON.stringify(response.result, null, 2);
    //document.getElementById('query-output').value = formattedJson;

    current_step = current_step + 1;
    if (current_step < request.dateRanges.length) {
      queryReports(request.dateRanges[current_step]);
    }

  }
</script>

<!-- Load the JavaScript API client and Sign-in library. -->
<script src="https://apis.google.com/js/client:platform.js"></script>
