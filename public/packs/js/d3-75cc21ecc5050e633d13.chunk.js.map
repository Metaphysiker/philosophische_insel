{"version":3,"file":"js/d3-75cc21ecc5050e633d13.chunk.js","sources":["webpack:///./app/javascript/channels sync _channel\\.js$","webpack:///./app/javascript/channels/index.js","webpack:///./app/javascript/packs/animate_css.js","webpack:///./app/javascript/packs/d3.js"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./app/javascript/channels sync recursive _channel\\\\.js$\";","// Load all the channels within this directory and all subdirectories.\n// Channel files must be named *_channel.js.\n\nconst channels = require.context('.', true, /_channel\\.js$/)\nchannels.keys().forEach(channels)\n","const animateCSS = (element, animation, prefix = 'animate__') =>\n  // We create a Promise and return it\n  new Promise((resolve, reject) => {\n    const animationName = `${prefix}${animation}`;\n    const node = document.querySelector(element);\n\n    node.classList.add(`${prefix}animated`, animationName);\n\n    // When the animation ends, we clean the classes and resolve the Promise\n    function handleAnimationEnd() {\n      node.classList.remove(`${prefix}animated`, animationName);\n      node.removeEventListener('animationend', handleAnimationEnd);\n\n      resolve('Animation ended');\n    }\n\n    node.addEventListener('animationend', handleAnimationEnd);\n  });\n\nwindow.ANIMATECSS = animateCSS;\n","import Rails from \"@rails/ujs\"\nimport * as ActiveStorage from \"@rails/activestorage\"\nimport \"channels\"\nimport \"bootstrap\"\nimport \"jquery\"\nimport \"d3/dist/d3.js\"\nimport \"packs/animate_css\"\n\n//import \"bootstrap-icons/font/bootstrap-icons.scss\"\n\nRails.start()\nActiveStorage.start()\n\nwindow.jQuery = $;\nwindow.$ = $;\n\n\n$.fn.isInViewport = function() {\n    var elementTop = $(this).offset().top;\n    var elementBottom = elementTop + $(this).outerHeight();\n\n    var viewportTop = $(window).scrollTop();\n    var viewportBottom = viewportTop + $(window).height();\n\n    return elementBottom > viewportTop && elementTop < viewportBottom;\n};\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACRA;AACA;AAEA;AACA;AAAA;;;;;;;;;;;ACJA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAjBA;AAAA;AACA;AAkBA;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;;;;;A","sourceRoot":""}