{"version":3,"file":"js/vegan_chat-a35d58b63152aedea019.chunk.js","sources":["webpack:///./app/javascript/channels sync _channel\\.js$","webpack:///./app/javascript/channels/index.js","webpack:///./app/javascript/packs/animate_css.js","webpack:///./app/javascript/packs/chat.js","webpack:///./app/javascript/packs/vegan_chat.js"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./app/javascript/channels sync recursive _channel\\\\.js$\";","// Load all the channels within this directory and all subdirectories.\n// Channel files must be named *_channel.js.\n\nconst channels = require.context('.', true, /_channel\\.js$/)\nchannels.keys().forEach(channels)\n","const animateCSS = (element, animation, prefix = 'animate__') =>\n  // We create a Promise and return it\n  new Promise((resolve, reject) => {\n    const animationName = `${prefix}${animation}`;\n    const node = document.querySelector(element);\n\n    node.classList.add(`${prefix}animated`, animationName);\n\n    // When the animation ends, we clean the classes and resolve the Promise\n    function handleAnimationEnd() {\n      node.classList.remove(`${prefix}animated`, animationName);\n      node.removeEventListener('animationend', handleAnimationEnd);\n\n      resolve('Animation ended');\n    }\n\n    node.addEventListener('animationend', handleAnimationEnd);\n  });\n\nwindow.ANIMATECSS = animateCSS;\n","export function Chat(container) {\n  this.container = container,\n  this.container_class = \".\" + this.container,\n  this.loading_box = this.container + \"_loading_box\",\n  this.loading_box_class = \".\" + this.loading_box,\n  this.waiting_time_for_next_message = 1000,\n  this.loading_time = 1000,\n  this.add_left_chat_message = function(id) {\n    var self = this;\n    self.get_chat_message(id)\n    .then(data => self.append_loading_box_left(data))\n    .then(data => self.append_message_to_box(data))\n    .then(data => self.chat_messages_controller(data))\n  },\n  this.chat_messages_controller = function(data){\n    var self = this;\n    var first_child = data.children[0];\n    var children = data.children;\n\n    if (first_child[\"chatter\"] === \"computer\"){\n      self.add_left_chat_message(first_child.id)\n    } else {\n      self.add_buttons(children);\n    }\n  },\n  this.log = function(){\n    console.log(\"OOOOGOGOGIJAOGAG\")\n  },\n  this.add_buttons = function(children){\n    var self = this;\n    var html_buttons = \"\";\n\n    for (let i = 0; i < children.length; i++) {\n      html_buttons += `<button class=\"btn btn-light chat-buttons\" data-chat-message-id=\"${children[i].id}\" type=\"button\">${children[i].content}</button>`;\n    }\n\n    return new Promise(function(resolve, reject)\n    {\n    $(self.container_class).append(`\n      <div class=\"d-grid gap-4 col-6 mx-auto\">\n        ${html_buttons}\n      </div>\n      `)\n\n      $(\".chat-buttons\").click(function(){\n        console.log($(this).data(\"chat-message-id\"));\n      });\n\n      resolve(children)\n    })\n  },\n  this.append_loading_box_left = function(data){\n    var self = this;\n    return new Promise(function(resolve, reject)\n    {\n    $(self.container_class).append(`\n      <div class=\"chat-section-field\">\n        <div class=\"row\">\n            <div class=\"col-12 d-flex align-items-end\">\n              <div class=\"\" style=\"padding-right: 0.5rem;\">\n                <img src=\"${data.image_url}\" class=\"rounded-circle border-white white-border-for-rounded-circle bg-white\" width=\"50px\" height=\"50px\">\n              </div>\n              <div class=\"chat-bg-computer chat-text chat-argument-field chat_message_${data.id}\">\n                <div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n              </div>\n            </div>\n        </div>\n      </div>\n      `)\n      resolve(data)\n    })\n  },\n  this.append_message_to_box = function(data){\n    var self = this;\n    return new Promise(function(resolve, reject)\n    {\n      setTimeout(function(){\n        $(\".chat_message_\" + data.id).html(data.content);\n        resolve(data)\n      }, 200 + (data.content.length * 20))\n\n    })\n  },\n  this.start = function() {\n    var self = this;\n    this.add_left_chat_message(1)\n  },\n  this.get_chat_message = function(id){\n    return new Promise(function(resolve, reject)\n    {\n    $.ajax({\n      method: \"GET\",\n      url: \"/chat_messages/\" + id + \"/json\"\n        })\n      .done(function( data ) {\n        resolve(data);\n      });\n    })\n  },\n  this.append_loading_box = function(){\n    $(this.container_class).append(`\n      <div class=\"${this.loading_box} chat-bg-computer chat-text chat-argument-field\">\n        <div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n      </div>\n    `);\n  },\n  this.remove_loading_box = function(){\n    $(this.loading_box_class).remove();\n  },\n  this.append_message_left = function(data){\n    var self = this;\n    return new Promise(function(resolve, reject)\n    {\n    $(self.container_class).append(`\n      <div class=\"chat-section-field\">\n        <div class=\"row\">\n            <div class=\"col-12 d-flex align-items-end\">\n              <div class=\"\" style=\"padding-right: 0.5rem;\">\n                <img src=\"${data.image_url}\" class=\"rounded-circle border-white white-border-for-rounded-circle bg-white\" width=\"50px\" height=\"50px\">\n              </div>\n              <div class=\"chat-bg-computer chat-text chat-argument-field chat_message_${data.id}\">\n                <div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n              </div>\n            </div>\n        </div>\n      </div>\n      `)\n      resolve(data)\n    })\n  }\n}\n","import Rails from \"@rails/ujs\"\nimport * as ActiveStorage from \"@rails/activestorage\"\nimport \"channels\"\nimport \"bootstrap\"\nimport \"jquery\"\nimport \"chosen-js/chosen.jquery.min.js\"\nimport * as Chat from \"packs/chat\"\nimport \"packs/animate_css\"\nimport \"font-awesome/scss/font-awesome.scss\"\nimport \"bootstrap-icons/font/bootstrap-icons.css\"\nimport \"d3/dist/d3.js\"\n\n\nRails.start()\nActiveStorage.start()\n\nwindow.jQuery = $;\nwindow.$ = $;\nwindow.Chat = Chat;\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACRA;AACA;AAEA;AACA;AAAA;;;;;;;;;;;ACJA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAjBA;AAAA;AACA;AAkBA;;;;;;;;;;;;ACnBA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAcA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAEA;AAKA;AAEA;AACA;AAEA;AACA;AAEA;AAcA;AACA;AACA;AACA;;;;;;;;;;;;;AClIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;;;;;A","sourceRoot":""}