{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./app/javascript/channels/index.js","webpack:///./app/javascript/channels sync _channel\\.js$","webpack:///./node_modules/d3/dist/d3.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/@fortawesome/fontawesome-free/js/all.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/process/browser.js","webpack:///./app/javascript/packs/pferdefutter.js"],"names":["module","exports","channels","require","keys","forEach","webpackEmptyContext","req","e","Error","code","resolve","id","global","factory","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","length","err","_iterableToArrayLimit","_unsupportedIterableToArray","TypeError","_nonIterableRest","_get","target","property","receiver","Reflect","get","base","object","prototype","hasOwnProperty","_getPrototypeOf","_superPropBase","desc","getOwnPropertyDescriptor","_inherits","subClass","superClass","create","constructor","_setPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","result","Super","NewTarget","this","construct","arguments","apply","_possibleConstructorReturn","self","_typeof","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","_cache","Map","undefined","fn","Function","toString","indexOf","has","set","Wrapper","_construct","Parent","args","a","instance","bind","sham","Proxy","Boolean","valueOf","o","p","setPrototypeOf","__proto__","getPrototypeOf","_classCallCheck","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","iter","from","_iterableToArray","_nonIterableSpread","_createForOfIteratorHelper","allowArrayLike","it","F","s","n","_e4","f","normalCompletion","didErr","step","_e5","return","minLen","slice","name","test","len","arr2","_marked","mark","numbers","_marked2","flatten","_marked3","selection_iterator","_marked4","flatIterable","_marked5","node_iterator","ascending$3","b","NaN","bisector","delta","compare1","compare2","left","x","lo","hi","mid","d","center","right","number$3","values","valueof","_iterator","_step","_index","_iterator2","_step2","_value","wrap","_context","prev","t0","finish","t1","stop","ascendingBisect","bisectRight","bisectLeft","bisectCenter","bisect","count$1","count","_step3","_iterator3","_step4","_index2","_iterator4","_value2","length$3","array","empty$2","arrayify","reducer","reduce","variance","mean","sum","_step5","_iterator5","_step6","_index3","_iterator6","_value3","deviation","v","Math","sqrt","extent$1","min","max","_step7","_iterator7","_step8","_index4","_iterator8","_value4","Adder","_partials","Float64Array","j","_y","abs","y","InternMap","_Map","_super","entries","_this","keyof","defineProperties","_intern","_key","_step11","_iterator11","_ref3","_ref2","_key3","intern_get","intern_set","intern_delete","InternSet","_Set","_super2","_this2","_step12","_iterator12","add","Set","_ref4","_ref5","_ref6","delete","identity$9","group","_len2","_key4","nest","groups","_len3","_key5","flatten$1","flatMap","g","pop","map","_ref7","_ref8","concat","rollup","_len6","_key8","rollups","_len7","_key9","unique","regroup","_step13","index","_iterator13","_group","_step14","_iterator14","_ref10","_key12","_values","permute","source","sort","_len10","_key13","_F","_F2","_index6","Uint32Array","_step15","_iterator15","_f","_c","ascendingDefined","compareDefined","compare","slice$3","constant$b","e10","e5","e2","ticks","start","reverse","tickIncrement","isFinite","r0","round","r1","_r","_r2","power","floor","log","LN10","error","pow","tickStep","step0","step1","nice$1","prestep","_step16","ceil","thresholdSturges","LN2","bin","domain","threshold","histogram","data","xz","x0","x1","tz","_max","tn","_nice$2","_step17","m","shift","bins","_","thresholds","max$3","_step18","_iterator16","_step19","_index7","_iterator17","_value6","min$2","_step20","_iterator18","_step21","_index8","_iterator19","_value7","quickselect","k","_m","z","_s2","exp","sd","newLeft","newRight","t","swap$1","quantile$1","i0","value0","subarray","quantileSorted","value1","maxIndex","_step22","_iterator20","_step23","_iterator21","_value8","arrays","_iterator24","_step26","_array","_context2","delegateYield","merge","minIndex","_step27","_iterator25","_step28","_iterator26","_value10","pair","range$2","range","leastIndex","minValue","_step35","_iterator33","shuffle$1","shuffler","random","i1","transpose","matrix","length$2","row","set$2","superset","other","_step48","_iterator46","_iterator$next4","is","identity$8","epsilon$6","translateX","translateY","number$2","scale","center$1","offset","bandwidth","entering","__axis","axis","orient","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","window","devicePixelRatio","transform","context","format","spacing","range0","range1","position","copy","selection","path","selectAll","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","select","text","insert","transition","getAttribute","parentNode","remove","filter","each","tickSize","noop$3","dispatch","Dispatch","parseTypenames$1","typenames","types","trim","split","type","get$1","c","set$1","callback","on","typename","T","that","xhtml","namespaces","svg","xlink","xml","xmlns","namespace","prefix","space","local","creatorInherit","document","ownerDocument","uri","namespaceURI","documentElement","createElement","createElementNS","creatorFixed","fullname","creator","none$2","selector","querySelector","array$4","empty$1","selectorAll","querySelectorAll","matcher","matches","childMatcher","node","find$1","find","childFirst","firstElementChild","children","sparse","update","EnterNode","parent","datum","_next","_parent","__data__","constant$a","bindIndex","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","arraylike","ascending$2","attrRemove$1","removeAttribute","attrRemoveNS$1","removeAttributeNS","attrConstant$1","setAttribute","attrConstantNS$1","setAttributeNS","attrFunction$1","attrFunctionNS$1","defaultView","styleRemove$1","style","removeProperty","styleConstant$1","priority","setProperty","styleFunction$1","styleValue","getPropertyValue","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant$1","textFunction$1","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","appendChild","lower","previousSibling","insertBefore","firstChild","constantNull","removeChild","selection_cloneShallow","clone","cloneNode","selection_cloneDeep","parseTypenames","onRemove","__on","removeEventListener","listener","options","onAdd","event","contextListener","addEventListener","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","_context3","_groups","child","join","splice","contains","root$1","Selection$1","parents","_parents","subgroups","subnode","subgroup","arrayAll","selectChild","match","childFind","selectChildren","childrenFilter","enterGroup","updateGroup","exitGroup","previous","_enter","_exit","onenter","onupdate","onexit","groups0","groups1","m0","m1","merges","group0","group1","compareDocumentPosition","compareNode","sortgroups","sortgroup","nodes","size","_step50","_iterator48","empty","getAttributeNS","classed","html","before","deep","nextId","local$1","Local","sourceEvent","pointer","currentTarget","ownerSVGElement","createSVGPoint","point","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","rect","clientLeft","top","clientTop","pageX","pageY","nonpassive","passive","nonpassivecapture","capture","nopropagation$2","stopImmediatePropagation","noevent$2","preventDefault","dragDisable","view","root","__noselect","MozUserSelect","yesdrag","noclick","setTimeout","constant$9","DragEvent","_ref25","subject","identifier","active","dx","dy","defaultFilter$2","ctrlKey","button","defaultContainer","defaultSubject","defaultTouchable$2","navigator","maxTouchPoints","define","extend","definition","Color","_darker","_brighter","reI","reN","reP","reHex","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_formatHex","rgb","formatHex","color_formatRgb","formatRgb","color","l","toLowerCase","exec","parseInt","rgbn","Rgb","rgba","hsla","r","rgbConvert","opacity","rgb_formatHex","hex","rgb_formatRgb","isNaN","h","Hsl","hslConvert","hsl$2","hsl2rgb","m2","assign","displayable","formatHsl","brighter","darker","radians$1","PI","degrees$2","Xn","Zn","t0$1","t1$1","t2","labConvert","Lab","Hcl","hcl2lab","rgb2lrgb","xyz2lab","lab$1","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl$2","cos","sin","A","B$1","C","D$1","E","ED","EB","BC_DA","cubehelixConvert","Cubehelix","bl","cubehelix$3","basis$1","v0","v1","v2","v3","t3","basis$2","basisClosed$1","cosh","sinh","constant$8","linear$2","hue$1","gamma$1","nogamma","exponential$1","interpolateRgb","rgbGamma","rgb$1","end","gamma","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","numberArray","isNumberArray","ArrayBuffer","isView","DataView","genericArray","nb","na","interpolate$2","date$1","Date","setTime","interpolateNumber","object$1","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","q","one","zero","interpolateRound","svgNode","degrees$1","identity$7","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","parse","pxComma","pxParen","degParen","xa","ya","xb","yb","translate","interpolateTransformCss","DOMMatrix","WebKitCSSMatrix","isIdentity","interpolateTransformSvg","baseVal","consolidate","interpolateZoom","zoomRho","rho","rho2","rho4","zoom","p0","p1","S","ux0","uy0","w0","ux1","uy1","w1","d2","d1","b0","b1","coshr0","u","tanh","duration","SQRT2","_1","_2","hsl","hue","hsl$1","hslLong","hcl","hcl$1","hclLong","cubehelix$1","cubehelixGamma","cubehelix","cubehelix$2","cubehelixLong","piecewise","interpolate","I","taskHead","taskTail","frame","timeout$1","interval$1","clockLast","clockNow","clockSkew","clock","performance","now","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","timer","delay","time","restart","timerFlush","wake","Infinity","sleep","nap","poke","clearTimeout","clearInterval","setInterval","timeout","elapsed","emptyOn","emptyTween","schedule","timing","schedules","__transition","tween","state","ease","init","interrupt","tweenRemove","tween0","tween1","tweenFunction","tweenValue","_id","interpolate$1","attrRemove","attrRemoveNS","attrConstant","string00","interpolate0","string1","string0","attrConstantNS","attrFunction","string10","attrFunctionNS","attrInterpolate","attrInterpolateNS","attrTweenNS","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","onFunction","on0","on1","sit","every","Selection","styleRemove","styleInterpolate","styleTween","textInterpolate","textTween","Transition","_name","newId","selection_prototype","quadInOut","cubicInOut","inherit","id0","id1","styleNull","styleFunction","listener0","styleMaybeRemove","styleConstant","textFunction","textConstant","removeFunction","easeVarying","Promise","reject","cancel","polyIn","custom","exponent","polyOut","polyInOut","pi$4","halfPi$3","sinInOut","tpmt","expInOut","circleInOut","bounceOut","overshoot","backIn","backOut","backInOut","tau$5","elasticIn","asin","amplitude","period","elasticOut","elasticInOut","defaultTiming","constant$7","BrushEvent","_ref26","mode","nopropagation$1","noevent$1","MODE_DRAG","MODE_SPACE","MODE_HANDLE","MODE_CENTER","abs$3","max$2","min$1","number1","number2","X","handles","input","output","xy","Y","XY","cursors","overlay","w","nw","ne","se","sw","flipX","flipY","signsX","signsY","defaultFilter$1","defaultExtent$1","hasAttribute","viewBox","width","height","defaultTouchable$1","__brush","extent","brush$1","dim","touchending","touchable","listeners","handleSize","brush","initialize","handle","redraw","started","touchmoved","touchended","emitter","clean","emit","Emitter","touches","n0","n1","e0","e1","s0","s1","moving","lockX","lockY","metaKey","altKey","signX","signY","W","N","shifting","shiftKey","points","point0","beforestart","pts","move","moved","ended","keydowned","keyupped","_step51","_iterator49","changedTouches","_step53","_iterator51","cur","_point","_step52","_iterator50","_point2","keyCode","selection0","selection1","clear","starting","keyModifiers","abs$2","cos$2","sin$2","pi$3","halfPi$2","tau$4","max$1","epsilon$5","range$1","compareValue","chord$1","directed","padAngle","sortGroups","sortSubgroups","sortChords","chord","groupSums","groupIndex","chords","_x","_x2","_step54","_iterator52","_loop","subgroupIndex","_step55","_iterator53","_j2","startAngle","endAngle","_subgroupIndex","_step56","_iterator54","_j3","_chord3","pi$2","tau$3","epsilon$4","tauEpsilon","Path$1","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","a1","ccw","cw","da","slice$2","constant$6","defaultSource$1","defaultTarget","defaultRadius$1","radius","defaultStartAngle","defaultEndAngle","defaultPadAngle","defaultArrowheadRadius","ribbon","headRadius","sourceRadius","targetRadius","buffer","ap","argv","sr","sa0","sa1","tr","ta0","ta1","hr","tr2","ta2","slice$1","ascending$1","constant$5","contains$2","ring","hole","ringContains","pi","xi","yi","pj","xj","yj","segmentContains","collinear$1","noop$2","cases","contours","smooth","smoothLinear","ts","contour","polygons","holes","fragmentByStart","fragmentByEnd","stitch","startIndex","endIndex","unshift","isorings","area","area$3","polygon","coordinates","xt","yt","_0","blurX","blurY","defaultX$1","defaultY$1","defaultWeight","splitter","sum$1","elen","flen","Q","Qnew","hh","bvirt","enow","fnow","eindex","findex","hindex","vec","B","C1","C2","D","orient2d","ax","ay","bx","by","cx","cy","detleft","detright","det","detsum","acxtail","acytail","bcxtail","bcytail","ahi","alo","bhi","blo","_j","u3","acx","bcx","acy","bcy","estimate","errbound","C1len","C2len","Dlen","orient2dadapt","EPSILON","EDGE_STACK","Delaunator","coords","maxTriangles","_triangles","_halfedges","Int32Array","_hashSize","_hullPrev","_hullNext","_hullTri","_hullHash","fill","_ids","_dists","hullPrev","hullNext","hullTri","hullHash","minX","minY","maxX","maxY","_x3","_y2","i2","minDist","_i4","dist","i0x","i0y","_i5","_d2","i1x","i1y","minRadius","_i6","circumradius","i2x","i2y","_i7","quicksort","_hull","_i8","d0","hull","triangles","halfedges","_i9","_x4","_y3","ex","ey","cl","circumcenter","_cx","_cy","_i10","_hullStart","hullSize","_hashKey","trianglesLen","_addTriangle","xp","yp","_k","_i11","_x5","_y4","_start","_j4","_legalize","_n2","_i12","_e2","px","py","fx","fy","bp","cp","ar","_b","al","_p","pr","pl","hbl","_link","br","getX","defaultGetX","getY","defaultGetY","ids","dists","temp","tempDist","_i13","_j5","swap","_temp","_tempDist","tmp","epsilon$2","Path","Polygon","Voronoi","delaunay","_ref27","_ref28","xmin","ymin","xmax","ymax","_circumcenters","vectors","_init","_x6","_y5","_this$delaunay","circumcenters","_t","_t2","_t3","_x7","_y6","x3","y3","ab","_a","sign","_i14","_this$delaunay2","inedges","ti","tj","_renderSegment","h0","h1","_i15","_x8","_y7","_project","_clip","_i16","cellPolygons","cell","_context4","cellPolygon","renderCell","c0","_regioncode","c1","_clipSegment","neighbors","ci","_iterator55","_step57","cj","ai","li","aj","lj","_context5","abrupt","_this$delaunay3","_cell","V","_clipInfinite","_clipFinite","P","sx0","sy0","sx1","sy1","_S2","_S4","_edgecode","_edge","_x9","_y8","_c2","vx0","vy0","vxn","vyn","_x10","_y9","_i17","_j6","_k2","vx","vy","tau$2","pow$2","pointX","pointY","jitter","Delaunay","_delaunator","_hullIndex","_a2","_c3","collinear","_bounds","hypot","hullIndex","_e3","_n3","_p2","_i18","_n4","bounds","_context6","dc","dt","renderHull","_x11","_y10","_h","trianglePolygons","_context7","trianglePolygon","renderTriangle","flatArray","_iterator56","_step58","_context8","EOL","EOF","objectConverter","columns","JSON","stringify","inferColumns","rows","columnSet","column","pad$1","formatDate","date","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","year","formatYear$1","getUTCFullYear","getUTCMonth","getUTCDate","dsvFormat","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","eof","eol","token","replace","preformatBody","formatValue","formatRow","convert","customConverter","formatBody","formatRows","csv$1","csvParse","csvParseRows","csvFormat","csvFormatBody","csvFormatRows","csvFormatRow","csvFormatValue","tsv$1","tsvParse","tsvParseRows","tsvFormat","tsvFormatBody","tsvFormatRows","tsvFormatRow","tsvFormatValue","fixtz","getHours","responseBlob","response","ok","status","statusText","blob","responseArrayBuffer","arrayBuffer","responseText","fetch","then","dsvParse","csv","tsv","responseJson","json","parser","DOMParser","parseFromString","tree","xm","ym","bottom","_root","leaf","Quad","defaultX","defaultY","quadtree","Quadtree","addAll","leaf_copy","treeProto","constant$4","jiggle","x$3","y$3","index$3","nodeById","nodeId","cover","yz","visit","quads","retainer","removeAll","visitAfter","x$2","y$2","initialAngle","formatDecimalParts","toExponential","coefficient","prefixExponent","re","formatSpecifier","specifier","FormatSpecifier","align","symbol","comma","precision","formatRounded","formatTypes","toFixed","toLocaleString","toPrecision","_p3","toUpperCase","_x12","identity$6","locale$1","prefixes","formatLocale$1","locale","grouping","thousands","Number","substring","currencyPrefix","currency","currencySuffix","decimal","numerals","formatNumerals","String","percent","minus","nan","newFormat","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","out","formatTrim","padding","formatPrefix","defaultLocale$1","precisionFixed","precisionPrefix","precisionRound","epsilon$1","epsilon2","pi$1","halfPi$1","quarterPi","tau$1","degrees","radians","abs$1","atan2$1","cos$1","log$1","pow$1","sin$1","sign$1","sqrt$2","acos$1","asin$1","haversin","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","geoStream","lambda00$2","phi00$2","lambda0$2","cosPhi0$1","sinPhi0$1","lambda0$1","phi0","lambda1","phi1","lambda2","lambda00$1","phi00$1","deltaSum","ranges","areaRingSum$1","areaSum$1","areaStream$1","areaRingStart$1","areaRingEnd$1","areaRing","areaPointFirst$1","areaPoint$1","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","W0","W1","X0$1","Y0$1","Z0$1","X1$1","Y1$1","Z1$1","X2$1","Y2$1","Z2$1","lambda00","phi00","x0$4","y0$4","z0","boundsStream$2","boundsPoint$1","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","linePoint","normal","inflection","phii","lambdai","antimeridian","angle","lambda0","rangeCompare","rangeContains","centroidStream$1","centroidPoint$1","centroidLineStart$1","centroidLineEnd$1","centroidRingStart$1","centroidRingEnd$1","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cz","constant$3","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","forward","circleStream","direction","cosRadius","sinRadius","circleRadius","clipBuffer","lines","rejoin","pointEqual","Intersection","entry","clipRejoin","segments","compareIntersection","startInside","clip","segment","link$1","current","isSubject","longitude","polygonContains","winding","sinPhi0","cosPhi0","sinPhi1","cosPhi1","point1","absDelta","intersection","phiArc","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","pointLine","ringSegments","validSegment","clipAntimeridian","_clean","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","to","clipCircle","cr","smallRadius","notHemisphere","visible","intersect","two","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","polar","q1","v00","_clean2","point2","lengthSum$1","clipMax","clipMin","clipRectangle","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","polygonInside","cleanInside","lengthStream$1","lengthPointFirst$1","lengthLineEnd","lengthPoint$1","cosDelta","length$1","distance","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ao","bo","ringRadians","pointRadians","graticuleX","graticuleY","graticule","X1","X0","Y1","Y0","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","x00$2","y00$2","x0$3","y0$3","identity$5","areaSum","areaRingSum","areaStream","areaRingStart","areaRingEnd","areaPointFirst","areaPoint","x00$1","y00$1","x0$1","y0$1","pathArea","x0$2","y0$2","boundsStream$1","Z0","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","pathCentroid","PathContext","_radius","pointRadius","_line","lengthRing","x00","y00","lengthSum","lengthStream","lengthPointFirst","lengthPoint","pathMeasure","PathString","_string","circle$1","transformer$3","methods","TransformStream","fit","projection","fitBounds","clipExtent","fitExtent","fitSize","fitWidth","fitHeight","_circle","cosMinDistance","resample","project","delta2","resampleLineTo","depth","phi2","dx2","dy2","dz","a00","b00","c00","resampleStream","ringPoint","resample$1","resampleNone","transformRadians","scaleTranslateRotate","sx","sy","alpha","scaleTranslate","cosAlpha","sinAlpha","fi","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","postclip","recenter","reset","transformRotate","clipAngle","reflectX","reflectY","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0y","conicEqualArea","albers","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","mercatorProjection","reclip","tany","conicConformalRaw","cy0","equirectangularRaw","conicEquidistantRaw","gy","nx","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","gnomonicRaw","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation$1","meanXReduce","maxYReduce","_context9","hierarchy","mapChildren","objectChildren","childs","Node$1","eachBefore","computeHeight","copyData","enclose","circles","shuffle","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","encloseBasis1","r2","r21","r3","a2","a3","b2","b3","c3","d3","place","intersects","score","Node","circle","packEnclose","array$1","aa","sj","sk","pack","optional","required","constantZero","constant$2","defaultRadius","radiusLeaf","packChildren","translateChild","roundNode","treemapDice","eachAfter","_step59","_iterator57","_step60","_iterator58","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","descendants","leaves","links","preroot","ambiguous","defaultId","defaultParentId","parentId","defaultSeparation","nextLeft","nextRight","moveSubtree","wm","wp","change","nextAncestor","vim","TreeNode","treemapSlice","squarifyRatio","ratio","nodeValue","sumValue","maxValue","newRatio","minRatio","beta","dice","squarify","resquarify","_squarify","cross$1","lexicographicOrder","computeUpperHullIndexes","indexes","defaultSource","uniform","sourceRandomUniform","randomUniform","int","sourceRandomInt","randomInt","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","exponential","sourceRandomExponential","randomExponential","log1p","pareto","sourceRandomPareto","randomPareto","RangeError","bernoulli","sourceRandomBernoulli","randomBernoulli","geometric","sourceRandomGeometric","randomGeometric","sourceRandomGamma","randomGamma","multiplier","sourceRandomBeta","G","randomBeta","binomial","sourceRandomBinomial","randomBinomial","acc","nn","pp","weibull","sourceRandomWeibull","randomWeibull","outerFunc","cauchy","sourceRandomCauchy","randomCauchy","logistic","sourceRandomLogistic","randomLogistic","poisson","sourceRandomPoisson","randomPoisson","mul","inc","eps","initRange","initInterpolator","interpolator","implicit","ordinal","unknown","_step61","_iterator59","band","ordinalRange","paddingInner","paddingOuter","rescale","_ref30","rangeRound","_ref32","pointish","number$1","unit","identity$3","normalize","constants","bimap","polymap","copy$1","clamp","transformer$2","untransform","clamper","continuous","linearish","nice","maxIter","interval","transformLog","transformExp","transformLogn","transformExpn","pow10","reflect","loggish","logs","pows","log10","log2","logp","powp","transformSymlog","transformSymexp","expm1","symlogish","constant","transformPow","transformSqrt","transformSquare","powish","square$1","unsquare","newInterval","floori","offseti","field","millisecond","millisecond$1","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","durationYear","second","getMilliseconds","utcSecond","minute","getSeconds","getMinutes","timeMinute","hour","timeHour","day","setHours","setDate","getDate","getTimezoneOffset","timeDay","days","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","getMonth","getFullYear","timeMonth","months","setFullYear","timeYear","years","utcMinute","setUTCSeconds","utcMinute$1","utcMinutes","utcHour","setUTCMinutes","utcHour$1","utcHours","utcDay","setUTCHours","setUTCDate","utcDay$1","utcDays","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonth$1","utcMonths","utcYear","setUTCFullYear","utcYear$1","utcYears","ticker","week","tickIntervals","tickInterval","_ref36","_tickIntervals","_ref35","_ticker2","utcTicks","utcTickInterval","_ticker4","timeTicks","timeTickInterval","localDate","H","L","utcDate","UTC","newDate","formatLocale","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","locale_shortWeekdays","shortDays","locale_months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatDayOfMonth","formatMicroseconds","formatYearISO","formatFullYearISO","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCYearISO","formatUTCFullYearISO","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseYear","parseFullYear","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseQuarter","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseZone","parseLiteralPercent","pad","pads","charAt","newParse","Z","U","utcFormat","utcParse","numberRe","percentRe","requoteRe","requote","dISO","dow","UTCdISO","defaultLocale","timeFormat","timeParse","isoSpecifier","formatIso$1","toISOString","parseIso$1","number","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","transformer$1","k10","_ref41","_ref39","sequentialPow","transformer","k21","_ref45","_ref43","divergingPow","category10","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3","Tableau10","ramp$1","scheme","scheme$q","BrBG","scheme$p","PRGn","scheme$o","PiYG","scheme$n","PuOr","scheme$m","RdBu","scheme$l","RdGy","scheme$k","RdYlBu","scheme$j","RdYlGn","scheme$i","Spectral","scheme$h","BuGn","scheme$g","BuPu","scheme$f","GnBu","scheme$e","OrRd","scheme$d","PuBuGn","scheme$c","PuBu","scheme$b","PuRd","scheme$a","RdPu","scheme$9","YlGnBu","scheme$8","YlGn","scheme$7","YlOrBr","scheme$6","YlOrRd","scheme$5","Blues","scheme$4","Greens","scheme$3","Greys","scheme$2","Purples","scheme$1","Reds","Oranges","warm","cool","c$2","c$1","pi_1_3","pi_2_3","ramp","viridis","magma","inferno","plasma","constant$1","epsilon","halfPi","tau","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","x10","y10","x32","y32","cornerTangents","rc","ox","oy","x11","y11","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","curveLinear","x$1","y$1","defined","curve","defined0","x0z","y0z","areaStart","areaEnd","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$1","curveRadialLinear","curveRadial$1","Radial","_curve","radial","lineRadial","lineRadial$1","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","linkSource","linkTarget","link","curveHorizontal","curveVertical","curveRadial","p2","p3","draw","cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","symbols","noop","point$3","Basis","BasisClosed","BasisOpen","Bump","Bundle","_basis","_beta","bundle","point$2","Cardinal","tension","cardinal","CardinalClosed","cardinalClosed","CardinalOpen","cardinalOpen","point$1","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","catmullRom","CatmullRomClosed","catmullRomClosed","CatmullRomOpen","catmullRomOpen","LinearClosed","slope3","slope2","_point4","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","Step","none$1","series","none","stackValue","stackSeries","appearance","peaks","peak","vi","vj","ascending","sums","_t0","ZoomEvent","_ref46","Transform","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","identity","__zoom","nopropagation","noevent","defaultFilter","defaultExtent","SVGElement","clientWidth","clientHeight","defaultTransform","defaultWheelDelta","deltaY","deltaMode","defaultTouchable","defaultConstrain","translateExtent","ZoomTransform","cornerRadius","padRadius","a01","a11","a10","da0","da1","rp","rc0","rc1","oc","kc","lc","autoType","axisBottom","axisLeft","axisRight","axisTop","brushSelection","brushX","brushY","chordDirected","chordTranspose","cluster","separation","nodeSize","previousNode","meanX","leafLeft","leafRight","contourDensity","weight","density","values0","Float32Array","values1","pow2k","wi","transformPolygon","transformRing","transformPoint","resize","cellSize","_len","_key2","lengths","product","some","cumsum","curveBasis","curveBasisClosed","curveBasisOpen","curveBumpX","curveBumpY","curveBundle","curveCardinal","curveCardinalClosed","curveCardinalOpen","curveCatmullRom","curveCatmullRomClosed","curveCatmullRomOpen","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","descending","difference","_len11","others","_key14","_i2","_others","_step44","_iterator42","disjoint","_step45","_iterator43","_iterator$next3","drag","mousedownx","mousedowny","mousemoving","container","gestures","clickDistance2","mousedowned","touchstarted","gesture","mousemoved","mouseupped","mouse","touch","clickDistance","dragEnable","dsv","easeBack","easeBackIn","easeBackInOut","easeBackOut","easeBounce","easeBounceIn","easeBounceInOut","easeBounceOut","easeCircle","easeCircleIn","easeCircleInOut","easeCircleOut","easeCubic","easeCubicIn","easeCubicInOut","easeCubicOut","easeElastic","easeElasticIn","easeElasticInOut","easeElasticOut","easeExp","easeExpIn","easeExpInOut","easeExpOut","easeLinear","easePoly","easePolyIn","easePolyInOut","easePolyOut","easeQuad","easeQuadIn","easeQuadInOut","easeQuadOut","easeSin","easeSinIn","easeSinInOut","easeSinOut","_step41","_iterator39","fcumsum","adder","_step43","_iterator41","flatGroup","_len4","_key6","flatRollup","_len5","_key7","forceCenter","strength","force","forceCollide","radii","iterations","ri","ri2","prepare","quad","rj","_nodes","_random","forceLink","strengths","distances","bias","initializeStrength","initializeDistance","forceManyBody","distanceMin2","distanceMax2","theta2","accumulate","distanceMin","distanceMax","forceRadial","radiuses","forceSimulation","_nodes2","simulation","_alphaMin","_alphaDecay","_alphaTarget","_velocityDecay","forces","stepper","lcg$1","initializeNodes","initializeForce","alphaMin","alphaDecay","alphaTarget","velocityDecay","randomSource","closest","forceX","forceY","formatDefaultLocale","fsum","_step9","_iterator9","_step10","_index5","_iterator10","_value5","geoAlbers","geoAlbersUsa","lower48Point","alaskaPoint","hawaiiPoint","_point3","lower48","alaska","hawaii","pointStream","albersUsa","streams","geoArea","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoBounds","feature","merged","deltaMax","geoCentroid","geoCircle","geoClipAntimeridian","geoClipCircle","geoClipExtent","_stream","geoClipRectangle","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoContains","geoDistance","geoEqualEarth","geoEqualEarthRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoGraticule","geoGraticule10","geoIdentity","sa","tx","ty","geoInterpolate","kx0","ky0","kx1","ky1","geoLength","geoMercator","geoMercatorRaw","geoNaturalEarth1","geoNaturalEarth1Raw","geoOrthographic","geoOrthographicRaw","geoPath","projectionStream","contextStream","measure","geoProjection","geoProjectionMutator","geoRotation","geoStereographic","geoStereographicRaw","geoTransform","geoTransverseMercator","geoTransverseMercatorRaw","greatest","_step36","_iterator34","element","_step37","_iterator35","_value14","greatestIndex","_step38","_iterator36","groupSort","_ref12","_ref13","_ref14","ak","av","_ref15","bk","_ref16","_ref17","_ref18","_ref19","bv","_ref20","image","Image","onerror","onload","src","_len8","_key10","_len9","_key11","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateBlues","interpolateBrBG","interpolateBuGn","interpolateBuPu","interpolateCividis","interpolateCool","interpolateCubehelix","interpolateCubehelixDefault","interpolateCubehelixLong","interpolateDate","interpolateDiscrete","interpolateGnBu","interpolateGreens","interpolateGreys","interpolateHcl","interpolateHclLong","interpolateHsl","interpolateHslLong","interpolateHue","interpolateInferno","interpolateLab","interpolateMagma","interpolateNumberArray","interpolateObject","interpolateOrRd","interpolateOranges","interpolatePRGn","interpolatePiYG","interpolatePlasma","interpolatePuBu","interpolatePuBuGn","interpolatePuOr","interpolatePuRd","interpolatePurples","interpolateRainbow","interpolateRdBu","interpolateRdGy","interpolateRdPu","interpolateRdYlBu","interpolateRdYlGn","interpolateReds","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateSinebow","interpolateSpectral","interpolateTurbo","interpolateViridis","interpolateWarm","interpolateYlGn","interpolateYlGnBu","interpolateYlOrBr","interpolateYlOrRd","_len12","_key15","_step46","_iterator44","_step47","_iterator45","total","_restart","isoFormat","isoParse","lab","lch","least","_step33","_iterator31","_step34","_iterator32","_value13","linkHorizontal","linkRadial","linkVertical","mapper","_step24","_iterator22","_step25","_index9","_iterator23","_value9","median","modeValue","counts","_step29","_iterator27","_step30","_index10","_iterator28","_value11","_step31","modeCount","_iterator29","_ref23","_value12","_count","packSiblings","pairs","_step32","pairof","_iterator30","partition","positionNode","pie","sortValues","arcs","pa","pointers","events","polygonArea","polygonCentroid","inside","polygonHull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","polygonLength","perimeter","quantile","quantize","samples","radialArea","radialLine","randomLcg","seed","_iterator$next","_iterator$next2","ribbonArrow","scaleBand","scaleDiverging","diverging$1","scaleDivergingLog","divergingLog","scaleDivergingPow","scaleDivergingSqrt","scaleDivergingSymlog","divergingSymlog","scaleIdentity","identity$2","scaleImplicit","scaleLinear","linear","scaleLog","scaleOrdinal","scalePoint","scalePow","scaleQuantile","invertExtent","_step62","_iterator60","quantiles","scaleQuantize","_ref34","scaleRadial","squared","scaleSequential","sequential","scaleSequentialLog","sequentialLog","scaleSequentialPow","scaleSequentialQuantile","sequentialQuantile","_step63","_iterator61","scaleSequentialSqrt","scaleSequentialSymlog","sequentialSymlog","scaleSqrt","scaleSymlog","symlog","scaleThreshold","scaleTime","scaleUtc","scan","schemeAccent","schemeBlues","schemeBrBG","schemeBuGn","schemeBuPu","schemeCategory10","schemeDark2","schemeGnBu","schemeGreens","schemeGreys","schemeOrRd","schemeOranges","schemePRGn","schemePaired","schemePastel1","schemePastel2","schemePiYG","schemePuBu","schemePuBuGn","schemePuOr","schemePuRd","schemePurples","schemeRdBu","schemeRdGy","schemeRdPu","schemeRdYlBu","schemeRdYlGn","schemeReds","schemeSet1","schemeSet2","schemeSet3","schemeSpectral","schemeTableau10","schemeYlGn","schemeYlGnBu","schemeYlOrBr","schemeYlOrRd","_step42","_iterator40","stack","oz","_step64","sz","_iterator62","stackOffsetDiverging","yn","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","s2","si","sij0","s3","stackOrderAppearance","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","tops","bottoms","stackOrderNone","stackOrderReverse","stratify","nodeKey","nodeByKey","subset","_step39","_iterator37","_step40","_index11","_iterator38","_value15","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","thresholdFreedmanDiaconis","thresholdScott","timeDays","timeFormatDefaultLocale","timeFormatLocale","timeFriday","timeFridays","timeHours","timeInterval","timeMillisecond","timeMilliseconds","timeMinutes","timeMonday","timeMondays","timeMonths","timeSaturday","timeSaturdays","timeSecond","timeSeconds","timeSunday","timeSundays","timeThursday","timeThursdays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeWeek","timeWeeks","timeYears","treeRoot","firstWalk","secondWalk","sizeNode","siblings","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","treemap","tile","paddingStack","paddingTop","paddingRight","paddingBottom","paddingLeft","treemapBinary","valueOffset","valueTarget","valueLeft","valueRight","xk","yk","treemapResquarify","treemapSliceDice","treemapSquarify","union","_len13","_key16","_i3","_others2","_step49","_iterator47","utcMillisecond","utcMilliseconds","utcSeconds","utcWeek","utcWeeks","version","zip","touchstarting","touchfirst","constrain","wheelDelta","scaleExtent","touchDelay","tapDistance","wheeled","dblclicked","__zooming","Gesture","taps","_len14","_key17","wheel","wheelidled","_len15","_key18","_len16","_key19","k1","_len17","_key20","touch0","touch1","_len18","_key21","l0","l1","dp","dl","_len19","_key22","collection","scaleBy","scaleTo","k0","translateBy","translateTo","_event","zoomIdentity","zoomTransform","globalThis","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","GenStateSuspendedStart","method","arg","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","info","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","awrap","async","skipTempReset","rootRecord","rval","exception","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","regeneratorRuntime","accidentalStrictMode","__webpack_amd_options__","_typeof2","_WINDOW","_DOCUMENT","_ref$userAgent","userAgent","WINDOW","DOCUMENT","PRODUCTION","head","_objectSpread","ownKeys","getOwnPropertySymbols","sym","styles","hooks","shims","defineIcons","icons","_params$skipHooks","skipHooks","normalized","iconName","icon","addPack","bunker","_MUTATION_OBSERVER","_PERFORMANCE","MutationObserver","MUTATION_OBSERVER","PERFORMANCE","IS_BROWSER","IS_DOM","IS_IE","DEFAULT_REPLACEMENT_CLASS","DATA_FA_I2SVG","DATA_FA_PSEUDO_ELEMENT","HTML_CLASS_I2SVG_BASE_CLASS","TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS","PREFIX_TO_STYLE","STYLE_TO_PREFIX","LAYERS_TEXT_CLASSNAME","FONT_FAMILY_PATTERN","FONT_WEIGHT_TO_PREFIX","oneToTen","oneToTwenty","ATTRIBUTES_WATCHED_FOR_MUTATION","DUOTONE_CLASSES","GROUP","SWAP_OPACITY","PRIMARY","SECONDARY","RESERVED_CLASSES","initial","FontAwesomeConfig","_ref","val","coerce","getAttrConfig","_config","familyPrefix","replacementClass","autoReplaceSvg","autoAddCss","autoA11y","searchPseudoElements","observeMutations","mutateApproach","keepOriginalSource","measurePerformance","showMissingIcons","config","functions","loaded","domready","doScroll","readyState","asyncTimer","PENDING","SETTLED","FULFILLED","REJECTED","NOOP","isNode","process","asyncSetTimer","setImmediate","asyncQueue","asyncFlush","asyncCall","invokeCallback","subscriber","owner","settled","_state","_data","promise","handleThenable","resolved","fulfill","reason","publishFulfillment","publishRejection","publish","_then","_handled","notifyRejectionHandled","resolver","rejectPromise","invokeResolver","onFulfillment","onRejection","fulfilled","rejected","catch","all","promises","results","remaining","race","picked","meaninglessTransform","insertCss","css","headChildren","childNodes","beforeChild","tagName","nextUniqueId","toArray","getIconName","cls","parts","htmlEscape","str","joinStyles","styleName","transformIsMeaningful","transformForSvg","containerWidth","iconWidth","outer","innerTranslate","innerScale","innerRotate","inner","ALL_SPACE","fillBlack","abstract","attributes","makeInlineSvgAbstract","_params$icons","main","mask","title","maskId","titleId","extra","_params$watchable","watchable","found","isUploadedIcon","widthClass","attrClass","classes","content","role","uploadedIconWidthStyle","tag","explicitMaskId","mainWidth","mainPath","maskWidth","maskPath","trans","maskRect","maskInnerGroupChildrenMixin","maskInnerGroup","maskOuterGroup","clipId","maskTag","maskUnits","maskContentUnits","defs","makeIconMasking","styleString","makeIconStandard","asSymbol","asIcon","makeLayersTextAbstract","_params$watchable2","_ref2$width","_ref2$height","_ref2$startCentered","startCentered","transformForCss","class","makeLayersCounterAbstract","preamble","perf","initialValue","thisContext","func","bindInternal4","toHex","unicode","_byUnicode","_byLigature","_byOldName","build","lookup","ligatures","ligature","hasRegular","shim","oldName","byUnicode","styles$1","getCanonicalIcon","autoFetchSvg","rest","iconFromMapping","mapping","toHtml","abstractNodes","_abstractNodes$attrib","_abstractNodes$childr","attributeName","joinAttributes","isWatched","mutators","mutation","newOuterHTML","outerHTML","newNode","replaceChild","forSvg","splitClasses","toSvg","toNode","newInnerHTML","performOperationSync","op","perform","mutations","callbackFunction","mutator","disabled","enableObservation","mo","observe","treeCallback","nodeCallback","pseudoElementsCallback","_options$observeMutat","observeMutationsRoot","objects","mutationRecord","addedNodes","_getCanonicalIcon","childList","characterData","subtree","classParser","existingPrefix","existingIconName","innerText","parseTransformString","transformString","parseFloat","parseMeta","_classParser","extraClasses","extraStyles","prop","styleParser","transformParser","symbolParser","extraAttributes","attributesParser","maskParser","MissingIcon","message","FILL","ANIMATION_BASE","attributeType","repeatCount","dur","RING","OPACITY_ANIMATE","missing","styles$2","asFoundIcon","vectorData","findIcon","styles$3","generateMutation","nodeMeta","computedFontSize","fontSize","boundingClientRect","generateLayersText","generateSvgReplacementMutation","onTree","htmlClassList","hclAdd","hclRemove","prefixesDomQuery","candidates","console","resolvedMutations","onNode","replaceForPosition","pendingAttribute","alreadyProcessedPseudoElement","fontFamily","fontWeight","_content","hexValue","substr","iconIdentifier","meta","processable","operations","dfp","drc","fp","dPatt","customPropPatt","rPatt","ensureCss","_cssInserted","apiObject","abstractCreator","findIconDefinition","iconLookup","_iconLookup$prefix","library","definitions","Library","additions","_pullDefinitions","0","_normalized$key","dom","i2svg","_params$node","_params$callback","watch","autoReplaceSvgRoot","autoReplace","iconDefinition","_params$transform","_params$symbol","_params$mask","_params$maskId","_params$title","_params$titleId","_params$classes","_params$attributes","_params$styles","maybeIconDefinition","api","noAuto","disconnect","_params$transform2","_params$title2","_params$classes2","_params$attributes2","_params$styles2","counter","_params$title3","_params$classes3","_params$attributes3","_params$styles3","layer","assembler","_params$classes4","_params$autoReplaceSv","FontAwesome","addShims","_namespace$shims","Timeout","clearFn","_clearFn","scope","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","_onTimeout","clearImmediate","registerImmediate","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","nextTick","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","MessageChannel","port1","port2","script","onreadystatechange","attachEvent","task","run","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","browser","env","versions","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","Rails","ActiveStorage","jQuery","$","isInViewport","elementTop","elementBottom","outerHeight","viewportTop","scrollTop","viewportBottom"],"mappings":"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","file":"js/pferdefutter-85b77f2ae5603164c265.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","// Load all the channels within this directory and all subdirectories.\n// Channel files must be named *_channel.js.\n\nconst channels = require.context('.', true, /_channel\\.js$/)\nchannels.keys().forEach(channels)\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 6;","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e4) { throw _e4; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e5) { didErr = true; err = _e5; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// https://d3js.org v7.0.1 Copyright 2010-2021 Mike Bostock\n(function (global, factory) {\n  (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.d3 = global.d3 || {}));\n})(this, function (exports) {\n  'use strict';\n\n  var _marked = /*#__PURE__*/_regeneratorRuntime.mark(numbers),\n      _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(flatten),\n      _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(selection_iterator),\n      _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(flatIterable),\n      _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(node_iterator);\n\n  var version = \"7.0.1\";\n\n  function ascending$3(a, b) {\n    return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(f) {\n    var delta = f;\n    var compare1 = f;\n    var compare2 = f;\n\n    if (f.length === 1) {\n      delta = function delta(d, x) {\n        return f(d) - x;\n      };\n\n      compare1 = ascending$3;\n\n      compare2 = function compare2(d, x) {\n        return ascending$3(f(d), x);\n      };\n    }\n\n    function left(a, x) {\n      var lo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var hi = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : a.length;\n\n      if (lo < hi) {\n        if (compare1(x, x) !== 0) return hi;\n\n        do {\n          var mid = lo + hi >>> 1;\n          if (compare2(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n        } while (lo < hi);\n      }\n\n      return lo;\n    }\n\n    function right(a, x) {\n      var lo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var hi = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : a.length;\n\n      if (lo < hi) {\n        if (compare1(x, x) !== 0) return hi;\n\n        do {\n          var mid = lo + hi >>> 1;\n          if (compare2(a[mid], x) <= 0) lo = mid + 1;else hi = mid;\n        } while (lo < hi);\n      }\n\n      return lo;\n    }\n\n    function center(a, x) {\n      var lo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var hi = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : a.length;\n      var i = left(a, x, lo, hi - 1);\n      return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n    }\n\n    return {\n      left: left,\n      center: center,\n      right: right\n    };\n  }\n\n  function number$3(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function numbers(values, valueof) {\n    var _iterator, _step, value, _index, _iterator2, _step2, _value;\n\n    return _regeneratorRuntime.wrap(function numbers$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(valueof === undefined)) {\n              _context.next = 21;\n              break;\n            }\n\n            _iterator = _createForOfIteratorHelper(values);\n            _context.prev = 2;\n\n            _iterator.s();\n\n          case 4:\n            if ((_step = _iterator.n()).done) {\n              _context.next = 11;\n              break;\n            }\n\n            value = _step.value;\n\n            if (!(value != null && (value = +value) >= value)) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 9;\n            return value;\n\n          case 9:\n            _context.next = 4;\n            break;\n\n          case 11:\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](2);\n\n            _iterator.e(_context.t0);\n\n          case 16:\n            _context.prev = 16;\n\n            _iterator.f();\n\n            return _context.finish(16);\n\n          case 19:\n            _context.next = 40;\n            break;\n\n          case 21:\n            _index = -1;\n            _iterator2 = _createForOfIteratorHelper(values);\n            _context.prev = 23;\n\n            _iterator2.s();\n\n          case 25:\n            if ((_step2 = _iterator2.n()).done) {\n              _context.next = 32;\n              break;\n            }\n\n            _value = _step2.value;\n\n            if (!((_value = valueof(_value, ++_index, values)) != null && (_value = +_value) >= _value)) {\n              _context.next = 30;\n              break;\n            }\n\n            _context.next = 30;\n            return _value;\n\n          case 30:\n            _context.next = 25;\n            break;\n\n          case 32:\n            _context.next = 37;\n            break;\n\n          case 34:\n            _context.prev = 34;\n            _context.t1 = _context[\"catch\"](23);\n\n            _iterator2.e(_context.t1);\n\n          case 37:\n            _context.prev = 37;\n\n            _iterator2.f();\n\n            return _context.finish(37);\n\n          case 40:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _marked, null, [[2, 13, 16, 19], [23, 34, 37, 40]]);\n  }\n\n  var ascendingBisect = bisector(ascending$3);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n  var bisectCenter = bisector(number$3).center;\n  var bisect = bisectRight;\n\n  function count$1(values, valueof) {\n    var count = 0;\n\n    if (valueof === undefined) {\n      var _iterator3 = _createForOfIteratorHelper(values),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var value = _step3.value;\n\n          if (value != null && (value = +value) >= value) {\n            ++count;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    } else {\n      var _index2 = -1;\n\n      var _iterator4 = _createForOfIteratorHelper(values),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _value2 = _step4.value;\n\n          if ((_value2 = valueof(_value2, ++_index2, values)) != null && (_value2 = +_value2) >= _value2) {\n            ++count;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n\n    return count;\n  }\n\n  function length$3(array) {\n    return array.length | 0;\n  }\n\n  function empty$2(length) {\n    return !(length > 0);\n  }\n\n  function arrayify(values) {\n    return _typeof(values) !== \"object\" || \"length\" in values ? values : Array.from(values);\n  }\n\n  function reducer(reduce) {\n    return function (values) {\n      return reduce.apply(void 0, _toConsumableArray(values));\n    };\n  }\n\n  function cross$2() {\n    for (var _len = arguments.length, values = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n      values[_key2] = arguments[_key2];\n    }\n\n    var reduce = typeof values[values.length - 1] === \"function\" && reducer(values.pop());\n    values = values.map(arrayify);\n    var lengths = values.map(length$3);\n    var j = values.length - 1;\n    var index = new Array(j + 1).fill(0);\n    var product = [];\n    if (j < 0 || lengths.some(empty$2)) return product;\n\n    while (true) {\n      product.push(index.map(function (j, i) {\n        return values[i][j];\n      }));\n      var i = j;\n\n      while (++index[i] === lengths[i]) {\n        if (i === 0) return reduce ? product.map(reduce) : product;\n        index[i--] = 0;\n      }\n    }\n  }\n\n  function cumsum(values, valueof) {\n    var sum = 0,\n        index = 0;\n    return Float64Array.from(values, valueof === undefined ? function (v) {\n      return sum += +v || 0;\n    } : function (v) {\n      return sum += +valueof(v, index++, values) || 0;\n    });\n  }\n\n  function descending$2(a, b) {\n    return a == null || b == null ? NaN : b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function variance(values, valueof) {\n    var count = 0;\n    var delta;\n    var mean = 0;\n    var sum = 0;\n\n    if (valueof === undefined) {\n      var _iterator5 = _createForOfIteratorHelper(values),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var value = _step5.value;\n\n          if (value != null && (value = +value) >= value) {\n            delta = value - mean;\n            mean += delta / ++count;\n            sum += delta * (value - mean);\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    } else {\n      var _index3 = -1;\n\n      var _iterator6 = _createForOfIteratorHelper(values),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var _value3 = _step6.value;\n\n          if ((_value3 = valueof(_value3, ++_index3, values)) != null && (_value3 = +_value3) >= _value3) {\n            delta = _value3 - mean;\n            mean += delta / ++count;\n            sum += delta * (_value3 - mean);\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n\n    if (count > 1) return sum / (count - 1);\n  }\n\n  function deviation(values, valueof) {\n    var v = variance(values, valueof);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent$1(values, valueof) {\n    var min;\n    var max;\n\n    if (valueof === undefined) {\n      var _iterator7 = _createForOfIteratorHelper(values),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var value = _step7.value;\n\n          if (value != null) {\n            if (min === undefined) {\n              if (value >= value) min = max = value;\n            } else {\n              if (min > value) min = value;\n              if (max < value) max = value;\n            }\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n    } else {\n      var _index4 = -1;\n\n      var _iterator8 = _createForOfIteratorHelper(values),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var _value4 = _step8.value;\n\n          if ((_value4 = valueof(_value4, ++_index4, values)) != null) {\n            if (min === undefined) {\n              if (_value4 >= _value4) min = max = _value4;\n            } else {\n              if (min > _value4) min = _value4;\n              if (max < _value4) max = _value4;\n            }\n          }\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    }\n\n    return [min, max];\n  } // https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\n\n\n  var Adder = /*#__PURE__*/function () {\n    function Adder() {\n      _classCallCheck(this, Adder);\n\n      this._partials = new Float64Array(32);\n      this._n = 0;\n    }\n\n    _createClass(Adder, [{\n      key: \"add\",\n      value: function add(x) {\n        var p = this._partials;\n        var i = 0;\n\n        for (var j = 0; j < this._n && j < 32; j++) {\n          var _y = p[j],\n              hi = x + _y,\n              lo = Math.abs(x) < Math.abs(_y) ? x - (hi - _y) : _y - (hi - x);\n          if (lo) p[i++] = lo;\n          x = hi;\n        }\n\n        p[i] = x;\n        this._n = i + 1;\n        return this;\n      }\n    }, {\n      key: \"valueOf\",\n      value: function valueOf() {\n        var p = this._partials;\n        var n = this._n,\n            x,\n            y,\n            lo,\n            hi = 0;\n\n        if (n > 0) {\n          hi = p[--n];\n\n          while (n > 0) {\n            x = hi;\n            y = p[--n];\n            hi = x + y;\n            lo = y - (hi - x);\n            if (lo) break;\n          }\n\n          if (n > 0 && (lo < 0 && p[n - 1] < 0 || lo > 0 && p[n - 1] > 0)) {\n            y = lo * 2;\n            x = hi + y;\n            if (y == x - hi) hi = x;\n          }\n        }\n\n        return hi;\n      }\n    }]);\n\n    return Adder;\n  }();\n\n  function fsum(values, valueof) {\n    var adder = new Adder();\n\n    if (valueof === undefined) {\n      var _iterator9 = _createForOfIteratorHelper(values),\n          _step9;\n\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var value = _step9.value;\n\n          if (value = +value) {\n            adder.add(value);\n          }\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n    } else {\n      var _index5 = -1;\n\n      var _iterator10 = _createForOfIteratorHelper(values),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var _value5 = _step10.value;\n\n          if (_value5 = +valueof(_value5, ++_index5, values)) {\n            adder.add(_value5);\n          }\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    }\n\n    return +adder;\n  }\n\n  function fcumsum(values, valueof) {\n    var adder = new Adder();\n    var index = -1;\n    return Float64Array.from(values, valueof === undefined ? function (v) {\n      return adder.add(+v || 0);\n    } : function (v) {\n      return adder.add(+valueof(v, ++index, values) || 0);\n    });\n  }\n\n  var InternMap = /*#__PURE__*/function (_Map) {\n    _inherits(InternMap, _Map);\n\n    var _super = _createSuper(InternMap);\n\n    function InternMap(entries) {\n      var _this;\n\n      var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : keyof;\n\n      _classCallCheck(this, InternMap);\n\n      _this = _super.call(this);\n      Object.defineProperties(_assertThisInitialized(_this), {\n        _intern: {\n          value: new Map()\n        },\n        _key: {\n          value: key\n        }\n      });\n\n      if (entries != null) {\n        var _iterator11 = _createForOfIteratorHelper(entries),\n            _step11;\n\n        try {\n          for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n            var _ref3 = _step11.value;\n\n            var _ref2 = _slicedToArray(_ref3, 2);\n\n            var _key3 = _ref2[0];\n            var value = _ref2[1];\n\n            _this.set(_key3, value);\n          }\n        } catch (err) {\n          _iterator11.e(err);\n        } finally {\n          _iterator11.f();\n        }\n      }\n\n      return _this;\n    }\n\n    _createClass(InternMap, [{\n      key: \"get\",\n      value: function get(key) {\n        return _get(_getPrototypeOf(InternMap.prototype), \"get\", this).call(this, intern_get(this, key));\n      }\n    }, {\n      key: \"has\",\n      value: function has(key) {\n        return _get(_getPrototypeOf(InternMap.prototype), \"has\", this).call(this, intern_get(this, key));\n      }\n    }, {\n      key: \"set\",\n      value: function set(key, value) {\n        return _get(_getPrototypeOf(InternMap.prototype), \"set\", this).call(this, intern_set(this, key), value);\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(key) {\n        return _get(_getPrototypeOf(InternMap.prototype), \"delete\", this).call(this, intern_delete(this, key));\n      }\n    }]);\n\n    return InternMap;\n  }( /*#__PURE__*/_wrapNativeSuper(Map));\n\n  var InternSet = /*#__PURE__*/function (_Set) {\n    _inherits(InternSet, _Set);\n\n    var _super2 = _createSuper(InternSet);\n\n    function InternSet(values) {\n      var _this2;\n\n      var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : keyof;\n\n      _classCallCheck(this, InternSet);\n\n      _this2 = _super2.call(this);\n      Object.defineProperties(_assertThisInitialized(_this2), {\n        _intern: {\n          value: new Map()\n        },\n        _key: {\n          value: key\n        }\n      });\n\n      if (values != null) {\n        var _iterator12 = _createForOfIteratorHelper(values),\n            _step12;\n\n        try {\n          for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n            var value = _step12.value;\n\n            _this2.add(value);\n          }\n        } catch (err) {\n          _iterator12.e(err);\n        } finally {\n          _iterator12.f();\n        }\n      }\n\n      return _this2;\n    }\n\n    _createClass(InternSet, [{\n      key: \"has\",\n      value: function has(value) {\n        return _get(_getPrototypeOf(InternSet.prototype), \"has\", this).call(this, intern_get(this, value));\n      }\n    }, {\n      key: \"add\",\n      value: function add(value) {\n        return _get(_getPrototypeOf(InternSet.prototype), \"add\", this).call(this, intern_set(this, value));\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(value) {\n        return _get(_getPrototypeOf(InternSet.prototype), \"delete\", this).call(this, intern_delete(this, value));\n      }\n    }]);\n\n    return InternSet;\n  }( /*#__PURE__*/_wrapNativeSuper(Set));\n\n  function intern_get(_ref4, value) {\n    var _intern = _ref4._intern,\n        _key = _ref4._key;\n\n    var key = _key(value);\n\n    return _intern.has(key) ? _intern.get(key) : value;\n  }\n\n  function intern_set(_ref5, value) {\n    var _intern = _ref5._intern,\n        _key = _ref5._key;\n\n    var key = _key(value);\n\n    if (_intern.has(key)) return _intern.get(key);\n\n    _intern.set(key, value);\n\n    return value;\n  }\n\n  function intern_delete(_ref6, value) {\n    var _intern = _ref6._intern,\n        _key = _ref6._key;\n\n    var key = _key(value);\n\n    if (_intern.has(key)) {\n      value = _intern.get(value);\n\n      _intern.delete(key);\n    }\n\n    return value;\n  }\n\n  function keyof(value) {\n    return value !== null && _typeof(value) === \"object\" ? value.valueOf() : value;\n  }\n\n  function identity$9(x) {\n    return x;\n  }\n\n  function group(values) {\n    for (var _len2 = arguments.length, keys = new Array(_len2 > 1 ? _len2 - 1 : 0), _key4 = 1; _key4 < _len2; _key4++) {\n      keys[_key4 - 1] = arguments[_key4];\n    }\n\n    return nest(values, identity$9, identity$9, keys);\n  }\n\n  function groups(values) {\n    for (var _len3 = arguments.length, keys = new Array(_len3 > 1 ? _len3 - 1 : 0), _key5 = 1; _key5 < _len3; _key5++) {\n      keys[_key5 - 1] = arguments[_key5];\n    }\n\n    return nest(values, Array.from, identity$9, keys);\n  }\n\n  function flatten$1(groups, keys) {\n    for (var i = 1, n = keys.length; i < n; ++i) {\n      groups = groups.flatMap(function (g) {\n        return g.pop().map(function (_ref7) {\n          var _ref8 = _slicedToArray(_ref7, 2),\n              key = _ref8[0],\n              value = _ref8[1];\n\n          return [].concat(_toConsumableArray(g), [key, value]);\n        });\n      });\n    }\n\n    return groups;\n  }\n\n  function flatGroup(values) {\n    for (var _len4 = arguments.length, keys = new Array(_len4 > 1 ? _len4 - 1 : 0), _key6 = 1; _key6 < _len4; _key6++) {\n      keys[_key6 - 1] = arguments[_key6];\n    }\n\n    return flatten$1(groups.apply(void 0, [values].concat(keys)), keys);\n  }\n\n  function flatRollup(values, reduce) {\n    for (var _len5 = arguments.length, keys = new Array(_len5 > 2 ? _len5 - 2 : 0), _key7 = 2; _key7 < _len5; _key7++) {\n      keys[_key7 - 2] = arguments[_key7];\n    }\n\n    return flatten$1(rollups.apply(void 0, [values, reduce].concat(keys)), keys);\n  }\n\n  function rollup(values, reduce) {\n    for (var _len6 = arguments.length, keys = new Array(_len6 > 2 ? _len6 - 2 : 0), _key8 = 2; _key8 < _len6; _key8++) {\n      keys[_key8 - 2] = arguments[_key8];\n    }\n\n    return nest(values, identity$9, reduce, keys);\n  }\n\n  function rollups(values, reduce) {\n    for (var _len7 = arguments.length, keys = new Array(_len7 > 2 ? _len7 - 2 : 0), _key9 = 2; _key9 < _len7; _key9++) {\n      keys[_key9 - 2] = arguments[_key9];\n    }\n\n    return nest(values, Array.from, reduce, keys);\n  }\n\n  function index$4(values) {\n    for (var _len8 = arguments.length, keys = new Array(_len8 > 1 ? _len8 - 1 : 0), _key10 = 1; _key10 < _len8; _key10++) {\n      keys[_key10 - 1] = arguments[_key10];\n    }\n\n    return nest(values, identity$9, unique, keys);\n  }\n\n  function indexes(values) {\n    for (var _len9 = arguments.length, keys = new Array(_len9 > 1 ? _len9 - 1 : 0), _key11 = 1; _key11 < _len9; _key11++) {\n      keys[_key11 - 1] = arguments[_key11];\n    }\n\n    return nest(values, Array.from, unique, keys);\n  }\n\n  function unique(values) {\n    if (values.length !== 1) throw new Error(\"duplicate key\");\n    return values[0];\n  }\n\n  function nest(values, map, reduce, keys) {\n    return function regroup(values, i) {\n      if (i >= keys.length) return reduce(values);\n      var groups = new InternMap();\n      var keyof = keys[i++];\n      var index = -1;\n\n      var _iterator13 = _createForOfIteratorHelper(values),\n          _step13;\n\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var value = _step13.value;\n          var key = keyof(value, ++index, values);\n\n          var _group = groups.get(key);\n\n          if (_group) _group.push(value);else groups.set(key, [value]);\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n\n      var _iterator14 = _createForOfIteratorHelper(groups),\n          _step14;\n\n      try {\n        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n          var _ref11 = _step14.value;\n\n          var _ref10 = _slicedToArray(_ref11, 2);\n\n          var _key12 = _ref10[0];\n          var _values = _ref10[1];\n          groups.set(_key12, regroup(_values, i));\n        }\n      } catch (err) {\n        _iterator14.e(err);\n      } finally {\n        _iterator14.f();\n      }\n\n      return map(groups);\n    }(values, 0);\n  }\n\n  function permute(source, keys) {\n    return Array.from(keys, function (key) {\n      return source[key];\n    });\n  }\n\n  function sort(values) {\n    for (var _len10 = arguments.length, F = new Array(_len10 > 1 ? _len10 - 1 : 0), _key13 = 1; _key13 < _len10; _key13++) {\n      F[_key13 - 1] = arguments[_key13];\n    }\n\n    if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n    values = Array.from(values);\n\n    var _F = F,\n        _F2 = _slicedToArray(_F, 1),\n        f = _F2[0];\n\n    if (f && f.length === 1 || F.length > 1) {\n      var _index6 = Uint32Array.from(values, function (d, i) {\n        return i;\n      });\n\n      if (F.length > 1) {\n        F = F.map(function (f) {\n          return values.map(f);\n        });\n\n        _index6.sort(function (i, j) {\n          var _iterator15 = _createForOfIteratorHelper(F),\n              _step15;\n\n          try {\n            for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n              var _f = _step15.value;\n\n              var _c = ascendingDefined(_f[i], _f[j]);\n\n              if (_c) return _c;\n            }\n          } catch (err) {\n            _iterator15.e(err);\n          } finally {\n            _iterator15.f();\n          }\n        });\n      } else {\n        f = values.map(f);\n\n        _index6.sort(function (i, j) {\n          return ascendingDefined(f[i], f[j]);\n        });\n      }\n\n      return permute(values, _index6);\n    }\n\n    return values.sort(f === undefined ? ascendingDefined : compareDefined(f));\n  }\n\n  function compareDefined(compare) {\n    if (typeof compare !== \"function\") throw new TypeError(\"compare is not a function\");\n    return function (a, b) {\n      var x = compare(a, b);\n      if (x || x === 0) return x;\n      return (compare(b, b) === 0) - (compare(a, a) === 0);\n    };\n  }\n\n  function ascendingDefined(a, b) {\n    return (a == null || !(a >= a)) - (b == null || !(b >= b)) || (a < b ? -1 : a > b ? 1 : 0);\n  }\n\n  function groupSort(values, reduce, key) {\n    return (reduce.length === 1 ? sort(rollup(values, reduce, key), function (_ref12, _ref13) {\n      var _ref14 = _slicedToArray(_ref12, 2),\n          ak = _ref14[0],\n          av = _ref14[1];\n\n      var _ref15 = _slicedToArray(_ref13, 2),\n          bk = _ref15[0],\n          bv = _ref15[1];\n\n      return ascending$3(av, bv) || ascending$3(ak, bk);\n    }) : sort(group(values, key), function (_ref16, _ref17) {\n      var _ref18 = _slicedToArray(_ref16, 2),\n          ak = _ref18[0],\n          av = _ref18[1];\n\n      var _ref19 = _slicedToArray(_ref17, 2),\n          bk = _ref19[0],\n          bv = _ref19[1];\n\n      return reduce(av, bv) || ascending$3(ak, bk);\n    })).map(function (_ref20) {\n      var _ref21 = _slicedToArray(_ref20, 1),\n          key = _ref21[0];\n\n      return key;\n    });\n  }\n\n  var array$5 = Array.prototype;\n  var slice$3 = array$5.slice;\n\n  function constant$b(x) {\n    return function () {\n      return x;\n    };\n  }\n\n  var e10 = Math.sqrt(50),\n      e5 = Math.sqrt(10),\n      e2 = Math.sqrt(2);\n\n  function ticks(start, stop, count) {\n    var reverse,\n        i = -1,\n        n,\n        ticks,\n        step;\n    stop = +stop, start = +start, count = +count;\n    if (start === stop && count > 0) return [start];\n    if (reverse = stop < start) n = start, start = stop, stop = n;\n    if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n    if (step > 0) {\n      var r0 = Math.round(start / step),\n          r1 = Math.round(stop / step);\n      if (r0 * step < start) ++r0;\n      if (r1 * step > stop) --r1;\n      ticks = new Array(n = r1 - r0 + 1);\n\n      while (++i < n) {\n        ticks[i] = (r0 + i) * step;\n      }\n    } else {\n      step = -step;\n\n      var _r = Math.round(start * step),\n          _r2 = Math.round(stop * step);\n\n      if (_r / step < start) ++_r;\n      if (_r2 / step > stop) --_r2;\n      ticks = new Array(n = _r2 - _r + 1);\n\n      while (++i < n) {\n        ticks[i] = (_r + i) / step;\n      }\n    }\n\n    if (reverse) ticks.reverse();\n    return ticks;\n  }\n\n  function tickIncrement(start, stop, count) {\n    var step = (stop - start) / Math.max(0, count),\n        power = Math.floor(Math.log(step) / Math.LN10),\n        error = step / Math.pow(10, power);\n    return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function nice$1(start, stop, count) {\n    var prestep;\n\n    while (true) {\n      var _step16 = tickIncrement(start, stop, count);\n\n      if (_step16 === prestep || _step16 === 0 || !isFinite(_step16)) {\n        return [start, stop];\n      } else if (_step16 > 0) {\n        start = Math.floor(start / _step16) * _step16;\n        stop = Math.ceil(stop / _step16) * _step16;\n      } else if (_step16 < 0) {\n        start = Math.ceil(start * _step16) / _step16;\n        stop = Math.floor(stop * _step16) / _step16;\n      }\n\n      prestep = _step16;\n    }\n  }\n\n  function thresholdSturges(values) {\n    return Math.ceil(Math.log(count$1(values)) / Math.LN2) + 1;\n  }\n\n  function bin() {\n    var value = identity$9,\n        domain = extent$1,\n        threshold = thresholdSturges;\n\n    function histogram(data) {\n      if (!Array.isArray(data)) data = Array.from(data);\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      for (i = 0; i < n; ++i) {\n        values[i] = value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = xz[0],\n          x1 = xz[1],\n          tz = threshold(values, x0, x1); // Convert number of thresholds into uniform thresholds, and nice the\n      // default domain accordingly.\n\n      if (!Array.isArray(tz)) {\n        var _max = x1,\n            tn = +tz;\n\n        if (domain === extent$1) {\n          var _nice$ = nice$1(x0, x1, tn);\n\n          var _nice$2 = _slicedToArray(_nice$, 2);\n\n          x0 = _nice$2[0];\n          x1 = _nice$2[1];\n        }\n\n        tz = ticks(x0, x1, tn); // If the last threshold is coincident with the domain’s upper bound, the\n        // last bin will be zero-width. If the default domain is used, and this\n        // last threshold is coincident with the maximum input value, we can\n        // extend the niced upper bound by one tick to ensure uniform bin widths;\n        // otherwise, we simply remove the last threshold. Note that we don’t\n        // coerce values or the domain to numbers, and thus must be careful to\n        // compare order (>=) rather than strict equality (===)!\n\n        if (tz[tz.length - 1] >= x1) {\n          if (_max >= x1 && domain === extent$1) {\n            var _step17 = tickIncrement(x0, x1, tn);\n\n            if (isFinite(_step17)) {\n              if (_step17 > 0) {\n                x1 = (Math.floor(x1 / _step17) + 1) * _step17;\n              } else if (_step17 < 0) {\n                x1 = (Math.ceil(x1 * -_step17) + 1) / -_step17;\n              }\n            }\n          } else {\n            tz.pop();\n          }\n        }\n      } // Remove any thresholds outside the domain.\n\n\n      var m = tz.length;\n\n      while (tz[0] <= x0) {\n        tz.shift(), --m;\n      }\n\n      while (tz[m - 1] > x1) {\n        tz.pop(), --m;\n      }\n\n      var bins = new Array(m + 1),\n          bin; // Initialize bins.\n\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      } // Assign data to bins by value, ignoring any outside the domain.\n\n\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n\n        if (x != null && x0 <= x && x <= x1) {\n          bins[bisect(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function (_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$b(_), histogram) : value;\n    };\n\n    histogram.domain = function (_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$b([_[0], _[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function (_) {\n      return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$b(slice$3.call(_)) : constant$b(_), histogram) : threshold;\n    };\n\n    return histogram;\n  }\n\n  function max$3(values, valueof) {\n    var max;\n\n    if (valueof === undefined) {\n      var _iterator16 = _createForOfIteratorHelper(values),\n          _step18;\n\n      try {\n        for (_iterator16.s(); !(_step18 = _iterator16.n()).done;) {\n          var value = _step18.value;\n\n          if (value != null && (max < value || max === undefined && value >= value)) {\n            max = value;\n          }\n        }\n      } catch (err) {\n        _iterator16.e(err);\n      } finally {\n        _iterator16.f();\n      }\n    } else {\n      var _index7 = -1;\n\n      var _iterator17 = _createForOfIteratorHelper(values),\n          _step19;\n\n      try {\n        for (_iterator17.s(); !(_step19 = _iterator17.n()).done;) {\n          var _value6 = _step19.value;\n\n          if ((_value6 = valueof(_value6, ++_index7, values)) != null && (max < _value6 || max === undefined && _value6 >= _value6)) {\n            max = _value6;\n          }\n        }\n      } catch (err) {\n        _iterator17.e(err);\n      } finally {\n        _iterator17.f();\n      }\n    }\n\n    return max;\n  }\n\n  function min$2(values, valueof) {\n    var min;\n\n    if (valueof === undefined) {\n      var _iterator18 = _createForOfIteratorHelper(values),\n          _step20;\n\n      try {\n        for (_iterator18.s(); !(_step20 = _iterator18.n()).done;) {\n          var value = _step20.value;\n\n          if (value != null && (min > value || min === undefined && value >= value)) {\n            min = value;\n          }\n        }\n      } catch (err) {\n        _iterator18.e(err);\n      } finally {\n        _iterator18.f();\n      }\n    } else {\n      var _index8 = -1;\n\n      var _iterator19 = _createForOfIteratorHelper(values),\n          _step21;\n\n      try {\n        for (_iterator19.s(); !(_step21 = _iterator19.n()).done;) {\n          var _value7 = _step21.value;\n\n          if ((_value7 = valueof(_value7, ++_index8, values)) != null && (min > _value7 || min === undefined && _value7 >= _value7)) {\n            min = _value7;\n          }\n        }\n      } catch (err) {\n        _iterator19.e(err);\n      } finally {\n        _iterator19.f();\n      }\n    }\n\n    return min;\n  } // Based on https://github.com/mourner/quickselect\n  // ISC license, Copyright 2018 Vladimir Agafonkin.\n\n\n  function quickselect(array, k) {\n    var left = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var right = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : array.length - 1;\n    var compare = arguments.length > 4 ? arguments[4] : undefined;\n    compare = compare === undefined ? ascendingDefined : compareDefined(compare);\n\n    while (right > left) {\n      if (right - left > 600) {\n        var n = right - left + 1;\n\n        var _m = k - left + 1;\n\n        var z = Math.log(n);\n\n        var _s2 = 0.5 * Math.exp(2 * z / 3);\n\n        var sd = 0.5 * Math.sqrt(z * _s2 * (n - _s2) / n) * (_m - n / 2 < 0 ? -1 : 1);\n        var newLeft = Math.max(left, Math.floor(k - _m * _s2 / n + sd));\n        var newRight = Math.min(right, Math.floor(k + (n - _m) * _s2 / n + sd));\n        quickselect(array, k, newLeft, newRight, compare);\n      }\n\n      var t = array[k];\n      var i = left;\n      var j = right;\n      swap$1(array, left, k);\n      if (compare(array[right], t) > 0) swap$1(array, left, right);\n\n      while (i < j) {\n        swap$1(array, i, j), ++i, --j;\n\n        while (compare(array[i], t) < 0) {\n          ++i;\n        }\n\n        while (compare(array[j], t) > 0) {\n          --j;\n        }\n      }\n\n      if (compare(array[left], t) === 0) swap$1(array, left, j);else ++j, swap$1(array, j, right);\n      if (j <= k) left = j + 1;\n      if (k <= j) right = j - 1;\n    }\n\n    return array;\n  }\n\n  function swap$1(array, i, j) {\n    var t = array[i];\n    array[i] = array[j];\n    array[j] = t;\n  }\n\n  function quantile$1(values, p, valueof) {\n    values = Float64Array.from(numbers(values, valueof));\n    if (!(n = values.length)) return;\n    if ((p = +p) <= 0 || n < 2) return min$2(values);\n    if (p >= 1) return max$3(values);\n    var n,\n        i = (n - 1) * p,\n        i0 = Math.floor(i),\n        value0 = max$3(quickselect(values, i0).subarray(0, i0 + 1)),\n        value1 = min$2(values.subarray(i0 + 1));\n    return value0 + (value1 - value0) * (i - i0);\n  }\n\n  function quantileSorted(values, p) {\n    var valueof = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : number$3;\n    if (!(n = values.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n    if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n    var n,\n        i = (n - 1) * p,\n        i0 = Math.floor(i),\n        value0 = +valueof(values[i0], i0, values),\n        value1 = +valueof(values[i0 + 1], i0 + 1, values);\n    return value0 + (value1 - value0) * (i - i0);\n  }\n\n  function thresholdFreedmanDiaconis(values, min, max) {\n    return Math.ceil((max - min) / (2 * (quantile$1(values, 0.75) - quantile$1(values, 0.25)) * Math.pow(count$1(values), -1 / 3)));\n  }\n\n  function thresholdScott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(count$1(values), -1 / 3)));\n  }\n\n  function maxIndex(values, valueof) {\n    var max;\n    var maxIndex = -1;\n    var index = -1;\n\n    if (valueof === undefined) {\n      var _iterator20 = _createForOfIteratorHelper(values),\n          _step22;\n\n      try {\n        for (_iterator20.s(); !(_step22 = _iterator20.n()).done;) {\n          var value = _step22.value;\n          ++index;\n\n          if (value != null && (max < value || max === undefined && value >= value)) {\n            max = value, maxIndex = index;\n          }\n        }\n      } catch (err) {\n        _iterator20.e(err);\n      } finally {\n        _iterator20.f();\n      }\n    } else {\n      var _iterator21 = _createForOfIteratorHelper(values),\n          _step23;\n\n      try {\n        for (_iterator21.s(); !(_step23 = _iterator21.n()).done;) {\n          var _value8 = _step23.value;\n\n          if ((_value8 = valueof(_value8, ++index, values)) != null && (max < _value8 || max === undefined && _value8 >= _value8)) {\n            max = _value8, maxIndex = index;\n          }\n        }\n      } catch (err) {\n        _iterator21.e(err);\n      } finally {\n        _iterator21.f();\n      }\n    }\n\n    return maxIndex;\n  }\n\n  function mean(values, valueof) {\n    var count = 0;\n    var sum = 0;\n\n    if (valueof === undefined) {\n      var _iterator22 = _createForOfIteratorHelper(values),\n          _step24;\n\n      try {\n        for (_iterator22.s(); !(_step24 = _iterator22.n()).done;) {\n          var value = _step24.value;\n\n          if (value != null && (value = +value) >= value) {\n            ++count, sum += value;\n          }\n        }\n      } catch (err) {\n        _iterator22.e(err);\n      } finally {\n        _iterator22.f();\n      }\n    } else {\n      var _index9 = -1;\n\n      var _iterator23 = _createForOfIteratorHelper(values),\n          _step25;\n\n      try {\n        for (_iterator23.s(); !(_step25 = _iterator23.n()).done;) {\n          var _value9 = _step25.value;\n\n          if ((_value9 = valueof(_value9, ++_index9, values)) != null && (_value9 = +_value9) >= _value9) {\n            ++count, sum += _value9;\n          }\n        }\n      } catch (err) {\n        _iterator23.e(err);\n      } finally {\n        _iterator23.f();\n      }\n    }\n\n    if (count) return sum / count;\n  }\n\n  function median(values, valueof) {\n    return quantile$1(values, 0.5, valueof);\n  }\n\n  function flatten(arrays) {\n    var _iterator24, _step26, _array;\n\n    return _regeneratorRuntime.wrap(function flatten$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _iterator24 = _createForOfIteratorHelper(arrays);\n            _context2.prev = 1;\n\n            _iterator24.s();\n\n          case 3:\n            if ((_step26 = _iterator24.n()).done) {\n              _context2.next = 8;\n              break;\n            }\n\n            _array = _step26.value;\n            return _context2.delegateYield(_array, \"t0\", 6);\n\n          case 6:\n            _context2.next = 3;\n            break;\n\n          case 8:\n            _context2.next = 13;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t1 = _context2[\"catch\"](1);\n\n            _iterator24.e(_context2.t1);\n\n          case 13:\n            _context2.prev = 13;\n\n            _iterator24.f();\n\n            return _context2.finish(13);\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _marked2, null, [[1, 10, 13, 16]]);\n  }\n\n  function merge(arrays) {\n    return Array.from(flatten(arrays));\n  }\n\n  function minIndex(values, valueof) {\n    var min;\n    var minIndex = -1;\n    var index = -1;\n\n    if (valueof === undefined) {\n      var _iterator25 = _createForOfIteratorHelper(values),\n          _step27;\n\n      try {\n        for (_iterator25.s(); !(_step27 = _iterator25.n()).done;) {\n          var value = _step27.value;\n          ++index;\n\n          if (value != null && (min > value || min === undefined && value >= value)) {\n            min = value, minIndex = index;\n          }\n        }\n      } catch (err) {\n        _iterator25.e(err);\n      } finally {\n        _iterator25.f();\n      }\n    } else {\n      var _iterator26 = _createForOfIteratorHelper(values),\n          _step28;\n\n      try {\n        for (_iterator26.s(); !(_step28 = _iterator26.n()).done;) {\n          var _value10 = _step28.value;\n\n          if ((_value10 = valueof(_value10, ++index, values)) != null && (min > _value10 || min === undefined && _value10 >= _value10)) {\n            min = _value10, minIndex = index;\n          }\n        }\n      } catch (err) {\n        _iterator26.e(err);\n      } finally {\n        _iterator26.f();\n      }\n    }\n\n    return minIndex;\n  }\n\n  function mode(values, valueof) {\n    var counts = new InternMap();\n\n    if (valueof === undefined) {\n      var _iterator27 = _createForOfIteratorHelper(values),\n          _step29;\n\n      try {\n        for (_iterator27.s(); !(_step29 = _iterator27.n()).done;) {\n          var value = _step29.value;\n\n          if (value != null && value >= value) {\n            counts.set(value, (counts.get(value) || 0) + 1);\n          }\n        }\n      } catch (err) {\n        _iterator27.e(err);\n      } finally {\n        _iterator27.f();\n      }\n    } else {\n      var _index10 = -1;\n\n      var _iterator28 = _createForOfIteratorHelper(values),\n          _step30;\n\n      try {\n        for (_iterator28.s(); !(_step30 = _iterator28.n()).done;) {\n          var _value11 = _step30.value;\n\n          if ((_value11 = valueof(_value11, ++_index10, values)) != null && _value11 >= _value11) {\n            counts.set(_value11, (counts.get(_value11) || 0) + 1);\n          }\n        }\n      } catch (err) {\n        _iterator28.e(err);\n      } finally {\n        _iterator28.f();\n      }\n    }\n\n    var modeValue;\n    var modeCount = 0;\n\n    var _iterator29 = _createForOfIteratorHelper(counts),\n        _step31;\n\n    try {\n      for (_iterator29.s(); !(_step31 = _iterator29.n()).done;) {\n        var _ref24 = _step31.value;\n\n        var _ref23 = _slicedToArray(_ref24, 2);\n\n        var _value12 = _ref23[0];\n        var _count = _ref23[1];\n\n        if (_count > modeCount) {\n          modeCount = _count;\n          modeValue = _value12;\n        }\n      }\n    } catch (err) {\n      _iterator29.e(err);\n    } finally {\n      _iterator29.f();\n    }\n\n    return modeValue;\n  }\n\n  function pairs(values) {\n    var pairof = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : pair;\n    var pairs = [];\n    var previous;\n    var first = false;\n\n    var _iterator30 = _createForOfIteratorHelper(values),\n        _step32;\n\n    try {\n      for (_iterator30.s(); !(_step32 = _iterator30.n()).done;) {\n        var value = _step32.value;\n        if (first) pairs.push(pairof(previous, value));\n        previous = value;\n        first = true;\n      }\n    } catch (err) {\n      _iterator30.e(err);\n    } finally {\n      _iterator30.f();\n    }\n\n    return pairs;\n  }\n\n  function pair(a, b) {\n    return [a, b];\n  }\n\n  function range$2(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  function least(values) {\n    var compare = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ascending$3;\n    var min;\n    var defined = false;\n\n    if (compare.length === 1) {\n      var minValue;\n\n      var _iterator31 = _createForOfIteratorHelper(values),\n          _step33;\n\n      try {\n        for (_iterator31.s(); !(_step33 = _iterator31.n()).done;) {\n          var element = _step33.value;\n          var value = compare(element);\n\n          if (defined ? ascending$3(value, minValue) < 0 : ascending$3(value, value) === 0) {\n            min = element;\n            minValue = value;\n            defined = true;\n          }\n        }\n      } catch (err) {\n        _iterator31.e(err);\n      } finally {\n        _iterator31.f();\n      }\n    } else {\n      var _iterator32 = _createForOfIteratorHelper(values),\n          _step34;\n\n      try {\n        for (_iterator32.s(); !(_step34 = _iterator32.n()).done;) {\n          var _value13 = _step34.value;\n\n          if (defined ? compare(_value13, min) < 0 : compare(_value13, _value13) === 0) {\n            min = _value13;\n            defined = true;\n          }\n        }\n      } catch (err) {\n        _iterator32.e(err);\n      } finally {\n        _iterator32.f();\n      }\n    }\n\n    return min;\n  }\n\n  function leastIndex(values) {\n    var compare = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ascending$3;\n    if (compare.length === 1) return minIndex(values, compare);\n    var minValue;\n    var min = -1;\n    var index = -1;\n\n    var _iterator33 = _createForOfIteratorHelper(values),\n        _step35;\n\n    try {\n      for (_iterator33.s(); !(_step35 = _iterator33.n()).done;) {\n        var value = _step35.value;\n        ++index;\n\n        if (min < 0 ? compare(value, value) === 0 : compare(value, minValue) < 0) {\n          minValue = value;\n          min = index;\n        }\n      }\n    } catch (err) {\n      _iterator33.e(err);\n    } finally {\n      _iterator33.f();\n    }\n\n    return min;\n  }\n\n  function greatest(values) {\n    var compare = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ascending$3;\n    var max;\n    var defined = false;\n\n    if (compare.length === 1) {\n      var maxValue;\n\n      var _iterator34 = _createForOfIteratorHelper(values),\n          _step36;\n\n      try {\n        for (_iterator34.s(); !(_step36 = _iterator34.n()).done;) {\n          var element = _step36.value;\n          var value = compare(element);\n\n          if (defined ? ascending$3(value, maxValue) > 0 : ascending$3(value, value) === 0) {\n            max = element;\n            maxValue = value;\n            defined = true;\n          }\n        }\n      } catch (err) {\n        _iterator34.e(err);\n      } finally {\n        _iterator34.f();\n      }\n    } else {\n      var _iterator35 = _createForOfIteratorHelper(values),\n          _step37;\n\n      try {\n        for (_iterator35.s(); !(_step37 = _iterator35.n()).done;) {\n          var _value14 = _step37.value;\n\n          if (defined ? compare(_value14, max) > 0 : compare(_value14, _value14) === 0) {\n            max = _value14;\n            defined = true;\n          }\n        }\n      } catch (err) {\n        _iterator35.e(err);\n      } finally {\n        _iterator35.f();\n      }\n    }\n\n    return max;\n  }\n\n  function greatestIndex(values) {\n    var compare = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ascending$3;\n    if (compare.length === 1) return maxIndex(values, compare);\n    var maxValue;\n    var max = -1;\n    var index = -1;\n\n    var _iterator36 = _createForOfIteratorHelper(values),\n        _step38;\n\n    try {\n      for (_iterator36.s(); !(_step38 = _iterator36.n()).done;) {\n        var value = _step38.value;\n        ++index;\n\n        if (max < 0 ? compare(value, value) === 0 : compare(value, maxValue) > 0) {\n          maxValue = value;\n          max = index;\n        }\n      }\n    } catch (err) {\n      _iterator36.e(err);\n    } finally {\n      _iterator36.f();\n    }\n\n    return max;\n  }\n\n  function scan(values, compare) {\n    var index = leastIndex(values, compare);\n    return index < 0 ? undefined : index;\n  }\n\n  var shuffle$1 = shuffler(Math.random);\n\n  function shuffler(random) {\n    return function shuffle(array) {\n      var i0 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var i1 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : array.length;\n      var m = i1 - (i0 = +i0);\n\n      while (m) {\n        var i = random() * m-- | 0,\n            t = array[m + i0];\n        array[m + i0] = array[i + i0];\n        array[i + i0] = t;\n      }\n\n      return array;\n    };\n  }\n\n  function sum$2(values, valueof) {\n    var sum = 0;\n\n    if (valueof === undefined) {\n      var _iterator37 = _createForOfIteratorHelper(values),\n          _step39;\n\n      try {\n        for (_iterator37.s(); !(_step39 = _iterator37.n()).done;) {\n          var value = _step39.value;\n\n          if (value = +value) {\n            sum += value;\n          }\n        }\n      } catch (err) {\n        _iterator37.e(err);\n      } finally {\n        _iterator37.f();\n      }\n    } else {\n      var _index11 = -1;\n\n      var _iterator38 = _createForOfIteratorHelper(values),\n          _step40;\n\n      try {\n        for (_iterator38.s(); !(_step40 = _iterator38.n()).done;) {\n          var _value15 = _step40.value;\n\n          if (_value15 = +valueof(_value15, ++_index11, values)) {\n            sum += _value15;\n          }\n        }\n      } catch (err) {\n        _iterator38.e(err);\n      } finally {\n        _iterator38.f();\n      }\n    }\n\n    return sum;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n\n    for (var i = -1, m = min$2(matrix, length$2), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n\n    return transpose;\n  }\n\n  function length$2(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  function every(values, test) {\n    if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n    var index = -1;\n\n    var _iterator39 = _createForOfIteratorHelper(values),\n        _step41;\n\n    try {\n      for (_iterator39.s(); !(_step41 = _iterator39.n()).done;) {\n        var value = _step41.value;\n\n        if (!test(value, ++index, values)) {\n          return false;\n        }\n      }\n    } catch (err) {\n      _iterator39.e(err);\n    } finally {\n      _iterator39.f();\n    }\n\n    return true;\n  }\n\n  function some(values, test) {\n    if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n    var index = -1;\n\n    var _iterator40 = _createForOfIteratorHelper(values),\n        _step42;\n\n    try {\n      for (_iterator40.s(); !(_step42 = _iterator40.n()).done;) {\n        var value = _step42.value;\n\n        if (test(value, ++index, values)) {\n          return true;\n        }\n      }\n    } catch (err) {\n      _iterator40.e(err);\n    } finally {\n      _iterator40.f();\n    }\n\n    return false;\n  }\n\n  function filter$1(values, test) {\n    if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n    var array = [];\n    var index = -1;\n\n    var _iterator41 = _createForOfIteratorHelper(values),\n        _step43;\n\n    try {\n      for (_iterator41.s(); !(_step43 = _iterator41.n()).done;) {\n        var value = _step43.value;\n\n        if (test(value, ++index, values)) {\n          array.push(value);\n        }\n      }\n    } catch (err) {\n      _iterator41.e(err);\n    } finally {\n      _iterator41.f();\n    }\n\n    return array;\n  }\n\n  function map$1(values, mapper) {\n    if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n    if (typeof mapper !== \"function\") throw new TypeError(\"mapper is not a function\");\n    return Array.from(values, function (value, index) {\n      return mapper(value, index, values);\n    });\n  }\n\n  function reduce(values, reducer, value) {\n    if (typeof reducer !== \"function\") throw new TypeError(\"reducer is not a function\");\n    var iterator = values[Symbol.iterator]();\n    var done,\n        next,\n        index = -1;\n\n    if (arguments.length < 3) {\n      var _iterator$next = iterator.next();\n\n      done = _iterator$next.done;\n      value = _iterator$next.value;\n      if (done) return;\n      ++index;\n    }\n\n    while ((_iterator$next2 = iterator.next(), done = _iterator$next2.done, next = _iterator$next2.value, _iterator$next2), !done) {\n      var _iterator$next2;\n\n      value = reducer(value, next, ++index, values);\n    }\n\n    return value;\n  }\n\n  function reverse$1(values) {\n    if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n    return Array.from(values).reverse();\n  }\n\n  function difference(values) {\n    values = new Set(values);\n\n    for (var _len11 = arguments.length, others = new Array(_len11 > 1 ? _len11 - 1 : 0), _key14 = 1; _key14 < _len11; _key14++) {\n      others[_key14 - 1] = arguments[_key14];\n    }\n\n    for (var _i2 = 0, _others = others; _i2 < _others.length; _i2++) {\n      var other = _others[_i2];\n\n      var _iterator42 = _createForOfIteratorHelper(other),\n          _step44;\n\n      try {\n        for (_iterator42.s(); !(_step44 = _iterator42.n()).done;) {\n          var value = _step44.value;\n          values.delete(value);\n        }\n      } catch (err) {\n        _iterator42.e(err);\n      } finally {\n        _iterator42.f();\n      }\n    }\n\n    return values;\n  }\n\n  function disjoint(values, other) {\n    var iterator = other[Symbol.iterator](),\n        set = new Set();\n\n    var _iterator43 = _createForOfIteratorHelper(values),\n        _step45;\n\n    try {\n      for (_iterator43.s(); !(_step45 = _iterator43.n()).done;) {\n        var v = _step45.value;\n        if (set.has(v)) return false;\n        var value = void 0,\n            done = void 0;\n\n        while (_iterator$next3 = iterator.next(), value = _iterator$next3.value, done = _iterator$next3.done, _iterator$next3) {\n          var _iterator$next3;\n\n          if (done) break;\n          if (Object.is(v, value)) return false;\n          set.add(value);\n        }\n      }\n    } catch (err) {\n      _iterator43.e(err);\n    } finally {\n      _iterator43.f();\n    }\n\n    return true;\n  }\n\n  function set$2(values) {\n    return values instanceof Set ? values : new Set(values);\n  }\n\n  function intersection(values) {\n    for (var _len12 = arguments.length, others = new Array(_len12 > 1 ? _len12 - 1 : 0), _key15 = 1; _key15 < _len12; _key15++) {\n      others[_key15 - 1] = arguments[_key15];\n    }\n\n    values = new Set(values);\n    others = others.map(set$2);\n\n    var _iterator44 = _createForOfIteratorHelper(values),\n        _step46;\n\n    try {\n      out: for (_iterator44.s(); !(_step46 = _iterator44.n()).done;) {\n        var value = _step46.value;\n\n        var _iterator45 = _createForOfIteratorHelper(others),\n            _step47;\n\n        try {\n          for (_iterator45.s(); !(_step47 = _iterator45.n()).done;) {\n            var other = _step47.value;\n\n            if (!other.has(value)) {\n              values.delete(value);\n              continue out;\n            }\n          }\n        } catch (err) {\n          _iterator45.e(err);\n        } finally {\n          _iterator45.f();\n        }\n      }\n    } catch (err) {\n      _iterator44.e(err);\n    } finally {\n      _iterator44.f();\n    }\n\n    return values;\n  }\n\n  function superset(values, other) {\n    var iterator = values[Symbol.iterator](),\n        set = new Set();\n\n    var _iterator46 = _createForOfIteratorHelper(other),\n        _step48;\n\n    try {\n      for (_iterator46.s(); !(_step48 = _iterator46.n()).done;) {\n        var o = _step48.value;\n        if (set.has(o)) continue;\n        var value = void 0,\n            done = void 0;\n\n        while (_iterator$next4 = iterator.next(), value = _iterator$next4.value, done = _iterator$next4.done, _iterator$next4) {\n          var _iterator$next4;\n\n          if (done) return false;\n          set.add(value);\n          if (Object.is(o, value)) break;\n        }\n      }\n    } catch (err) {\n      _iterator46.e(err);\n    } finally {\n      _iterator46.f();\n    }\n\n    return true;\n  }\n\n  function subset(values, other) {\n    return superset(other, values);\n  }\n\n  function union() {\n    var set = new Set();\n\n    for (var _len13 = arguments.length, others = new Array(_len13), _key16 = 0; _key16 < _len13; _key16++) {\n      others[_key16] = arguments[_key16];\n    }\n\n    for (var _i3 = 0, _others2 = others; _i3 < _others2.length; _i3++) {\n      var other = _others2[_i3];\n\n      var _iterator47 = _createForOfIteratorHelper(other),\n          _step49;\n\n      try {\n        for (_iterator47.s(); !(_step49 = _iterator47.n()).done;) {\n          var o = _step49.value;\n          set.add(o);\n        }\n      } catch (err) {\n        _iterator47.e(err);\n      } finally {\n        _iterator47.f();\n      }\n    }\n\n    return set;\n  }\n\n  function identity$8(x) {\n    return x;\n  }\n\n  var top = 1,\n      right = 2,\n      bottom = 3,\n      left = 4,\n      epsilon$6 = 1e-6;\n\n  function translateX(x) {\n    return \"translate(\" + x + \",0)\";\n  }\n\n  function translateY(y) {\n    return \"translate(0,\" + y + \")\";\n  }\n\n  function number$2(scale) {\n    return function (d) {\n      return +scale(d);\n    };\n  }\n\n  function center$1(scale, offset) {\n    offset = Math.max(0, scale.bandwidth() - offset * 2) / 2;\n    if (scale.round()) offset = Math.round(offset);\n    return function (d) {\n      return +scale(d) + offset;\n    };\n  }\n\n  function entering() {\n    return !this.__axis;\n  }\n\n  function axis(orient, scale) {\n    var tickArguments = [],\n        tickValues = null,\n        tickFormat = null,\n        tickSizeInner = 6,\n        tickSizeOuter = 6,\n        tickPadding = 3,\n        offset = typeof window !== \"undefined\" && window.devicePixelRatio > 1 ? 0 : 0.5,\n        k = orient === top || orient === left ? -1 : 1,\n        x = orient === left || orient === right ? \"x\" : \"y\",\n        transform = orient === top || orient === bottom ? translateX : translateY;\n\n    function axis(context) {\n      var values = tickValues == null ? scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain() : tickValues,\n          format = tickFormat == null ? scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$8 : tickFormat,\n          spacing = Math.max(tickSizeInner, 0) + tickPadding,\n          range = scale.range(),\n          range0 = +range[0] + offset,\n          range1 = +range[range.length - 1] + offset,\n          position = (scale.bandwidth ? center$1 : number$2)(scale.copy(), offset),\n          selection = context.selection ? context.selection() : context,\n          path = selection.selectAll(\".domain\").data([null]),\n          tick = selection.selectAll(\".tick\").data(values, scale).order(),\n          tickExit = tick.exit(),\n          tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n          line = tick.select(\"line\"),\n          text = tick.select(\"text\");\n      path = path.merge(path.enter().insert(\"path\", \".tick\").attr(\"class\", \"domain\").attr(\"stroke\", \"currentColor\"));\n      tick = tick.merge(tickEnter);\n      line = line.merge(tickEnter.append(\"line\").attr(\"stroke\", \"currentColor\").attr(x + \"2\", k * tickSizeInner));\n      text = text.merge(tickEnter.append(\"text\").attr(\"fill\", \"currentColor\").attr(x, k * spacing).attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n      if (context !== selection) {\n        path = path.transition(context);\n        tick = tick.transition(context);\n        line = line.transition(context);\n        text = text.transition(context);\n        tickExit = tickExit.transition(context).attr(\"opacity\", epsilon$6).attr(\"transform\", function (d) {\n          return isFinite(d = position(d)) ? transform(d + offset) : this.getAttribute(\"transform\");\n        });\n        tickEnter.attr(\"opacity\", epsilon$6).attr(\"transform\", function (d) {\n          var p = this.parentNode.__axis;\n          return transform((p && isFinite(p = p(d)) ? p : position(d)) + offset);\n        });\n      }\n\n      tickExit.remove();\n      path.attr(\"d\", orient === left || orient === right ? tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H\" + offset + \"V\" + range1 + \"H\" + k * tickSizeOuter : \"M\" + offset + \",\" + range0 + \"V\" + range1 : tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V\" + offset + \"H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",\" + offset + \"H\" + range1);\n      tick.attr(\"opacity\", 1).attr(\"transform\", function (d) {\n        return transform(position(d) + offset);\n      });\n      line.attr(x + \"2\", k * tickSizeInner);\n      text.attr(x, k * spacing).text(format);\n      selection.filter(entering).attr(\"fill\", \"none\").attr(\"font-size\", 10).attr(\"font-family\", \"sans-serif\").attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n      selection.each(function () {\n        this.__axis = position;\n      });\n    }\n\n    axis.scale = function (_) {\n      return arguments.length ? (scale = _, axis) : scale;\n    };\n\n    axis.ticks = function () {\n      return tickArguments = Array.from(arguments), axis;\n    };\n\n    axis.tickArguments = function (_) {\n      return arguments.length ? (tickArguments = _ == null ? [] : Array.from(_), axis) : tickArguments.slice();\n    };\n\n    axis.tickValues = function (_) {\n      return arguments.length ? (tickValues = _ == null ? null : Array.from(_), axis) : tickValues && tickValues.slice();\n    };\n\n    axis.tickFormat = function (_) {\n      return arguments.length ? (tickFormat = _, axis) : tickFormat;\n    };\n\n    axis.tickSize = function (_) {\n      return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n    };\n\n    axis.tickSizeInner = function (_) {\n      return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n    };\n\n    axis.tickSizeOuter = function (_) {\n      return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n    };\n\n    axis.tickPadding = function (_) {\n      return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n    };\n\n    axis.offset = function (_) {\n      return arguments.length ? (offset = +_, axis) : offset;\n    };\n\n    return axis;\n  }\n\n  function axisTop(scale) {\n    return axis(top, scale);\n  }\n\n  function axisRight(scale) {\n    return axis(right, scale);\n  }\n\n  function axisBottom(scale) {\n    return axis(bottom, scale);\n  }\n\n  function axisLeft(scale) {\n    return axis(left, scale);\n  }\n\n  var noop$3 = {\n    value: function value() {}\n  };\n\n  function dispatch() {\n    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n      if (!(t = arguments[i] + \"\") || t in _ || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n      _[t] = [];\n    }\n\n    return new Dispatch(_);\n  }\n\n  function Dispatch(_) {\n    this._ = _;\n  }\n\n  function parseTypenames$1(typenames, types) {\n    return typenames.trim().split(/^|\\s+/).map(function (t) {\n      var name = \"\",\n          i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n      return {\n        type: t,\n        name: name\n      };\n    });\n  }\n\n  Dispatch.prototype = dispatch.prototype = {\n    constructor: Dispatch,\n    on: function on(typename, callback) {\n      var _ = this._,\n          T = parseTypenames$1(typename + \"\", _),\n          t,\n          i = -1,\n          n = T.length; // If no callback was specified, return the callback of the given type and name.\n\n      if (arguments.length < 2) {\n        while (++i < n) {\n          if ((t = (typename = T[i]).type) && (t = get$1(_[t], typename.name))) return t;\n        }\n\n        return;\n      } // If a type was specified, set the callback for the given type and name.\n      // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\n\n      if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\n      while (++i < n) {\n        if (t = (typename = T[i]).type) _[t] = set$1(_[t], typename.name, callback);else if (callback == null) for (t in _) {\n          _[t] = set$1(_[t], typename.name, null);\n        }\n      }\n\n      return this;\n    },\n    copy: function copy() {\n      var copy = {},\n          _ = this._;\n\n      for (var t in _) {\n        copy[t] = _[t].slice();\n      }\n\n      return new Dispatch(copy);\n    },\n    call: function call(type, that) {\n      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) {\n        args[i] = arguments[i + 2];\n      }\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n      for (t = this._[type], i = 0, n = t.length; i < n; ++i) {\n        t[i].value.apply(that, args);\n      }\n    },\n    apply: function apply(type, that, args) {\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n      for (var t = this._[type], i = 0, n = t.length; i < n; ++i) {\n        t[i].value.apply(that, args);\n      }\n    }\n  };\n\n  function get$1(type, name) {\n    for (var i = 0, n = type.length, c; i < n; ++i) {\n      if ((c = type[i]).name === name) {\n        return c.value;\n      }\n    }\n  }\n\n  function set$1(type, name, callback) {\n    for (var i = 0, n = type.length; i < n; ++i) {\n      if (type[i].name === name) {\n        type[i] = noop$3, type = type.slice(0, i).concat(type.slice(i + 1));\n        break;\n      }\n    }\n\n    if (callback != null) type.push({\n      name: name,\n      value: callback\n    });\n    return type;\n  }\n\n  var xhtml = \"http://www.w3.org/1999/xhtml\";\n  var namespaces = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: xhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n\n  function namespace(name) {\n    var prefix = name += \"\",\n        i = prefix.indexOf(\":\");\n    if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n    return namespaces.hasOwnProperty(prefix) ? {\n      space: namespaces[prefix],\n      local: name\n    } : name; // eslint-disable-line no-prototype-builtins\n  }\n\n  function creatorInherit(name) {\n    return function () {\n      var document = this.ownerDocument,\n          uri = this.namespaceURI;\n      return uri === xhtml && document.documentElement.namespaceURI === xhtml ? document.createElement(name) : document.createElementNS(uri, name);\n    };\n  }\n\n  function creatorFixed(fullname) {\n    return function () {\n      return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n    };\n  }\n\n  function creator(name) {\n    var fullname = namespace(name);\n    return (fullname.local ? creatorFixed : creatorInherit)(fullname);\n  }\n\n  function none$2() {}\n\n  function selector(selector) {\n    return selector == null ? none$2 : function () {\n      return this.querySelector(selector);\n    };\n  }\n\n  function selection_select(select) {\n    if (typeof select !== \"function\") select = selector(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          subgroup[i] = subnode;\n        }\n      }\n    }\n\n    return new Selection$1(subgroups, this._parents);\n  } // Given something array like (or null), returns something that is strictly an\n  // array. This is used to ensure that array-like objects passed to d3.selectAll\n  // or selection.selectAll are converted into proper arrays when creating a\n  // selection; we don’t ever want to create a selection backed by a live\n  // HTMLCollection or NodeList. However, note that selection.selectAll will use a\n  // static NodeList as a group, since it safely derived from querySelectorAll.\n\n\n  function array$4(x) {\n    return x == null ? [] : Array.isArray(x) ? x : Array.from(x);\n  }\n\n  function empty$1() {\n    return [];\n  }\n\n  function selectorAll(selector) {\n    return selector == null ? empty$1 : function () {\n      return this.querySelectorAll(selector);\n    };\n  }\n\n  function arrayAll(select) {\n    return function () {\n      return array$4(select.apply(this, arguments));\n    };\n  }\n\n  function selection_selectAll(select) {\n    if (typeof select === \"function\") select = arrayAll(select);else select = selectorAll(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          subgroups.push(select.call(node, node.__data__, i, group));\n          parents.push(node);\n        }\n      }\n    }\n\n    return new Selection$1(subgroups, parents);\n  }\n\n  function matcher(selector) {\n    return function () {\n      return this.matches(selector);\n    };\n  }\n\n  function childMatcher(selector) {\n    return function (node) {\n      return node.matches(selector);\n    };\n  }\n\n  var find$1 = Array.prototype.find;\n\n  function childFind(match) {\n    return function () {\n      return find$1.call(this.children, match);\n    };\n  }\n\n  function childFirst() {\n    return this.firstElementChild;\n  }\n\n  function selection_selectChild(match) {\n    return this.select(match == null ? childFirst : childFind(typeof match === \"function\" ? match : childMatcher(match)));\n  }\n\n  var filter = Array.prototype.filter;\n\n  function children() {\n    return Array.from(this.children);\n  }\n\n  function childrenFilter(match) {\n    return function () {\n      return filter.call(this.children, match);\n    };\n  }\n\n  function selection_selectChildren(match) {\n    return this.selectAll(match == null ? children : childrenFilter(typeof match === \"function\" ? match : childMatcher(match)));\n  }\n\n  function selection_filter(match) {\n    if (typeof match !== \"function\") match = matcher(match);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return new Selection$1(subgroups, this._parents);\n  }\n\n  function sparse(update) {\n    return new Array(update.length);\n  }\n\n  function selection_enter() {\n    return new Selection$1(this._enter || this._groups.map(sparse), this._parents);\n  }\n\n  function EnterNode(parent, datum) {\n    this.ownerDocument = parent.ownerDocument;\n    this.namespaceURI = parent.namespaceURI;\n    this._next = null;\n    this._parent = parent;\n    this.__data__ = datum;\n  }\n\n  EnterNode.prototype = {\n    constructor: EnterNode,\n    appendChild: function appendChild(child) {\n      return this._parent.insertBefore(child, this._next);\n    },\n    insertBefore: function insertBefore(child, next) {\n      return this._parent.insertBefore(child, next);\n    },\n    querySelector: function querySelector(selector) {\n      return this._parent.querySelector(selector);\n    },\n    querySelectorAll: function querySelectorAll(selector) {\n      return this._parent.querySelectorAll(selector);\n    }\n  };\n\n  function constant$a(x) {\n    return function () {\n      return x;\n    };\n  }\n\n  function bindIndex(parent, group, enter, update, exit, data) {\n    var i = 0,\n        node,\n        groupLength = group.length,\n        dataLength = data.length; // Put any non-null nodes that fit into update.\n    // Put any null nodes into enter.\n    // Put any remaining data into enter.\n\n    for (; i < dataLength; ++i) {\n      if (node = group[i]) {\n        node.__data__ = data[i];\n        update[i] = node;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    } // Put any non-null nodes that don’t fit into exit.\n\n\n    for (; i < groupLength; ++i) {\n      if (node = group[i]) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function bindKey(parent, group, enter, update, exit, data, key) {\n    var i,\n        node,\n        nodeByKeyValue = new Map(),\n        groupLength = group.length,\n        dataLength = data.length,\n        keyValues = new Array(groupLength),\n        keyValue; // Compute the key for each node.\n    // If multiple nodes have the same key, the duplicates are added to exit.\n\n    for (i = 0; i < groupLength; ++i) {\n      if (node = group[i]) {\n        keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + \"\";\n\n        if (nodeByKeyValue.has(keyValue)) {\n          exit[i] = node;\n        } else {\n          nodeByKeyValue.set(keyValue, node);\n        }\n      }\n    } // Compute the key for each datum.\n    // If there a node associated with this key, join and add it to update.\n    // If there is not (or the key is a duplicate), add it to enter.\n\n\n    for (i = 0; i < dataLength; ++i) {\n      keyValue = key.call(parent, data[i], i, data) + \"\";\n\n      if (node = nodeByKeyValue.get(keyValue)) {\n        update[i] = node;\n        node.__data__ = data[i];\n        nodeByKeyValue.delete(keyValue);\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    } // Add any remaining nodes that were not bound to data to exit.\n\n\n    for (i = 0; i < groupLength; ++i) {\n      if ((node = group[i]) && nodeByKeyValue.get(keyValues[i]) === node) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function datum(node) {\n    return node.__data__;\n  }\n\n  function selection_data(value, key) {\n    if (!arguments.length) return Array.from(this, datum);\n    var bind = key ? bindKey : bindIndex,\n        parents = this._parents,\n        groups = this._groups;\n    if (typeof value !== \"function\") value = constant$a(value);\n\n    for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n      var parent = parents[j],\n          group = groups[j],\n          groupLength = group.length,\n          data = arraylike(value.call(parent, parent && parent.__data__, j, parents)),\n          dataLength = data.length,\n          enterGroup = enter[j] = new Array(dataLength),\n          updateGroup = update[j] = new Array(dataLength),\n          exitGroup = exit[j] = new Array(groupLength);\n      bind(parent, group, enterGroup, updateGroup, exitGroup, data, key); // Now connect the enter nodes to their following update node, such that\n      // appendChild can insert the materialized enter node before this node,\n      // rather than at the end of the parent node.\n\n      for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n        if (previous = enterGroup[i0]) {\n          if (i0 >= i1) i1 = i0 + 1;\n\n          while (!(next = updateGroup[i1]) && ++i1 < dataLength) {\n            ;\n          }\n\n          previous._next = next || null;\n        }\n      }\n    }\n\n    update = new Selection$1(update, parents);\n    update._enter = enter;\n    update._exit = exit;\n    return update;\n  } // Given some data, this returns an array-like view of it: an object that\n  // exposes a length property and allows numeric indexing. Note that unlike\n  // selectAll, this isn’t worried about “live” collections because the resulting\n  // array will only be used briefly while data is being bound. (It is possible to\n  // cause the data to change while iterating by using a key function, but please\n  // don’t; we’d rather avoid a gratuitous copy.)\n\n\n  function arraylike(data) {\n    return _typeof(data) === \"object\" && \"length\" in data ? data // Array, TypedArray, NodeList, array-like\n    : Array.from(data); // Map, Set, iterable, string, or anything else\n  }\n\n  function selection_exit() {\n    return new Selection$1(this._exit || this._groups.map(sparse), this._parents);\n  }\n\n  function selection_join(onenter, onupdate, onexit) {\n    var enter = this.enter(),\n        update = this,\n        exit = this.exit();\n\n    if (typeof onenter === \"function\") {\n      enter = onenter(enter);\n      if (enter) enter = enter.selection();\n    } else {\n      enter = enter.append(onenter + \"\");\n    }\n\n    if (onupdate != null) {\n      update = onupdate(update);\n      if (update) update = update.selection();\n    }\n\n    if (onexit == null) exit.remove();else onexit(exit);\n    return enter && update ? enter.merge(update).order() : update;\n  }\n\n  function selection_merge(context) {\n    var selection = context.selection ? context.selection() : context;\n\n    for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group0[i] || group1[i]) {\n          merge[i] = node;\n        }\n      }\n    }\n\n    for (; j < m0; ++j) {\n      merges[j] = groups0[j];\n    }\n\n    return new Selection$1(merges, this._parents);\n  }\n\n  function selection_order() {\n    for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n      for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function selection_sort(compare) {\n    if (!compare) compare = ascending$2;\n\n    function compareNode(a, b) {\n      return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n    }\n\n    for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          sortgroup[i] = node;\n        }\n      }\n\n      sortgroup.sort(compareNode);\n    }\n\n    return new Selection$1(sortgroups, this._parents).order();\n  }\n\n  function ascending$2(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function selection_call() {\n    var callback = arguments[0];\n    arguments[0] = this;\n    callback.apply(null, arguments);\n    return this;\n  }\n\n  function selection_nodes() {\n    return Array.from(this);\n  }\n\n  function selection_node() {\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  }\n\n  function selection_size() {\n    var size = 0;\n\n    var _iterator48 = _createForOfIteratorHelper(this),\n        _step50;\n\n    try {\n      for (_iterator48.s(); !(_step50 = _iterator48.n()).done;) {\n        var node = _step50.value;\n        ++size;\n      } // eslint-disable-line no-unused-vars\n\n    } catch (err) {\n      _iterator48.e(err);\n    } finally {\n      _iterator48.f();\n    }\n\n    return size;\n  }\n\n  function selection_empty() {\n    return !this.node();\n  }\n\n  function selection_each(callback) {\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n        if (node = group[i]) callback.call(node, node.__data__, i, group);\n      }\n    }\n\n    return this;\n  }\n\n  function attrRemove$1(name) {\n    return function () {\n      this.removeAttribute(name);\n    };\n  }\n\n  function attrRemoveNS$1(fullname) {\n    return function () {\n      this.removeAttributeNS(fullname.space, fullname.local);\n    };\n  }\n\n  function attrConstant$1(name, value) {\n    return function () {\n      this.setAttribute(name, value);\n    };\n  }\n\n  function attrConstantNS$1(fullname, value) {\n    return function () {\n      this.setAttributeNS(fullname.space, fullname.local, value);\n    };\n  }\n\n  function attrFunction$1(name, value) {\n    return function () {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttribute(name);else this.setAttribute(name, v);\n    };\n  }\n\n  function attrFunctionNS$1(fullname, value) {\n    return function () {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttributeNS(fullname.space, fullname.local);else this.setAttributeNS(fullname.space, fullname.local, v);\n    };\n  }\n\n  function selection_attr(name, value) {\n    var fullname = namespace(name);\n\n    if (arguments.length < 2) {\n      var node = this.node();\n      return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);\n    }\n\n    return this.each((value == null ? fullname.local ? attrRemoveNS$1 : attrRemove$1 : typeof value === \"function\" ? fullname.local ? attrFunctionNS$1 : attrFunction$1 : fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, value));\n  }\n\n  function defaultView(node) {\n    return node.ownerDocument && node.ownerDocument.defaultView || // node is a Node\n    node.document && node // node is a Window\n    || node.defaultView; // node is a Document\n  }\n\n  function styleRemove$1(name) {\n    return function () {\n      this.style.removeProperty(name);\n    };\n  }\n\n  function styleConstant$1(name, value, priority) {\n    return function () {\n      this.style.setProperty(name, value, priority);\n    };\n  }\n\n  function styleFunction$1(name, value, priority) {\n    return function () {\n      var v = value.apply(this, arguments);\n      if (v == null) this.style.removeProperty(name);else this.style.setProperty(name, v, priority);\n    };\n  }\n\n  function selection_style(name, value, priority) {\n    return arguments.length > 1 ? this.each((value == null ? styleRemove$1 : typeof value === \"function\" ? styleFunction$1 : styleConstant$1)(name, value, priority == null ? \"\" : priority)) : styleValue(this.node(), name);\n  }\n\n  function styleValue(node, name) {\n    return node.style.getPropertyValue(name) || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n  }\n\n  function propertyRemove(name) {\n    return function () {\n      delete this[name];\n    };\n  }\n\n  function propertyConstant(name, value) {\n    return function () {\n      this[name] = value;\n    };\n  }\n\n  function propertyFunction(name, value) {\n    return function () {\n      var v = value.apply(this, arguments);\n      if (v == null) delete this[name];else this[name] = v;\n    };\n  }\n\n  function selection_property(name, value) {\n    return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === \"function\" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];\n  }\n\n  function classArray(string) {\n    return string.trim().split(/^|\\s+/);\n  }\n\n  function classList(node) {\n    return node.classList || new ClassList(node);\n  }\n\n  function ClassList(node) {\n    this._node = node;\n    this._names = classArray(node.getAttribute(\"class\") || \"\");\n  }\n\n  ClassList.prototype = {\n    add: function add(name) {\n      var i = this._names.indexOf(name);\n\n      if (i < 0) {\n        this._names.push(name);\n\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    remove: function remove(name) {\n      var i = this._names.indexOf(name);\n\n      if (i >= 0) {\n        this._names.splice(i, 1);\n\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    contains: function contains(name) {\n      return this._names.indexOf(name) >= 0;\n    }\n  };\n\n  function classedAdd(node, names) {\n    var list = classList(node),\n        i = -1,\n        n = names.length;\n\n    while (++i < n) {\n      list.add(names[i]);\n    }\n  }\n\n  function classedRemove(node, names) {\n    var list = classList(node),\n        i = -1,\n        n = names.length;\n\n    while (++i < n) {\n      list.remove(names[i]);\n    }\n  }\n\n  function classedTrue(names) {\n    return function () {\n      classedAdd(this, names);\n    };\n  }\n\n  function classedFalse(names) {\n    return function () {\n      classedRemove(this, names);\n    };\n  }\n\n  function classedFunction(names, value) {\n    return function () {\n      (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n    };\n  }\n\n  function selection_classed(name, value) {\n    var names = classArray(name + \"\");\n\n    if (arguments.length < 2) {\n      var list = classList(this.node()),\n          i = -1,\n          n = names.length;\n\n      while (++i < n) {\n        if (!list.contains(names[i])) return false;\n      }\n\n      return true;\n    }\n\n    return this.each((typeof value === \"function\" ? classedFunction : value ? classedTrue : classedFalse)(names, value));\n  }\n\n  function textRemove() {\n    this.textContent = \"\";\n  }\n\n  function textConstant$1(value) {\n    return function () {\n      this.textContent = value;\n    };\n  }\n\n  function textFunction$1(value) {\n    return function () {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_text(value) {\n    return arguments.length ? this.each(value == null ? textRemove : (typeof value === \"function\" ? textFunction$1 : textConstant$1)(value)) : this.node().textContent;\n  }\n\n  function htmlRemove() {\n    this.innerHTML = \"\";\n  }\n\n  function htmlConstant(value) {\n    return function () {\n      this.innerHTML = value;\n    };\n  }\n\n  function htmlFunction(value) {\n    return function () {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_html(value) {\n    return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === \"function\" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;\n  }\n\n  function raise() {\n    if (this.nextSibling) this.parentNode.appendChild(this);\n  }\n\n  function selection_raise() {\n    return this.each(raise);\n  }\n\n  function lower() {\n    if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n  }\n\n  function selection_lower() {\n    return this.each(lower);\n  }\n\n  function selection_append(name) {\n    var create = typeof name === \"function\" ? name : creator(name);\n    return this.select(function () {\n      return this.appendChild(create.apply(this, arguments));\n    });\n  }\n\n  function constantNull() {\n    return null;\n  }\n\n  function selection_insert(name, before) {\n    var create = typeof name === \"function\" ? name : creator(name),\n        select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n    return this.select(function () {\n      return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n    });\n  }\n\n  function remove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  function selection_remove() {\n    return this.each(remove);\n  }\n\n  function selection_cloneShallow() {\n    var clone = this.cloneNode(false),\n        parent = this.parentNode;\n    return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n  }\n\n  function selection_cloneDeep() {\n    var clone = this.cloneNode(true),\n        parent = this.parentNode;\n    return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n  }\n\n  function selection_clone(deep) {\n    return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n  }\n\n  function selection_datum(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.node().__data__;\n  }\n\n  function contextListener(listener) {\n    return function (event) {\n      listener.call(this, event, this.__data__);\n    };\n  }\n\n  function parseTypenames(typenames) {\n    return typenames.trim().split(/^|\\s+/).map(function (t) {\n      var name = \"\",\n          i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      return {\n        type: t,\n        name: name\n      };\n    });\n  }\n\n  function onRemove(typename) {\n    return function () {\n      var on = this.__on;\n      if (!on) return;\n\n      for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n        if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.options);\n        } else {\n          on[++i] = o;\n        }\n      }\n\n      if (++i) on.length = i;else delete this.__on;\n    };\n  }\n\n  function onAdd(typename, value, options) {\n    return function () {\n      var on = this.__on,\n          o,\n          listener = contextListener(value);\n      if (on) for (var j = 0, m = on.length; j < m; ++j) {\n        if ((o = on[j]).type === typename.type && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.options);\n          this.addEventListener(o.type, o.listener = listener, o.options = options);\n          o.value = value;\n          return;\n        }\n      }\n      this.addEventListener(typename.type, listener, options);\n      o = {\n        type: typename.type,\n        name: typename.name,\n        value: value,\n        listener: listener,\n        options: options\n      };\n      if (!on) this.__on = [o];else on.push(o);\n    };\n  }\n\n  function selection_on(typename, value, options) {\n    var typenames = parseTypenames(typename + \"\"),\n        i,\n        n = typenames.length,\n        t;\n\n    if (arguments.length < 2) {\n      var on = this.node().__on;\n\n      if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n        for (i = 0, o = on[j]; i < n; ++i) {\n          if ((t = typenames[i]).type === o.type && t.name === o.name) {\n            return o.value;\n          }\n        }\n      }\n      return;\n    }\n\n    on = value ? onAdd : onRemove;\n\n    for (i = 0; i < n; ++i) {\n      this.each(on(typenames[i], value, options));\n    }\n\n    return this;\n  }\n\n  function dispatchEvent(node, type, params) {\n    var window = defaultView(node),\n        event = window.CustomEvent;\n\n    if (typeof event === \"function\") {\n      event = new event(type, params);\n    } else {\n      event = window.document.createEvent(\"Event\");\n      if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;else event.initEvent(type, false, false);\n    }\n\n    node.dispatchEvent(event);\n  }\n\n  function dispatchConstant(type, params) {\n    return function () {\n      return dispatchEvent(this, type, params);\n    };\n  }\n\n  function dispatchFunction(type, params) {\n    return function () {\n      return dispatchEvent(this, type, params.apply(this, arguments));\n    };\n  }\n\n  function selection_dispatch(type, params) {\n    return this.each((typeof params === \"function\" ? dispatchFunction : dispatchConstant)(type, params));\n  }\n\n  function selection_iterator() {\n    var groups, j, m, group, i, n, node;\n    return _regeneratorRuntime.wrap(function selection_iterator$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            groups = this._groups, j = 0, m = groups.length;\n\n          case 1:\n            if (!(j < m)) {\n              _context3.next = 13;\n              break;\n            }\n\n            group = groups[j], i = 0, n = group.length;\n\n          case 3:\n            if (!(i < n)) {\n              _context3.next = 10;\n              break;\n            }\n\n            if (!(node = group[i])) {\n              _context3.next = 7;\n              break;\n            }\n\n            _context3.next = 7;\n            return node;\n\n          case 7:\n            ++i;\n            _context3.next = 3;\n            break;\n\n          case 10:\n            ++j;\n            _context3.next = 1;\n            break;\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _marked3, this);\n  }\n\n  var root$1 = [null];\n\n  function Selection$1(groups, parents) {\n    this._groups = groups;\n    this._parents = parents;\n  }\n\n  function selection() {\n    return new Selection$1([[document.documentElement]], root$1);\n  }\n\n  function selection_selection() {\n    return this;\n  }\n\n  Selection$1.prototype = selection.prototype = _defineProperty({\n    constructor: Selection$1,\n    select: selection_select,\n    selectAll: selection_selectAll,\n    selectChild: selection_selectChild,\n    selectChildren: selection_selectChildren,\n    filter: selection_filter,\n    data: selection_data,\n    enter: selection_enter,\n    exit: selection_exit,\n    join: selection_join,\n    merge: selection_merge,\n    selection: selection_selection,\n    order: selection_order,\n    sort: selection_sort,\n    call: selection_call,\n    nodes: selection_nodes,\n    node: selection_node,\n    size: selection_size,\n    empty: selection_empty,\n    each: selection_each,\n    attr: selection_attr,\n    style: selection_style,\n    property: selection_property,\n    classed: selection_classed,\n    text: selection_text,\n    html: selection_html,\n    raise: selection_raise,\n    lower: selection_lower,\n    append: selection_append,\n    insert: selection_insert,\n    remove: selection_remove,\n    clone: selection_clone,\n    datum: selection_datum,\n    on: selection_on,\n    dispatch: selection_dispatch\n  }, Symbol.iterator, selection_iterator);\n\n  function select(selector) {\n    return typeof selector === \"string\" ? new Selection$1([[document.querySelector(selector)]], [document.documentElement]) : new Selection$1([[selector]], root$1);\n  }\n\n  function create$1(name) {\n    return select(creator(name).call(document.documentElement));\n  }\n\n  var nextId = 0;\n\n  function local$1() {\n    return new Local();\n  }\n\n  function Local() {\n    this._ = \"@\" + (++nextId).toString(36);\n  }\n\n  Local.prototype = local$1.prototype = {\n    constructor: Local,\n    get: function get(node) {\n      var id = this._;\n\n      while (!(id in node)) {\n        if (!(node = node.parentNode)) return;\n      }\n\n      return node[id];\n    },\n    set: function set(node, value) {\n      return node[this._] = value;\n    },\n    remove: function remove(node) {\n      return this._ in node && delete node[this._];\n    },\n    toString: function toString() {\n      return this._;\n    }\n  };\n\n  function sourceEvent(event) {\n    var sourceEvent;\n\n    while (sourceEvent = event.sourceEvent) {\n      event = sourceEvent;\n    }\n\n    return event;\n  }\n\n  function pointer(event, node) {\n    event = sourceEvent(event);\n    if (node === undefined) node = event.currentTarget;\n\n    if (node) {\n      var svg = node.ownerSVGElement || node;\n\n      if (svg.createSVGPoint) {\n        var point = svg.createSVGPoint();\n        point.x = event.clientX, point.y = event.clientY;\n        point = point.matrixTransform(node.getScreenCTM().inverse());\n        return [point.x, point.y];\n      }\n\n      if (node.getBoundingClientRect) {\n        var rect = node.getBoundingClientRect();\n        return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n      }\n    }\n\n    return [event.pageX, event.pageY];\n  }\n\n  function pointers(events, node) {\n    if (events.target) {\n      // i.e., instanceof Event, not TouchList or iterable\n      events = sourceEvent(events);\n      if (node === undefined) node = events.currentTarget;\n      events = events.touches || [events];\n    }\n\n    return Array.from(events, function (event) {\n      return pointer(event, node);\n    });\n  }\n\n  function selectAll(selector) {\n    return typeof selector === \"string\" ? new Selection$1([document.querySelectorAll(selector)], [document.documentElement]) : new Selection$1([array$4(selector)], root$1);\n  } // These are typically used in conjunction with noevent to ensure that we can\n  // preventDefault on the event.\n\n\n  var nonpassive = {\n    passive: false\n  };\n  var nonpassivecapture = {\n    capture: true,\n    passive: false\n  };\n\n  function nopropagation$2(event) {\n    event.stopImmediatePropagation();\n  }\n\n  function noevent$2(event) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n  }\n\n  function dragDisable(view) {\n    var root = view.document.documentElement,\n        selection = select(view).on(\"dragstart.drag\", noevent$2, nonpassivecapture);\n\n    if (\"onselectstart\" in root) {\n      selection.on(\"selectstart.drag\", noevent$2, nonpassivecapture);\n    } else {\n      root.__noselect = root.style.MozUserSelect;\n      root.style.MozUserSelect = \"none\";\n    }\n  }\n\n  function yesdrag(view, noclick) {\n    var root = view.document.documentElement,\n        selection = select(view).on(\"dragstart.drag\", null);\n\n    if (noclick) {\n      selection.on(\"click.drag\", noevent$2, nonpassivecapture);\n      setTimeout(function () {\n        selection.on(\"click.drag\", null);\n      }, 0);\n    }\n\n    if (\"onselectstart\" in root) {\n      selection.on(\"selectstart.drag\", null);\n    } else {\n      root.style.MozUserSelect = root.__noselect;\n      delete root.__noselect;\n    }\n  }\n\n  var constant$9 = function constant$9(x) {\n    return function () {\n      return x;\n    };\n  };\n\n  function DragEvent(type, _ref25) {\n    var sourceEvent = _ref25.sourceEvent,\n        subject = _ref25.subject,\n        target = _ref25.target,\n        identifier = _ref25.identifier,\n        active = _ref25.active,\n        x = _ref25.x,\n        y = _ref25.y,\n        dx = _ref25.dx,\n        dy = _ref25.dy,\n        dispatch = _ref25.dispatch;\n    Object.defineProperties(this, {\n      type: {\n        value: type,\n        enumerable: true,\n        configurable: true\n      },\n      sourceEvent: {\n        value: sourceEvent,\n        enumerable: true,\n        configurable: true\n      },\n      subject: {\n        value: subject,\n        enumerable: true,\n        configurable: true\n      },\n      target: {\n        value: target,\n        enumerable: true,\n        configurable: true\n      },\n      identifier: {\n        value: identifier,\n        enumerable: true,\n        configurable: true\n      },\n      active: {\n        value: active,\n        enumerable: true,\n        configurable: true\n      },\n      x: {\n        value: x,\n        enumerable: true,\n        configurable: true\n      },\n      y: {\n        value: y,\n        enumerable: true,\n        configurable: true\n      },\n      dx: {\n        value: dx,\n        enumerable: true,\n        configurable: true\n      },\n      dy: {\n        value: dy,\n        enumerable: true,\n        configurable: true\n      },\n      _: {\n        value: dispatch\n      }\n    });\n  }\n\n  DragEvent.prototype.on = function () {\n    var value = this._.on.apply(this._, arguments);\n\n    return value === this._ ? this : value;\n  }; // Ignore right-click, since that should open the context menu.\n\n\n  function defaultFilter$2(event) {\n    return !event.ctrlKey && !event.button;\n  }\n\n  function defaultContainer() {\n    return this.parentNode;\n  }\n\n  function defaultSubject(event, d) {\n    return d == null ? {\n      x: event.x,\n      y: event.y\n    } : d;\n  }\n\n  function defaultTouchable$2() {\n    return navigator.maxTouchPoints || \"ontouchstart\" in this;\n  }\n\n  function drag() {\n    var filter = defaultFilter$2,\n        container = defaultContainer,\n        subject = defaultSubject,\n        touchable = defaultTouchable$2,\n        gestures = {},\n        listeners = dispatch(\"start\", \"drag\", \"end\"),\n        active = 0,\n        mousedownx,\n        mousedowny,\n        mousemoving,\n        touchending,\n        clickDistance2 = 0;\n\n    function drag(selection) {\n      selection.on(\"mousedown.drag\", mousedowned).filter(touchable).on(\"touchstart.drag\", touchstarted).on(\"touchmove.drag\", touchmoved, nonpassive).on(\"touchend.drag touchcancel.drag\", touchended).style(\"touch-action\", \"none\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n    }\n\n    function mousedowned(event, d) {\n      if (touchending || !filter.call(this, event, d)) return;\n      var gesture = beforestart(this, container.call(this, event, d), event, d, \"mouse\");\n      if (!gesture) return;\n      select(event.view).on(\"mousemove.drag\", mousemoved, nonpassivecapture).on(\"mouseup.drag\", mouseupped, nonpassivecapture);\n      dragDisable(event.view);\n      nopropagation$2(event);\n      mousemoving = false;\n      mousedownx = event.clientX;\n      mousedowny = event.clientY;\n      gesture(\"start\", event);\n    }\n\n    function mousemoved(event) {\n      noevent$2(event);\n\n      if (!mousemoving) {\n        var dx = event.clientX - mousedownx,\n            dy = event.clientY - mousedowny;\n        mousemoving = dx * dx + dy * dy > clickDistance2;\n      }\n\n      gestures.mouse(\"drag\", event);\n    }\n\n    function mouseupped(event) {\n      select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n      yesdrag(event.view, mousemoving);\n      noevent$2(event);\n      gestures.mouse(\"end\", event);\n    }\n\n    function touchstarted(event, d) {\n      if (!filter.call(this, event, d)) return;\n      var touches = event.changedTouches,\n          c = container.call(this, event, d),\n          n = touches.length,\n          i,\n          gesture;\n\n      for (i = 0; i < n; ++i) {\n        if (gesture = beforestart(this, c, event, d, touches[i].identifier, touches[i])) {\n          nopropagation$2(event);\n          gesture(\"start\", event, touches[i]);\n        }\n      }\n    }\n\n    function touchmoved(event) {\n      var touches = event.changedTouches,\n          n = touches.length,\n          i,\n          gesture;\n\n      for (i = 0; i < n; ++i) {\n        if (gesture = gestures[touches[i].identifier]) {\n          noevent$2(event);\n          gesture(\"drag\", event, touches[i]);\n        }\n      }\n    }\n\n    function touchended(event) {\n      var touches = event.changedTouches,\n          n = touches.length,\n          i,\n          gesture;\n      if (touchending) clearTimeout(touchending);\n      touchending = setTimeout(function () {\n        touchending = null;\n      }, 500); // Ghost clicks are delayed!\n\n      for (i = 0; i < n; ++i) {\n        if (gesture = gestures[touches[i].identifier]) {\n          nopropagation$2(event);\n          gesture(\"end\", event, touches[i]);\n        }\n      }\n    }\n\n    function beforestart(that, container, event, d, identifier, touch) {\n      var dispatch = listeners.copy(),\n          p = pointer(touch || event, container),\n          dx,\n          dy,\n          s;\n      if ((s = subject.call(that, new DragEvent(\"beforestart\", {\n        sourceEvent: event,\n        target: drag,\n        identifier: identifier,\n        active: active,\n        x: p[0],\n        y: p[1],\n        dx: 0,\n        dy: 0,\n        dispatch: dispatch\n      }), d)) == null) return;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return function gesture(type, event, touch) {\n        var p0 = p,\n            n;\n\n        switch (type) {\n          case \"start\":\n            gestures[identifier] = gesture, n = active++;\n            break;\n\n          case \"end\":\n            delete gestures[identifier], --active;\n          // falls through\n\n          case \"drag\":\n            p = pointer(touch || event, container), n = active;\n            break;\n        }\n\n        dispatch.call(type, that, new DragEvent(type, {\n          sourceEvent: event,\n          subject: s,\n          target: drag,\n          identifier: identifier,\n          active: n,\n          x: p[0] + dx,\n          y: p[1] + dy,\n          dx: p[0] - p0[0],\n          dy: p[1] - p0[1],\n          dispatch: dispatch\n        }), d);\n      };\n    }\n\n    drag.filter = function (_) {\n      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$9(!!_), drag) : filter;\n    };\n\n    drag.container = function (_) {\n      return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$9(_), drag) : container;\n    };\n\n    drag.subject = function (_) {\n      return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$9(_), drag) : subject;\n    };\n\n    drag.touchable = function (_) {\n      return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$9(!!_), drag) : touchable;\n    };\n\n    drag.on = function () {\n      var value = listeners.on.apply(listeners, arguments);\n      return value === listeners ? drag : value;\n    };\n\n    drag.clickDistance = function (_) {\n      return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n    };\n\n    return drag;\n  }\n\n  function define(constructor, factory, prototype) {\n    constructor.prototype = factory.prototype = prototype;\n    prototype.constructor = constructor;\n  }\n\n  function extend(parent, definition) {\n    var prototype = Object.create(parent.prototype);\n\n    for (var key in definition) {\n      prototype[key] = definition[key];\n    }\n\n    return prototype;\n  }\n\n  function Color() {}\n\n  var _darker = 0.7;\n\n  var _brighter = 1 / _darker;\n\n  var reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n      reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n      reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n      reHex = /^#([0-9a-f]{3,8})$/,\n      reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n      reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n      reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n      reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n      reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n      reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n  var named = {\n    aliceblue: 0xf0f8ff,\n    antiquewhite: 0xfaebd7,\n    aqua: 0x00ffff,\n    aquamarine: 0x7fffd4,\n    azure: 0xf0ffff,\n    beige: 0xf5f5dc,\n    bisque: 0xffe4c4,\n    black: 0x000000,\n    blanchedalmond: 0xffebcd,\n    blue: 0x0000ff,\n    blueviolet: 0x8a2be2,\n    brown: 0xa52a2a,\n    burlywood: 0xdeb887,\n    cadetblue: 0x5f9ea0,\n    chartreuse: 0x7fff00,\n    chocolate: 0xd2691e,\n    coral: 0xff7f50,\n    cornflowerblue: 0x6495ed,\n    cornsilk: 0xfff8dc,\n    crimson: 0xdc143c,\n    cyan: 0x00ffff,\n    darkblue: 0x00008b,\n    darkcyan: 0x008b8b,\n    darkgoldenrod: 0xb8860b,\n    darkgray: 0xa9a9a9,\n    darkgreen: 0x006400,\n    darkgrey: 0xa9a9a9,\n    darkkhaki: 0xbdb76b,\n    darkmagenta: 0x8b008b,\n    darkolivegreen: 0x556b2f,\n    darkorange: 0xff8c00,\n    darkorchid: 0x9932cc,\n    darkred: 0x8b0000,\n    darksalmon: 0xe9967a,\n    darkseagreen: 0x8fbc8f,\n    darkslateblue: 0x483d8b,\n    darkslategray: 0x2f4f4f,\n    darkslategrey: 0x2f4f4f,\n    darkturquoise: 0x00ced1,\n    darkviolet: 0x9400d3,\n    deeppink: 0xff1493,\n    deepskyblue: 0x00bfff,\n    dimgray: 0x696969,\n    dimgrey: 0x696969,\n    dodgerblue: 0x1e90ff,\n    firebrick: 0xb22222,\n    floralwhite: 0xfffaf0,\n    forestgreen: 0x228b22,\n    fuchsia: 0xff00ff,\n    gainsboro: 0xdcdcdc,\n    ghostwhite: 0xf8f8ff,\n    gold: 0xffd700,\n    goldenrod: 0xdaa520,\n    gray: 0x808080,\n    green: 0x008000,\n    greenyellow: 0xadff2f,\n    grey: 0x808080,\n    honeydew: 0xf0fff0,\n    hotpink: 0xff69b4,\n    indianred: 0xcd5c5c,\n    indigo: 0x4b0082,\n    ivory: 0xfffff0,\n    khaki: 0xf0e68c,\n    lavender: 0xe6e6fa,\n    lavenderblush: 0xfff0f5,\n    lawngreen: 0x7cfc00,\n    lemonchiffon: 0xfffacd,\n    lightblue: 0xadd8e6,\n    lightcoral: 0xf08080,\n    lightcyan: 0xe0ffff,\n    lightgoldenrodyellow: 0xfafad2,\n    lightgray: 0xd3d3d3,\n    lightgreen: 0x90ee90,\n    lightgrey: 0xd3d3d3,\n    lightpink: 0xffb6c1,\n    lightsalmon: 0xffa07a,\n    lightseagreen: 0x20b2aa,\n    lightskyblue: 0x87cefa,\n    lightslategray: 0x778899,\n    lightslategrey: 0x778899,\n    lightsteelblue: 0xb0c4de,\n    lightyellow: 0xffffe0,\n    lime: 0x00ff00,\n    limegreen: 0x32cd32,\n    linen: 0xfaf0e6,\n    magenta: 0xff00ff,\n    maroon: 0x800000,\n    mediumaquamarine: 0x66cdaa,\n    mediumblue: 0x0000cd,\n    mediumorchid: 0xba55d3,\n    mediumpurple: 0x9370db,\n    mediumseagreen: 0x3cb371,\n    mediumslateblue: 0x7b68ee,\n    mediumspringgreen: 0x00fa9a,\n    mediumturquoise: 0x48d1cc,\n    mediumvioletred: 0xc71585,\n    midnightblue: 0x191970,\n    mintcream: 0xf5fffa,\n    mistyrose: 0xffe4e1,\n    moccasin: 0xffe4b5,\n    navajowhite: 0xffdead,\n    navy: 0x000080,\n    oldlace: 0xfdf5e6,\n    olive: 0x808000,\n    olivedrab: 0x6b8e23,\n    orange: 0xffa500,\n    orangered: 0xff4500,\n    orchid: 0xda70d6,\n    palegoldenrod: 0xeee8aa,\n    palegreen: 0x98fb98,\n    paleturquoise: 0xafeeee,\n    palevioletred: 0xdb7093,\n    papayawhip: 0xffefd5,\n    peachpuff: 0xffdab9,\n    peru: 0xcd853f,\n    pink: 0xffc0cb,\n    plum: 0xdda0dd,\n    powderblue: 0xb0e0e6,\n    purple: 0x800080,\n    rebeccapurple: 0x663399,\n    red: 0xff0000,\n    rosybrown: 0xbc8f8f,\n    royalblue: 0x4169e1,\n    saddlebrown: 0x8b4513,\n    salmon: 0xfa8072,\n    sandybrown: 0xf4a460,\n    seagreen: 0x2e8b57,\n    seashell: 0xfff5ee,\n    sienna: 0xa0522d,\n    silver: 0xc0c0c0,\n    skyblue: 0x87ceeb,\n    slateblue: 0x6a5acd,\n    slategray: 0x708090,\n    slategrey: 0x708090,\n    snow: 0xfffafa,\n    springgreen: 0x00ff7f,\n    steelblue: 0x4682b4,\n    tan: 0xd2b48c,\n    teal: 0x008080,\n    thistle: 0xd8bfd8,\n    tomato: 0xff6347,\n    turquoise: 0x40e0d0,\n    violet: 0xee82ee,\n    wheat: 0xf5deb3,\n    white: 0xffffff,\n    whitesmoke: 0xf5f5f5,\n    yellow: 0xffff00,\n    yellowgreen: 0x9acd32\n  };\n  define(Color, color, {\n    copy: function copy(channels) {\n      return Object.assign(new this.constructor(), this, channels);\n    },\n    displayable: function displayable() {\n      return this.rgb().displayable();\n    },\n    hex: color_formatHex,\n    // Deprecated! Use color.formatHex.\n    formatHex: color_formatHex,\n    formatHsl: color_formatHsl,\n    formatRgb: color_formatRgb,\n    toString: color_formatRgb\n  });\n\n  function color_formatHex() {\n    return this.rgb().formatHex();\n  }\n\n  function color_formatHsl() {\n    return hslConvert(this).formatHsl();\n  }\n\n  function color_formatRgb() {\n    return this.rgb().formatRgb();\n  }\n\n  function color(format) {\n    var m, l;\n    format = (format + \"\").trim().toLowerCase();\n    return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n    : l === 3 ? new Rgb(m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00\n    : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n    : l === 4 ? rgba(m >> 12 & 0xf | m >> 8 & 0xf0, m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, ((m & 0xf) << 4 | m & 0xf) / 0xff) // #f000\n    : null // invalid hex\n    ) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n    : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n    : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n    : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n    : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n    : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n    : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n    : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0) : null;\n  }\n\n  function rgbn(n) {\n    return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n  }\n\n  function rgba(r, g, b, a) {\n    if (a <= 0) r = g = b = NaN;\n    return new Rgb(r, g, b, a);\n  }\n\n  function rgbConvert(o) {\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Rgb();\n    o = o.rgb();\n    return new Rgb(o.r, o.g, o.b, o.opacity);\n  }\n\n  function rgb(r, g, b, opacity) {\n    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n  }\n\n  function Rgb(r, g, b, opacity) {\n    this.r = +r;\n    this.g = +g;\n    this.b = +b;\n    this.opacity = +opacity;\n  }\n\n  define(Rgb, rgb, extend(Color, {\n    brighter: function brighter(k) {\n      k = k == null ? _brighter : Math.pow(_brighter, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    darker: function darker(k) {\n      k = k == null ? _darker : Math.pow(_darker, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    rgb: function rgb() {\n      return this;\n    },\n    displayable: function displayable() {\n      return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;\n    },\n    hex: rgb_formatHex,\n    // Deprecated! Use color.formatHex.\n    formatHex: rgb_formatHex,\n    formatRgb: rgb_formatRgb,\n    toString: rgb_formatRgb\n  }));\n\n  function rgb_formatHex() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  }\n\n  function rgb_formatRgb() {\n    var a = this.opacity;\n    a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \" + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \" + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n\n  function hex(value) {\n    value = Math.max(0, Math.min(255, Math.round(value) || 0));\n    return (value < 16 ? \"0\" : \"\") + value.toString(16);\n  }\n\n  function hsla(h, s, l, a) {\n    if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;\n    return new Hsl(h, s, l, a);\n  }\n\n  function hslConvert(o) {\n    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Hsl();\n    if (o instanceof Hsl) return o;\n    o = o.rgb();\n    var r = o.r / 255,\n        g = o.g / 255,\n        b = o.b / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        h = NaN,\n        s = max - min,\n        l = (max + min) / 2;\n\n    if (s) {\n      if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;\n      s /= l < 0.5 ? max + min : 2 - max - min;\n      h *= 60;\n    } else {\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n\n    return new Hsl(h, s, l, o.opacity);\n  }\n\n  function hsl$2(h, s, l, opacity) {\n    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n  }\n\n  function Hsl(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Hsl, hsl$2, extend(Color, {\n    brighter: function brighter(k) {\n      k = k == null ? _brighter : Math.pow(_brighter, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker: function darker(k) {\n      k = k == null ? _darker : Math.pow(_darker, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb: function rgb() {\n      var h = this.h % 360 + (this.h < 0) * 360,\n          s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n          l = this.l,\n          m2 = l + (l < 0.5 ? l : 1 - l) * s,\n          m1 = 2 * l - m2;\n      return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);\n    },\n    displayable: function displayable() {\n      return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;\n    },\n    formatHsl: function formatHsl() {\n      var a = this.opacity;\n      a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n      return (a === 1 ? \"hsl(\" : \"hsla(\") + (this.h || 0) + \", \" + (this.s || 0) * 100 + \"%, \" + (this.l || 0) * 100 + \"%\" + (a === 1 ? \")\" : \", \" + a + \")\");\n    }\n  }));\n  /* From FvD 13.37, CSS Color Module Level 3 */\n\n  function hsl2rgb(h, m1, m2) {\n    return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;\n  }\n\n  var radians$1 = Math.PI / 180;\n  var degrees$2 = 180 / Math.PI; // https://observablehq.com/@mbostock/lab-and-rgb\n\n  var K = 18,\n      Xn = 0.96422,\n      Yn = 1,\n      Zn = 0.82521,\n      t0$1 = 4 / 29,\n      t1$1 = 6 / 29,\n      t2 = 3 * t1$1 * t1$1,\n      t3 = t1$1 * t1$1 * t1$1;\n\n  function labConvert(o) {\n    if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n    if (o instanceof Hcl) return hcl2lab(o);\n    if (!(o instanceof Rgb)) o = rgbConvert(o);\n    var r = rgb2lrgb(o.r),\n        g = rgb2lrgb(o.g),\n        b = rgb2lrgb(o.b),\n        y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn),\n        x,\n        z;\n    if (r === g && g === b) x = z = y;else {\n      x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n      z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n    }\n    return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n  }\n\n  function gray(l, opacity) {\n    return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n  }\n\n  function lab$1(l, a, b, opacity) {\n    return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n  }\n\n  function Lab(l, a, b, opacity) {\n    this.l = +l;\n    this.a = +a;\n    this.b = +b;\n    this.opacity = +opacity;\n  }\n\n  define(Lab, lab$1, extend(Color, {\n    brighter: function brighter(k) {\n      return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n    },\n    darker: function darker(k) {\n      return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n    },\n    rgb: function rgb() {\n      var y = (this.l + 16) / 116,\n          x = isNaN(this.a) ? y : y + this.a / 500,\n          z = isNaN(this.b) ? y : y - this.b / 200;\n      x = Xn * lab2xyz(x);\n      y = Yn * lab2xyz(y);\n      z = Zn * lab2xyz(z);\n      return new Rgb(lrgb2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z), lrgb2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z), this.opacity);\n    }\n  }));\n\n  function xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0$1;\n  }\n\n  function lab2xyz(t) {\n    return t > t1$1 ? t * t * t : t2 * (t - t0$1);\n  }\n\n  function lrgb2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n  }\n\n  function rgb2lrgb(x) {\n    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n  }\n\n  function hclConvert(o) {\n    if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n    if (!(o instanceof Lab)) o = labConvert(o);\n    if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n    var h = Math.atan2(o.b, o.a) * degrees$2;\n    return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n  }\n\n  function lch(l, c, h, opacity) {\n    return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n  }\n\n  function hcl$2(h, c, l, opacity) {\n    return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n  }\n\n  function Hcl(h, c, l, opacity) {\n    this.h = +h;\n    this.c = +c;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  function hcl2lab(o) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * radians$1;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n\n  define(Hcl, hcl$2, extend(Color, {\n    brighter: function brighter(k) {\n      return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n    },\n    darker: function darker(k) {\n      return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n    },\n    rgb: function rgb() {\n      return hcl2lab(this).rgb();\n    }\n  }));\n  var A = -0.14861,\n      B$1 = +1.78277,\n      C = -0.29227,\n      D$1 = -0.90649,\n      E = +1.97294,\n      ED = E * D$1,\n      EB = E * B$1,\n      BC_DA = B$1 * C - D$1 * A;\n\n  function cubehelixConvert(o) {\n    if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof Rgb)) o = rgbConvert(o);\n    var r = o.r / 255,\n        g = o.g / 255,\n        b = o.b / 255,\n        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n        bl = b - l,\n        k = (E * (g - l) - C * bl) / D$1,\n        s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)),\n        // NaN if l=0 or l=1\n    h = s ? Math.atan2(k, bl) * degrees$2 - 120 : NaN;\n    return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n  }\n\n  function cubehelix$3(h, s, l, opacity) {\n    return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n  }\n\n  function Cubehelix(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Cubehelix, cubehelix$3, extend(Color, {\n    brighter: function brighter(k) {\n      k = k == null ? _brighter : Math.pow(_brighter, k);\n      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker: function darker(k) {\n      k = k == null ? _darker : Math.pow(_darker, k);\n      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb: function rgb() {\n      var h = isNaN(this.h) ? 0 : (this.h + 120) * radians$1,\n          l = +this.l,\n          a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n          cosh = Math.cos(h),\n          sinh = Math.sin(h);\n      return new Rgb(255 * (l + a * (A * cosh + B$1 * sinh)), 255 * (l + a * (C * cosh + D$1 * sinh)), 255 * (l + a * (E * cosh)), this.opacity);\n    }\n  }));\n\n  function basis$1(t1, v0, v1, v2, v3) {\n    var t2 = t1 * t1,\n        t3 = t2 * t1;\n    return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;\n  }\n\n  function basis$2(values) {\n    var n = values.length - 1;\n    return function (t) {\n      var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n          v1 = values[i],\n          v2 = values[i + 1],\n          v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n          v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n      return basis$1((t - i / n) * n, v0, v1, v2, v3);\n    };\n  }\n\n  function basisClosed$1(values) {\n    var n = values.length;\n    return function (t) {\n      var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n          v0 = values[(i + n - 1) % n],\n          v1 = values[i % n],\n          v2 = values[(i + 1) % n],\n          v3 = values[(i + 2) % n];\n      return basis$1((t - i / n) * n, v0, v1, v2, v3);\n    };\n  }\n\n  var constant$8 = function constant$8(x) {\n    return function () {\n      return x;\n    };\n  };\n\n  function linear$2(a, d) {\n    return function (t) {\n      return a + t * d;\n    };\n  }\n\n  function exponential$1(a, b, y) {\n    return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function (t) {\n      return Math.pow(a + t * b, y);\n    };\n  }\n\n  function hue$1(a, b) {\n    var d = b - a;\n    return d ? linear$2(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$8(isNaN(a) ? b : a);\n  }\n\n  function gamma$1(y) {\n    return (y = +y) === 1 ? nogamma : function (a, b) {\n      return b - a ? exponential$1(a, b, y) : constant$8(isNaN(a) ? b : a);\n    };\n  }\n\n  function nogamma(a, b) {\n    var d = b - a;\n    return d ? linear$2(a, d) : constant$8(isNaN(a) ? b : a);\n  }\n\n  var interpolateRgb = function rgbGamma(y) {\n    var color = gamma$1(y);\n\n    function rgb$1(start, end) {\n      var r = color((start = rgb(start)).r, (end = rgb(end)).r),\n          g = color(start.g, end.g),\n          b = color(start.b, end.b),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function (t) {\n        start.r = r(t);\n        start.g = g(t);\n        start.b = b(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    rgb$1.gamma = rgbGamma;\n    return rgb$1;\n  }(1);\n\n  function rgbSpline(spline) {\n    return function (colors) {\n      var n = colors.length,\n          r = new Array(n),\n          g = new Array(n),\n          b = new Array(n),\n          i,\n          color;\n\n      for (i = 0; i < n; ++i) {\n        color = rgb(colors[i]);\n        r[i] = color.r || 0;\n        g[i] = color.g || 0;\n        b[i] = color.b || 0;\n      }\n\n      r = spline(r);\n      g = spline(g);\n      b = spline(b);\n      color.opacity = 1;\n      return function (t) {\n        color.r = r(t);\n        color.g = g(t);\n        color.b = b(t);\n        return color + \"\";\n      };\n    };\n  }\n\n  var rgbBasis = rgbSpline(basis$2);\n  var rgbBasisClosed = rgbSpline(basisClosed$1);\n\n  function numberArray(a, b) {\n    if (!b) b = [];\n    var n = a ? Math.min(b.length, a.length) : 0,\n        c = b.slice(),\n        i;\n    return function (t) {\n      for (i = 0; i < n; ++i) {\n        c[i] = a[i] * (1 - t) + b[i] * t;\n      }\n\n      return c;\n    };\n  }\n\n  function isNumberArray(x) {\n    return ArrayBuffer.isView(x) && !(x instanceof DataView);\n  }\n\n  function array$3(a, b) {\n    return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n  }\n\n  function genericArray(a, b) {\n    var nb = b ? b.length : 0,\n        na = a ? Math.min(nb, a.length) : 0,\n        x = new Array(na),\n        c = new Array(nb),\n        i;\n\n    for (i = 0; i < na; ++i) {\n      x[i] = interpolate$2(a[i], b[i]);\n    }\n\n    for (; i < nb; ++i) {\n      c[i] = b[i];\n    }\n\n    return function (t) {\n      for (i = 0; i < na; ++i) {\n        c[i] = x[i](t);\n      }\n\n      return c;\n    };\n  }\n\n  function date$1(a, b) {\n    var d = new Date();\n    return a = +a, b = +b, function (t) {\n      return d.setTime(a * (1 - t) + b * t), d;\n    };\n  }\n\n  function interpolateNumber(a, b) {\n    return a = +a, b = +b, function (t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n\n  function object$1(a, b) {\n    var i = {},\n        c = {},\n        k;\n    if (a === null || _typeof(a) !== \"object\") a = {};\n    if (b === null || _typeof(b) !== \"object\") b = {};\n\n    for (k in b) {\n      if (k in a) {\n        i[k] = interpolate$2(a[k], b[k]);\n      } else {\n        c[k] = b[k];\n      }\n    }\n\n    return function (t) {\n      for (k in i) {\n        c[k] = i[k](t);\n      }\n\n      return c;\n    };\n  }\n\n  var reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n      reB = new RegExp(reA.source, \"g\");\n\n  function zero(b) {\n    return function () {\n      return b;\n    };\n  }\n\n  function one(b) {\n    return function (t) {\n      return b(t) + \"\";\n    };\n  }\n\n  function interpolateString(a, b) {\n    var bi = reA.lastIndex = reB.lastIndex = 0,\n        // scan index for next number in b\n    am,\n        // current match in a\n    bm,\n        // current match in b\n    bs,\n        // string preceding current number in b, if any\n    i = -1,\n        // index in s\n    s = [],\n        // string constants and placeholders\n    q = []; // number interpolators\n    // Coerce inputs to strings.\n\n    a = a + \"\", b = b + \"\"; // Interpolate pairs of numbers in a & b.\n\n    while ((am = reA.exec(a)) && (bm = reB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        // a string precedes the next number in b\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; // coalesce with previous string\n        else s[++i] = bs;\n      }\n\n      if ((am = am[0]) === (bm = bm[0])) {\n        // numbers in a & b match\n        if (s[i]) s[i] += bm; // coalesce with previous string\n        else s[++i] = bm;\n      } else {\n        // interpolate non-matching numbers\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: interpolateNumber(am, bm)\n        });\n      }\n\n      bi = reB.lastIndex;\n    } // Add remains of b.\n\n\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    } // Special optimization for only a single match.\n    // Otherwise, interpolate each of the numbers and rejoin the string.\n\n\n    return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function (t) {\n      for (var i = 0, o; i < b; ++i) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    });\n  }\n\n  function interpolate$2(a, b) {\n    var t = _typeof(b),\n        c;\n\n    return b == null || t === \"boolean\" ? constant$8(b) : (t === \"number\" ? interpolateNumber : t === \"string\" ? (c = color(b)) ? (b = c, interpolateRgb) : interpolateString : b instanceof color ? interpolateRgb : b instanceof Date ? date$1 : isNumberArray(b) ? numberArray : Array.isArray(b) ? genericArray : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object$1 : interpolateNumber)(a, b);\n  }\n\n  function discrete(range) {\n    var n = range.length;\n    return function (t) {\n      return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n    };\n  }\n\n  function hue(a, b) {\n    var i = hue$1(+a, +b);\n    return function (t) {\n      var x = i(t);\n      return x - 360 * Math.floor(x / 360);\n    };\n  }\n\n  function interpolateRound(a, b) {\n    return a = +a, b = +b, function (t) {\n      return Math.round(a * (1 - t) + b * t);\n    };\n  }\n\n  var degrees$1 = 180 / Math.PI;\n  var identity$7 = {\n    translateX: 0,\n    translateY: 0,\n    rotate: 0,\n    skewX: 0,\n    scaleX: 1,\n    scaleY: 1\n  };\n\n  function decompose(a, b, c, d, e, f) {\n    var scaleX, scaleY, skewX;\n    if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n    if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n    if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n    if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n    return {\n      translateX: e,\n      translateY: f,\n      rotate: Math.atan2(b, a) * degrees$1,\n      skewX: Math.atan(skewX) * degrees$1,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var svgNode;\n  /* eslint-disable no-undef */\n\n  function parseCss(value) {\n    var m = new (typeof DOMMatrix === \"function\" ? DOMMatrix : WebKitCSSMatrix)(value + \"\");\n    return m.isIdentity ? identity$7 : decompose(m.a, m.b, m.c, m.d, m.e, m.f);\n  }\n\n  function parseSvg(value) {\n    if (value == null) return identity$7;\n    if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    svgNode.setAttribute(\"transform\", value);\n    if (!(value = svgNode.transform.baseVal.consolidate())) return identity$7;\n    value = value.matrix;\n    return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n  }\n\n  function interpolateTransform(parse, pxComma, pxParen, degParen) {\n    function pop(s) {\n      return s.length ? s.pop() + \" \" : \"\";\n    }\n\n    function translate(xa, ya, xb, yb, s, q) {\n      if (xa !== xb || ya !== yb) {\n        var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n        q.push({\n          i: i - 4,\n          x: interpolateNumber(xa, xb)\n        }, {\n          i: i - 2,\n          x: interpolateNumber(ya, yb)\n        });\n      } else if (xb || yb) {\n        s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n      }\n    }\n\n    function rotate(a, b, s, q) {\n      if (a !== b) {\n        if (a - b > 180) b += 360;else if (b - a > 180) a += 360; // shortest path\n\n        q.push({\n          i: s.push(pop(s) + \"rotate(\", null, degParen) - 2,\n          x: interpolateNumber(a, b)\n        });\n      } else if (b) {\n        s.push(pop(s) + \"rotate(\" + b + degParen);\n      }\n    }\n\n    function skewX(a, b, s, q) {\n      if (a !== b) {\n        q.push({\n          i: s.push(pop(s) + \"skewX(\", null, degParen) - 2,\n          x: interpolateNumber(a, b)\n        });\n      } else if (b) {\n        s.push(pop(s) + \"skewX(\" + b + degParen);\n      }\n    }\n\n    function scale(xa, ya, xb, yb, s, q) {\n      if (xa !== xb || ya !== yb) {\n        var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n        q.push({\n          i: i - 4,\n          x: interpolateNumber(xa, xb)\n        }, {\n          i: i - 2,\n          x: interpolateNumber(ya, yb)\n        });\n      } else if (xb !== 1 || yb !== 1) {\n        s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n      }\n    }\n\n    return function (a, b) {\n      var s = [],\n          // string constants and placeholders\n      q = []; // number interpolators\n\n      a = parse(a), b = parse(b);\n      translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n      rotate(a.rotate, b.rotate, s, q);\n      skewX(a.skewX, b.skewX, s, q);\n      scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n      a = b = null; // gc\n\n      return function (t) {\n        var i = -1,\n            n = q.length,\n            o;\n\n        while (++i < n) {\n          s[(o = q[i]).i] = o.x(t);\n        }\n\n        return s.join(\"\");\n      };\n    };\n  }\n\n  var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n  var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n  var epsilon2$1 = 1e-12;\n\n  function cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n\n  function sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n\n  function tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n\n  var interpolateZoom = function zoomRho(rho, rho2, rho4) {\n    // p0 = [ux0, uy0, w0]\n    // p1 = [ux1, uy1, w1]\n    function zoom(p0, p1) {\n      var ux0 = p0[0],\n          uy0 = p0[1],\n          w0 = p0[2],\n          ux1 = p1[0],\n          uy1 = p1[1],\n          w1 = p1[2],\n          dx = ux1 - ux0,\n          dy = uy1 - uy0,\n          d2 = dx * dx + dy * dy,\n          i,\n          S; // Special case for u0 ≅ u1.\n\n      if (d2 < epsilon2$1) {\n        S = Math.log(w1 / w0) / rho;\n\n        i = function i(t) {\n          return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(rho * t * S)];\n        };\n      } // General case.\n      else {\n          var d1 = Math.sqrt(d2),\n              b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n              b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n              r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n              r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n          S = (r1 - r0) / rho;\n\n          i = function i(t) {\n            var s = t * S,\n                coshr0 = cosh(r0),\n                u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n            return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / cosh(rho * s + r0)];\n          };\n        }\n\n      i.duration = S * 1000 * rho / Math.SQRT2;\n      return i;\n    }\n\n    zoom.rho = function (_) {\n      var _1 = Math.max(1e-3, +_),\n          _2 = _1 * _1,\n          _4 = _2 * _2;\n\n      return zoomRho(_1, _2, _4);\n    };\n\n    return zoom;\n  }(Math.SQRT2, 2, 4);\n\n  function hsl(hue) {\n    return function (start, end) {\n      var h = hue((start = hsl$2(start)).h, (end = hsl$2(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function (t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    };\n  }\n\n  var hsl$1 = hsl(hue$1);\n  var hslLong = hsl(nogamma);\n\n  function lab(start, end) {\n    var l = nogamma((start = lab$1(start)).l, (end = lab$1(end)).l),\n        a = nogamma(start.a, end.a),\n        b = nogamma(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function (t) {\n      start.l = l(t);\n      start.a = a(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  function hcl(hue) {\n    return function (start, end) {\n      var h = hue((start = hcl$2(start)).h, (end = hcl$2(end)).h),\n          c = nogamma(start.c, end.c),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function (t) {\n        start.h = h(t);\n        start.c = c(t);\n        start.l = l(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    };\n  }\n\n  var hcl$1 = hcl(hue$1);\n  var hclLong = hcl(nogamma);\n\n  function cubehelix$1(hue) {\n    return function cubehelixGamma(y) {\n      y = +y;\n\n      function cubehelix(start, end) {\n        var h = hue((start = cubehelix$3(start)).h, (end = cubehelix$3(end)).h),\n            s = nogamma(start.s, end.s),\n            l = nogamma(start.l, end.l),\n            opacity = nogamma(start.opacity, end.opacity);\n        return function (t) {\n          start.h = h(t);\n          start.s = s(t);\n          start.l = l(Math.pow(t, y));\n          start.opacity = opacity(t);\n          return start + \"\";\n        };\n      }\n\n      cubehelix.gamma = cubehelixGamma;\n      return cubehelix;\n    }(1);\n  }\n\n  var cubehelix$2 = cubehelix$1(hue$1);\n  var cubehelixLong = cubehelix$1(nogamma);\n\n  function piecewise(interpolate, values) {\n    if (values === undefined) values = interpolate, interpolate = interpolate$2;\n    var i = 0,\n        n = values.length - 1,\n        v = values[0],\n        I = new Array(n < 0 ? 0 : n);\n\n    while (i < n) {\n      I[i] = interpolate(v, v = values[++i]);\n    }\n\n    return function (t) {\n      var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n      return I[i](t - i);\n    };\n  }\n\n  function quantize$1(interpolator, n) {\n    var samples = new Array(n);\n\n    for (var i = 0; i < n; ++i) {\n      samples[i] = interpolator(i / (n - 1));\n    }\n\n    return samples;\n  }\n\n  var frame = 0,\n      // is an animation frame pending?\n  timeout$1 = 0,\n      // is a timeout pending?\n  interval$1 = 0,\n      // are any timers active?\n  pokeDelay = 1000,\n      // how frequently we check for clock skew\n  taskHead,\n      taskTail,\n      clockLast = 0,\n      clockNow = 0,\n      clockSkew = 0,\n      clock = (typeof performance === \"undefined\" ? \"undefined\" : _typeof(performance)) === \"object\" && performance.now ? performance : Date,\n      setFrame = (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {\n    setTimeout(f, 17);\n  };\n\n  function now() {\n    return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n  }\n\n  function clearNow() {\n    clockNow = 0;\n  }\n\n  function Timer() {\n    this._call = this._time = this._next = null;\n  }\n\n  Timer.prototype = timer.prototype = {\n    constructor: Timer,\n    restart: function restart(callback, delay, time) {\n      if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n      time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\n      if (!this._next && taskTail !== this) {\n        if (taskTail) taskTail._next = this;else taskHead = this;\n        taskTail = this;\n      }\n\n      this._call = callback;\n      this._time = time;\n      sleep();\n    },\n    stop: function stop() {\n      if (this._call) {\n        this._call = null;\n        this._time = Infinity;\n        sleep();\n      }\n    }\n  };\n\n  function timer(callback, delay, time) {\n    var t = new Timer();\n    t.restart(callback, delay, time);\n    return t;\n  }\n\n  function timerFlush() {\n    now(); // Get the current time, if not already set.\n\n    ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\n    var t = taskHead,\n        e;\n\n    while (t) {\n      if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n      t = t._next;\n    }\n\n    --frame;\n  }\n\n  function wake() {\n    clockNow = (clockLast = clock.now()) + clockSkew;\n    frame = timeout$1 = 0;\n\n    try {\n      timerFlush();\n    } finally {\n      frame = 0;\n      nap();\n      clockNow = 0;\n    }\n  }\n\n  function poke() {\n    var now = clock.now(),\n        delay = now - clockLast;\n    if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n  }\n\n  function nap() {\n    var t0,\n        t1 = taskHead,\n        t2,\n        time = Infinity;\n\n    while (t1) {\n      if (t1._call) {\n        if (time > t1._time) time = t1._time;\n        t0 = t1, t1 = t1._next;\n      } else {\n        t2 = t1._next, t1._next = null;\n        t1 = t0 ? t0._next = t2 : taskHead = t2;\n      }\n    }\n\n    taskTail = t0;\n    sleep(time);\n  }\n\n  function sleep(time) {\n    if (frame) return; // Soonest alarm already set, or will be.\n\n    if (timeout$1) timeout$1 = clearTimeout(timeout$1);\n    var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n\n    if (delay > 24) {\n      if (time < Infinity) timeout$1 = setTimeout(wake, time - clock.now() - clockSkew);\n      if (interval$1) interval$1 = clearInterval(interval$1);\n    } else {\n      if (!interval$1) clockLast = clock.now(), interval$1 = setInterval(poke, pokeDelay);\n      frame = 1, setFrame(wake);\n    }\n  }\n\n  function timeout(callback, delay, time) {\n    var t = new Timer();\n    delay = delay == null ? 0 : +delay;\n    t.restart(function (elapsed) {\n      t.stop();\n      callback(elapsed + delay);\n    }, delay, time);\n    return t;\n  }\n\n  function interval(callback, delay, time) {\n    var t = new Timer(),\n        total = delay;\n    if (delay == null) return t.restart(callback, delay, time), t;\n    t._restart = t.restart;\n\n    t.restart = function (callback, delay, time) {\n      delay = +delay, time = time == null ? now() : +time;\n\n      t._restart(function tick(elapsed) {\n        elapsed += total;\n\n        t._restart(tick, total += delay, time);\n\n        callback(elapsed);\n      }, delay, time);\n    };\n\n    t.restart(callback, delay, time);\n    return t;\n  }\n\n  var emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\n  var emptyTween = [];\n  var CREATED = 0;\n  var SCHEDULED = 1;\n  var STARTING = 2;\n  var STARTED = 3;\n  var RUNNING = 4;\n  var ENDING = 5;\n  var ENDED = 6;\n\n  function schedule(node, name, id, index, group, timing) {\n    var schedules = node.__transition;\n    if (!schedules) node.__transition = {};else if (id in schedules) return;\n    create(node, id, {\n      name: name,\n      index: index,\n      // For context during callback.\n      group: group,\n      // For context during callback.\n      on: emptyOn,\n      tween: emptyTween,\n      time: timing.time,\n      delay: timing.delay,\n      duration: timing.duration,\n      ease: timing.ease,\n      timer: null,\n      state: CREATED\n    });\n  }\n\n  function init(node, id) {\n    var schedule = get(node, id);\n    if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n    return schedule;\n  }\n\n  function set(node, id) {\n    var schedule = get(node, id);\n    if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n    return schedule;\n  }\n\n  function get(node, id) {\n    var schedule = node.__transition;\n    if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n    return schedule;\n  }\n\n  function create(node, id, self) {\n    var schedules = node.__transition,\n        tween; // Initialize the self timer when the transition is created.\n    // Note the actual delay is not known until the first callback!\n\n    schedules[id] = self;\n    self.timer = timer(schedule, 0, self.time);\n\n    function schedule(elapsed) {\n      self.state = SCHEDULED;\n      self.timer.restart(start, self.delay, self.time); // If the elapsed delay is less than our first sleep, start immediately.\n\n      if (self.delay <= elapsed) start(elapsed - self.delay);\n    }\n\n    function start(elapsed) {\n      var i, j, n, o; // If the state is not SCHEDULED, then we previously errored on start.\n\n      if (self.state !== SCHEDULED) return stop();\n\n      for (i in schedules) {\n        o = schedules[i];\n        if (o.name !== self.name) continue; // While this element already has a starting transition during this frame,\n        // defer starting an interrupting transition until that transition has a\n        // chance to tick (and possibly end); see d3/d3-transition#54!\n\n        if (o.state === STARTED) return timeout(start); // Interrupt the active transition, if any.\n\n        if (o.state === RUNNING) {\n          o.state = ENDED;\n          o.timer.stop();\n          o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n          delete schedules[i];\n        } // Cancel any pre-empted transitions.\n        else if (+i < id) {\n            o.state = ENDED;\n            o.timer.stop();\n            o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n            delete schedules[i];\n          }\n      } // Defer the first tick to end of the current frame; see d3/d3#1576.\n      // Note the transition may be canceled after start and before the first tick!\n      // Note this must be scheduled before the start event; see d3/d3-transition#16!\n      // Assuming this is successful, subsequent callbacks go straight to tick.\n\n\n      timeout(function () {\n        if (self.state === STARTED) {\n          self.state = RUNNING;\n          self.timer.restart(tick, self.delay, self.time);\n          tick(elapsed);\n        }\n      }); // Dispatch the start event.\n      // Note this must be done before the tween are initialized.\n\n      self.state = STARTING;\n      self.on.call(\"start\", node, node.__data__, self.index, self.group);\n      if (self.state !== STARTING) return; // interrupted\n\n      self.state = STARTED; // Initialize the tween, deleting null tween.\n\n      tween = new Array(n = self.tween.length);\n\n      for (i = 0, j = -1; i < n; ++i) {\n        if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n          tween[++j] = o;\n        }\n      }\n\n      tween.length = j + 1;\n    }\n\n    function tick(elapsed) {\n      var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n          i = -1,\n          n = tween.length;\n\n      while (++i < n) {\n        tween[i].call(node, t);\n      } // Dispatch the end event.\n\n\n      if (self.state === ENDING) {\n        self.on.call(\"end\", node, node.__data__, self.index, self.group);\n        stop();\n      }\n    }\n\n    function stop() {\n      self.state = ENDED;\n      self.timer.stop();\n      delete schedules[id];\n\n      for (var i in schedules) {\n        return;\n      } // eslint-disable-line no-unused-vars\n\n\n      delete node.__transition;\n    }\n  }\n\n  function interrupt(node, name) {\n    var schedules = node.__transition,\n        schedule,\n        active,\n        empty = true,\n        i;\n    if (!schedules) return;\n    name = name == null ? null : name + \"\";\n\n    for (i in schedules) {\n      if ((schedule = schedules[i]).name !== name) {\n        empty = false;\n        continue;\n      }\n\n      active = schedule.state > STARTING && schedule.state < ENDING;\n      schedule.state = ENDED;\n      schedule.timer.stop();\n      schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n      delete schedules[i];\n    }\n\n    if (empty) delete node.__transition;\n  }\n\n  function selection_interrupt(name) {\n    return this.each(function () {\n      interrupt(this, name);\n    });\n  }\n\n  function tweenRemove(id, name) {\n    var tween0, tween1;\n    return function () {\n      var schedule = set(this, id),\n          tween = schedule.tween; // If this node shared tween with the previous node,\n      // just assign the updated shared tween and we’re done!\n      // Otherwise, copy-on-write.\n\n      if (tween !== tween0) {\n        tween1 = tween0 = tween;\n\n        for (var i = 0, n = tween1.length; i < n; ++i) {\n          if (tween1[i].name === name) {\n            tween1 = tween1.slice();\n            tween1.splice(i, 1);\n            break;\n          }\n        }\n      }\n\n      schedule.tween = tween1;\n    };\n  }\n\n  function tweenFunction(id, name, value) {\n    var tween0, tween1;\n    if (typeof value !== \"function\") throw new Error();\n    return function () {\n      var schedule = set(this, id),\n          tween = schedule.tween; // If this node shared tween with the previous node,\n      // just assign the updated shared tween and we’re done!\n      // Otherwise, copy-on-write.\n\n      if (tween !== tween0) {\n        tween1 = (tween0 = tween).slice();\n\n        for (var t = {\n          name: name,\n          value: value\n        }, i = 0, n = tween1.length; i < n; ++i) {\n          if (tween1[i].name === name) {\n            tween1[i] = t;\n            break;\n          }\n        }\n\n        if (i === n) tween1.push(t);\n      }\n\n      schedule.tween = tween1;\n    };\n  }\n\n  function transition_tween(name, value) {\n    var id = this._id;\n    name += \"\";\n\n    if (arguments.length < 2) {\n      var tween = get(this.node(), id).tween;\n\n      for (var i = 0, n = tween.length, t; i < n; ++i) {\n        if ((t = tween[i]).name === name) {\n          return t.value;\n        }\n      }\n\n      return null;\n    }\n\n    return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n  }\n\n  function tweenValue(transition, name, value) {\n    var id = transition._id;\n    transition.each(function () {\n      var schedule = set(this, id);\n      (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n    });\n    return function (node) {\n      return get(node, id).value[name];\n    };\n  }\n\n  function interpolate$1(a, b) {\n    var c;\n    return (typeof b === \"number\" ? interpolateNumber : b instanceof color ? interpolateRgb : (c = color(b)) ? (b = c, interpolateRgb) : interpolateString)(a, b);\n  }\n\n  function attrRemove(name) {\n    return function () {\n      this.removeAttribute(name);\n    };\n  }\n\n  function attrRemoveNS(fullname) {\n    return function () {\n      this.removeAttributeNS(fullname.space, fullname.local);\n    };\n  }\n\n  function attrConstant(name, interpolate, value1) {\n    var string00,\n        string1 = value1 + \"\",\n        interpolate0;\n    return function () {\n      var string0 = this.getAttribute(name);\n      return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);\n    };\n  }\n\n  function attrConstantNS(fullname, interpolate, value1) {\n    var string00,\n        string1 = value1 + \"\",\n        interpolate0;\n    return function () {\n      var string0 = this.getAttributeNS(fullname.space, fullname.local);\n      return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);\n    };\n  }\n\n  function attrFunction(name, interpolate, value) {\n    var string00, string10, interpolate0;\n    return function () {\n      var string0,\n          value1 = value(this),\n          string1;\n      if (value1 == null) return void this.removeAttribute(name);\n      string0 = this.getAttribute(name);\n      string1 = value1 + \"\";\n      return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n    };\n  }\n\n  function attrFunctionNS(fullname, interpolate, value) {\n    var string00, string10, interpolate0;\n    return function () {\n      var string0,\n          value1 = value(this),\n          string1;\n      if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n      string0 = this.getAttributeNS(fullname.space, fullname.local);\n      string1 = value1 + \"\";\n      return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n    };\n  }\n\n  function transition_attr(name, value) {\n    var fullname = namespace(name),\n        i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n    return this.attrTween(name, typeof value === \"function\" ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value)) : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname) : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n  }\n\n  function attrInterpolate(name, i) {\n    return function (t) {\n      this.setAttribute(name, i.call(this, t));\n    };\n  }\n\n  function attrInterpolateNS(fullname, i) {\n    return function (t) {\n      this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\n    };\n  }\n\n  function attrTweenNS(fullname, value) {\n    var t0, i0;\n\n    function tween() {\n      var i = value.apply(this, arguments);\n      if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n      return t0;\n    }\n\n    tween._value = value;\n    return tween;\n  }\n\n  function attrTween(name, value) {\n    var t0, i0;\n\n    function tween() {\n      var i = value.apply(this, arguments);\n      if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n      return t0;\n    }\n\n    tween._value = value;\n    return tween;\n  }\n\n  function transition_attrTween(name, value) {\n    var key = \"attr.\" + name;\n    if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n    if (value == null) return this.tween(key, null);\n    if (typeof value !== \"function\") throw new Error();\n    var fullname = namespace(name);\n    return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n  }\n\n  function delayFunction(id, value) {\n    return function () {\n      init(this, id).delay = +value.apply(this, arguments);\n    };\n  }\n\n  function delayConstant(id, value) {\n    return value = +value, function () {\n      init(this, id).delay = value;\n    };\n  }\n\n  function transition_delay(value) {\n    var id = this._id;\n    return arguments.length ? this.each((typeof value === \"function\" ? delayFunction : delayConstant)(id, value)) : get(this.node(), id).delay;\n  }\n\n  function durationFunction(id, value) {\n    return function () {\n      set(this, id).duration = +value.apply(this, arguments);\n    };\n  }\n\n  function durationConstant(id, value) {\n    return value = +value, function () {\n      set(this, id).duration = value;\n    };\n  }\n\n  function transition_duration(value) {\n    var id = this._id;\n    return arguments.length ? this.each((typeof value === \"function\" ? durationFunction : durationConstant)(id, value)) : get(this.node(), id).duration;\n  }\n\n  function easeConstant(id, value) {\n    if (typeof value !== \"function\") throw new Error();\n    return function () {\n      set(this, id).ease = value;\n    };\n  }\n\n  function transition_ease(value) {\n    var id = this._id;\n    return arguments.length ? this.each(easeConstant(id, value)) : get(this.node(), id).ease;\n  }\n\n  function easeVarying(id, value) {\n    return function () {\n      var v = value.apply(this, arguments);\n      if (typeof v !== \"function\") throw new Error();\n      set(this, id).ease = v;\n    };\n  }\n\n  function transition_easeVarying(value) {\n    if (typeof value !== \"function\") throw new Error();\n    return this.each(easeVarying(this._id, value));\n  }\n\n  function transition_filter(match) {\n    if (typeof match !== \"function\") match = matcher(match);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return new Transition(subgroups, this._parents, this._name, this._id);\n  }\n\n  function transition_merge(transition) {\n    if (transition._id !== this._id) throw new Error();\n\n    for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group0[i] || group1[i]) {\n          merge[i] = node;\n        }\n      }\n    }\n\n    for (; j < m0; ++j) {\n      merges[j] = groups0[j];\n    }\n\n    return new Transition(merges, this._parents, this._name, this._id);\n  }\n\n  function start(name) {\n    return (name + \"\").trim().split(/^|\\s+/).every(function (t) {\n      var i = t.indexOf(\".\");\n      if (i >= 0) t = t.slice(0, i);\n      return !t || t === \"start\";\n    });\n  }\n\n  function onFunction(id, name, listener) {\n    var on0,\n        on1,\n        sit = start(name) ? init : set;\n    return function () {\n      var schedule = sit(this, id),\n          on = schedule.on; // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n\n      if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n      schedule.on = on1;\n    };\n  }\n\n  function transition_on(name, listener) {\n    var id = this._id;\n    return arguments.length < 2 ? get(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));\n  }\n\n  function removeFunction(id) {\n    return function () {\n      var parent = this.parentNode;\n\n      for (var i in this.__transition) {\n        if (+i !== id) return;\n      }\n\n      if (parent) parent.removeChild(this);\n    };\n  }\n\n  function transition_remove() {\n    return this.on(\"end.remove\", removeFunction(this._id));\n  }\n\n  function transition_select(select) {\n    var name = this._name,\n        id = this._id;\n    if (typeof select !== \"function\") select = selector(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          subgroup[i] = subnode;\n          schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n        }\n      }\n    }\n\n    return new Transition(subgroups, this._parents, name, id);\n  }\n\n  function transition_selectAll(select) {\n    var name = this._name,\n        id = this._id;\n    if (typeof select !== \"function\") select = selectorAll(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n            if (child = children[k]) {\n              schedule(child, name, id, k, children, inherit);\n            }\n          }\n\n          subgroups.push(children);\n          parents.push(node);\n        }\n      }\n    }\n\n    return new Transition(subgroups, parents, name, id);\n  }\n\n  var Selection = selection.prototype.constructor;\n\n  function transition_selection() {\n    return new Selection(this._groups, this._parents);\n  }\n\n  function styleNull(name, interpolate) {\n    var string00, string10, interpolate0;\n    return function () {\n      var string0 = styleValue(this, name),\n          string1 = (this.style.removeProperty(name), styleValue(this, name));\n      return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : interpolate0 = interpolate(string00 = string0, string10 = string1);\n    };\n  }\n\n  function styleRemove(name) {\n    return function () {\n      this.style.removeProperty(name);\n    };\n  }\n\n  function styleConstant(name, interpolate, value1) {\n    var string00,\n        string1 = value1 + \"\",\n        interpolate0;\n    return function () {\n      var string0 = styleValue(this, name);\n      return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);\n    };\n  }\n\n  function styleFunction(name, interpolate, value) {\n    var string00, string10, interpolate0;\n    return function () {\n      var string0 = styleValue(this, name),\n          value1 = value(this),\n          string1 = value1 + \"\";\n      if (value1 == null) string1 = value1 = (this.style.removeProperty(name), styleValue(this, name));\n      return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n    };\n  }\n\n  function styleMaybeRemove(id, name) {\n    var on0,\n        on1,\n        listener0,\n        key = \"style.\" + name,\n        event = \"end.\" + key,\n        remove;\n    return function () {\n      var schedule = set(this, id),\n          on = schedule.on,\n          listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined; // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n\n      if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n      schedule.on = on1;\n    };\n  }\n\n  function transition_style(name, value, priority) {\n    var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n    return value == null ? this.styleTween(name, styleNull(name, i)).on(\"end.style.\" + name, styleRemove(name)) : typeof value === \"function\" ? this.styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value))).each(styleMaybeRemove(this._id, name)) : this.styleTween(name, styleConstant(name, i, value), priority).on(\"end.style.\" + name, null);\n  }\n\n  function styleInterpolate(name, i, priority) {\n    return function (t) {\n      this.style.setProperty(name, i.call(this, t), priority);\n    };\n  }\n\n  function styleTween(name, value, priority) {\n    var t, i0;\n\n    function tween() {\n      var i = value.apply(this, arguments);\n      if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n      return t;\n    }\n\n    tween._value = value;\n    return tween;\n  }\n\n  function transition_styleTween(name, value, priority) {\n    var key = \"style.\" + (name += \"\");\n    if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n    if (value == null) return this.tween(key, null);\n    if (typeof value !== \"function\") throw new Error();\n    return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n  }\n\n  function textConstant(value) {\n    return function () {\n      this.textContent = value;\n    };\n  }\n\n  function textFunction(value) {\n    return function () {\n      var value1 = value(this);\n      this.textContent = value1 == null ? \"\" : value1;\n    };\n  }\n\n  function transition_text(value) {\n    return this.tween(\"text\", typeof value === \"function\" ? textFunction(tweenValue(this, \"text\", value)) : textConstant(value == null ? \"\" : value + \"\"));\n  }\n\n  function textInterpolate(i) {\n    return function (t) {\n      this.textContent = i.call(this, t);\n    };\n  }\n\n  function textTween(value) {\n    var t0, i0;\n\n    function tween() {\n      var i = value.apply(this, arguments);\n      if (i !== i0) t0 = (i0 = i) && textInterpolate(i);\n      return t0;\n    }\n\n    tween._value = value;\n    return tween;\n  }\n\n  function transition_textTween(value) {\n    var key = \"text\";\n    if (arguments.length < 1) return (key = this.tween(key)) && key._value;\n    if (value == null) return this.tween(key, null);\n    if (typeof value !== \"function\") throw new Error();\n    return this.tween(key, textTween(value));\n  }\n\n  function transition_transition() {\n    var name = this._name,\n        id0 = this._id,\n        id1 = newId();\n\n    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          var inherit = get(node, id0);\n          schedule(node, name, id1, i, group, {\n            time: inherit.time + inherit.delay + inherit.duration,\n            delay: 0,\n            duration: inherit.duration,\n            ease: inherit.ease\n          });\n        }\n      }\n    }\n\n    return new Transition(groups, this._parents, name, id1);\n  }\n\n  function transition_end() {\n    var on0,\n        on1,\n        that = this,\n        id = that._id,\n        size = that.size();\n    return new Promise(function (resolve, reject) {\n      var cancel = {\n        value: reject\n      },\n          end = {\n        value: function value() {\n          if (--size === 0) resolve();\n        }\n      };\n      that.each(function () {\n        var schedule = set(this, id),\n            on = schedule.on; // If this node shared a dispatch with the previous node,\n        // just assign the updated shared dispatch and we’re done!\n        // Otherwise, copy-on-write.\n\n        if (on !== on0) {\n          on1 = (on0 = on).copy();\n\n          on1._.cancel.push(cancel);\n\n          on1._.interrupt.push(cancel);\n\n          on1._.end.push(end);\n        }\n\n        schedule.on = on1;\n      }); // The selection was empty, resolve end immediately\n\n      if (size === 0) resolve();\n    });\n  }\n\n  var id = 0;\n\n  function Transition(groups, parents, name, id) {\n    this._groups = groups;\n    this._parents = parents;\n    this._name = name;\n    this._id = id;\n  }\n\n  function transition(name) {\n    return selection().transition(name);\n  }\n\n  function newId() {\n    return ++id;\n  }\n\n  var selection_prototype = selection.prototype;\n  Transition.prototype = transition.prototype = _defineProperty({\n    constructor: Transition,\n    select: transition_select,\n    selectAll: transition_selectAll,\n    selectChild: selection_prototype.selectChild,\n    selectChildren: selection_prototype.selectChildren,\n    filter: transition_filter,\n    merge: transition_merge,\n    selection: transition_selection,\n    transition: transition_transition,\n    call: selection_prototype.call,\n    nodes: selection_prototype.nodes,\n    node: selection_prototype.node,\n    size: selection_prototype.size,\n    empty: selection_prototype.empty,\n    each: selection_prototype.each,\n    on: transition_on,\n    attr: transition_attr,\n    attrTween: transition_attrTween,\n    style: transition_style,\n    styleTween: transition_styleTween,\n    text: transition_text,\n    textTween: transition_textTween,\n    remove: transition_remove,\n    tween: transition_tween,\n    delay: transition_delay,\n    duration: transition_duration,\n    ease: transition_ease,\n    easeVarying: transition_easeVarying,\n    end: transition_end\n  }, Symbol.iterator, selection_prototype[Symbol.iterator]);\n\n  var linear$1 = function linear$1(t) {\n    return +t;\n  };\n\n  function quadIn(t) {\n    return t * t;\n  }\n\n  function quadOut(t) {\n    return t * (2 - t);\n  }\n\n  function quadInOut(t) {\n    return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n  }\n\n  function cubicIn(t) {\n    return t * t * t;\n  }\n\n  function cubicOut(t) {\n    return --t * t * t + 1;\n  }\n\n  function cubicInOut(t) {\n    return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n  }\n\n  var exponent$1 = 3;\n\n  var polyIn = function custom(e) {\n    e = +e;\n\n    function polyIn(t) {\n      return Math.pow(t, e);\n    }\n\n    polyIn.exponent = custom;\n    return polyIn;\n  }(exponent$1);\n\n  var polyOut = function custom(e) {\n    e = +e;\n\n    function polyOut(t) {\n      return 1 - Math.pow(1 - t, e);\n    }\n\n    polyOut.exponent = custom;\n    return polyOut;\n  }(exponent$1);\n\n  var polyInOut = function custom(e) {\n    e = +e;\n\n    function polyInOut(t) {\n      return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n    }\n\n    polyInOut.exponent = custom;\n    return polyInOut;\n  }(exponent$1);\n\n  var pi$4 = Math.PI,\n      halfPi$3 = pi$4 / 2;\n\n  function sinIn(t) {\n    return +t === 1 ? 1 : 1 - Math.cos(t * halfPi$3);\n  }\n\n  function sinOut(t) {\n    return Math.sin(t * halfPi$3);\n  }\n\n  function sinInOut(t) {\n    return (1 - Math.cos(pi$4 * t)) / 2;\n  } // tpmt is two power minus ten times t scaled to [0,1]\n\n\n  function tpmt(x) {\n    return (Math.pow(2, -10 * x) - 0.0009765625) * 1.0009775171065494;\n  }\n\n  function expIn(t) {\n    return tpmt(1 - +t);\n  }\n\n  function expOut(t) {\n    return 1 - tpmt(t);\n  }\n\n  function expInOut(t) {\n    return ((t *= 2) <= 1 ? tpmt(1 - t) : 2 - tpmt(t - 1)) / 2;\n  }\n\n  function circleIn(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n\n  function circleOut(t) {\n    return Math.sqrt(1 - --t * t);\n  }\n\n  function circleInOut(t) {\n    return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n  }\n\n  var b1 = 4 / 11,\n      b2 = 6 / 11,\n      b3 = 8 / 11,\n      b4 = 3 / 4,\n      b5 = 9 / 11,\n      b6 = 10 / 11,\n      b7 = 15 / 16,\n      b8 = 21 / 22,\n      b9 = 63 / 64,\n      b0 = 1 / b1 / b1;\n\n  function bounceIn(t) {\n    return 1 - bounceOut(1 - t);\n  }\n\n  function bounceOut(t) {\n    return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n  }\n\n  function bounceInOut(t) {\n    return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n  }\n\n  var overshoot = 1.70158;\n\n  var backIn = function custom(s) {\n    s = +s;\n\n    function backIn(t) {\n      return (t = +t) * t * (s * (t - 1) + t);\n    }\n\n    backIn.overshoot = custom;\n    return backIn;\n  }(overshoot);\n\n  var backOut = function custom(s) {\n    s = +s;\n\n    function backOut(t) {\n      return --t * t * ((t + 1) * s + t) + 1;\n    }\n\n    backOut.overshoot = custom;\n    return backOut;\n  }(overshoot);\n\n  var backInOut = function custom(s) {\n    s = +s;\n\n    function backInOut(t) {\n      return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n    }\n\n    backInOut.overshoot = custom;\n    return backInOut;\n  }(overshoot);\n\n  var tau$5 = 2 * Math.PI,\n      amplitude = 1,\n      period = 0.3;\n\n  var elasticIn = function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau$5);\n\n    function elasticIn(t) {\n      return a * tpmt(- --t) * Math.sin((s - t) / p);\n    }\n\n    elasticIn.amplitude = function (a) {\n      return custom(a, p * tau$5);\n    };\n\n    elasticIn.period = function (p) {\n      return custom(a, p);\n    };\n\n    return elasticIn;\n  }(amplitude, period);\n\n  var elasticOut = function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau$5);\n\n    function elasticOut(t) {\n      return 1 - a * tpmt(t = +t) * Math.sin((t + s) / p);\n    }\n\n    elasticOut.amplitude = function (a) {\n      return custom(a, p * tau$5);\n    };\n\n    elasticOut.period = function (p) {\n      return custom(a, p);\n    };\n\n    return elasticOut;\n  }(amplitude, period);\n\n  var elasticInOut = function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau$5);\n\n    function elasticInOut(t) {\n      return ((t = t * 2 - 1) < 0 ? a * tpmt(-t) * Math.sin((s - t) / p) : 2 - a * tpmt(t) * Math.sin((s + t) / p)) / 2;\n    }\n\n    elasticInOut.amplitude = function (a) {\n      return custom(a, p * tau$5);\n    };\n\n    elasticInOut.period = function (p) {\n      return custom(a, p);\n    };\n\n    return elasticInOut;\n  }(amplitude, period);\n\n  var defaultTiming = {\n    time: null,\n    // Set on use.\n    delay: 0,\n    duration: 250,\n    ease: cubicInOut\n  };\n\n  function inherit(node, id) {\n    var timing;\n\n    while (!(timing = node.__transition) || !(timing = timing[id])) {\n      if (!(node = node.parentNode)) {\n        throw new Error(\"transition \".concat(id, \" not found\"));\n      }\n    }\n\n    return timing;\n  }\n\n  function selection_transition(name) {\n    var id, timing;\n\n    if (name instanceof Transition) {\n      id = name._id, name = name._name;\n    } else {\n      id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n    }\n\n    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          schedule(node, name, id, i, group, timing || inherit(node, id));\n        }\n      }\n    }\n\n    return new Transition(groups, this._parents, name, id);\n  }\n\n  selection.prototype.interrupt = selection_interrupt;\n  selection.prototype.transition = selection_transition;\n  var root = [null];\n\n  function active(node, name) {\n    var schedules = node.__transition,\n        schedule,\n        i;\n\n    if (schedules) {\n      name = name == null ? null : name + \"\";\n\n      for (i in schedules) {\n        if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n          return new Transition([[node]], root, name, +i);\n        }\n      }\n    }\n\n    return null;\n  }\n\n  var constant$7 = function constant$7(x) {\n    return function () {\n      return x;\n    };\n  };\n\n  function BrushEvent(type, _ref26) {\n    var sourceEvent = _ref26.sourceEvent,\n        target = _ref26.target,\n        selection = _ref26.selection,\n        mode = _ref26.mode,\n        dispatch = _ref26.dispatch;\n    Object.defineProperties(this, {\n      type: {\n        value: type,\n        enumerable: true,\n        configurable: true\n      },\n      sourceEvent: {\n        value: sourceEvent,\n        enumerable: true,\n        configurable: true\n      },\n      target: {\n        value: target,\n        enumerable: true,\n        configurable: true\n      },\n      selection: {\n        value: selection,\n        enumerable: true,\n        configurable: true\n      },\n      mode: {\n        value: mode,\n        enumerable: true,\n        configurable: true\n      },\n      _: {\n        value: dispatch\n      }\n    });\n  }\n\n  function nopropagation$1(event) {\n    event.stopImmediatePropagation();\n  }\n\n  function noevent$1(event) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n  }\n\n  var MODE_DRAG = {\n    name: \"drag\"\n  },\n      MODE_SPACE = {\n    name: \"space\"\n  },\n      MODE_HANDLE = {\n    name: \"handle\"\n  },\n      MODE_CENTER = {\n    name: \"center\"\n  };\n  var abs$3 = Math.abs,\n      max$2 = Math.max,\n      min$1 = Math.min;\n\n  function number1(e) {\n    return [+e[0], +e[1]];\n  }\n\n  function number2(e) {\n    return [number1(e[0]), number1(e[1])];\n  }\n\n  var X = {\n    name: \"x\",\n    handles: [\"w\", \"e\"].map(type),\n    input: function input(x, e) {\n      return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]];\n    },\n    output: function output(xy) {\n      return xy && [xy[0][0], xy[1][0]];\n    }\n  };\n  var Y = {\n    name: \"y\",\n    handles: [\"n\", \"s\"].map(type),\n    input: function input(y, e) {\n      return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]];\n    },\n    output: function output(xy) {\n      return xy && [xy[0][1], xy[1][1]];\n    }\n  };\n  var XY = {\n    name: \"xy\",\n    handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n    input: function input(xy) {\n      return xy == null ? null : number2(xy);\n    },\n    output: function output(xy) {\n      return xy;\n    }\n  };\n  var cursors = {\n    overlay: \"crosshair\",\n    selection: \"move\",\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var flipX = {\n    e: \"w\",\n    w: \"e\",\n    nw: \"ne\",\n    ne: \"nw\",\n    se: \"sw\",\n    sw: \"se\"\n  };\n  var flipY = {\n    n: \"s\",\n    s: \"n\",\n    nw: \"sw\",\n    ne: \"se\",\n    se: \"ne\",\n    sw: \"nw\"\n  };\n  var signsX = {\n    overlay: +1,\n    selection: +1,\n    n: null,\n    e: +1,\n    s: null,\n    w: -1,\n    nw: -1,\n    ne: +1,\n    se: +1,\n    sw: -1\n  };\n  var signsY = {\n    overlay: +1,\n    selection: +1,\n    n: -1,\n    e: null,\n    s: +1,\n    w: null,\n    nw: -1,\n    ne: -1,\n    se: +1,\n    sw: +1\n  };\n\n  function type(t) {\n    return {\n      type: t\n    };\n  } // Ignore right-click, since that should open the context menu.\n\n\n  function defaultFilter$1(event) {\n    return !event.ctrlKey && !event.button;\n  }\n\n  function defaultExtent$1() {\n    var svg = this.ownerSVGElement || this;\n\n    if (svg.hasAttribute(\"viewBox\")) {\n      svg = svg.viewBox.baseVal;\n      return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n    }\n\n    return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n  }\n\n  function defaultTouchable$1() {\n    return navigator.maxTouchPoints || \"ontouchstart\" in this;\n  } // Like d3.local, but with the name “__brush” rather than auto-generated.\n\n\n  function local(node) {\n    while (!node.__brush) {\n      if (!(node = node.parentNode)) return;\n    }\n\n    return node.__brush;\n  }\n\n  function empty(extent) {\n    return extent[0][0] === extent[1][0] || extent[0][1] === extent[1][1];\n  }\n\n  function brushSelection(node) {\n    var state = node.__brush;\n    return state ? state.dim.output(state.selection) : null;\n  }\n\n  function brushX() {\n    return brush$1(X);\n  }\n\n  function brushY() {\n    return brush$1(Y);\n  }\n\n  function brush() {\n    return brush$1(XY);\n  }\n\n  function brush$1(dim) {\n    var extent = defaultExtent$1,\n        filter = defaultFilter$1,\n        touchable = defaultTouchable$1,\n        keys = true,\n        listeners = dispatch(\"start\", \"brush\", \"end\"),\n        handleSize = 6,\n        touchending;\n\n    function brush(group) {\n      var overlay = group.property(\"__brush\", initialize).selectAll(\".overlay\").data([type(\"overlay\")]);\n      overlay.enter().append(\"rect\").attr(\"class\", \"overlay\").attr(\"pointer-events\", \"all\").attr(\"cursor\", cursors.overlay).merge(overlay).each(function () {\n        var extent = local(this).extent;\n        select(this).attr(\"x\", extent[0][0]).attr(\"y\", extent[0][1]).attr(\"width\", extent[1][0] - extent[0][0]).attr(\"height\", extent[1][1] - extent[0][1]);\n      });\n      group.selectAll(\".selection\").data([type(\"selection\")]).enter().append(\"rect\").attr(\"class\", \"selection\").attr(\"cursor\", cursors.selection).attr(\"fill\", \"#777\").attr(\"fill-opacity\", 0.3).attr(\"stroke\", \"#fff\").attr(\"shape-rendering\", \"crispEdges\");\n      var handle = group.selectAll(\".handle\").data(dim.handles, function (d) {\n        return d.type;\n      });\n      handle.exit().remove();\n      handle.enter().append(\"rect\").attr(\"class\", function (d) {\n        return \"handle handle--\" + d.type;\n      }).attr(\"cursor\", function (d) {\n        return cursors[d.type];\n      });\n      group.each(redraw).attr(\"fill\", \"none\").attr(\"pointer-events\", \"all\").on(\"mousedown.brush\", started).filter(touchable).on(\"touchstart.brush\", started).on(\"touchmove.brush\", touchmoved).on(\"touchend.brush touchcancel.brush\", touchended).style(\"touch-action\", \"none\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n    }\n\n    brush.move = function (group, selection, event) {\n      if (group.tween) {\n        group.on(\"start.brush\", function (event) {\n          emitter(this, arguments).beforestart().start(event);\n        }).on(\"interrupt.brush end.brush\", function (event) {\n          emitter(this, arguments).end(event);\n        }).tween(\"brush\", function () {\n          var that = this,\n              state = that.__brush,\n              emit = emitter(that, arguments),\n              selection0 = state.selection,\n              selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n              i = interpolate$2(selection0, selection1);\n\n          function tween(t) {\n            state.selection = t === 1 && selection1 === null ? null : i(t);\n            redraw.call(that);\n            emit.brush();\n          }\n\n          return selection0 !== null && selection1 !== null ? tween : tween(1);\n        });\n      } else {\n        group.each(function () {\n          var that = this,\n              args = arguments,\n              state = that.__brush,\n              selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n              emit = emitter(that, args).beforestart();\n          interrupt(that);\n          state.selection = selection1 === null ? null : selection1;\n          redraw.call(that);\n          emit.start(event).brush(event).end(event);\n        });\n      }\n    };\n\n    brush.clear = function (group, event) {\n      brush.move(group, null, event);\n    };\n\n    function redraw() {\n      var group = select(this),\n          selection = local(this).selection;\n\n      if (selection) {\n        group.selectAll(\".selection\").style(\"display\", null).attr(\"x\", selection[0][0]).attr(\"y\", selection[0][1]).attr(\"width\", selection[1][0] - selection[0][0]).attr(\"height\", selection[1][1] - selection[0][1]);\n        group.selectAll(\".handle\").style(\"display\", null).attr(\"x\", function (d) {\n          return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2;\n        }).attr(\"y\", function (d) {\n          return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2;\n        }).attr(\"width\", function (d) {\n          return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize;\n        }).attr(\"height\", function (d) {\n          return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize;\n        });\n      } else {\n        group.selectAll(\".selection,.handle\").style(\"display\", \"none\").attr(\"x\", null).attr(\"y\", null).attr(\"width\", null).attr(\"height\", null);\n      }\n    }\n\n    function emitter(that, args, clean) {\n      var emit = that.__brush.emitter;\n      return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);\n    }\n\n    function Emitter(that, args, clean) {\n      this.that = that;\n      this.args = args;\n      this.state = that.__brush;\n      this.active = 0;\n      this.clean = clean;\n    }\n\n    Emitter.prototype = {\n      beforestart: function beforestart() {\n        if (++this.active === 1) this.state.emitter = this, this.starting = true;\n        return this;\n      },\n      start: function start(event, mode) {\n        if (this.starting) this.starting = false, this.emit(\"start\", event, mode);else this.emit(\"brush\", event);\n        return this;\n      },\n      brush: function brush(event, mode) {\n        this.emit(\"brush\", event, mode);\n        return this;\n      },\n      end: function end(event, mode) {\n        if (--this.active === 0) delete this.state.emitter, this.emit(\"end\", event, mode);\n        return this;\n      },\n      emit: function emit(type, event, mode) {\n        var d = select(this.that).datum();\n        listeners.call(type, this.that, new BrushEvent(type, {\n          sourceEvent: event,\n          target: brush,\n          selection: dim.output(this.state.selection),\n          mode: mode,\n          dispatch: listeners\n        }), d);\n      }\n    };\n\n    function started(event) {\n      if (touchending && !event.touches) return;\n      if (!filter.apply(this, arguments)) return;\n      var that = this,\n          type = event.target.__data__.type,\n          mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : keys && event.altKey ? MODE_CENTER : MODE_HANDLE,\n          signX = dim === Y ? null : signsX[type],\n          signY = dim === X ? null : signsY[type],\n          state = local(that),\n          extent = state.extent,\n          selection = state.selection,\n          W = extent[0][0],\n          w0,\n          w1,\n          N = extent[0][1],\n          n0,\n          n1,\n          E = extent[1][0],\n          e0,\n          e1,\n          S = extent[1][1],\n          s0,\n          s1,\n          dx = 0,\n          dy = 0,\n          moving,\n          shifting = signX && signY && keys && event.shiftKey,\n          lockX,\n          lockY,\n          points = Array.from(event.touches || [event], function (t) {\n        var i = t.identifier;\n        t = pointer(t, that);\n        t.point0 = t.slice();\n        t.identifier = i;\n        return t;\n      });\n      interrupt(that);\n      var emit = emitter(that, arguments, true).beforestart();\n\n      if (type === \"overlay\") {\n        if (selection) moving = true;\n        var pts = [points[0], points[1] || points[0]];\n        state.selection = selection = [[w0 = dim === Y ? W : min$1(pts[0][0], pts[1][0]), n0 = dim === X ? N : min$1(pts[0][1], pts[1][1])], [e0 = dim === Y ? E : max$2(pts[0][0], pts[1][0]), s0 = dim === X ? S : max$2(pts[0][1], pts[1][1])]];\n        if (points.length > 1) move(event);\n      } else {\n        w0 = selection[0][0];\n        n0 = selection[0][1];\n        e0 = selection[1][0];\n        s0 = selection[1][1];\n      }\n\n      w1 = w0;\n      n1 = n0;\n      e1 = e0;\n      s1 = s0;\n      var group = select(that).attr(\"pointer-events\", \"none\");\n      var overlay = group.selectAll(\".overlay\").attr(\"cursor\", cursors[type]);\n\n      if (event.touches) {\n        emit.moved = moved;\n        emit.ended = ended;\n      } else {\n        var view = select(event.view).on(\"mousemove.brush\", moved, true).on(\"mouseup.brush\", ended, true);\n        if (keys) view.on(\"keydown.brush\", keydowned, true).on(\"keyup.brush\", keyupped, true);\n        dragDisable(event.view);\n      }\n\n      redraw.call(that);\n      emit.start(event, mode.name);\n\n      function moved(event) {\n        var _iterator49 = _createForOfIteratorHelper(event.changedTouches || [event]),\n            _step51;\n\n        try {\n          for (_iterator49.s(); !(_step51 = _iterator49.n()).done;) {\n            var p = _step51.value;\n\n            var _iterator51 = _createForOfIteratorHelper(points),\n                _step53;\n\n            try {\n              for (_iterator51.s(); !(_step53 = _iterator51.n()).done;) {\n                var d = _step53.value;\n                if (d.identifier === p.identifier) d.cur = pointer(p, that);\n              }\n            } catch (err) {\n              _iterator51.e(err);\n            } finally {\n              _iterator51.f();\n            }\n          }\n        } catch (err) {\n          _iterator49.e(err);\n        } finally {\n          _iterator49.f();\n        }\n\n        if (shifting && !lockX && !lockY && points.length === 1) {\n          var _point = points[0];\n          if (abs$3(_point.cur[0] - _point[0]) > abs$3(_point.cur[1] - _point[1])) lockY = true;else lockX = true;\n        }\n\n        var _iterator50 = _createForOfIteratorHelper(points),\n            _step52;\n\n        try {\n          for (_iterator50.s(); !(_step52 = _iterator50.n()).done;) {\n            var _point2 = _step52.value;\n            if (_point2.cur) _point2[0] = _point2.cur[0], _point2[1] = _point2.cur[1];\n          }\n        } catch (err) {\n          _iterator50.e(err);\n        } finally {\n          _iterator50.f();\n        }\n\n        moving = true;\n        noevent$1(event);\n        move(event);\n      }\n\n      function move(event) {\n        var point = points[0],\n            point0 = point.point0;\n        var t;\n        dx = point[0] - point0[0];\n        dy = point[1] - point0[1];\n\n        switch (mode) {\n          case MODE_SPACE:\n          case MODE_DRAG:\n            {\n              if (signX) dx = max$2(W - w0, min$1(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n              if (signY) dy = max$2(N - n0, min$1(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n              break;\n            }\n\n          case MODE_HANDLE:\n            {\n              if (points[1]) {\n                if (signX) w1 = max$2(W, min$1(E, points[0][0])), e1 = max$2(W, min$1(E, points[1][0])), signX = 1;\n                if (signY) n1 = max$2(N, min$1(S, points[0][1])), s1 = max$2(N, min$1(S, points[1][1])), signY = 1;\n              } else {\n                if (signX < 0) dx = max$2(W - w0, min$1(E - w0, dx)), w1 = w0 + dx, e1 = e0;else if (signX > 0) dx = max$2(W - e0, min$1(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n                if (signY < 0) dy = max$2(N - n0, min$1(S - n0, dy)), n1 = n0 + dy, s1 = s0;else if (signY > 0) dy = max$2(N - s0, min$1(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n              }\n\n              break;\n            }\n\n          case MODE_CENTER:\n            {\n              if (signX) w1 = max$2(W, min$1(E, w0 - dx * signX)), e1 = max$2(W, min$1(E, e0 + dx * signX));\n              if (signY) n1 = max$2(N, min$1(S, n0 - dy * signY)), s1 = max$2(N, min$1(S, s0 + dy * signY));\n              break;\n            }\n        }\n\n        if (e1 < w1) {\n          signX *= -1;\n          t = w0, w0 = e0, e0 = t;\n          t = w1, w1 = e1, e1 = t;\n          if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n        }\n\n        if (s1 < n1) {\n          signY *= -1;\n          t = n0, n0 = s0, s0 = t;\n          t = n1, n1 = s1, s1 = t;\n          if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n        }\n\n        if (state.selection) selection = state.selection; // May be set by brush.move!\n\n        if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n        if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n        if (selection[0][0] !== w1 || selection[0][1] !== n1 || selection[1][0] !== e1 || selection[1][1] !== s1) {\n          state.selection = [[w1, n1], [e1, s1]];\n          redraw.call(that);\n          emit.brush(event, mode.name);\n        }\n      }\n\n      function ended(event) {\n        nopropagation$1(event);\n\n        if (event.touches) {\n          if (event.touches.length) return;\n          if (touchending) clearTimeout(touchending);\n          touchending = setTimeout(function () {\n            touchending = null;\n          }, 500); // Ghost clicks are delayed!\n        } else {\n          yesdrag(event.view, moving);\n          view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n        }\n\n        group.attr(\"pointer-events\", \"all\");\n        overlay.attr(\"cursor\", cursors.overlay);\n        if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n\n        if (empty(selection)) state.selection = null, redraw.call(that);\n        emit.end(event, mode.name);\n      }\n\n      function keydowned(event) {\n        switch (event.keyCode) {\n          case 16:\n            {\n              // SHIFT\n              shifting = signX && signY;\n              break;\n            }\n\n          case 18:\n            {\n              // ALT\n              if (mode === MODE_HANDLE) {\n                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n                mode = MODE_CENTER;\n                move(event);\n              }\n\n              break;\n            }\n\n          case 32:\n            {\n              // SPACE; takes priority over ALT\n              if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n                if (signX < 0) e0 = e1 - dx;else if (signX > 0) w0 = w1 - dx;\n                if (signY < 0) s0 = s1 - dy;else if (signY > 0) n0 = n1 - dy;\n                mode = MODE_SPACE;\n                overlay.attr(\"cursor\", cursors.selection);\n                move(event);\n              }\n\n              break;\n            }\n\n          default:\n            return;\n        }\n\n        noevent$1(event);\n      }\n\n      function keyupped(event) {\n        switch (event.keyCode) {\n          case 16:\n            {\n              // SHIFT\n              if (shifting) {\n                lockX = lockY = shifting = false;\n                move(event);\n              }\n\n              break;\n            }\n\n          case 18:\n            {\n              // ALT\n              if (mode === MODE_CENTER) {\n                if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;\n                if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;\n                mode = MODE_HANDLE;\n                move(event);\n              }\n\n              break;\n            }\n\n          case 32:\n            {\n              // SPACE\n              if (mode === MODE_SPACE) {\n                if (event.altKey) {\n                  if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n                  if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n                  mode = MODE_CENTER;\n                } else {\n                  if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;\n                  if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;\n                  mode = MODE_HANDLE;\n                }\n\n                overlay.attr(\"cursor\", cursors[type]);\n                move(event);\n              }\n\n              break;\n            }\n\n          default:\n            return;\n        }\n\n        noevent$1(event);\n      }\n    }\n\n    function touchmoved(event) {\n      emitter(this, arguments).moved(event);\n    }\n\n    function touchended(event) {\n      emitter(this, arguments).ended(event);\n    }\n\n    function initialize() {\n      var state = this.__brush || {\n        selection: null\n      };\n      state.extent = number2(extent.apply(this, arguments));\n      state.dim = dim;\n      return state;\n    }\n\n    brush.extent = function (_) {\n      return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$7(number2(_)), brush) : extent;\n    };\n\n    brush.filter = function (_) {\n      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$7(!!_), brush) : filter;\n    };\n\n    brush.touchable = function (_) {\n      return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$7(!!_), brush) : touchable;\n    };\n\n    brush.handleSize = function (_) {\n      return arguments.length ? (handleSize = +_, brush) : handleSize;\n    };\n\n    brush.keyModifiers = function (_) {\n      return arguments.length ? (keys = !!_, brush) : keys;\n    };\n\n    brush.on = function () {\n      var value = listeners.on.apply(listeners, arguments);\n      return value === listeners ? brush : value;\n    };\n\n    return brush;\n  }\n\n  var abs$2 = Math.abs;\n  var cos$2 = Math.cos;\n  var sin$2 = Math.sin;\n  var pi$3 = Math.PI;\n  var halfPi$2 = pi$3 / 2;\n  var tau$4 = pi$3 * 2;\n  var max$1 = Math.max;\n  var epsilon$5 = 1e-12;\n\n  function range$1(i, j) {\n    return Array.from({\n      length: j - i\n    }, function (_, k) {\n      return i + k;\n    });\n  }\n\n  function compareValue(compare) {\n    return function (a, b) {\n      return compare(a.source.value + a.target.value, b.source.value + b.target.value);\n    };\n  }\n\n  function chord() {\n    return chord$1(false, false);\n  }\n\n  function chordTranspose() {\n    return chord$1(false, true);\n  }\n\n  function chordDirected() {\n    return chord$1(true, false);\n  }\n\n  function chord$1(directed, transpose) {\n    var padAngle = 0,\n        sortGroups = null,\n        sortSubgroups = null,\n        sortChords = null;\n\n    function chord(matrix) {\n      var n = matrix.length,\n          groupSums = new Array(n),\n          groupIndex = range$1(0, n),\n          chords = new Array(n * n),\n          groups = new Array(n),\n          k = 0,\n          dx;\n      matrix = Float64Array.from({\n        length: n * n\n      }, transpose ? function (_, i) {\n        return matrix[i % n][i / n | 0];\n      } : function (_, i) {\n        return matrix[i / n | 0][i % n];\n      }); // Compute the scaling factor from value to angle in [0, 2pi].\n\n      for (var i = 0; i < n; ++i) {\n        var _x = 0;\n\n        for (var j = 0; j < n; ++j) {\n          _x += matrix[i * n + j] + directed * matrix[j * n + i];\n        }\n\n        k += groupSums[i] = _x;\n      }\n\n      k = max$1(0, tau$4 - padAngle * n) / k;\n      dx = k ? padAngle : tau$4 / n; // Compute the angles for each group and constituent chord.\n\n      {\n        var _x2 = 0;\n        if (sortGroups) groupIndex.sort(function (a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n\n        var _iterator52 = _createForOfIteratorHelper(groupIndex),\n            _step54;\n\n        try {\n          var _loop = function _loop() {\n            var i = _step54.value;\n            var x0 = _x2;\n\n            if (directed) {\n              var subgroupIndex = range$1(~n + 1, n).filter(function (j) {\n                return j < 0 ? matrix[~j * n + i] : matrix[i * n + j];\n              });\n              if (sortSubgroups) subgroupIndex.sort(function (a, b) {\n                return sortSubgroups(a < 0 ? -matrix[~a * n + i] : matrix[i * n + a], b < 0 ? -matrix[~b * n + i] : matrix[i * n + b]);\n              });\n\n              var _iterator53 = _createForOfIteratorHelper(subgroupIndex),\n                  _step55;\n\n              try {\n                for (_iterator53.s(); !(_step55 = _iterator53.n()).done;) {\n                  var _j2 = _step55.value;\n\n                  if (_j2 < 0) {\n                    var _chord = chords[~_j2 * n + i] || (chords[~_j2 * n + i] = {\n                      source: null,\n                      target: null\n                    });\n\n                    _chord.target = {\n                      index: i,\n                      startAngle: _x2,\n                      endAngle: _x2 += matrix[~_j2 * n + i] * k,\n                      value: matrix[~_j2 * n + i]\n                    };\n                  } else {\n                    var _chord2 = chords[i * n + _j2] || (chords[i * n + _j2] = {\n                      source: null,\n                      target: null\n                    });\n\n                    _chord2.source = {\n                      index: i,\n                      startAngle: _x2,\n                      endAngle: _x2 += matrix[i * n + _j2] * k,\n                      value: matrix[i * n + _j2]\n                    };\n                  }\n                }\n              } catch (err) {\n                _iterator53.e(err);\n              } finally {\n                _iterator53.f();\n              }\n\n              groups[i] = {\n                index: i,\n                startAngle: x0,\n                endAngle: _x2,\n                value: groupSums[i]\n              };\n            } else {\n              var _subgroupIndex = range$1(0, n).filter(function (j) {\n                return matrix[i * n + j] || matrix[j * n + i];\n              });\n\n              if (sortSubgroups) _subgroupIndex.sort(function (a, b) {\n                return sortSubgroups(matrix[i * n + a], matrix[i * n + b]);\n              });\n\n              var _iterator54 = _createForOfIteratorHelper(_subgroupIndex),\n                  _step56;\n\n              try {\n                for (_iterator54.s(); !(_step56 = _iterator54.n()).done;) {\n                  var _j3 = _step56.value;\n\n                  var _chord3 = void 0;\n\n                  if (i < _j3) {\n                    _chord3 = chords[i * n + _j3] || (chords[i * n + _j3] = {\n                      source: null,\n                      target: null\n                    });\n                    _chord3.source = {\n                      index: i,\n                      startAngle: _x2,\n                      endAngle: _x2 += matrix[i * n + _j3] * k,\n                      value: matrix[i * n + _j3]\n                    };\n                  } else {\n                    _chord3 = chords[_j3 * n + i] || (chords[_j3 * n + i] = {\n                      source: null,\n                      target: null\n                    });\n                    _chord3.target = {\n                      index: i,\n                      startAngle: _x2,\n                      endAngle: _x2 += matrix[i * n + _j3] * k,\n                      value: matrix[i * n + _j3]\n                    };\n                    if (i === _j3) _chord3.source = _chord3.target;\n                  }\n\n                  if (_chord3.source && _chord3.target && _chord3.source.value < _chord3.target.value) {\n                    var source = _chord3.source;\n                    _chord3.source = _chord3.target;\n                    _chord3.target = source;\n                  }\n                }\n              } catch (err) {\n                _iterator54.e(err);\n              } finally {\n                _iterator54.f();\n              }\n\n              groups[i] = {\n                index: i,\n                startAngle: x0,\n                endAngle: _x2,\n                value: groupSums[i]\n              };\n            }\n\n            _x2 += dx;\n          };\n\n          for (_iterator52.s(); !(_step54 = _iterator52.n()).done;) {\n            _loop();\n          }\n        } catch (err) {\n          _iterator52.e(err);\n        } finally {\n          _iterator52.f();\n        }\n      } // Remove empty chords.\n\n      chords = Object.values(chords);\n      chords.groups = groups;\n      return sortChords ? chords.sort(sortChords) : chords;\n    }\n\n    chord.padAngle = function (_) {\n      return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n    };\n\n    chord.sortGroups = function (_) {\n      return arguments.length ? (sortGroups = _, chord) : sortGroups;\n    };\n\n    chord.sortSubgroups = function (_) {\n      return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n    };\n\n    chord.sortChords = function (_) {\n      return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n    };\n\n    return chord;\n  }\n\n  var pi$2 = Math.PI,\n      tau$3 = 2 * pi$2,\n      epsilon$4 = 1e-6,\n      tauEpsilon = tau$3 - epsilon$4;\n\n  function Path$1() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n\n    this._ = \"\";\n  }\n\n  function path() {\n    return new Path$1();\n  }\n\n  Path$1.prototype = path.prototype = {\n    constructor: Path$1,\n    moveTo: function moveTo(x, y) {\n      this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n    },\n    closePath: function closePath() {\n      if (this._x1 !== null) {\n        this._x1 = this._x0, this._y1 = this._y0;\n        this._ += \"Z\";\n      }\n    },\n    lineTo: function lineTo(x, y) {\n      this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n    },\n    quadraticCurveTo: function quadraticCurveTo(x1, y1, x, y) {\n      this._ += \"Q\" + +x1 + \",\" + +y1 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n    },\n    bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      this._ += \"C\" + +x1 + \",\" + +y1 + \",\" + +x2 + \",\" + +y2 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n    },\n    arcTo: function arcTo(x1, y1, x2, y2, r) {\n      x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n      var x0 = this._x1,\n          y0 = this._y1,\n          x21 = x2 - x1,\n          y21 = y2 - y1,\n          x01 = x0 - x1,\n          y01 = y0 - y1,\n          l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.\n\n      if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x1,y1).\n\n      if (this._x1 === null) {\n        this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n      } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n      else if (!(l01_2 > epsilon$4)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n        // Equivalently, is (x1,y1) coincident with (x2,y2)?\n        // Or, is the radius zero? Line to (x1,y1).\n        else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$4) || !r) {\n            this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n          } // Otherwise, draw an arc!\n          else {\n              var x20 = x2 - x0,\n                  y20 = y2 - y0,\n                  l21_2 = x21 * x21 + y21 * y21,\n                  l20_2 = x20 * x20 + y20 * y20,\n                  l21 = Math.sqrt(l21_2),\n                  l01 = Math.sqrt(l01_2),\n                  l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n                  t01 = l / l01,\n                  t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.\n\n              if (Math.abs(t01 - 1) > epsilon$4) {\n                this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n              }\n\n              this._ += \"A\" + r + \",\" + r + \",0,0,\" + +(y01 * x20 > x01 * y20) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n            }\n    },\n    arc: function arc(x, y, r, a0, a1, ccw) {\n      x = +x, y = +y, r = +r, ccw = !!ccw;\n      var dx = r * Math.cos(a0),\n          dy = r * Math.sin(a0),\n          x0 = x + dx,\n          y0 = y + dy,\n          cw = 1 ^ ccw,\n          da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.\n\n      if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x0,y0).\n\n      if (this._x1 === null) {\n        this._ += \"M\" + x0 + \",\" + y0;\n      } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n      else if (Math.abs(this._x1 - x0) > epsilon$4 || Math.abs(this._y1 - y0) > epsilon$4) {\n          this._ += \"L\" + x0 + \",\" + y0;\n        } // Is this arc empty? We’re done.\n\n\n      if (!r) return; // Does the angle go the wrong way? Flip the direction.\n\n      if (da < 0) da = da % tau$3 + tau$3; // Is this a complete circle? Draw two arcs to complete the circle.\n\n      if (da > tauEpsilon) {\n        this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n      } // Is this arc non-empty? Draw an arc!\n      else if (da > epsilon$4) {\n          this._ += \"A\" + r + \",\" + r + \",0,\" + +(da >= pi$2) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n        }\n    },\n    rect: function rect(x, y, w, h) {\n      this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + +w + \"v\" + +h + \"h\" + -w + \"Z\";\n    },\n    toString: function toString() {\n      return this._;\n    }\n  };\n  var slice$2 = Array.prototype.slice;\n\n  function constant$6(x) {\n    return function () {\n      return x;\n    };\n  }\n\n  function defaultSource$1(d) {\n    return d.source;\n  }\n\n  function defaultTarget(d) {\n    return d.target;\n  }\n\n  function defaultRadius$1(d) {\n    return d.radius;\n  }\n\n  function defaultStartAngle(d) {\n    return d.startAngle;\n  }\n\n  function defaultEndAngle(d) {\n    return d.endAngle;\n  }\n\n  function defaultPadAngle() {\n    return 0;\n  }\n\n  function defaultArrowheadRadius() {\n    return 10;\n  }\n\n  function ribbon(headRadius) {\n    var source = defaultSource$1,\n        target = defaultTarget,\n        sourceRadius = defaultRadius$1,\n        targetRadius = defaultRadius$1,\n        startAngle = defaultStartAngle,\n        endAngle = defaultEndAngle,\n        padAngle = defaultPadAngle,\n        context = null;\n\n    function ribbon() {\n      var buffer,\n          s = source.apply(this, arguments),\n          t = target.apply(this, arguments),\n          ap = padAngle.apply(this, arguments) / 2,\n          argv = slice$2.call(arguments),\n          sr = +sourceRadius.apply(this, (argv[0] = s, argv)),\n          sa0 = startAngle.apply(this, argv) - halfPi$2,\n          sa1 = endAngle.apply(this, argv) - halfPi$2,\n          tr = +targetRadius.apply(this, (argv[0] = t, argv)),\n          ta0 = startAngle.apply(this, argv) - halfPi$2,\n          ta1 = endAngle.apply(this, argv) - halfPi$2;\n      if (!context) context = buffer = path();\n\n      if (ap > epsilon$5) {\n        if (abs$2(sa1 - sa0) > ap * 2 + epsilon$5) sa1 > sa0 ? (sa0 += ap, sa1 -= ap) : (sa0 -= ap, sa1 += ap);else sa0 = sa1 = (sa0 + sa1) / 2;\n        if (abs$2(ta1 - ta0) > ap * 2 + epsilon$5) ta1 > ta0 ? (ta0 += ap, ta1 -= ap) : (ta0 -= ap, ta1 += ap);else ta0 = ta1 = (ta0 + ta1) / 2;\n      }\n\n      context.moveTo(sr * cos$2(sa0), sr * sin$2(sa0));\n      context.arc(0, 0, sr, sa0, sa1);\n\n      if (sa0 !== ta0 || sa1 !== ta1) {\n        if (headRadius) {\n          var hr = +headRadius.apply(this, arguments),\n              tr2 = tr - hr,\n              ta2 = (ta0 + ta1) / 2;\n          context.quadraticCurveTo(0, 0, tr2 * cos$2(ta0), tr2 * sin$2(ta0));\n          context.lineTo(tr * cos$2(ta2), tr * sin$2(ta2));\n          context.lineTo(tr2 * cos$2(ta1), tr2 * sin$2(ta1));\n        } else {\n          context.quadraticCurveTo(0, 0, tr * cos$2(ta0), tr * sin$2(ta0));\n          context.arc(0, 0, tr, ta0, ta1);\n        }\n      }\n\n      context.quadraticCurveTo(0, 0, sr * cos$2(sa0), sr * sin$2(sa0));\n      context.closePath();\n      if (buffer) return context = null, buffer + \"\" || null;\n    }\n\n    if (headRadius) ribbon.headRadius = function (_) {\n      return arguments.length ? (headRadius = typeof _ === \"function\" ? _ : constant$6(+_), ribbon) : headRadius;\n    };\n\n    ribbon.radius = function (_) {\n      return arguments.length ? (sourceRadius = targetRadius = typeof _ === \"function\" ? _ : constant$6(+_), ribbon) : sourceRadius;\n    };\n\n    ribbon.sourceRadius = function (_) {\n      return arguments.length ? (sourceRadius = typeof _ === \"function\" ? _ : constant$6(+_), ribbon) : sourceRadius;\n    };\n\n    ribbon.targetRadius = function (_) {\n      return arguments.length ? (targetRadius = typeof _ === \"function\" ? _ : constant$6(+_), ribbon) : targetRadius;\n    };\n\n    ribbon.startAngle = function (_) {\n      return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$6(+_), ribbon) : startAngle;\n    };\n\n    ribbon.endAngle = function (_) {\n      return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$6(+_), ribbon) : endAngle;\n    };\n\n    ribbon.padAngle = function (_) {\n      return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$6(+_), ribbon) : padAngle;\n    };\n\n    ribbon.source = function (_) {\n      return arguments.length ? (source = _, ribbon) : source;\n    };\n\n    ribbon.target = function (_) {\n      return arguments.length ? (target = _, ribbon) : target;\n    };\n\n    ribbon.context = function (_) {\n      return arguments.length ? (context = _ == null ? null : _, ribbon) : context;\n    };\n\n    return ribbon;\n  }\n\n  function ribbon$1() {\n    return ribbon();\n  }\n\n  function ribbonArrow() {\n    return ribbon(defaultArrowheadRadius);\n  }\n\n  var array$2 = Array.prototype;\n  var slice$1 = array$2.slice;\n\n  function ascending$1(a, b) {\n    return a - b;\n  }\n\n  function area$3(ring) {\n    var i = 0,\n        n = ring.length,\n        area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n\n    while (++i < n) {\n      area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n    }\n\n    return area;\n  }\n\n  var constant$5 = function constant$5(x) {\n    return function () {\n      return x;\n    };\n  };\n\n  function contains$2(ring, hole) {\n    var i = -1,\n        n = hole.length,\n        c;\n\n    while (++i < n) {\n      if (c = ringContains(ring, hole[i])) return c;\n    }\n\n    return 0;\n  }\n\n  function ringContains(ring, point) {\n    var x = point[0],\n        y = point[1],\n        contains = -1;\n\n    for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n      var pi = ring[i],\n          xi = pi[0],\n          yi = pi[1],\n          pj = ring[j],\n          xj = pj[0],\n          yj = pj[1];\n      if (segmentContains(pi, pj, point)) return 0;\n      if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = -contains;\n    }\n\n    return contains;\n  }\n\n  function segmentContains(a, b, c) {\n    var i;\n    return collinear$1(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n  }\n\n  function collinear$1(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n  }\n\n  function within(p, q, r) {\n    return p <= q && q <= r || r <= q && q <= p;\n  }\n\n  function noop$2() {}\n\n  var cases = [[], [[[1.0, 1.5], [0.5, 1.0]]], [[[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [0.5, 1.0]]], [[[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 0.5], [1.0, 1.5]]], [[[1.0, 0.5], [0.5, 1.0]]], [[[0.5, 1.0], [1.0, 0.5]]], [[[1.0, 1.5], [1.0, 0.5]]], [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [1.0, 0.5]]], [[[0.5, 1.0], [1.5, 1.0]]], [[[1.0, 1.5], [1.5, 1.0]]], [[[0.5, 1.0], [1.0, 1.5]]], []];\n\n  function contours() {\n    var dx = 1,\n        dy = 1,\n        threshold = thresholdSturges,\n        smooth = smoothLinear;\n\n    function contours(values) {\n      var tz = threshold(values); // Convert number of thresholds into uniform thresholds.\n\n      if (!Array.isArray(tz)) {\n        var e = extent$1(values),\n            ts = tickStep(e[0], e[1], tz);\n        tz = ticks(Math.floor(e[0] / ts) * ts, Math.floor(e[1] / ts - 1) * ts, tz);\n      } else {\n        tz = tz.slice().sort(ascending$1);\n      }\n\n      return tz.map(function (value) {\n        return contour(values, value);\n      });\n    } // Accumulate, smooth contour rings, assign holes to exterior rings.\n    // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n\n\n    function contour(values, value) {\n      var polygons = [],\n          holes = [];\n      isorings(values, value, function (ring) {\n        smooth(ring, values, value);\n        if (area$3(ring) > 0) polygons.push([ring]);else holes.push(ring);\n      });\n      holes.forEach(function (hole) {\n        for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n          if (contains$2((polygon = polygons[i])[0], hole) !== -1) {\n            polygon.push(hole);\n            return;\n          }\n        }\n      });\n      return {\n        type: \"MultiPolygon\",\n        value: value,\n        coordinates: polygons\n      };\n    } // Marching squares with isolines stitched into rings.\n    // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n\n\n    function isorings(values, value, callback) {\n      var fragmentByStart = new Array(),\n          fragmentByEnd = new Array(),\n          x,\n          y,\n          t0,\n          t1,\n          t2,\n          t3; // Special case for the first row (y = -1, t2 = t3 = 0).\n\n      x = y = -1;\n      t1 = values[0] >= value;\n      cases[t1 << 1].forEach(stitch);\n\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[x + 1] >= value;\n        cases[t0 | t1 << 1].forEach(stitch);\n      }\n\n      cases[t1 << 0].forEach(stitch); // General case for the intermediate rows.\n\n      while (++y < dy - 1) {\n        x = -1;\n        t1 = values[y * dx + dx] >= value;\n        t2 = values[y * dx] >= value;\n        cases[t1 << 1 | t2 << 2].forEach(stitch);\n\n        while (++x < dx - 1) {\n          t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n          t3 = t2, t2 = values[y * dx + x + 1] >= value;\n          cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n        }\n\n        cases[t1 | t2 << 3].forEach(stitch);\n      } // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n\n\n      x = -1;\n      t2 = values[y * dx] >= value;\n      cases[t2 << 2].forEach(stitch);\n\n      while (++x < dx - 1) {\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t2 << 2 | t3 << 3].forEach(stitch);\n      }\n\n      cases[t2 << 3].forEach(stitch);\n\n      function stitch(line) {\n        var start = [line[0][0] + x, line[0][1] + y],\n            end = [line[1][0] + x, line[1][1] + y],\n            startIndex = index(start),\n            endIndex = index(end),\n            f,\n            g;\n\n        if (f = fragmentByEnd[startIndex]) {\n          if (g = fragmentByStart[endIndex]) {\n            delete fragmentByEnd[f.end];\n            delete fragmentByStart[g.start];\n\n            if (f === g) {\n              f.ring.push(end);\n              callback(f.ring);\n            } else {\n              fragmentByStart[f.start] = fragmentByEnd[g.end] = {\n                start: f.start,\n                end: g.end,\n                ring: f.ring.concat(g.ring)\n              };\n            }\n          } else {\n            delete fragmentByEnd[f.end];\n            f.ring.push(end);\n            fragmentByEnd[f.end = endIndex] = f;\n          }\n        } else if (f = fragmentByStart[endIndex]) {\n          if (g = fragmentByEnd[startIndex]) {\n            delete fragmentByStart[f.start];\n            delete fragmentByEnd[g.end];\n\n            if (f === g) {\n              f.ring.push(end);\n              callback(f.ring);\n            } else {\n              fragmentByStart[g.start] = fragmentByEnd[f.end] = {\n                start: g.start,\n                end: f.end,\n                ring: g.ring.concat(f.ring)\n              };\n            }\n          } else {\n            delete fragmentByStart[f.start];\n            f.ring.unshift(start);\n            fragmentByStart[f.start = startIndex] = f;\n          }\n        } else {\n          fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {\n            start: startIndex,\n            end: endIndex,\n            ring: [start, end]\n          };\n        }\n      }\n    }\n\n    function index(point) {\n      return point[0] * 2 + point[1] * (dx + 1) * 4;\n    }\n\n    function smoothLinear(ring, values, value) {\n      ring.forEach(function (point) {\n        var x = point[0],\n            y = point[1],\n            xt = x | 0,\n            yt = y | 0,\n            v0,\n            v1 = values[yt * dx + xt];\n\n        if (x > 0 && x < dx && xt === x) {\n          v0 = values[yt * dx + xt - 1];\n          point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n        }\n\n        if (y > 0 && y < dy && yt === y) {\n          v0 = values[(yt - 1) * dx + xt];\n          point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n        }\n      });\n    }\n\n    contours.contour = contour;\n\n    contours.size = function (_) {\n      if (!arguments.length) return [dx, dy];\n\n      var _0 = Math.floor(_[0]),\n          _1 = Math.floor(_[1]);\n\n      if (!(_0 >= 0 && _1 >= 0)) throw new Error(\"invalid size\");\n      return dx = _0, dy = _1, contours;\n    };\n\n    contours.thresholds = function (_) {\n      return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$5(slice$1.call(_)) : constant$5(_), contours) : threshold;\n    };\n\n    contours.smooth = function (_) {\n      return arguments.length ? (smooth = _ ? smoothLinear : noop$2, contours) : smooth === smoothLinear;\n    };\n\n    return contours;\n  } // TODO Optimize edge cases.\n  // TODO Optimize index calculation.\n  // TODO Optimize arguments.\n\n\n  function blurX(source, target, r) {\n    var n = source.width,\n        m = source.height,\n        w = (r << 1) + 1;\n\n    for (var j = 0; j < m; ++j) {\n      for (var i = 0, sr = 0; i < n + r; ++i) {\n        if (i < n) {\n          sr += source.data[i + j * n];\n        }\n\n        if (i >= r) {\n          if (i >= w) {\n            sr -= source.data[i - w + j * n];\n          }\n\n          target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n        }\n      }\n    }\n  } // TODO Optimize edge cases.\n  // TODO Optimize index calculation.\n  // TODO Optimize arguments.\n\n\n  function blurY(source, target, r) {\n    var n = source.width,\n        m = source.height,\n        w = (r << 1) + 1;\n\n    for (var i = 0; i < n; ++i) {\n      for (var j = 0, sr = 0; j < m + r; ++j) {\n        if (j < m) {\n          sr += source.data[i + j * n];\n        }\n\n        if (j >= r) {\n          if (j >= w) {\n            sr -= source.data[i + (j - w) * n];\n          }\n\n          target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n        }\n      }\n    }\n  }\n\n  function defaultX$1(d) {\n    return d[0];\n  }\n\n  function defaultY$1(d) {\n    return d[1];\n  }\n\n  function defaultWeight() {\n    return 1;\n  }\n\n  function density() {\n    var x = defaultX$1,\n        y = defaultY$1,\n        weight = defaultWeight,\n        dx = 960,\n        dy = 500,\n        r = 20,\n        // blur radius\n    k = 2,\n        // log2(grid cell size)\n    o = r * 3,\n        // grid offset, to pad for blur\n    n = dx + o * 2 >> k,\n        // grid width\n    m = dy + o * 2 >> k,\n        // grid height\n    threshold = constant$5(20);\n\n    function density(data) {\n      var values0 = new Float32Array(n * m),\n          values1 = new Float32Array(n * m),\n          pow2k = Math.pow(2, -k);\n      data.forEach(function (d, i, data) {\n        var xi = (x(d, i, data) + o) * pow2k,\n            yi = (y(d, i, data) + o) * pow2k,\n            wi = +weight(d, i, data);\n\n        if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n          var x0 = Math.floor(xi),\n              y0 = Math.floor(yi),\n              xt = xi - x0 - 0.5,\n              yt = yi - y0 - 0.5;\n          values0[x0 + y0 * n] += (1 - xt) * (1 - yt) * wi;\n          values0[x0 + 1 + y0 * n] += xt * (1 - yt) * wi;\n          values0[x0 + 1 + (y0 + 1) * n] += xt * yt * wi;\n          values0[x0 + (y0 + 1) * n] += (1 - xt) * yt * wi;\n        }\n      }); // TODO Optimize.\n\n      blurX({\n        width: n,\n        height: m,\n        data: values0\n      }, {\n        width: n,\n        height: m,\n        data: values1\n      }, r >> k);\n      blurY({\n        width: n,\n        height: m,\n        data: values1\n      }, {\n        width: n,\n        height: m,\n        data: values0\n      }, r >> k);\n      blurX({\n        width: n,\n        height: m,\n        data: values0\n      }, {\n        width: n,\n        height: m,\n        data: values1\n      }, r >> k);\n      blurY({\n        width: n,\n        height: m,\n        data: values1\n      }, {\n        width: n,\n        height: m,\n        data: values0\n      }, r >> k);\n      blurX({\n        width: n,\n        height: m,\n        data: values0\n      }, {\n        width: n,\n        height: m,\n        data: values1\n      }, r >> k);\n      blurY({\n        width: n,\n        height: m,\n        data: values1\n      }, {\n        width: n,\n        height: m,\n        data: values0\n      }, r >> k);\n      var tz = threshold(values0); // Convert number of thresholds into uniform thresholds.\n\n      if (!Array.isArray(tz)) {\n        var stop = max$3(values0);\n        tz = tickStep(0, stop, tz);\n        tz = range$2(0, Math.floor(stop / tz) * tz, tz);\n        tz.shift();\n      }\n\n      return contours().thresholds(tz).size([n, m])(values0).map(transform);\n    }\n\n    function transform(geometry) {\n      geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n\n      geometry.coordinates.forEach(transformPolygon);\n      return geometry;\n    }\n\n    function transformPolygon(coordinates) {\n      coordinates.forEach(transformRing);\n    }\n\n    function transformRing(coordinates) {\n      coordinates.forEach(transformPoint);\n    } // TODO Optimize.\n\n\n    function transformPoint(coordinates) {\n      coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n      coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n    }\n\n    function resize() {\n      o = r * 3;\n      n = dx + o * 2 >> k;\n      m = dy + o * 2 >> k;\n      return density;\n    }\n\n    density.x = function (_) {\n      return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$5(+_), density) : x;\n    };\n\n    density.y = function (_) {\n      return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$5(+_), density) : y;\n    };\n\n    density.weight = function (_) {\n      return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant$5(+_), density) : weight;\n    };\n\n    density.size = function (_) {\n      if (!arguments.length) return [dx, dy];\n\n      var _0 = +_[0],\n          _1 = +_[1];\n\n      if (!(_0 >= 0 && _1 >= 0)) throw new Error(\"invalid size\");\n      return dx = _0, dy = _1, resize();\n    };\n\n    density.cellSize = function (_) {\n      if (!arguments.length) return 1 << k;\n      if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n      return k = Math.floor(Math.log(_) / Math.LN2), resize();\n    };\n\n    density.thresholds = function (_) {\n      return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$5(slice$1.call(_)) : constant$5(_), density) : threshold;\n    };\n\n    density.bandwidth = function (_) {\n      if (!arguments.length) return Math.sqrt(r * (r + 1));\n      if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n      return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n    };\n\n    return density;\n  }\n\n  var epsilon$3 = 1.1102230246251565e-16;\n  var splitter = 134217729;\n  var resulterrbound = (3 + 8 * epsilon$3) * epsilon$3; // fast_expansion_sum_zeroelim routine from oritinal code\n\n  function sum$1(elen, e, flen, f, h) {\n    var Q, Qnew, hh, bvirt;\n    var enow = e[0];\n    var fnow = f[0];\n    var eindex = 0;\n    var findex = 0;\n\n    if (fnow > enow === fnow > -enow) {\n      Q = enow;\n      enow = e[++eindex];\n    } else {\n      Q = fnow;\n      fnow = f[++findex];\n    }\n\n    var hindex = 0;\n\n    if (eindex < elen && findex < flen) {\n      if (fnow > enow === fnow > -enow) {\n        Qnew = enow + Q;\n        hh = Q - (Qnew - enow);\n        enow = e[++eindex];\n      } else {\n        Qnew = fnow + Q;\n        hh = Q - (Qnew - fnow);\n        fnow = f[++findex];\n      }\n\n      Q = Qnew;\n\n      if (hh !== 0) {\n        h[hindex++] = hh;\n      }\n\n      while (eindex < elen && findex < flen) {\n        if (fnow > enow === fnow > -enow) {\n          Qnew = Q + enow;\n          bvirt = Qnew - Q;\n          hh = Q - (Qnew - bvirt) + (enow - bvirt);\n          enow = e[++eindex];\n        } else {\n          Qnew = Q + fnow;\n          bvirt = Qnew - Q;\n          hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n          fnow = f[++findex];\n        }\n\n        Q = Qnew;\n\n        if (hh !== 0) {\n          h[hindex++] = hh;\n        }\n      }\n    }\n\n    while (eindex < elen) {\n      Qnew = Q + enow;\n      bvirt = Qnew - Q;\n      hh = Q - (Qnew - bvirt) + (enow - bvirt);\n      enow = e[++eindex];\n      Q = Qnew;\n\n      if (hh !== 0) {\n        h[hindex++] = hh;\n      }\n    }\n\n    while (findex < flen) {\n      Qnew = Q + fnow;\n      bvirt = Qnew - Q;\n      hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n      fnow = f[++findex];\n      Q = Qnew;\n\n      if (hh !== 0) {\n        h[hindex++] = hh;\n      }\n    }\n\n    if (Q !== 0 || hindex === 0) {\n      h[hindex++] = Q;\n    }\n\n    return hindex;\n  }\n\n  function estimate(elen, e) {\n    var Q = e[0];\n\n    for (var i = 1; i < elen; i++) {\n      Q += e[i];\n    }\n\n    return Q;\n  }\n\n  function vec(n) {\n    return new Float64Array(n);\n  }\n\n  var ccwerrboundA = (3 + 16 * epsilon$3) * epsilon$3;\n  var ccwerrboundB = (2 + 12 * epsilon$3) * epsilon$3;\n  var ccwerrboundC = (9 + 64 * epsilon$3) * epsilon$3 * epsilon$3;\n  var B = vec(4);\n  var C1 = vec(8);\n  var C2 = vec(12);\n  var D = vec(16);\n  var u = vec(4);\n\n  function orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n    var acxtail, acytail, bcxtail, bcytail;\n\n    var bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    var acx = ax - cx;\n    var bcx = bx - cx;\n    var acy = ay - cy;\n    var bcy = by - cy;\n    s1 = acx * bcy;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcx;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    B[3] = u3;\n    var det = estimate(4, B);\n    var errbound = ccwerrboundB * detsum;\n\n    if (det >= errbound || -det >= errbound) {\n      return det;\n    }\n\n    bvirt = ax - acx;\n    acxtail = ax - (acx + bvirt) + (bvirt - cx);\n    bvirt = bx - bcx;\n    bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n    bvirt = ay - acy;\n    acytail = ay - (acy + bvirt) + (bvirt - cy);\n    bvirt = by - bcy;\n    bcytail = by - (bcy + bvirt) + (bvirt - cy);\n\n    if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n      return det;\n    }\n\n    errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n    det += acx * bcytail + bcy * acxtail - (acy * bcxtail + bcx * acytail);\n    if (det >= errbound || -det >= errbound) return det;\n    s1 = acxtail * bcy;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcx;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    var C1len = sum$1(4, B, 4, u, C1);\n    s1 = acx * bcytail;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcxtail;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    var C2len = sum$1(C1len, C1, 4, u, C2);\n    s1 = acxtail * bcytail;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcxtail;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    var Dlen = sum$1(C2len, C2, 4, u, D);\n    return D[Dlen - 1];\n  }\n\n  function orient2d(ax, ay, bx, by, cx, cy) {\n    var detleft = (ay - cy) * (bx - cx);\n    var detright = (ax - cx) * (by - cy);\n    var det = detleft - detright;\n    if (detleft === 0 || detright === 0 || detleft > 0 !== detright > 0) return det;\n    var detsum = Math.abs(detleft + detright);\n    if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n    return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n  }\n\n  var EPSILON = Math.pow(2, -52);\n  var EDGE_STACK = new Uint32Array(512);\n\n  var Delaunator = /*#__PURE__*/function () {\n    function Delaunator(coords) {\n      _classCallCheck(this, Delaunator);\n\n      var n = coords.length >> 1;\n      if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n      this.coords = coords; // arrays that will store the triangulation graph\n\n      var maxTriangles = Math.max(2 * n - 5, 0);\n      this._triangles = new Uint32Array(maxTriangles * 3);\n      this._halfedges = new Int32Array(maxTriangles * 3); // temporary arrays for tracking the edges of the advancing convex hull\n\n      this._hashSize = Math.ceil(Math.sqrt(n));\n      this._hullPrev = new Uint32Array(n); // edge to prev edge\n\n      this._hullNext = new Uint32Array(n); // edge to next edge\n\n      this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n\n      this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\n      // temporary arrays for sorting points\n\n      this._ids = new Uint32Array(n);\n      this._dists = new Float64Array(n);\n      this.update();\n    }\n\n    _createClass(Delaunator, [{\n      key: \"update\",\n      value: function update() {\n        var coords = this.coords,\n            hullPrev = this._hullPrev,\n            hullNext = this._hullNext,\n            hullTri = this._hullTri,\n            hullHash = this._hullHash;\n        var n = coords.length >> 1; // populate an array of point indices; calculate input data bbox\n\n        var minX = Infinity;\n        var minY = Infinity;\n        var maxX = -Infinity;\n        var maxY = -Infinity;\n\n        for (var i = 0; i < n; i++) {\n          var _x3 = coords[2 * i];\n          var _y2 = coords[2 * i + 1];\n          if (_x3 < minX) minX = _x3;\n          if (_y2 < minY) minY = _y2;\n          if (_x3 > maxX) maxX = _x3;\n          if (_y2 > maxY) maxY = _y2;\n          this._ids[i] = i;\n        }\n\n        var cx = (minX + maxX) / 2;\n        var cy = (minY + maxY) / 2;\n        var minDist = Infinity;\n        var i0, i1, i2; // pick a seed point close to the center\n\n        for (var _i4 = 0; _i4 < n; _i4++) {\n          var d = dist(cx, cy, coords[2 * _i4], coords[2 * _i4 + 1]);\n\n          if (d < minDist) {\n            i0 = _i4;\n            minDist = d;\n          }\n        }\n\n        var i0x = coords[2 * i0];\n        var i0y = coords[2 * i0 + 1];\n        minDist = Infinity; // find the point closest to the seed\n\n        for (var _i5 = 0; _i5 < n; _i5++) {\n          if (_i5 === i0) continue;\n\n          var _d2 = dist(i0x, i0y, coords[2 * _i5], coords[2 * _i5 + 1]);\n\n          if (_d2 < minDist && _d2 > 0) {\n            i1 = _i5;\n            minDist = _d2;\n          }\n        }\n\n        var i1x = coords[2 * i1];\n        var i1y = coords[2 * i1 + 1];\n        var minRadius = Infinity; // find the third point which forms the smallest circumcircle with the first two\n\n        for (var _i6 = 0; _i6 < n; _i6++) {\n          if (_i6 === i0 || _i6 === i1) continue;\n          var r = circumradius(i0x, i0y, i1x, i1y, coords[2 * _i6], coords[2 * _i6 + 1]);\n\n          if (r < minRadius) {\n            i2 = _i6;\n            minRadius = r;\n          }\n        }\n\n        var i2x = coords[2 * i2];\n        var i2y = coords[2 * i2 + 1];\n\n        if (minRadius === Infinity) {\n          // order collinear points by dx (or dy if all x are identical)\n          // and return the list as a hull\n          for (var _i7 = 0; _i7 < n; _i7++) {\n            this._dists[_i7] = coords[2 * _i7] - coords[0] || coords[2 * _i7 + 1] - coords[1];\n          }\n\n          quicksort(this._ids, this._dists, 0, n - 1);\n\n          var _hull = new Uint32Array(n);\n\n          var j = 0;\n\n          for (var _i8 = 0, d0 = -Infinity; _i8 < n; _i8++) {\n            var _id = this._ids[_i8];\n\n            if (this._dists[_id] > d0) {\n              _hull[j++] = _id;\n              d0 = this._dists[_id];\n            }\n          }\n\n          this.hull = _hull.subarray(0, j);\n          this.triangles = new Uint32Array(0);\n          this.halfedges = new Uint32Array(0);\n          return;\n        } // swap the order of the seed points for counter-clockwise orientation\n\n\n        if (orient2d(i0x, i0y, i1x, i1y, i2x, i2y) < 0) {\n          var _i9 = i1;\n          var _x4 = i1x;\n          var _y3 = i1y;\n          i1 = i2;\n          i1x = i2x;\n          i1y = i2y;\n          i2 = _i9;\n          i2x = _x4;\n          i2y = _y3;\n        }\n\n        var center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n        this._cx = center.x;\n        this._cy = center.y;\n\n        for (var _i10 = 0; _i10 < n; _i10++) {\n          this._dists[_i10] = dist(coords[2 * _i10], coords[2 * _i10 + 1], center.x, center.y);\n        } // sort the points by distance from the seed triangle circumcenter\n\n\n        quicksort(this._ids, this._dists, 0, n - 1); // set up the seed triangle as the starting hull\n\n        this._hullStart = i0;\n        var hullSize = 3;\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n        hullHash.fill(-1);\n        hullHash[this._hashKey(i0x, i0y)] = i0;\n        hullHash[this._hashKey(i1x, i1y)] = i1;\n        hullHash[this._hashKey(i2x, i2y)] = i2;\n        this.trianglesLen = 0;\n\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n        for (var _k = 0, xp, yp; _k < this._ids.length; _k++) {\n          var _i11 = this._ids[_k];\n          var _x5 = coords[2 * _i11];\n          var _y4 = coords[2 * _i11 + 1]; // skip near-duplicate points\n\n          if (_k > 0 && Math.abs(_x5 - xp) <= EPSILON && Math.abs(_y4 - yp) <= EPSILON) continue;\n          xp = _x5;\n          yp = _y4; // skip seed triangle points\n\n          if (_i11 === i0 || _i11 === i1 || _i11 === i2) continue; // find a visible edge on the convex hull using edge hash\n\n          var _start = 0;\n\n          for (var _j4 = 0, key = this._hashKey(_x5, _y4); _j4 < this._hashSize; _j4++) {\n            _start = hullHash[(key + _j4) % this._hashSize];\n            if (_start !== -1 && _start !== hullNext[_start]) break;\n          }\n\n          _start = hullPrev[_start];\n          var e = _start,\n              q = void 0;\n\n          while (q = hullNext[e], orient2d(_x5, _y4, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1]) >= 0) {\n            e = q;\n\n            if (e === _start) {\n              e = -1;\n              break;\n            }\n          }\n\n          if (e === -1) continue; // likely a near-duplicate point; skip it\n          // add the first triangle from the point\n\n          var t = this._addTriangle(e, _i11, hullNext[e], -1, -1, hullTri[e]); // recursively flip triangles from the point until they satisfy the Delaunay condition\n\n\n          hullTri[_i11] = this._legalize(t + 2);\n          hullTri[e] = t; // keep track of boundary triangles on the hull\n\n          hullSize++; // walk forward through the hull, adding more triangles and flipping recursively\n\n          var _n2 = hullNext[e];\n\n          while (q = hullNext[_n2], orient2d(_x5, _y4, coords[2 * _n2], coords[2 * _n2 + 1], coords[2 * q], coords[2 * q + 1]) < 0) {\n            t = this._addTriangle(_n2, _i11, q, hullTri[_i11], -1, hullTri[_n2]);\n            hullTri[_i11] = this._legalize(t + 2);\n            hullNext[_n2] = _n2; // mark as removed\n\n            hullSize--;\n            _n2 = q;\n          } // walk backward from the other side, adding more triangles and flipping\n\n\n          if (e === _start) {\n            while (q = hullPrev[e], orient2d(_x5, _y4, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1]) < 0) {\n              t = this._addTriangle(q, _i11, e, -1, hullTri[e], hullTri[q]);\n\n              this._legalize(t + 2);\n\n              hullTri[q] = t;\n              hullNext[e] = e; // mark as removed\n\n              hullSize--;\n              e = q;\n            }\n          } // update the hull indices\n\n\n          this._hullStart = hullPrev[_i11] = e;\n          hullNext[e] = hullPrev[_n2] = _i11;\n          hullNext[_i11] = _n2; // save the two new edges in the hash table\n\n          hullHash[this._hashKey(_x5, _y4)] = _i11;\n          hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n        }\n\n        this.hull = new Uint32Array(hullSize);\n\n        for (var _i12 = 0, _e2 = this._hullStart; _i12 < hullSize; _i12++) {\n          this.hull[_i12] = _e2;\n          _e2 = hullNext[_e2];\n        } // trim typed triangle mesh arrays\n\n\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n      }\n    }, {\n      key: \"_hashKey\",\n      value: function _hashKey(x, y) {\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n      }\n    }, {\n      key: \"_legalize\",\n      value: function _legalize(a) {\n        var triangles = this._triangles,\n            halfedges = this._halfedges,\n            coords = this.coords;\n        var i = 0;\n        var ar = 0; // recursion eliminated with a fixed-size stack\n\n        while (true) {\n          var b = halfedges[a];\n          /* if the pair of triangles doesn't satisfy the Delaunay condition\n           * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n           * then do the same check/flip recursively for the new pair of triangles\n           *\n           *           pl                    pl\n           *          /||\\                  /  \\\n           *       al/ || \\bl            al/    \\a\n           *        /  ||  \\              /      \\\n           *       /  a||b  \\    flip    /___ar___\\\n           *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n           *        \\  ||  /              \\      /\n           *       ar\\ || /br             b\\    /br\n           *          \\||/                  \\  /\n           *           pr                    pr\n           */\n\n          var a0 = a - a % 3;\n          ar = a0 + (a + 2) % 3;\n\n          if (b === -1) {\n            // convex hull edge\n            if (i === 0) break;\n            a = EDGE_STACK[--i];\n            continue;\n          }\n\n          var _b = b - b % 3;\n\n          var al = a0 + (a + 1) % 3;\n          var bl = _b + (b + 2) % 3;\n          var _p = triangles[ar];\n          var pr = triangles[a];\n          var pl = triangles[al];\n          var p1 = triangles[bl];\n          var illegal = inCircle(coords[2 * _p], coords[2 * _p + 1], coords[2 * pr], coords[2 * pr + 1], coords[2 * pl], coords[2 * pl + 1], coords[2 * p1], coords[2 * p1 + 1]);\n\n          if (illegal) {\n            triangles[a] = p1;\n            triangles[b] = _p;\n            var hbl = halfedges[bl]; // edge swapped on the other side of the hull (rare); fix the halfedge reference\n\n            if (hbl === -1) {\n              var e = this._hullStart;\n\n              do {\n                if (this._hullTri[e] === bl) {\n                  this._hullTri[e] = a;\n                  break;\n                }\n\n                e = this._hullPrev[e];\n              } while (e !== this._hullStart);\n            }\n\n            this._link(a, hbl);\n\n            this._link(b, halfedges[ar]);\n\n            this._link(ar, bl);\n\n            var br = _b + (b + 1) % 3; // don't worry about hitting the cap: it can only happen on extremely degenerate input\n\n            if (i < EDGE_STACK.length) {\n              EDGE_STACK[i++] = br;\n            }\n          } else {\n            if (i === 0) break;\n            a = EDGE_STACK[--i];\n          }\n        }\n\n        return ar;\n      }\n    }, {\n      key: \"_link\",\n      value: function _link(a, b) {\n        this._halfedges[a] = b;\n        if (b !== -1) this._halfedges[b] = a;\n      } // add a new triangle given vertex indices and adjacent half-edge ids\n\n    }, {\n      key: \"_addTriangle\",\n      value: function _addTriangle(i0, i1, i2, a, b, c) {\n        var t = this.trianglesLen;\n        this._triangles[t] = i0;\n        this._triangles[t + 1] = i1;\n        this._triangles[t + 2] = i2;\n\n        this._link(t, a);\n\n        this._link(t + 1, b);\n\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n        return t;\n      }\n    }], [{\n      key: \"from\",\n      value: function from(points) {\n        var getX = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetX;\n        var getY = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGetY;\n        var n = points.length;\n        var coords = new Float64Array(n * 2);\n\n        for (var i = 0; i < n; i++) {\n          var p = points[i];\n          coords[2 * i] = getX(p);\n          coords[2 * i + 1] = getY(p);\n        }\n\n        return new Delaunator(coords);\n      }\n    }]);\n\n    return Delaunator;\n  }(); // monotonically increases with real angle, but doesn't need expensive trigonometry\n\n\n  function pseudoAngle(dx, dy) {\n    var p = dx / (Math.abs(dx) + Math.abs(dy));\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n  }\n\n  function dist(ax, ay, bx, by) {\n    var dx = ax - bx;\n    var dy = ay - by;\n    return dx * dx + dy * dy;\n  }\n\n  function inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    var dx = ax - px;\n    var dy = ay - py;\n    var ex = bx - px;\n    var ey = by - py;\n    var fx = cx - px;\n    var fy = cy - py;\n    var ap = dx * dx + dy * dy;\n    var bp = ex * ex + ey * ey;\n    var cp = fx * fx + fy * fy;\n    return dx * (ey * cp - bp * fy) - dy * (ex * cp - bp * fx) + ap * (ex * fy - ey * fx) < 0;\n  }\n\n  function circumradius(ax, ay, bx, by, cx, cy) {\n    var dx = bx - ax;\n    var dy = by - ay;\n    var ex = cx - ax;\n    var ey = cy - ay;\n    var bl = dx * dx + dy * dy;\n    var cl = ex * ex + ey * ey;\n    var d = 0.5 / (dx * ey - dy * ex);\n    var x = (ey * bl - dy * cl) * d;\n    var y = (dx * cl - ex * bl) * d;\n    return x * x + y * y;\n  }\n\n  function circumcenter(ax, ay, bx, by, cx, cy) {\n    var dx = bx - ax;\n    var dy = by - ay;\n    var ex = cx - ax;\n    var ey = cy - ay;\n    var bl = dx * dx + dy * dy;\n    var cl = ex * ex + ey * ey;\n    var d = 0.5 / (dx * ey - dy * ex);\n    var x = ax + (ey * bl - dy * cl) * d;\n    var y = ay + (dx * cl - ex * bl) * d;\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function quicksort(ids, dists, left, right) {\n    if (right - left <= 20) {\n      for (var i = left + 1; i <= right; i++) {\n        var temp = ids[i];\n        var tempDist = dists[temp];\n        var j = i - 1;\n\n        while (j >= left && dists[ids[j]] > tempDist) {\n          ids[j + 1] = ids[j--];\n        }\n\n        ids[j + 1] = temp;\n      }\n    } else {\n      var _median = left + right >> 1;\n\n      var _i13 = left + 1;\n\n      var _j5 = right;\n      swap(ids, _median, _i13);\n      if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n      if (dists[ids[_i13]] > dists[ids[right]]) swap(ids, _i13, right);\n      if (dists[ids[left]] > dists[ids[_i13]]) swap(ids, left, _i13);\n      var _temp = ids[_i13];\n      var _tempDist = dists[_temp];\n\n      while (true) {\n        do {\n          _i13++;\n        } while (dists[ids[_i13]] < _tempDist);\n\n        do {\n          _j5--;\n        } while (dists[ids[_j5]] > _tempDist);\n\n        if (_j5 < _i13) break;\n        swap(ids, _i13, _j5);\n      }\n\n      ids[left + 1] = ids[_j5];\n      ids[_j5] = _temp;\n\n      if (right - _i13 + 1 >= _j5 - left) {\n        quicksort(ids, dists, _i13, right);\n        quicksort(ids, dists, left, _j5 - 1);\n      } else {\n        quicksort(ids, dists, left, _j5 - 1);\n        quicksort(ids, dists, _i13, right);\n      }\n    }\n  }\n\n  function swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n  }\n\n  function defaultGetX(p) {\n    return p[0];\n  }\n\n  function defaultGetY(p) {\n    return p[1];\n  }\n\n  var epsilon$2 = 1e-6;\n\n  var Path = /*#__PURE__*/function () {\n    function Path() {\n      _classCallCheck(this, Path);\n\n      this._x0 = this._y0 = // start of current subpath\n      this._x1 = this._y1 = null; // end of current subpath\n\n      this._ = \"\";\n    }\n\n    _createClass(Path, [{\n      key: \"moveTo\",\n      value: function moveTo(x, y) {\n        this._ += \"M\".concat(this._x0 = this._x1 = +x, \",\").concat(this._y0 = this._y1 = +y);\n      }\n    }, {\n      key: \"closePath\",\n      value: function closePath() {\n        if (this._x1 !== null) {\n          this._x1 = this._x0, this._y1 = this._y0;\n          this._ += \"Z\";\n        }\n      }\n    }, {\n      key: \"lineTo\",\n      value: function lineTo(x, y) {\n        this._ += \"L\".concat(this._x1 = +x, \",\").concat(this._y1 = +y);\n      }\n    }, {\n      key: \"arc\",\n      value: function arc(x, y, r) {\n        x = +x, y = +y, r = +r;\n        var x0 = x + r;\n        var y0 = y;\n        if (r < 0) throw new Error(\"negative radius\");\n        if (this._x1 === null) this._ += \"M\".concat(x0, \",\").concat(y0);else if (Math.abs(this._x1 - x0) > epsilon$2 || Math.abs(this._y1 - y0) > epsilon$2) this._ += \"L\" + x0 + \",\" + y0;\n        if (!r) return;\n        this._ += \"A\".concat(r, \",\").concat(r, \",0,1,1,\").concat(x - r, \",\").concat(y, \"A\").concat(r, \",\").concat(r, \",0,1,1,\").concat(this._x1 = x0, \",\").concat(this._y1 = y0);\n      }\n    }, {\n      key: \"rect\",\n      value: function rect(x, y, w, h) {\n        this._ += \"M\".concat(this._x0 = this._x1 = +x, \",\").concat(this._y0 = this._y1 = +y, \"h\").concat(+w, \"v\").concat(+h, \"h\").concat(-w, \"Z\");\n      }\n    }, {\n      key: \"value\",\n      value: function value() {\n        return this._ || null;\n      }\n    }]);\n\n    return Path;\n  }();\n\n  var Polygon = /*#__PURE__*/function () {\n    function Polygon() {\n      _classCallCheck(this, Polygon);\n\n      this._ = [];\n    }\n\n    _createClass(Polygon, [{\n      key: \"moveTo\",\n      value: function moveTo(x, y) {\n        this._.push([x, y]);\n      }\n    }, {\n      key: \"closePath\",\n      value: function closePath() {\n        this._.push(this._[0].slice());\n      }\n    }, {\n      key: \"lineTo\",\n      value: function lineTo(x, y) {\n        this._.push([x, y]);\n      }\n    }, {\n      key: \"value\",\n      value: function value() {\n        return this._.length ? this._ : null;\n      }\n    }]);\n\n    return Polygon;\n  }();\n\n  var Voronoi = /*#__PURE__*/function () {\n    function Voronoi(delaunay) {\n      var _ref27 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0, 960, 500],\n          _ref28 = _slicedToArray(_ref27, 4),\n          xmin = _ref28[0],\n          ymin = _ref28[1],\n          xmax = _ref28[2],\n          ymax = _ref28[3];\n\n      _classCallCheck(this, Voronoi);\n\n      if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n      this.delaunay = delaunay;\n      this._circumcenters = new Float64Array(delaunay.points.length * 2);\n      this.vectors = new Float64Array(delaunay.points.length * 2);\n      this.xmax = xmax, this.xmin = xmin;\n      this.ymax = ymax, this.ymin = ymin;\n\n      this._init();\n    }\n\n    _createClass(Voronoi, [{\n      key: \"update\",\n      value: function update() {\n        this.delaunay.update();\n\n        this._init();\n\n        return this;\n      }\n    }, {\n      key: \"_init\",\n      value: function _init() {\n        var _this$delaunay = this.delaunay,\n            points = _this$delaunay.points,\n            hull = _this$delaunay.hull,\n            triangles = _this$delaunay.triangles,\n            vectors = this.vectors; // Compute circumcenters.\n\n        var circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n\n        for (var i = 0, j = 0, n = triangles.length, _x6, _y5; i < n; i += 3, j += 2) {\n          var _t = triangles[i] * 2;\n\n          var _t2 = triangles[i + 1] * 2;\n\n          var _t3 = triangles[i + 2] * 2;\n\n          var _x7 = points[_t];\n          var _y6 = points[_t + 1];\n          var x2 = points[_t2];\n          var y2 = points[_t2 + 1];\n          var x3 = points[_t3];\n          var y3 = points[_t3 + 1];\n          var dx = x2 - _x7;\n          var dy = y2 - _y6;\n          var ex = x3 - _x7;\n          var ey = y3 - _y6;\n          var ab = (dx * ey - dy * ex) * 2;\n\n          if (Math.abs(ab) < 1e-9) {\n            // degenerate case (collinear diagram)\n            // almost equal points (degenerate triangle)\n            // the circumcenter is at the infinity, in a\n            // direction that is:\n            // 1. orthogonal to the halfedge.\n            var _a = 1e9; // 2. points away from the center; since the list of triangles starts\n            // in the center, the first point of the first triangle\n            // will be our reference\n\n            var r = triangles[0] * 2;\n            _a *= Math.sign((points[r] - _x7) * ey - (points[r + 1] - _y6) * ex);\n            _x6 = (_x7 + x3) / 2 - _a * ey;\n            _y5 = (_y6 + y3) / 2 + _a * ex;\n          } else {\n            var d = 1 / ab;\n            var bl = dx * dx + dy * dy;\n            var cl = ex * ex + ey * ey;\n            _x6 = _x7 + (ey * bl - dy * cl) * d;\n            _y5 = _y6 + (dx * cl - ex * bl) * d;\n          }\n\n          circumcenters[j] = _x6;\n          circumcenters[j + 1] = _y5;\n        } // Compute exterior cell rays.\n\n\n        var h = hull[hull.length - 1];\n        var p0,\n            p1 = h * 4;\n        var x0,\n            x1 = points[2 * h];\n        var y0,\n            y1 = points[2 * h + 1];\n        vectors.fill(0);\n\n        for (var _i14 = 0; _i14 < hull.length; ++_i14) {\n          h = hull[_i14];\n          p0 = p1, x0 = x1, y0 = y1;\n          p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n          vectors[p0 + 2] = vectors[p1] = y0 - y1;\n          vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render(context) {\n        var buffer = context == null ? context = new Path() : undefined;\n        var _this$delaunay2 = this.delaunay,\n            halfedges = _this$delaunay2.halfedges,\n            inedges = _this$delaunay2.inedges,\n            hull = _this$delaunay2.hull,\n            circumcenters = this.circumcenters,\n            vectors = this.vectors;\n        if (hull.length <= 1) return null;\n\n        for (var i = 0, n = halfedges.length; i < n; ++i) {\n          var j = halfedges[i];\n          if (j < i) continue;\n          var ti = Math.floor(i / 3) * 2;\n          var tj = Math.floor(j / 3) * 2;\n          var xi = circumcenters[ti];\n          var yi = circumcenters[ti + 1];\n          var xj = circumcenters[tj];\n          var yj = circumcenters[tj + 1];\n\n          this._renderSegment(xi, yi, xj, yj, context);\n        }\n\n        var h0,\n            h1 = hull[hull.length - 1];\n\n        for (var _i15 = 0; _i15 < hull.length; ++_i15) {\n          h0 = h1, h1 = hull[_i15];\n          var t = Math.floor(inedges[h1] / 3) * 2;\n          var _x8 = circumcenters[t];\n          var _y7 = circumcenters[t + 1];\n          var v = h0 * 4;\n\n          var p = this._project(_x8, _y7, vectors[v + 2], vectors[v + 3]);\n\n          if (p) this._renderSegment(_x8, _y7, p[0], p[1], context);\n        }\n\n        return buffer && buffer.value();\n      }\n    }, {\n      key: \"renderBounds\",\n      value: function renderBounds(context) {\n        var buffer = context == null ? context = new Path() : undefined;\n        context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n        return buffer && buffer.value();\n      }\n    }, {\n      key: \"renderCell\",\n      value: function renderCell(i, context) {\n        var buffer = context == null ? context = new Path() : undefined;\n\n        var points = this._clip(i);\n\n        if (points === null || !points.length) return;\n        context.moveTo(points[0], points[1]);\n        var n = points.length;\n\n        while (points[0] === points[n - 2] && points[1] === points[n - 1] && n > 1) {\n          n -= 2;\n        }\n\n        for (var _i16 = 2; _i16 < n; _i16 += 2) {\n          if (points[_i16] !== points[_i16 - 2] || points[_i16 + 1] !== points[_i16 - 1]) context.lineTo(points[_i16], points[_i16 + 1]);\n        }\n\n        context.closePath();\n        return buffer && buffer.value();\n      }\n    }, {\n      key: \"cellPolygons\",\n      value: /*#__PURE__*/_regeneratorRuntime.mark(function cellPolygons() {\n        var points, i, n, cell;\n        return _regeneratorRuntime.wrap(function cellPolygons$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                points = this.delaunay.points;\n                i = 0, n = points.length / 2;\n\n              case 2:\n                if (!(i < n)) {\n                  _context4.next = 11;\n                  break;\n                }\n\n                cell = this.cellPolygon(i);\n\n                if (!cell) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                cell.index = i;\n                _context4.next = 8;\n                return cell;\n\n              case 8:\n                ++i;\n                _context4.next = 2;\n                break;\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, cellPolygons, this);\n      })\n    }, {\n      key: \"cellPolygon\",\n      value: function cellPolygon(i) {\n        var polygon = new Polygon();\n        this.renderCell(i, polygon);\n        return polygon.value();\n      }\n    }, {\n      key: \"_renderSegment\",\n      value: function _renderSegment(x0, y0, x1, y1, context) {\n        var S;\n\n        var c0 = this._regioncode(x0, y0);\n\n        var c1 = this._regioncode(x1, y1);\n\n        if (c0 === 0 && c1 === 0) {\n          context.moveTo(x0, y0);\n          context.lineTo(x1, y1);\n        } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n          context.moveTo(S[0], S[1]);\n          context.lineTo(S[2], S[3]);\n        }\n      }\n    }, {\n      key: \"contains\",\n      value: function contains(i, x, y) {\n        if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n        return this.delaunay._step(i, x, y) === i;\n      }\n    }, {\n      key: \"neighbors\",\n      value: /*#__PURE__*/_regeneratorRuntime.mark(function neighbors(i) {\n        var ci, _iterator55, _step57, j, cj, ai, li, aj, lj;\n\n        return _regeneratorRuntime.wrap(function neighbors$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                ci = this._clip(i);\n\n                if (!ci) {\n                  _context5.next = 33;\n                  break;\n                }\n\n                _iterator55 = _createForOfIteratorHelper(this.delaunay.neighbors(i));\n                _context5.prev = 3;\n\n                _iterator55.s();\n\n              case 5:\n                if ((_step57 = _iterator55.n()).done) {\n                  _context5.next = 25;\n                  break;\n                }\n\n                j = _step57.value;\n                cj = this._clip(j); // find the common edge\n\n                if (!cj) {\n                  _context5.next = 23;\n                  break;\n                }\n\n                ai = 0, li = ci.length;\n\n              case 10:\n                if (!(ai < li)) {\n                  _context5.next = 23;\n                  break;\n                }\n\n                aj = 0, lj = cj.length;\n\n              case 12:\n                if (!(aj < lj)) {\n                  _context5.next = 20;\n                  break;\n                }\n\n                if (!(ci[ai] == cj[aj] && ci[ai + 1] == cj[aj + 1] && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj] && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj])) {\n                  _context5.next = 17;\n                  break;\n                }\n\n                _context5.next = 16;\n                return j;\n\n              case 16:\n                return _context5.abrupt(\"break\", 23);\n\n              case 17:\n                aj += 2;\n                _context5.next = 12;\n                break;\n\n              case 20:\n                ai += 2;\n                _context5.next = 10;\n                break;\n\n              case 23:\n                _context5.next = 5;\n                break;\n\n              case 25:\n                _context5.next = 30;\n                break;\n\n              case 27:\n                _context5.prev = 27;\n                _context5.t0 = _context5[\"catch\"](3);\n\n                _iterator55.e(_context5.t0);\n\n              case 30:\n                _context5.prev = 30;\n\n                _iterator55.f();\n\n                return _context5.finish(30);\n\n              case 33:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, neighbors, this, [[3, 27, 30, 33]]);\n      })\n    }, {\n      key: \"_cell\",\n      value: function _cell(i) {\n        var circumcenters = this.circumcenters,\n            _this$delaunay3 = this.delaunay,\n            inedges = _this$delaunay3.inedges,\n            halfedges = _this$delaunay3.halfedges,\n            triangles = _this$delaunay3.triangles;\n        var e0 = inedges[i];\n        if (e0 === -1) return null; // coincident point\n\n        var points = [];\n        var e = e0;\n\n        do {\n          var t = Math.floor(e / 3);\n          points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n          e = e % 3 === 2 ? e - 2 : e + 1;\n          if (triangles[e] !== i) break; // bad triangulation\n\n          e = halfedges[e];\n        } while (e !== e0 && e !== -1);\n\n        return points;\n      }\n    }, {\n      key: \"_clip\",\n      value: function _clip(i) {\n        // degenerate case (1 valid point: return the box)\n        if (i === 0 && this.delaunay.hull.length === 1) {\n          return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n        }\n\n        var points = this._cell(i);\n\n        if (points === null) return null;\n        var V = this.vectors;\n        var v = i * 4;\n        return V[v] || V[v + 1] ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3]) : this._clipFinite(i, points);\n      }\n    }, {\n      key: \"_clipFinite\",\n      value: function _clipFinite(i, points) {\n        var n = points.length;\n        var P = null;\n        var x0,\n            y0,\n            x1 = points[n - 2],\n            y1 = points[n - 1];\n\n        var c0,\n            c1 = this._regioncode(x1, y1);\n\n        var e0,\n            e1 = 0;\n\n        for (var j = 0; j < n; j += 2) {\n          x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n          c0 = c1, c1 = this._regioncode(x1, y1);\n\n          if (c0 === 0 && c1 === 0) {\n            e0 = e1, e1 = 0;\n            if (P) P.push(x1, y1);else P = [x1, y1];\n          } else {\n            var S = void 0,\n                sx0 = void 0,\n                sy0 = void 0,\n                sx1 = void 0,\n                sy1 = void 0;\n\n            if (c0 === 0) {\n              if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n              var _S = S;\n\n              var _S2 = _slicedToArray(_S, 4);\n\n              sx0 = _S2[0];\n              sy0 = _S2[1];\n              sx1 = _S2[2];\n              sy1 = _S2[3];\n            } else {\n              if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n              var _S3 = S;\n\n              var _S4 = _slicedToArray(_S3, 4);\n\n              sx1 = _S4[0];\n              sy1 = _S4[1];\n              sx0 = _S4[2];\n              sy0 = _S4[3];\n              e0 = e1, e1 = this._edgecode(sx0, sy0);\n              if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n              if (P) P.push(sx0, sy0);else P = [sx0, sy0];\n            }\n\n            e0 = e1, e1 = this._edgecode(sx1, sy1);\n            if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n            if (P) P.push(sx1, sy1);else P = [sx1, sy1];\n          }\n        }\n\n        if (P) {\n          e0 = e1, e1 = this._edgecode(P[0], P[1]);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n          return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n        }\n\n        return P;\n      }\n    }, {\n      key: \"_clipSegment\",\n      value: function _clipSegment(x0, y0, x1, y1, c0, c1) {\n        while (true) {\n          if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];\n          if (c0 & c1) return null;\n\n          var _x9 = void 0,\n              _y8 = void 0,\n              _c2 = c0 || c1;\n\n          if (_c2 & 8) _x9 = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), _y8 = this.ymax;else if (_c2 & 4) _x9 = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), _y8 = this.ymin;else if (_c2 & 2) _y8 = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), _x9 = this.xmax;else _y8 = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), _x9 = this.xmin;\n          if (c0) x0 = _x9, y0 = _y8, c0 = this._regioncode(x0, y0);else x1 = _x9, y1 = _y8, c1 = this._regioncode(x1, y1);\n        }\n      }\n    }, {\n      key: \"_clipInfinite\",\n      value: function _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n        var P = Array.from(points),\n            p;\n        if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n        if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n\n        if (P = this._clipFinite(i, P)) {\n          for (var j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n            c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n            if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n          }\n        } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n          P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n        }\n\n        return P;\n      }\n    }, {\n      key: \"_edge\",\n      value: function _edge(i, e0, e1, P, j) {\n        while (e0 !== e1) {\n          var _x10 = void 0,\n              _y9 = void 0;\n\n          switch (e0) {\n            case 5:\n              e0 = 4;\n              continue;\n            // top-left\n\n            case 4:\n              e0 = 6, _x10 = this.xmax, _y9 = this.ymin;\n              break;\n            // top\n\n            case 6:\n              e0 = 2;\n              continue;\n            // top-right\n\n            case 2:\n              e0 = 10, _x10 = this.xmax, _y9 = this.ymax;\n              break;\n            // right\n\n            case 10:\n              e0 = 8;\n              continue;\n            // bottom-right\n\n            case 8:\n              e0 = 9, _x10 = this.xmin, _y9 = this.ymax;\n              break;\n            // bottom\n\n            case 9:\n              e0 = 1;\n              continue;\n            // bottom-left\n\n            case 1:\n              e0 = 5, _x10 = this.xmin, _y9 = this.ymin;\n              break;\n            // left\n          } // Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are\n          // undefined, the conditional statement will be executed.\n\n\n          if ((P[j] !== _x10 || P[j + 1] !== _y9) && this.contains(i, _x10, _y9)) {\n            P.splice(j, 0, _x10, _y9), j += 2;\n          }\n        }\n\n        if (P.length > 4) {\n          for (var _i17 = 0; _i17 < P.length; _i17 += 2) {\n            var _j6 = (_i17 + 2) % P.length,\n                _k2 = (_i17 + 4) % P.length;\n\n            if (P[_i17] === P[_j6] && P[_j6] === P[_k2] || P[_i17 + 1] === P[_j6 + 1] && P[_j6 + 1] === P[_k2 + 1]) P.splice(_j6, 2), _i17 -= 2;\n          }\n        }\n\n        return j;\n      }\n    }, {\n      key: \"_project\",\n      value: function _project(x0, y0, vx, vy) {\n        var t = Infinity,\n            c,\n            x,\n            y;\n\n        if (vy < 0) {\n          // top\n          if (y0 <= this.ymin) return null;\n          if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n        } else if (vy > 0) {\n          // bottom\n          if (y0 >= this.ymax) return null;\n          if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n        }\n\n        if (vx > 0) {\n          // right\n          if (x0 >= this.xmax) return null;\n          if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n        } else if (vx < 0) {\n          // left\n          if (x0 <= this.xmin) return null;\n          if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n        }\n\n        return [x, y];\n      }\n    }, {\n      key: \"_edgecode\",\n      value: function _edgecode(x, y) {\n        return (x === this.xmin ? 1 : x === this.xmax ? 2 : 0) | (y === this.ymin ? 4 : y === this.ymax ? 8 : 0);\n      }\n    }, {\n      key: \"_regioncode\",\n      value: function _regioncode(x, y) {\n        return (x < this.xmin ? 1 : x > this.xmax ? 2 : 0) | (y < this.ymin ? 4 : y > this.ymax ? 8 : 0);\n      }\n    }]);\n\n    return Voronoi;\n  }();\n\n  var tau$2 = 2 * Math.PI,\n      pow$2 = Math.pow;\n\n  function pointX(p) {\n    return p[0];\n  }\n\n  function pointY(p) {\n    return p[1];\n  } // A triangulation is collinear if all its triangles have a non-null area\n\n\n  function collinear(d) {\n    var triangles = d.triangles,\n        coords = d.coords;\n\n    for (var i = 0; i < triangles.length; i += 3) {\n      var _a2 = 2 * triangles[i],\n          b = 2 * triangles[i + 1],\n          _c3 = 2 * triangles[i + 2],\n          _cross = (coords[_c3] - coords[_a2]) * (coords[b + 1] - coords[_a2 + 1]) - (coords[b] - coords[_a2]) * (coords[_c3 + 1] - coords[_a2 + 1]);\n\n      if (_cross > 1e-10) return false;\n    }\n\n    return true;\n  }\n\n  function jitter(x, y, r) {\n    return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n  }\n\n  var Delaunay = /*#__PURE__*/function () {\n    function Delaunay(points) {\n      _classCallCheck(this, Delaunay);\n\n      this._delaunator = new Delaunator(points);\n      this.inedges = new Int32Array(points.length / 2);\n      this._hullIndex = new Int32Array(points.length / 2);\n      this.points = this._delaunator.coords;\n\n      this._init();\n    }\n\n    _createClass(Delaunay, [{\n      key: \"update\",\n      value: function update() {\n        this._delaunator.update();\n\n        this._init();\n\n        return this;\n      }\n    }, {\n      key: \"_init\",\n      value: function _init() {\n        var d = this._delaunator,\n            points = this.points; // check for collinear\n\n        if (d.hull && d.hull.length > 2 && collinear(d)) {\n          this.collinear = Int32Array.from({\n            length: points.length / 2\n          }, function (_, i) {\n            return i;\n          }).sort(function (i, j) {\n            return points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1];\n          }); // for exact neighbors\n\n          var e = this.collinear[0],\n              f = this.collinear[this.collinear.length - 1],\n              _bounds = [points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1]],\n              r = 1e-8 * Math.hypot(_bounds[3] - _bounds[1], _bounds[2] - _bounds[0]);\n\n          for (var i = 0, n = points.length / 2; i < n; ++i) {\n            var p = jitter(points[2 * i], points[2 * i + 1], r);\n            points[2 * i] = p[0];\n            points[2 * i + 1] = p[1];\n          }\n\n          this._delaunator = new Delaunator(points);\n        } else {\n          delete this.collinear;\n        }\n\n        var halfedges = this.halfedges = this._delaunator.halfedges;\n        var hull = this.hull = this._delaunator.hull;\n        var triangles = this.triangles = this._delaunator.triangles;\n        var inedges = this.inedges.fill(-1);\n\n        var hullIndex = this._hullIndex.fill(-1); // Compute an index from each point to an (arbitrary) incoming halfedge\n        // Used to give the first neighbor of each point; for this reason,\n        // on the hull we give priority to exterior halfedges\n\n\n        for (var _e3 = 0, _n3 = halfedges.length; _e3 < _n3; ++_e3) {\n          var _p2 = triangles[_e3 % 3 === 2 ? _e3 - 2 : _e3 + 1];\n          if (halfedges[_e3] === -1 || inedges[_p2] === -1) inedges[_p2] = _e3;\n        }\n\n        for (var _i18 = 0, _n4 = hull.length; _i18 < _n4; ++_i18) {\n          hullIndex[hull[_i18]] = _i18;\n        } // degenerate case: 1 or 2 (distinct) points\n\n\n        if (hull.length <= 2 && hull.length > 0) {\n          this.triangles = new Int32Array(3).fill(-1);\n          this.halfedges = new Int32Array(3).fill(-1);\n          this.triangles[0] = hull[0];\n          inedges[hull[0]] = 1;\n\n          if (hull.length === 2) {\n            inedges[hull[1]] = 0;\n            this.triangles[1] = hull[1];\n            this.triangles[2] = hull[1];\n          }\n        }\n      }\n    }, {\n      key: \"voronoi\",\n      value: function voronoi(bounds) {\n        return new Voronoi(this, bounds);\n      }\n    }, {\n      key: \"neighbors\",\n      value: /*#__PURE__*/_regeneratorRuntime.mark(function neighbors(i) {\n        var inedges, hull, _hullIndex, halfedges, triangles, collinear, l, e0, e, p0, p;\n\n        return _regeneratorRuntime.wrap(function neighbors$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                inedges = this.inedges, hull = this.hull, _hullIndex = this._hullIndex, halfedges = this.halfedges, triangles = this.triangles, collinear = this.collinear; // degenerate case with several collinear points\n\n                if (!collinear) {\n                  _context6.next = 10;\n                  break;\n                }\n\n                l = collinear.indexOf(i);\n\n                if (!(l > 0)) {\n                  _context6.next = 6;\n                  break;\n                }\n\n                _context6.next = 6;\n                return collinear[l - 1];\n\n              case 6:\n                if (!(l < collinear.length - 1)) {\n                  _context6.next = 9;\n                  break;\n                }\n\n                _context6.next = 9;\n                return collinear[l + 1];\n\n              case 9:\n                return _context6.abrupt(\"return\");\n\n              case 10:\n                e0 = inedges[i];\n\n                if (!(e0 === -1)) {\n                  _context6.next = 13;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\");\n\n              case 13:\n                // coincident point\n                e = e0, p0 = -1;\n\n              case 14:\n                _context6.next = 16;\n                return p0 = triangles[e];\n\n              case 16:\n                e = e % 3 === 2 ? e - 2 : e + 1;\n\n                if (!(triangles[e] !== i)) {\n                  _context6.next = 19;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\");\n\n              case 19:\n                // bad triangulation\n                e = halfedges[e];\n\n                if (!(e === -1)) {\n                  _context6.next = 26;\n                  break;\n                }\n\n                p = hull[(_hullIndex[i] + 1) % hull.length];\n\n                if (!(p !== p0)) {\n                  _context6.next = 25;\n                  break;\n                }\n\n                _context6.next = 25;\n                return p;\n\n              case 25:\n                return _context6.abrupt(\"return\");\n\n              case 26:\n                if (e !== e0) {\n                  _context6.next = 14;\n                  break;\n                }\n\n              case 27:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, neighbors, this);\n      })\n    }, {\n      key: \"find\",\n      value: function find(x, y) {\n        var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n        var i0 = i;\n        var c;\n\n        while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) {\n          i = c;\n        }\n\n        return c;\n      }\n    }, {\n      key: \"_step\",\n      value: function _step(i, x, y) {\n        var inedges = this.inedges,\n            hull = this.hull,\n            _hullIndex = this._hullIndex,\n            halfedges = this.halfedges,\n            triangles = this.triangles,\n            points = this.points;\n        if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n        var c = i;\n        var dc = pow$2(x - points[i * 2], 2) + pow$2(y - points[i * 2 + 1], 2);\n        var e0 = inedges[i];\n        var e = e0;\n\n        do {\n          var t = triangles[e];\n          var dt = pow$2(x - points[t * 2], 2) + pow$2(y - points[t * 2 + 1], 2);\n          if (dt < dc) dc = dt, c = t;\n          e = e % 3 === 2 ? e - 2 : e + 1;\n          if (triangles[e] !== i) break; // bad triangulation\n\n          e = halfedges[e];\n\n          if (e === -1) {\n            e = hull[(_hullIndex[i] + 1) % hull.length];\n\n            if (e !== t) {\n              if (pow$2(x - points[e * 2], 2) + pow$2(y - points[e * 2 + 1], 2) < dc) return e;\n            }\n\n            break;\n          }\n        } while (e !== e0);\n\n        return c;\n      }\n    }, {\n      key: \"render\",\n      value: function render(context) {\n        var buffer = context == null ? context = new Path() : undefined;\n        var points = this.points,\n            halfedges = this.halfedges,\n            triangles = this.triangles;\n\n        for (var i = 0, n = halfedges.length; i < n; ++i) {\n          var j = halfedges[i];\n          if (j < i) continue;\n          var ti = triangles[i] * 2;\n          var tj = triangles[j] * 2;\n          context.moveTo(points[ti], points[ti + 1]);\n          context.lineTo(points[tj], points[tj + 1]);\n        }\n\n        this.renderHull(context);\n        return buffer && buffer.value();\n      }\n    }, {\n      key: \"renderPoints\",\n      value: function renderPoints(context, r) {\n        if (r === undefined && (!context || typeof context.moveTo !== \"function\")) r = context, context = null;\n        r = r == undefined ? 2 : +r;\n        var buffer = context == null ? context = new Path() : undefined;\n        var points = this.points;\n\n        for (var i = 0, n = points.length; i < n; i += 2) {\n          var _x11 = points[i],\n              _y10 = points[i + 1];\n          context.moveTo(_x11 + r, _y10);\n          context.arc(_x11, _y10, r, 0, tau$2);\n        }\n\n        return buffer && buffer.value();\n      }\n    }, {\n      key: \"renderHull\",\n      value: function renderHull(context) {\n        var buffer = context == null ? context = new Path() : undefined;\n        var hull = this.hull,\n            points = this.points;\n        var h = hull[0] * 2,\n            n = hull.length;\n        context.moveTo(points[h], points[h + 1]);\n\n        for (var i = 1; i < n; ++i) {\n          var _h = 2 * hull[i];\n\n          context.lineTo(points[_h], points[_h + 1]);\n        }\n\n        context.closePath();\n        return buffer && buffer.value();\n      }\n    }, {\n      key: \"hullPolygon\",\n      value: function hullPolygon() {\n        var polygon = new Polygon();\n        this.renderHull(polygon);\n        return polygon.value();\n      }\n    }, {\n      key: \"renderTriangle\",\n      value: function renderTriangle(i, context) {\n        var buffer = context == null ? context = new Path() : undefined;\n        var points = this.points,\n            triangles = this.triangles;\n        var t0 = triangles[i *= 3] * 2;\n        var t1 = triangles[i + 1] * 2;\n        var t2 = triangles[i + 2] * 2;\n        context.moveTo(points[t0], points[t0 + 1]);\n        context.lineTo(points[t1], points[t1 + 1]);\n        context.lineTo(points[t2], points[t2 + 1]);\n        context.closePath();\n        return buffer && buffer.value();\n      }\n    }, {\n      key: \"trianglePolygons\",\n      value: /*#__PURE__*/_regeneratorRuntime.mark(function trianglePolygons() {\n        var triangles, i, n;\n        return _regeneratorRuntime.wrap(function trianglePolygons$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                triangles = this.triangles;\n                i = 0, n = triangles.length / 3;\n\n              case 2:\n                if (!(i < n)) {\n                  _context7.next = 8;\n                  break;\n                }\n\n                _context7.next = 5;\n                return this.trianglePolygon(i);\n\n              case 5:\n                ++i;\n                _context7.next = 2;\n                break;\n\n              case 8:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, trianglePolygons, this);\n      })\n    }, {\n      key: \"trianglePolygon\",\n      value: function trianglePolygon(i) {\n        var polygon = new Polygon();\n        this.renderTriangle(i, polygon);\n        return polygon.value();\n      }\n    }], [{\n      key: \"from\",\n      value: function from(points) {\n        var fx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : pointX;\n        var fy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : pointY;\n        var that = arguments.length > 3 ? arguments[3] : undefined;\n        return new Delaunay(\"length\" in points ? flatArray(points, fx, fy, that) : Float64Array.from(flatIterable(points, fx, fy, that)));\n      }\n    }]);\n\n    return Delaunay;\n  }();\n\n  function flatArray(points, fx, fy, that) {\n    var n = points.length;\n    var array = new Float64Array(n * 2);\n\n    for (var i = 0; i < n; ++i) {\n      var p = points[i];\n      array[i * 2] = fx.call(that, p, i, points);\n      array[i * 2 + 1] = fy.call(that, p, i, points);\n    }\n\n    return array;\n  }\n\n  function flatIterable(points, fx, fy, that) {\n    var i, _iterator56, _step58, p;\n\n    return _regeneratorRuntime.wrap(function flatIterable$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            i = 0;\n            _iterator56 = _createForOfIteratorHelper(points);\n            _context8.prev = 2;\n\n            _iterator56.s();\n\n          case 4:\n            if ((_step58 = _iterator56.n()).done) {\n              _context8.next = 13;\n              break;\n            }\n\n            p = _step58.value;\n            _context8.next = 8;\n            return fx.call(that, p, i, points);\n\n          case 8:\n            _context8.next = 10;\n            return fy.call(that, p, i, points);\n\n          case 10:\n            ++i;\n\n          case 11:\n            _context8.next = 4;\n            break;\n\n          case 13:\n            _context8.next = 18;\n            break;\n\n          case 15:\n            _context8.prev = 15;\n            _context8.t0 = _context8[\"catch\"](2);\n\n            _iterator56.e(_context8.t0);\n\n          case 18:\n            _context8.prev = 18;\n\n            _iterator56.f();\n\n            return _context8.finish(18);\n\n          case 21:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _marked4, null, [[2, 15, 18, 21]]);\n  }\n\n  var EOL = {},\n      EOF = {},\n      QUOTE = 34,\n      NEWLINE = 10,\n      RETURN = 13;\n\n  function objectConverter(columns) {\n    return new Function(\"d\", \"return {\" + columns.map(function (name, i) {\n      return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n    }).join(\",\") + \"}\");\n  }\n\n  function customConverter(columns, f) {\n    var object = objectConverter(columns);\n    return function (row, i) {\n      return f(object(row), i, columns);\n    };\n  } // Compute unique columns in order of discovery.\n\n\n  function inferColumns(rows) {\n    var columnSet = Object.create(null),\n        columns = [];\n    rows.forEach(function (row) {\n      for (var column in row) {\n        if (!(column in columnSet)) {\n          columns.push(columnSet[column] = column);\n        }\n      }\n    });\n    return columns;\n  }\n\n  function pad$1(value, width) {\n    var s = value + \"\",\n        length = s.length;\n    return length < width ? new Array(width - length + 1).join(0) + s : s;\n  }\n\n  function formatYear$1(year) {\n    return year < 0 ? \"-\" + pad$1(-year, 6) : year > 9999 ? \"+\" + pad$1(year, 6) : pad$1(year, 4);\n  }\n\n  function formatDate(date) {\n    var hours = date.getUTCHours(),\n        minutes = date.getUTCMinutes(),\n        seconds = date.getUTCSeconds(),\n        milliseconds = date.getUTCMilliseconds();\n    return isNaN(date) ? \"Invalid Date\" : formatYear$1(date.getUTCFullYear()) + \"-\" + pad$1(date.getUTCMonth() + 1, 2) + \"-\" + pad$1(date.getUTCDate(), 2) + (milliseconds ? \"T\" + pad$1(hours, 2) + \":\" + pad$1(minutes, 2) + \":\" + pad$1(seconds, 2) + \".\" + pad$1(milliseconds, 3) + \"Z\" : seconds ? \"T\" + pad$1(hours, 2) + \":\" + pad$1(minutes, 2) + \":\" + pad$1(seconds, 2) + \"Z\" : minutes || hours ? \"T\" + pad$1(hours, 2) + \":\" + pad$1(minutes, 2) + \"Z\" : \"\");\n  }\n\n  function dsvFormat(delimiter) {\n    var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n        DELIMITER = delimiter.charCodeAt(0);\n\n    function parse(text, f) {\n      var convert,\n          columns,\n          rows = parseRows(text, function (row, i) {\n        if (convert) return convert(row, i - 1);\n        columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n      });\n      rows.columns = columns || [];\n      return rows;\n    }\n\n    function parseRows(text, f) {\n      var rows = [],\n          // output rows\n      N = text.length,\n          I = 0,\n          // current character index\n      n = 0,\n          // current line number\n      t,\n          // current token\n      eof = N <= 0,\n          // current token followed by EOF?\n      eol = false; // current token followed by EOL?\n      // Strip the trailing newline.\n\n      if (text.charCodeAt(N - 1) === NEWLINE) --N;\n      if (text.charCodeAt(N - 1) === RETURN) --N;\n\n      function token() {\n        if (eof) return EOF;\n        if (eol) return eol = false, EOL; // Unescape quotes.\n\n        var i,\n            j = I,\n            c;\n\n        if (text.charCodeAt(j) === QUOTE) {\n          while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE) {\n            ;\n          }\n\n          if ((i = I) >= N) eof = true;else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;else if (c === RETURN) {\n            eol = true;\n            if (text.charCodeAt(I) === NEWLINE) ++I;\n          }\n          return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n        } // Find next delimiter or newline.\n\n\n        while (I < N) {\n          if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;else if (c === RETURN) {\n            eol = true;\n            if (text.charCodeAt(I) === NEWLINE) ++I;\n          } else if (c !== DELIMITER) continue;\n          return text.slice(j, i);\n        } // Return last token before EOF.\n\n\n        return eof = true, text.slice(j, N);\n      }\n\n      while ((t = token()) !== EOF) {\n        var row = [];\n\n        while (t !== EOL && t !== EOF) {\n          row.push(t), t = token();\n        }\n\n        if (f && (row = f(row, n++)) == null) continue;\n        rows.push(row);\n      }\n\n      return rows;\n    }\n\n    function preformatBody(rows, columns) {\n      return rows.map(function (row) {\n        return columns.map(function (column) {\n          return formatValue(row[column]);\n        }).join(delimiter);\n      });\n    }\n\n    function format(rows, columns) {\n      if (columns == null) columns = inferColumns(rows);\n      return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n    }\n\n    function formatBody(rows, columns) {\n      if (columns == null) columns = inferColumns(rows);\n      return preformatBody(rows, columns).join(\"\\n\");\n    }\n\n    function formatRows(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    }\n\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n\n    function formatValue(value) {\n      return value == null ? \"\" : value instanceof Date ? formatDate(value) : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\" : value;\n    }\n\n    return {\n      parse: parse,\n      parseRows: parseRows,\n      format: format,\n      formatBody: formatBody,\n      formatRows: formatRows,\n      formatRow: formatRow,\n      formatValue: formatValue\n    };\n  }\n\n  var csv$1 = dsvFormat(\",\");\n  var csvParse = csv$1.parse;\n  var csvParseRows = csv$1.parseRows;\n  var csvFormat = csv$1.format;\n  var csvFormatBody = csv$1.formatBody;\n  var csvFormatRows = csv$1.formatRows;\n  var csvFormatRow = csv$1.formatRow;\n  var csvFormatValue = csv$1.formatValue;\n  var tsv$1 = dsvFormat(\"\\t\");\n  var tsvParse = tsv$1.parse;\n  var tsvParseRows = tsv$1.parseRows;\n  var tsvFormat = tsv$1.format;\n  var tsvFormatBody = tsv$1.formatBody;\n  var tsvFormatRows = tsv$1.formatRows;\n  var tsvFormatRow = tsv$1.formatRow;\n  var tsvFormatValue = tsv$1.formatValue;\n\n  function autoType(object) {\n    for (var key in object) {\n      var value = object[key].trim(),\n          number,\n          m;\n      if (!value) value = null;else if (value === \"true\") value = true;else if (value === \"false\") value = false;else if (value === \"NaN\") value = NaN;else if (!isNaN(number = +value)) value = number;else if (m = value.match(/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/)) {\n        if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, \"/\").replace(/T/, \" \");\n        value = new Date(value);\n      } else continue;\n      object[key] = value;\n    }\n\n    return object;\n  } // https://github.com/d3/d3-dsv/issues/45\n\n\n  var fixtz = new Date(\"2019-01-01T00:00\").getHours() || new Date(\"2019-07-01T00:00\").getHours();\n\n  function responseBlob(response) {\n    if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n    return response.blob();\n  }\n\n  function blob(input, init) {\n    return fetch(input, init).then(responseBlob);\n  }\n\n  function responseArrayBuffer(response) {\n    if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n    return response.arrayBuffer();\n  }\n\n  function buffer(input, init) {\n    return fetch(input, init).then(responseArrayBuffer);\n  }\n\n  function responseText(response) {\n    if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n    return response.text();\n  }\n\n  function text(input, init) {\n    return fetch(input, init).then(responseText);\n  }\n\n  function dsvParse(parse) {\n    return function (input, init, row) {\n      if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n      return text(input, init).then(function (response) {\n        return parse(response, row);\n      });\n    };\n  }\n\n  function dsv(delimiter, input, init, row) {\n    if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n    var format = dsvFormat(delimiter);\n    return text(input, init).then(function (response) {\n      return format.parse(response, row);\n    });\n  }\n\n  var csv = dsvParse(csvParse);\n  var tsv = dsvParse(tsvParse);\n\n  function image(input, init) {\n    return new Promise(function (resolve, reject) {\n      var image = new Image();\n\n      for (var key in init) {\n        image[key] = init[key];\n      }\n\n      image.onerror = reject;\n\n      image.onload = function () {\n        resolve(image);\n      };\n\n      image.src = input;\n    });\n  }\n\n  function responseJson(response) {\n    if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n    if (response.status === 204 || response.status === 205) return;\n    return response.json();\n  }\n\n  function json(input, init) {\n    return fetch(input, init).then(responseJson);\n  }\n\n  function parser(type) {\n    return function (input, init) {\n      return text(input, init).then(function (text) {\n        return new DOMParser().parseFromString(text, type);\n      });\n    };\n  }\n\n  var xml = parser(\"application/xml\");\n  var html = parser(\"text/html\");\n  var svg = parser(\"image/svg+xml\");\n\n  function center(x, y) {\n    var nodes,\n        strength = 1;\n    if (x == null) x = 0;\n    if (y == null) y = 0;\n\n    function force() {\n      var i,\n          n = nodes.length,\n          node,\n          sx = 0,\n          sy = 0;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i], sx += node.x, sy += node.y;\n      }\n\n      for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {\n        node = nodes[i], node.x -= sx, node.y -= sy;\n      }\n    }\n\n    force.initialize = function (_) {\n      nodes = _;\n    };\n\n    force.x = function (_) {\n      return arguments.length ? (x = +_, force) : x;\n    };\n\n    force.y = function (_) {\n      return arguments.length ? (y = +_, force) : y;\n    };\n\n    force.strength = function (_) {\n      return arguments.length ? (strength = +_, force) : strength;\n    };\n\n    return force;\n  }\n\n  function tree_add(d) {\n    var x = +this._x.call(null, d),\n        y = +this._y.call(null, d);\n    return add(this.cover(x, y), x, y, d);\n  }\n\n  function add(tree, x, y, d) {\n    if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n    var parent,\n        node = tree._root,\n        leaf = {\n      data: d\n    },\n        x0 = tree._x0,\n        y0 = tree._y0,\n        x1 = tree._x1,\n        y1 = tree._y1,\n        xm,\n        ym,\n        xp,\n        yp,\n        right,\n        bottom,\n        i,\n        j; // If the tree is empty, initialize the root as a leaf.\n\n    if (!node) return tree._root = leaf, tree; // Find the existing leaf for the new point, or add it.\n\n    while (node.length) {\n      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n      if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n    } // Is the new point is exactly coincident with the existing point?\n\n\n    xp = +tree._x.call(null, node.data);\n    yp = +tree._y.call(null, node.data);\n    if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree; // Otherwise, split the leaf node until the old and new point are separated.\n\n    do {\n      parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n    } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));\n\n    return parent[j] = node, parent[i] = leaf, tree;\n  }\n\n  function addAll(data) {\n    var d,\n        i,\n        n = data.length,\n        x,\n        y,\n        xz = new Array(n),\n        yz = new Array(n),\n        x0 = Infinity,\n        y0 = Infinity,\n        x1 = -Infinity,\n        y1 = -Infinity; // Compute the points and their extent.\n\n    for (i = 0; i < n; ++i) {\n      if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n      xz[i] = x;\n      yz[i] = y;\n      if (x < x0) x0 = x;\n      if (x > x1) x1 = x;\n      if (y < y0) y0 = y;\n      if (y > y1) y1 = y;\n    } // If there were no (valid) points, abort.\n\n\n    if (x0 > x1 || y0 > y1) return this; // Expand the tree to cover the new points.\n\n    this.cover(x0, y0).cover(x1, y1); // Add the new points.\n\n    for (i = 0; i < n; ++i) {\n      add(this, xz[i], yz[i], data[i]);\n    }\n\n    return this;\n  }\n\n  function tree_cover(x, y) {\n    if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n    var x0 = this._x0,\n        y0 = this._y0,\n        x1 = this._x1,\n        y1 = this._y1; // If the quadtree has no extent, initialize them.\n    // Integer extent are necessary so that if we later double the extent,\n    // the existing quadrant boundaries don’t change due to floating point error!\n\n    if (isNaN(x0)) {\n      x1 = (x0 = Math.floor(x)) + 1;\n      y1 = (y0 = Math.floor(y)) + 1;\n    } // Otherwise, double repeatedly to cover.\n    else {\n        var z = x1 - x0 || 1,\n            node = this._root,\n            parent,\n            i;\n\n        while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n          i = (y < y0) << 1 | x < x0;\n          parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n\n          switch (i) {\n            case 0:\n              x1 = x0 + z, y1 = y0 + z;\n              break;\n\n            case 1:\n              x0 = x1 - z, y1 = y0 + z;\n              break;\n\n            case 2:\n              x1 = x0 + z, y0 = y1 - z;\n              break;\n\n            case 3:\n              x0 = x1 - z, y0 = y1 - z;\n              break;\n          }\n        }\n\n        if (this._root && this._root.length) this._root = node;\n      }\n\n    this._x0 = x0;\n    this._y0 = y0;\n    this._x1 = x1;\n    this._y1 = y1;\n    return this;\n  }\n\n  function tree_data() {\n    var data = [];\n    this.visit(function (node) {\n      if (!node.length) do {\n        data.push(node.data);\n      } while (node = node.next);\n    });\n    return data;\n  }\n\n  function tree_extent(_) {\n    return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n  }\n\n  function Quad(node, x0, y0, x1, y1) {\n    this.node = node;\n    this.x0 = x0;\n    this.y0 = y0;\n    this.x1 = x1;\n    this.y1 = y1;\n  }\n\n  function tree_find(x, y, radius) {\n    var data,\n        x0 = this._x0,\n        y0 = this._y0,\n        x1,\n        y1,\n        x2,\n        y2,\n        x3 = this._x1,\n        y3 = this._y1,\n        quads = [],\n        node = this._root,\n        q,\n        i;\n    if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n    if (radius == null) radius = Infinity;else {\n      x0 = x - radius, y0 = y - radius;\n      x3 = x + radius, y3 = y + radius;\n      radius *= radius;\n    }\n\n    while (q = quads.pop()) {\n      // Stop searching if this quadrant can’t contain a closer node.\n      if (!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x2 = q.x1) < x0 || (y2 = q.y1) < y0) continue; // Bisect the current quadrant.\n\n      if (node.length) {\n        var xm = (x1 + x2) / 2,\n            ym = (y1 + y2) / 2;\n        quads.push(new Quad(node[3], xm, ym, x2, y2), new Quad(node[2], x1, ym, xm, y2), new Quad(node[1], xm, y1, x2, ym), new Quad(node[0], x1, y1, xm, ym)); // Visit the closest quadrant first.\n\n        if (i = (y >= ym) << 1 | x >= xm) {\n          q = quads[quads.length - 1];\n          quads[quads.length - 1] = quads[quads.length - 1 - i];\n          quads[quads.length - 1 - i] = q;\n        }\n      } // Visit this point. (Visiting coincident points isn’t necessary!)\n      else {\n          var dx = x - +this._x.call(null, node.data),\n              dy = y - +this._y.call(null, node.data),\n              d2 = dx * dx + dy * dy;\n\n          if (d2 < radius) {\n            var d = Math.sqrt(radius = d2);\n            x0 = x - d, y0 = y - d;\n            x3 = x + d, y3 = y + d;\n            data = node.data;\n          }\n        }\n    }\n\n    return data;\n  }\n\n  function tree_remove(d) {\n    if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n    var parent,\n        node = this._root,\n        retainer,\n        previous,\n        next,\n        x0 = this._x0,\n        y0 = this._y0,\n        x1 = this._x1,\n        y1 = this._y1,\n        x,\n        y,\n        xm,\n        ym,\n        right,\n        bottom,\n        i,\n        j; // If the tree is empty, initialize the root as a leaf.\n\n    if (!node) return this; // Find the leaf node for the point.\n    // While descending, also retain the deepest parent with a non-removed sibling.\n\n    if (node.length) while (true) {\n      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n      if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n      if (!node.length) break;\n      if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) retainer = parent, j = i;\n    } // Find the point to remove.\n\n    while (node.data !== d) {\n      if (!(previous = node, node = node.next)) return this;\n    }\n\n    if (next = node.next) delete node.next; // If there are multiple coincident points, remove just the point.\n\n    if (previous) return next ? previous.next = next : delete previous.next, this; // If this is the root point, remove it.\n\n    if (!parent) return this._root = next, this; // Remove this leaf.\n\n    next ? parent[i] = next : delete parent[i]; // If the parent now contains exactly one leaf, collapse superfluous parents.\n\n    if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {\n      if (retainer) retainer[j] = node;else this._root = node;\n    }\n\n    return this;\n  }\n\n  function removeAll(data) {\n    for (var i = 0, n = data.length; i < n; ++i) {\n      this.remove(data[i]);\n    }\n\n    return this;\n  }\n\n  function tree_root() {\n    return this._root;\n  }\n\n  function tree_size() {\n    var size = 0;\n    this.visit(function (node) {\n      if (!node.length) do {\n        ++size;\n      } while (node = node.next);\n    });\n    return size;\n  }\n\n  function tree_visit(callback) {\n    var quads = [],\n        q,\n        node = this._root,\n        child,\n        x0,\n        y0,\n        x1,\n        y1;\n    if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\n    while (q = quads.pop()) {\n      if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n        var xm = (x0 + x1) / 2,\n            ym = (y0 + y1) / 2;\n        if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n        if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n        if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n        if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      }\n    }\n\n    return this;\n  }\n\n  function tree_visitAfter(callback) {\n    var quads = [],\n        next = [],\n        q;\n    if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\n    while (q = quads.pop()) {\n      var node = q.node;\n\n      if (node.length) {\n        var child,\n            x0 = q.x0,\n            y0 = q.y0,\n            x1 = q.x1,\n            y1 = q.y1,\n            xm = (x0 + x1) / 2,\n            ym = (y0 + y1) / 2;\n        if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n        if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n        if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n        if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      }\n\n      next.push(q);\n    }\n\n    while (q = next.pop()) {\n      callback(q.node, q.x0, q.y0, q.x1, q.y1);\n    }\n\n    return this;\n  }\n\n  function defaultX(d) {\n    return d[0];\n  }\n\n  function tree_x(_) {\n    return arguments.length ? (this._x = _, this) : this._x;\n  }\n\n  function defaultY(d) {\n    return d[1];\n  }\n\n  function tree_y(_) {\n    return arguments.length ? (this._y = _, this) : this._y;\n  }\n\n  function quadtree(nodes, x, y) {\n    var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n    return nodes == null ? tree : tree.addAll(nodes);\n  }\n\n  function Quadtree(x, y, x0, y0, x1, y1) {\n    this._x = x;\n    this._y = y;\n    this._x0 = x0;\n    this._y0 = y0;\n    this._x1 = x1;\n    this._y1 = y1;\n    this._root = undefined;\n  }\n\n  function leaf_copy(leaf) {\n    var copy = {\n      data: leaf.data\n    },\n        next = copy;\n\n    while (leaf = leaf.next) {\n      next = next.next = {\n        data: leaf.data\n      };\n    }\n\n    return copy;\n  }\n\n  var treeProto = quadtree.prototype = Quadtree.prototype;\n\n  treeProto.copy = function () {\n    var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n        node = this._root,\n        nodes,\n        child;\n    if (!node) return copy;\n    if (!node.length) return copy._root = leaf_copy(node), copy;\n    nodes = [{\n      source: node,\n      target: copy._root = new Array(4)\n    }];\n\n    while (node = nodes.pop()) {\n      for (var i = 0; i < 4; ++i) {\n        if (child = node.source[i]) {\n          if (child.length) nodes.push({\n            source: child,\n            target: node.target[i] = new Array(4)\n          });else node.target[i] = leaf_copy(child);\n        }\n      }\n    }\n\n    return copy;\n  };\n\n  treeProto.add = tree_add;\n  treeProto.addAll = addAll;\n  treeProto.cover = tree_cover;\n  treeProto.data = tree_data;\n  treeProto.extent = tree_extent;\n  treeProto.find = tree_find;\n  treeProto.remove = tree_remove;\n  treeProto.removeAll = removeAll;\n  treeProto.root = tree_root;\n  treeProto.size = tree_size;\n  treeProto.visit = tree_visit;\n  treeProto.visitAfter = tree_visitAfter;\n  treeProto.x = tree_x;\n  treeProto.y = tree_y;\n\n  function constant$4(x) {\n    return function () {\n      return x;\n    };\n  }\n\n  function jiggle(random) {\n    return (random() - 0.5) * 1e-6;\n  }\n\n  function x$3(d) {\n    return d.x + d.vx;\n  }\n\n  function y$3(d) {\n    return d.y + d.vy;\n  }\n\n  function collide(radius) {\n    var nodes,\n        radii,\n        random,\n        strength = 1,\n        iterations = 1;\n    if (typeof radius !== \"function\") radius = constant$4(radius == null ? 1 : +radius);\n\n    function force() {\n      var i,\n          n = nodes.length,\n          tree,\n          node,\n          xi,\n          yi,\n          ri,\n          ri2;\n\n      for (var k = 0; k < iterations; ++k) {\n        tree = quadtree(nodes, x$3, y$3).visitAfter(prepare);\n\n        for (i = 0; i < n; ++i) {\n          node = nodes[i];\n          ri = radii[node.index], ri2 = ri * ri;\n          xi = node.x + node.vx;\n          yi = node.y + node.vy;\n          tree.visit(apply);\n        }\n      }\n\n      function apply(quad, x0, y0, x1, y1) {\n        var data = quad.data,\n            rj = quad.r,\n            r = ri + rj;\n\n        if (data) {\n          if (data.index > node.index) {\n            var x = xi - data.x - data.vx,\n                y = yi - data.y - data.vy,\n                l = x * x + y * y;\n\n            if (l < r * r) {\n              if (x === 0) x = jiggle(random), l += x * x;\n              if (y === 0) y = jiggle(random), l += y * y;\n              l = (r - (l = Math.sqrt(l))) / l * strength;\n              node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n              node.vy += (y *= l) * r;\n              data.vx -= x * (r = 1 - r);\n              data.vy -= y * r;\n            }\n          }\n\n          return;\n        }\n\n        return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n      }\n    }\n\n    function prepare(quad) {\n      if (quad.data) return quad.r = radii[quad.data.index];\n\n      for (var i = quad.r = 0; i < 4; ++i) {\n        if (quad[i] && quad[i].r > quad.r) {\n          quad.r = quad[i].r;\n        }\n      }\n    }\n\n    function initialize() {\n      if (!nodes) return;\n      var i,\n          n = nodes.length,\n          node;\n      radii = new Array(n);\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n      }\n    }\n\n    force.initialize = function (_nodes, _random) {\n      nodes = _nodes;\n      random = _random;\n      initialize();\n    };\n\n    force.iterations = function (_) {\n      return arguments.length ? (iterations = +_, force) : iterations;\n    };\n\n    force.strength = function (_) {\n      return arguments.length ? (strength = +_, force) : strength;\n    };\n\n    force.radius = function (_) {\n      return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$4(+_), initialize(), force) : radius;\n    };\n\n    return force;\n  }\n\n  function index$3(d) {\n    return d.index;\n  }\n\n  function find(nodeById, nodeId) {\n    var node = nodeById.get(nodeId);\n    if (!node) throw new Error(\"node not found: \" + nodeId);\n    return node;\n  }\n\n  function link$2(links) {\n    var id = index$3,\n        strength = defaultStrength,\n        strengths,\n        distance = constant$4(30),\n        distances,\n        nodes,\n        count,\n        bias,\n        random,\n        iterations = 1;\n    if (links == null) links = [];\n\n    function defaultStrength(link) {\n      return 1 / Math.min(count[link.source.index], count[link.target.index]);\n    }\n\n    function force(alpha) {\n      for (var k = 0, n = links.length; k < iterations; ++k) {\n        for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n          link = links[i], source = link.source, target = link.target;\n          x = target.x + target.vx - source.x - source.vx || jiggle(random);\n          y = target.y + target.vy - source.y - source.vy || jiggle(random);\n          l = Math.sqrt(x * x + y * y);\n          l = (l - distances[i]) / l * alpha * strengths[i];\n          x *= l, y *= l;\n          target.vx -= x * (b = bias[i]);\n          target.vy -= y * b;\n          source.vx += x * (b = 1 - b);\n          source.vy += y * b;\n        }\n      }\n    }\n\n    function initialize() {\n      if (!nodes) return;\n      var i,\n          n = nodes.length,\n          m = links.length,\n          nodeById = new Map(nodes.map(function (d, i) {\n        return [id(d, i, nodes), d];\n      })),\n          link;\n\n      for (i = 0, count = new Array(n); i < m; ++i) {\n        link = links[i], link.index = i;\n        if (_typeof(link.source) !== \"object\") link.source = find(nodeById, link.source);\n        if (_typeof(link.target) !== \"object\") link.target = find(nodeById, link.target);\n        count[link.source.index] = (count[link.source.index] || 0) + 1;\n        count[link.target.index] = (count[link.target.index] || 0) + 1;\n      }\n\n      for (i = 0, bias = new Array(m); i < m; ++i) {\n        link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n      }\n\n      strengths = new Array(m), initializeStrength();\n      distances = new Array(m), initializeDistance();\n    }\n\n    function initializeStrength() {\n      if (!nodes) return;\n\n      for (var i = 0, n = links.length; i < n; ++i) {\n        strengths[i] = +strength(links[i], i, links);\n      }\n    }\n\n    function initializeDistance() {\n      if (!nodes) return;\n\n      for (var i = 0, n = links.length; i < n; ++i) {\n        distances[i] = +distance(links[i], i, links);\n      }\n    }\n\n    force.initialize = function (_nodes, _random) {\n      nodes = _nodes;\n      random = _random;\n      initialize();\n    };\n\n    force.links = function (_) {\n      return arguments.length ? (links = _, initialize(), force) : links;\n    };\n\n    force.id = function (_) {\n      return arguments.length ? (id = _, force) : id;\n    };\n\n    force.iterations = function (_) {\n      return arguments.length ? (iterations = +_, force) : iterations;\n    };\n\n    force.strength = function (_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$4(+_), initializeStrength(), force) : strength;\n    };\n\n    force.distance = function (_) {\n      return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$4(+_), initializeDistance(), force) : distance;\n    };\n\n    return force;\n  } // https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\n\n\n  var a$1 = 1664525;\n  var c$3 = 1013904223;\n  var m = 4294967296; // 2^32\n\n  function lcg$1() {\n    var s = 1;\n    return function () {\n      return (s = (a$1 * s + c$3) % m) / m;\n    };\n  }\n\n  function x$2(d) {\n    return d.x;\n  }\n\n  function y$2(d) {\n    return d.y;\n  }\n\n  var initialRadius = 10,\n      initialAngle = Math.PI * (3 - Math.sqrt(5));\n\n  function simulation(_nodes2) {\n    var simulation,\n        _alpha = 1,\n        _alphaMin = 0.001,\n        _alphaDecay = 1 - Math.pow(_alphaMin, 1 / 300),\n        _alphaTarget = 0,\n        _velocityDecay = 0.6,\n        forces = new Map(),\n        stepper = timer(step),\n        event = dispatch(\"tick\", \"end\"),\n        random = lcg$1();\n\n    if (_nodes2 == null) _nodes2 = [];\n\n    function step() {\n      tick();\n      event.call(\"tick\", simulation);\n\n      if (_alpha < _alphaMin) {\n        stepper.stop();\n        event.call(\"end\", simulation);\n      }\n    }\n\n    function tick(iterations) {\n      var i,\n          n = _nodes2.length,\n          node;\n      if (iterations === undefined) iterations = 1;\n\n      for (var k = 0; k < iterations; ++k) {\n        _alpha += (_alphaTarget - _alpha) * _alphaDecay;\n        forces.forEach(function (force) {\n          force(_alpha);\n        });\n\n        for (i = 0; i < n; ++i) {\n          node = _nodes2[i];\n          if (node.fx == null) node.x += node.vx *= _velocityDecay;else node.x = node.fx, node.vx = 0;\n          if (node.fy == null) node.y += node.vy *= _velocityDecay;else node.y = node.fy, node.vy = 0;\n        }\n      }\n\n      return simulation;\n    }\n\n    function initializeNodes() {\n      for (var i = 0, n = _nodes2.length, node; i < n; ++i) {\n        node = _nodes2[i], node.index = i;\n        if (node.fx != null) node.x = node.fx;\n        if (node.fy != null) node.y = node.fy;\n\n        if (isNaN(node.x) || isNaN(node.y)) {\n          var radius = initialRadius * Math.sqrt(0.5 + i),\n              angle = i * initialAngle;\n          node.x = radius * Math.cos(angle);\n          node.y = radius * Math.sin(angle);\n        }\n\n        if (isNaN(node.vx) || isNaN(node.vy)) {\n          node.vx = node.vy = 0;\n        }\n      }\n    }\n\n    function initializeForce(force) {\n      if (force.initialize) force.initialize(_nodes2, random);\n      return force;\n    }\n\n    initializeNodes();\n    return simulation = {\n      tick: tick,\n      restart: function restart() {\n        return stepper.restart(step), simulation;\n      },\n      stop: function stop() {\n        return stepper.stop(), simulation;\n      },\n      nodes: function nodes(_) {\n        return arguments.length ? (_nodes2 = _, initializeNodes(), forces.forEach(initializeForce), simulation) : _nodes2;\n      },\n      alpha: function alpha(_) {\n        return arguments.length ? (_alpha = +_, simulation) : _alpha;\n      },\n      alphaMin: function alphaMin(_) {\n        return arguments.length ? (_alphaMin = +_, simulation) : _alphaMin;\n      },\n      alphaDecay: function alphaDecay(_) {\n        return arguments.length ? (_alphaDecay = +_, simulation) : +_alphaDecay;\n      },\n      alphaTarget: function alphaTarget(_) {\n        return arguments.length ? (_alphaTarget = +_, simulation) : _alphaTarget;\n      },\n      velocityDecay: function velocityDecay(_) {\n        return arguments.length ? (_velocityDecay = 1 - _, simulation) : 1 - _velocityDecay;\n      },\n      randomSource: function randomSource(_) {\n        return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n      },\n      force: function force(name, _) {\n        return arguments.length > 1 ? (_ == null ? forces.delete(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);\n      },\n      find: function find(x, y, radius) {\n        var i = 0,\n            n = _nodes2.length,\n            dx,\n            dy,\n            d2,\n            node,\n            closest;\n        if (radius == null) radius = Infinity;else radius *= radius;\n\n        for (i = 0; i < n; ++i) {\n          node = _nodes2[i];\n          dx = x - node.x;\n          dy = y - node.y;\n          d2 = dx * dx + dy * dy;\n          if (d2 < radius) closest = node, radius = d2;\n        }\n\n        return closest;\n      },\n      on: function on(name, _) {\n        return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n      }\n    };\n  }\n\n  function manyBody() {\n    var nodes,\n        node,\n        random,\n        alpha,\n        strength = constant$4(-30),\n        strengths,\n        distanceMin2 = 1,\n        distanceMax2 = Infinity,\n        theta2 = 0.81;\n\n    function force(_) {\n      var i,\n          n = nodes.length,\n          tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n\n      for (alpha = _, i = 0; i < n; ++i) {\n        node = nodes[i], tree.visit(apply);\n      }\n    }\n\n    function initialize() {\n      if (!nodes) return;\n      var i,\n          n = nodes.length,\n          node;\n      strengths = new Array(n);\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n      }\n    }\n\n    function accumulate(quad) {\n      var strength = 0,\n          q,\n          c,\n          weight = 0,\n          x,\n          y,\n          i; // For internal nodes, accumulate forces from child quadrants.\n\n      if (quad.length) {\n        for (x = y = i = 0; i < 4; ++i) {\n          if ((q = quad[i]) && (c = Math.abs(q.value))) {\n            strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n          }\n        }\n\n        quad.x = x / weight;\n        quad.y = y / weight;\n      } // For leaf nodes, accumulate forces from coincident quadrants.\n      else {\n          q = quad;\n          q.x = q.data.x;\n          q.y = q.data.y;\n\n          do {\n            strength += strengths[q.data.index];\n          } while (q = q.next);\n        }\n\n      quad.value = strength;\n    }\n\n    function apply(quad, x1, _, x2) {\n      if (!quad.value) return true;\n      var x = quad.x - node.x,\n          y = quad.y - node.y,\n          w = x2 - x1,\n          l = x * x + y * y; // Apply the Barnes-Hut approximation if possible.\n      // Limit forces for very close nodes; randomize direction if coincident.\n\n      if (w * w / theta2 < l) {\n        if (l < distanceMax2) {\n          if (x === 0) x = jiggle(random), l += x * x;\n          if (y === 0) y = jiggle(random), l += y * y;\n          if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n          node.vx += x * quad.value * alpha / l;\n          node.vy += y * quad.value * alpha / l;\n        }\n\n        return true;\n      } // Otherwise, process points directly.\n      else if (quad.length || l >= distanceMax2) return; // Limit forces for very close nodes; randomize direction if coincident.\n\n\n      if (quad.data !== node || quad.next) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n      }\n\n      do {\n        if (quad.data !== node) {\n          w = strengths[quad.data.index] * alpha / l;\n          node.vx += x * w;\n          node.vy += y * w;\n        }\n      } while (quad = quad.next);\n    }\n\n    force.initialize = function (_nodes, _random) {\n      nodes = _nodes;\n      random = _random;\n      initialize();\n    };\n\n    force.strength = function (_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$4(+_), initialize(), force) : strength;\n    };\n\n    force.distanceMin = function (_) {\n      return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n    };\n\n    force.distanceMax = function (_) {\n      return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n    };\n\n    force.theta = function (_) {\n      return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n    };\n\n    return force;\n  }\n\n  function radial$1(radius, x, y) {\n    var nodes,\n        strength = constant$4(0.1),\n        strengths,\n        radiuses;\n    if (typeof radius !== \"function\") radius = constant$4(+radius);\n    if (x == null) x = 0;\n    if (y == null) y = 0;\n\n    function force(alpha) {\n      for (var i = 0, n = nodes.length; i < n; ++i) {\n        var node = nodes[i],\n            dx = node.x - x || 1e-6,\n            dy = node.y - y || 1e-6,\n            r = Math.sqrt(dx * dx + dy * dy),\n            k = (radiuses[i] - r) * strengths[i] * alpha / r;\n        node.vx += dx * k;\n        node.vy += dy * k;\n      }\n    }\n\n    function initialize() {\n      if (!nodes) return;\n      var i,\n          n = nodes.length;\n      strengths = new Array(n);\n      radiuses = new Array(n);\n\n      for (i = 0; i < n; ++i) {\n        radiuses[i] = +radius(nodes[i], i, nodes);\n        strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n      }\n    }\n\n    force.initialize = function (_) {\n      nodes = _, initialize();\n    };\n\n    force.strength = function (_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$4(+_), initialize(), force) : strength;\n    };\n\n    force.radius = function (_) {\n      return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$4(+_), initialize(), force) : radius;\n    };\n\n    force.x = function (_) {\n      return arguments.length ? (x = +_, force) : x;\n    };\n\n    force.y = function (_) {\n      return arguments.length ? (y = +_, force) : y;\n    };\n\n    return force;\n  }\n\n  function x$1(x) {\n    var strength = constant$4(0.1),\n        nodes,\n        strengths,\n        xz;\n    if (typeof x !== \"function\") x = constant$4(x == null ? 0 : +x);\n\n    function force(alpha) {\n      for (var i = 0, n = nodes.length, node; i < n; ++i) {\n        node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n      }\n    }\n\n    function initialize() {\n      if (!nodes) return;\n      var i,\n          n = nodes.length;\n      strengths = new Array(n);\n      xz = new Array(n);\n\n      for (i = 0; i < n; ++i) {\n        strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n      }\n    }\n\n    force.initialize = function (_) {\n      nodes = _;\n      initialize();\n    };\n\n    force.strength = function (_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$4(+_), initialize(), force) : strength;\n    };\n\n    force.x = function (_) {\n      return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$4(+_), initialize(), force) : x;\n    };\n\n    return force;\n  }\n\n  function y$1(y) {\n    var strength = constant$4(0.1),\n        nodes,\n        strengths,\n        yz;\n    if (typeof y !== \"function\") y = constant$4(y == null ? 0 : +y);\n\n    function force(alpha) {\n      for (var i = 0, n = nodes.length, node; i < n; ++i) {\n        node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n      }\n    }\n\n    function initialize() {\n      if (!nodes) return;\n      var i,\n          n = nodes.length;\n      strengths = new Array(n);\n      yz = new Array(n);\n\n      for (i = 0; i < n; ++i) {\n        strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n      }\n    }\n\n    force.initialize = function (_) {\n      nodes = _;\n      initialize();\n    };\n\n    force.strength = function (_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$4(+_), initialize(), force) : strength;\n    };\n\n    force.y = function (_) {\n      return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$4(+_), initialize(), force) : y;\n    };\n\n    return force;\n  }\n\n  function formatDecimal(x) {\n    return Math.abs(x = Math.round(x)) >= 1e21 ? x.toLocaleString(\"en\").replace(/,/g, \"\") : x.toString(10);\n  } // Computes the decimal coefficient and exponent of the specified number x with\n  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n  // For example, formatDecimalParts(1.23) returns [\"123\", 0].\n\n\n  function formatDecimalParts(x, p) {\n    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\n    var i,\n        coefficient = x.slice(0, i); // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\n    return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];\n  }\n\n  function exponent(x) {\n    return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n  }\n\n  function formatGroup(grouping, thousands) {\n    return function (value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = grouping[j = (j + 1) % grouping.length];\n      }\n\n      return t.reverse().join(thousands);\n    };\n  }\n\n  function formatNumerals(numerals) {\n    return function (value) {\n      return value.replace(/[0-9]/g, function (i) {\n        return numerals[+i];\n      });\n    };\n  } // [[fill]align][sign][symbol][0][width][,][.precision][~][type]\n\n\n  var re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\n  function formatSpecifier(specifier) {\n    if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n    var match;\n    return new FormatSpecifier({\n      fill: match[1],\n      align: match[2],\n      sign: match[3],\n      symbol: match[4],\n      zero: match[5],\n      width: match[6],\n      comma: match[7],\n      precision: match[8] && match[8].slice(1),\n      trim: match[9],\n      type: match[10]\n    });\n  }\n\n  formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\n  function FormatSpecifier(specifier) {\n    this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n    this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n    this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n    this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n    this.zero = !!specifier.zero;\n    this.width = specifier.width === undefined ? undefined : +specifier.width;\n    this.comma = !!specifier.comma;\n    this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n    this.trim = !!specifier.trim;\n    this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n  }\n\n  FormatSpecifier.prototype.toString = function () {\n    return this.fill + this.align + this.sign + this.symbol + (this.zero ? \"0\" : \"\") + (this.width === undefined ? \"\" : Math.max(1, this.width | 0)) + (this.comma ? \",\" : \"\") + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0)) + (this.trim ? \"~\" : \"\") + this.type;\n  }; // Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\n\n\n  function formatTrim(s) {\n    out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n      switch (s[i]) {\n        case \".\":\n          i0 = i1 = i;\n          break;\n\n        case \"0\":\n          if (i0 === 0) i0 = i;\n          i1 = i;\n          break;\n\n        default:\n          if (!+s[i]) break out;\n          if (i0 > 0) i0 = 0;\n          break;\n      }\n    }\n\n    return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n  }\n\n  var prefixExponent;\n\n  function formatPrefixAuto(x, p) {\n    var d = formatDecimalParts(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1],\n        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n        n = coefficient.length;\n    return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join(\"0\") : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i) : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n  }\n\n  function formatRounded(x, p) {\n    var d = formatDecimalParts(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1];\n    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n  }\n\n  var formatTypes = {\n    \"%\": function _(x, p) {\n      return (x * 100).toFixed(p);\n    },\n    \"b\": function b(x) {\n      return Math.round(x).toString(2);\n    },\n    \"c\": function c(x) {\n      return x + \"\";\n    },\n    \"d\": formatDecimal,\n    \"e\": function e(x, p) {\n      return x.toExponential(p);\n    },\n    \"f\": function f(x, p) {\n      return x.toFixed(p);\n    },\n    \"g\": function g(x, p) {\n      return x.toPrecision(p);\n    },\n    \"o\": function o(x) {\n      return Math.round(x).toString(8);\n    },\n    \"p\": function p(x, _p3) {\n      return formatRounded(x * 100, _p3);\n    },\n    \"r\": formatRounded,\n    \"s\": formatPrefixAuto,\n    \"X\": function X(x) {\n      return Math.round(x).toString(16).toUpperCase();\n    },\n    \"x\": function x(_x12) {\n      return Math.round(_x12).toString(16);\n    }\n  };\n\n  function identity$6(x) {\n    return x;\n  }\n\n  var map = Array.prototype.map,\n      prefixes = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"\\xB5\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"];\n\n  function formatLocale$1(locale) {\n    var group = locale.grouping === undefined || locale.thousands === undefined ? identity$6 : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n        currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n        currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n        decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n        numerals = locale.numerals === undefined ? identity$6 : formatNumerals(map.call(locale.numerals, String)),\n        percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n        minus = locale.minus === undefined ? \"\\u2212\" : locale.minus + \"\",\n        nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n    function newFormat(specifier) {\n      specifier = formatSpecifier(specifier);\n      var fill = specifier.fill,\n          align = specifier.align,\n          sign = specifier.sign,\n          symbol = specifier.symbol,\n          zero = specifier.zero,\n          width = specifier.width,\n          comma = specifier.comma,\n          precision = specifier.precision,\n          trim = specifier.trim,\n          type = specifier.type; // The \"n\" type is an alias for \",g\".\n\n      if (type === \"n\") comma = true, type = \"g\"; // The \"\" type, and any invalid type, is an alias for \".12~g\".\n      else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\"; // If zero fill is specified, padding goes after sign and before digits.\n\n      if (zero || fill === \"0\" && align === \"=\") zero = true, fill = \"0\", align = \"=\"; // Compute the prefix and suffix.\n      // For SI-prefix, the suffix is lazily computed.\n\n      var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n          suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\"; // What format function should we use?\n      // Is this an integer type?\n      // Can this type generate exponential notation?\n\n      var formatType = formatTypes[type],\n          maybeSuffix = /[defgprs%]/.test(type); // Set the default precision if not specified,\n      // or clamp the specified precision to the supported range.\n      // For significant precision, it must be in [1, 21].\n      // For fixed precision, it must be in [0, 20].\n\n      precision = precision === undefined ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));\n\n      function format(value) {\n        var valuePrefix = prefix,\n            valueSuffix = suffix,\n            i,\n            n,\n            c;\n\n        if (type === \"c\") {\n          valueSuffix = formatType(value) + valueSuffix;\n          value = \"\";\n        } else {\n          value = +value; // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n\n          var valueNegative = value < 0 || 1 / value < 0; // Perform the initial formatting.\n\n          value = isNaN(value) ? nan : formatType(Math.abs(value), precision); // Trim insignificant zeros.\n\n          if (trim) value = formatTrim(value); // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n\n          if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false; // Compute the prefix and suffix.\n\n          valuePrefix = (valueNegative ? sign === \"(\" ? sign : minus : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n          valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\"); // Break the formatted value into the integer “value” part that can be\n          // grouped, and fractional or exponential “suffix” part that is not.\n\n          if (maybeSuffix) {\n            i = -1, n = value.length;\n\n            while (++i < n) {\n              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                value = value.slice(0, i);\n                break;\n              }\n            }\n          }\n        } // If the fill character is not \"0\", grouping is applied before padding.\n\n\n        if (comma && !zero) value = group(value, Infinity); // Compute the padding.\n\n        var length = valuePrefix.length + value.length + valueSuffix.length,\n            padding = length < width ? new Array(width - length + 1).join(fill) : \"\"; // If the fill character is \"0\", grouping is applied after padding.\n\n        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\"; // Reconstruct the final output based on the desired alignment.\n\n        switch (align) {\n          case \"<\":\n            value = valuePrefix + value + valueSuffix + padding;\n            break;\n\n          case \"=\":\n            value = valuePrefix + padding + value + valueSuffix;\n            break;\n\n          case \"^\":\n            value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n            break;\n\n          default:\n            value = padding + valuePrefix + value + valueSuffix;\n            break;\n        }\n\n        return numerals(value);\n      }\n\n      format.toString = function () {\n        return specifier + \"\";\n      };\n\n      return format;\n    }\n\n    function formatPrefix(specifier, value) {\n      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n          e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n          k = Math.pow(10, -e),\n          prefix = prefixes[8 + e / 3];\n      return function (value) {\n        return f(k * value) + prefix;\n      };\n    }\n\n    return {\n      format: newFormat,\n      formatPrefix: formatPrefix\n    };\n  }\n\n  var locale$1;\n  exports.format = void 0;\n  exports.formatPrefix = void 0;\n  defaultLocale$1({\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  });\n\n  function defaultLocale$1(definition) {\n    locale$1 = formatLocale$1(definition);\n    exports.format = locale$1.format;\n    exports.formatPrefix = locale$1.formatPrefix;\n    return locale$1;\n  }\n\n  function precisionFixed(step) {\n    return Math.max(0, -exponent(Math.abs(step)));\n  }\n\n  function precisionPrefix(step, value) {\n    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n  }\n\n  function precisionRound(step, max) {\n    step = Math.abs(step), max = Math.abs(max) - step;\n    return Math.max(0, exponent(max) - exponent(step)) + 1;\n  }\n\n  var epsilon$1 = 1e-6;\n  var epsilon2 = 1e-12;\n  var pi$1 = Math.PI;\n  var halfPi$1 = pi$1 / 2;\n  var quarterPi = pi$1 / 4;\n  var tau$1 = pi$1 * 2;\n  var degrees = 180 / pi$1;\n  var radians = pi$1 / 180;\n  var abs$1 = Math.abs;\n  var atan = Math.atan;\n  var atan2$1 = Math.atan2;\n  var cos$1 = Math.cos;\n  var ceil = Math.ceil;\n  var exp = Math.exp;\n  var hypot = Math.hypot;\n  var log$1 = Math.log;\n  var pow$1 = Math.pow;\n  var sin$1 = Math.sin;\n\n  var sign$1 = Math.sign || function (x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  };\n\n  var sqrt$2 = Math.sqrt;\n  var tan = Math.tan;\n\n  function acos$1(x) {\n    return x > 1 ? 0 : x < -1 ? pi$1 : Math.acos(x);\n  }\n\n  function asin$1(x) {\n    return x > 1 ? halfPi$1 : x < -1 ? -halfPi$1 : Math.asin(x);\n  }\n\n  function haversin(x) {\n    return (x = sin$1(x / 2)) * x;\n  }\n\n  function noop$1() {}\n\n  function streamGeometry(geometry, stream) {\n    if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n      streamGeometryType[geometry.type](geometry, stream);\n    }\n  }\n\n  var streamObjectType = {\n    Feature: function Feature(object, stream) {\n      streamGeometry(object.geometry, stream);\n    },\n    FeatureCollection: function FeatureCollection(object, stream) {\n      var features = object.features,\n          i = -1,\n          n = features.length;\n\n      while (++i < n) {\n        streamGeometry(features[i].geometry, stream);\n      }\n    }\n  };\n  var streamGeometryType = {\n    Sphere: function Sphere(object, stream) {\n      stream.sphere();\n    },\n    Point: function Point(object, stream) {\n      object = object.coordinates;\n      stream.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function MultiPoint(object, stream) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        object = coordinates[i], stream.point(object[0], object[1], object[2]);\n      }\n    },\n    LineString: function LineString(object, stream) {\n      streamLine(object.coordinates, stream, 0);\n    },\n    MultiLineString: function MultiLineString(object, stream) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        streamLine(coordinates[i], stream, 0);\n      }\n    },\n    Polygon: function Polygon(object, stream) {\n      streamPolygon(object.coordinates, stream);\n    },\n    MultiPolygon: function MultiPolygon(object, stream) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        streamPolygon(coordinates[i], stream);\n      }\n    },\n    GeometryCollection: function GeometryCollection(object, stream) {\n      var geometries = object.geometries,\n          i = -1,\n          n = geometries.length;\n\n      while (++i < n) {\n        streamGeometry(geometries[i], stream);\n      }\n    }\n  };\n\n  function streamLine(coordinates, stream, closed) {\n    var i = -1,\n        n = coordinates.length - closed,\n        coordinate;\n    stream.lineStart();\n\n    while (++i < n) {\n      coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n    }\n\n    stream.lineEnd();\n  }\n\n  function streamPolygon(coordinates, stream) {\n    var i = -1,\n        n = coordinates.length;\n    stream.polygonStart();\n\n    while (++i < n) {\n      streamLine(coordinates[i], stream, 1);\n    }\n\n    stream.polygonEnd();\n  }\n\n  function geoStream(object, stream) {\n    if (object && streamObjectType.hasOwnProperty(object.type)) {\n      streamObjectType[object.type](object, stream);\n    } else {\n      streamGeometry(object, stream);\n    }\n  }\n\n  var areaRingSum$1 = new Adder(); // hello?\n\n  var areaSum$1 = new Adder(),\n      lambda00$2,\n      phi00$2,\n      lambda0$2,\n      cosPhi0$1,\n      sinPhi0$1;\n  var areaStream$1 = {\n    point: noop$1,\n    lineStart: noop$1,\n    lineEnd: noop$1,\n    polygonStart: function polygonStart() {\n      areaRingSum$1 = new Adder();\n      areaStream$1.lineStart = areaRingStart$1;\n      areaStream$1.lineEnd = areaRingEnd$1;\n    },\n    polygonEnd: function polygonEnd() {\n      var areaRing = +areaRingSum$1;\n      areaSum$1.add(areaRing < 0 ? tau$1 + areaRing : areaRing);\n      this.lineStart = this.lineEnd = this.point = noop$1;\n    },\n    sphere: function sphere() {\n      areaSum$1.add(tau$1);\n    }\n  };\n\n  function areaRingStart$1() {\n    areaStream$1.point = areaPointFirst$1;\n  }\n\n  function areaRingEnd$1() {\n    areaPoint$1(lambda00$2, phi00$2);\n  }\n\n  function areaPointFirst$1(lambda, phi) {\n    areaStream$1.point = areaPoint$1;\n    lambda00$2 = lambda, phi00$2 = phi;\n    lambda *= radians, phi *= radians;\n    lambda0$2 = lambda, cosPhi0$1 = cos$1(phi = phi / 2 + quarterPi), sinPhi0$1 = sin$1(phi);\n  }\n\n  function areaPoint$1(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    phi = phi / 2 + quarterPi; // half the angular distance from south pole\n    // Spherical excess E for a spherical triangle with vertices: south pole,\n    // previous point, current point.  Uses a formula derived from Cagnoli’s\n    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\n    var dLambda = lambda - lambda0$2,\n        sdLambda = dLambda >= 0 ? 1 : -1,\n        adLambda = sdLambda * dLambda,\n        cosPhi = cos$1(phi),\n        sinPhi = sin$1(phi),\n        k = sinPhi0$1 * sinPhi,\n        u = cosPhi0$1 * cosPhi + k * cos$1(adLambda),\n        v = k * sdLambda * sin$1(adLambda);\n    areaRingSum$1.add(atan2$1(v, u)); // Advance the previous points.\n\n    lambda0$2 = lambda, cosPhi0$1 = cosPhi, sinPhi0$1 = sinPhi;\n  }\n\n  function area$2(object) {\n    areaSum$1 = new Adder();\n    geoStream(object, areaStream$1);\n    return areaSum$1 * 2;\n  }\n\n  function spherical(cartesian) {\n    return [atan2$1(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n  }\n\n  function cartesian(spherical) {\n    var lambda = spherical[0],\n        phi = spherical[1],\n        cosPhi = cos$1(phi);\n    return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n  }\n\n  function cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n\n  function cartesianCross(a, b) {\n    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n  } // TODO return a\n\n\n  function cartesianAddInPlace(a, b) {\n    a[0] += b[0], a[1] += b[1], a[2] += b[2];\n  }\n\n  function cartesianScale(vector, k) {\n    return [vector[0] * k, vector[1] * k, vector[2] * k];\n  } // TODO return d\n\n\n  function cartesianNormalizeInPlace(d) {\n    var l = sqrt$2(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l, d[1] /= l, d[2] /= l;\n  }\n\n  var lambda0$1, phi0, lambda1, phi1, // bounds\n  lambda2, // previous lambda-coordinate\n  lambda00$1, phi00$1, // first point\n  p0, // previous 3D point\n  deltaSum, ranges, range;\n  var boundsStream$2 = {\n    point: boundsPoint$1,\n    lineStart: boundsLineStart,\n    lineEnd: boundsLineEnd,\n    polygonStart: function polygonStart() {\n      boundsStream$2.point = boundsRingPoint;\n      boundsStream$2.lineStart = boundsRingStart;\n      boundsStream$2.lineEnd = boundsRingEnd;\n      deltaSum = new Adder();\n      areaStream$1.polygonStart();\n    },\n    polygonEnd: function polygonEnd() {\n      areaStream$1.polygonEnd();\n      boundsStream$2.point = boundsPoint$1;\n      boundsStream$2.lineStart = boundsLineStart;\n      boundsStream$2.lineEnd = boundsLineEnd;\n      if (areaRingSum$1 < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > epsilon$1) phi1 = 90;else if (deltaSum < -epsilon$1) phi0 = -90;\n      range[0] = lambda0$1, range[1] = lambda1;\n    },\n    sphere: function sphere() {\n      lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    }\n  };\n\n  function boundsPoint$1(lambda, phi) {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n    if (phi < phi0) phi0 = phi;\n    if (phi > phi1) phi1 = phi;\n  }\n\n  function linePoint(lambda, phi) {\n    var p = cartesian([lambda * radians, phi * radians]);\n\n    if (p0) {\n      var normal = cartesianCross(p0, p),\n          equatorial = [normal[1], -normal[0], 0],\n          inflection = cartesianCross(equatorial, normal);\n      cartesianNormalizeInPlace(inflection);\n      inflection = spherical(inflection);\n      var delta = lambda - lambda2,\n          sign = delta > 0 ? 1 : -1,\n          lambdai = inflection[0] * degrees * sign,\n          phii,\n          antimeridian = abs$1(delta) > 180;\n\n      if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n        phii = inflection[1] * degrees;\n        if (phii > phi1) phi1 = phii;\n      } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n        phii = -inflection[1] * degrees;\n        if (phii < phi0) phi0 = phii;\n      } else {\n        if (phi < phi0) phi0 = phi;\n        if (phi > phi1) phi1 = phi;\n      }\n\n      if (antimeridian) {\n        if (lambda < lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      } else {\n        if (lambda1 >= lambda0$1) {\n          if (lambda < lambda0$1) lambda0$1 = lambda;\n          if (lambda > lambda1) lambda1 = lambda;\n        } else {\n          if (lambda > lambda2) {\n            if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n          } else {\n            if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n          }\n        }\n      }\n    } else {\n      ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n    }\n\n    if (phi < phi0) phi0 = phi;\n    if (phi > phi1) phi1 = phi;\n    p0 = p, lambda2 = lambda;\n  }\n\n  function boundsLineStart() {\n    boundsStream$2.point = linePoint;\n  }\n\n  function boundsLineEnd() {\n    range[0] = lambda0$1, range[1] = lambda1;\n    boundsStream$2.point = boundsPoint$1;\n    p0 = null;\n  }\n\n  function boundsRingPoint(lambda, phi) {\n    if (p0) {\n      var delta = lambda - lambda2;\n      deltaSum.add(abs$1(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n    } else {\n      lambda00$1 = lambda, phi00$1 = phi;\n    }\n\n    areaStream$1.point(lambda, phi);\n    linePoint(lambda, phi);\n  }\n\n  function boundsRingStart() {\n    areaStream$1.lineStart();\n  }\n\n  function boundsRingEnd() {\n    boundsRingPoint(lambda00$1, phi00$1);\n    areaStream$1.lineEnd();\n    if (abs$1(deltaSum) > epsilon$1) lambda0$1 = -(lambda1 = 180);\n    range[0] = lambda0$1, range[1] = lambda1;\n    p0 = null;\n  } // Finds the left-right distance between two longitudes.\n  // This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n  // the distance between ±180° to be 360°.\n\n\n  function angle(lambda0, lambda1) {\n    return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n  }\n\n  function rangeCompare(a, b) {\n    return a[0] - b[0];\n  }\n\n  function rangeContains(range, x) {\n    return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n  }\n\n  function bounds(feature) {\n    var i, n, a, b, merged, deltaMax, delta;\n    phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n    ranges = [];\n    geoStream(feature, boundsStream$2); // First, sort ranges by their minimum longitudes.\n\n    if (n = ranges.length) {\n      ranges.sort(rangeCompare); // Then, merge any ranges that overlap.\n\n      for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n        b = ranges[i];\n\n        if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n          if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n          if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n        } else {\n          merged.push(a = b);\n        }\n      } // Finally, find the largest gap between the merged ranges.\n      // The final bounding box will be the inverse of this gap.\n\n\n      for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n        b = merged[i];\n        if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n      }\n    }\n\n    ranges = range = null;\n    return lambda0$1 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0$1, phi0], [lambda1, phi1]];\n  }\n\n  var W0, W1, X0$1, Y0$1, Z0$1, X1$1, Y1$1, Z1$1, X2$1, Y2$1, Z2$1, lambda00, phi00, // first point\n  x0$4, y0$4, z0; // previous point\n\n  var centroidStream$1 = {\n    sphere: noop$1,\n    point: centroidPoint$1,\n    lineStart: centroidLineStart$1,\n    lineEnd: centroidLineEnd$1,\n    polygonStart: function polygonStart() {\n      centroidStream$1.lineStart = centroidRingStart$1;\n      centroidStream$1.lineEnd = centroidRingEnd$1;\n    },\n    polygonEnd: function polygonEnd() {\n      centroidStream$1.lineStart = centroidLineStart$1;\n      centroidStream$1.lineEnd = centroidLineEnd$1;\n    }\n  }; // Arithmetic mean of Cartesian vectors.\n\n  function centroidPoint$1(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var cosPhi = cos$1(phi);\n    centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n  }\n\n  function centroidPointCartesian(x, y, z) {\n    ++W0;\n    X0$1 += (x - X0$1) / W0;\n    Y0$1 += (y - Y0$1) / W0;\n    Z0$1 += (z - Z0$1) / W0;\n  }\n\n  function centroidLineStart$1() {\n    centroidStream$1.point = centroidLinePointFirst;\n  }\n\n  function centroidLinePointFirst(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var cosPhi = cos$1(phi);\n    x0$4 = cosPhi * cos$1(lambda);\n    y0$4 = cosPhi * sin$1(lambda);\n    z0 = sin$1(phi);\n    centroidStream$1.point = centroidLinePoint;\n    centroidPointCartesian(x0$4, y0$4, z0);\n  }\n\n  function centroidLinePoint(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var cosPhi = cos$1(phi),\n        x = cosPhi * cos$1(lambda),\n        y = cosPhi * sin$1(lambda),\n        z = sin$1(phi),\n        w = atan2$1(sqrt$2((w = y0$4 * z - z0 * y) * w + (w = z0 * x - x0$4 * z) * w + (w = x0$4 * y - y0$4 * x) * w), x0$4 * x + y0$4 * y + z0 * z);\n    W1 += w;\n    X1$1 += w * (x0$4 + (x0$4 = x));\n    Y1$1 += w * (y0$4 + (y0$4 = y));\n    Z1$1 += w * (z0 + (z0 = z));\n    centroidPointCartesian(x0$4, y0$4, z0);\n  }\n\n  function centroidLineEnd$1() {\n    centroidStream$1.point = centroidPoint$1;\n  } // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n  // J. Applied Mechanics 42, 239 (1975).\n\n\n  function centroidRingStart$1() {\n    centroidStream$1.point = centroidRingPointFirst;\n  }\n\n  function centroidRingEnd$1() {\n    centroidRingPoint(lambda00, phi00);\n    centroidStream$1.point = centroidPoint$1;\n  }\n\n  function centroidRingPointFirst(lambda, phi) {\n    lambda00 = lambda, phi00 = phi;\n    lambda *= radians, phi *= radians;\n    centroidStream$1.point = centroidRingPoint;\n    var cosPhi = cos$1(phi);\n    x0$4 = cosPhi * cos$1(lambda);\n    y0$4 = cosPhi * sin$1(lambda);\n    z0 = sin$1(phi);\n    centroidPointCartesian(x0$4, y0$4, z0);\n  }\n\n  function centroidRingPoint(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var cosPhi = cos$1(phi),\n        x = cosPhi * cos$1(lambda),\n        y = cosPhi * sin$1(lambda),\n        z = sin$1(phi),\n        cx = y0$4 * z - z0 * y,\n        cy = z0 * x - x0$4 * z,\n        cz = x0$4 * y - y0$4 * x,\n        m = hypot(cx, cy, cz),\n        w = asin$1(m),\n        // line weight = angle\n    v = m && -w / m; // area weight multiplier\n\n    X2$1.add(v * cx);\n    Y2$1.add(v * cy);\n    Z2$1.add(v * cz);\n    W1 += w;\n    X1$1 += w * (x0$4 + (x0$4 = x));\n    Y1$1 += w * (y0$4 + (y0$4 = y));\n    Z1$1 += w * (z0 + (z0 = z));\n    centroidPointCartesian(x0$4, y0$4, z0);\n  }\n\n  function centroid$1(object) {\n    W0 = W1 = X0$1 = Y0$1 = Z0$1 = X1$1 = Y1$1 = Z1$1 = 0;\n    X2$1 = new Adder();\n    Y2$1 = new Adder();\n    Z2$1 = new Adder();\n    geoStream(object, centroidStream$1);\n    var x = +X2$1,\n        y = +Y2$1,\n        z = +Z2$1,\n        m = hypot(x, y, z); // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\n    if (m < epsilon2) {\n      x = X1$1, y = Y1$1, z = Z1$1; // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\n      if (W1 < epsilon$1) x = X0$1, y = Y0$1, z = Z0$1;\n      m = hypot(x, y, z); // If the feature still has an undefined ccentroid, then return.\n\n      if (m < epsilon2) return [NaN, NaN];\n    }\n\n    return [atan2$1(y, x) * degrees, asin$1(z / m) * degrees];\n  }\n\n  function constant$3(x) {\n    return function () {\n      return x;\n    };\n  }\n\n  function compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n\n    if (a.invert && b.invert) compose.invert = function (x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n\n  function rotationIdentity(lambda, phi) {\n    return [abs$1(lambda) > pi$1 ? lambda + Math.round(-lambda / tau$1) * tau$1 : lambda, phi];\n  }\n\n  rotationIdentity.invert = rotationIdentity;\n\n  function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n    return (deltaLambda %= tau$1) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n  }\n\n  function forwardRotationLambda(deltaLambda) {\n    return function (lambda, phi) {\n      return lambda += deltaLambda, [lambda > pi$1 ? lambda - tau$1 : lambda < -pi$1 ? lambda + tau$1 : lambda, phi];\n    };\n  }\n\n  function rotationLambda(deltaLambda) {\n    var rotation = forwardRotationLambda(deltaLambda);\n    rotation.invert = forwardRotationLambda(-deltaLambda);\n    return rotation;\n  }\n\n  function rotationPhiGamma(deltaPhi, deltaGamma) {\n    var cosDeltaPhi = cos$1(deltaPhi),\n        sinDeltaPhi = sin$1(deltaPhi),\n        cosDeltaGamma = cos$1(deltaGamma),\n        sinDeltaGamma = sin$1(deltaGamma);\n\n    function rotation(lambda, phi) {\n      var cosPhi = cos$1(phi),\n          x = cos$1(lambda) * cosPhi,\n          y = sin$1(lambda) * cosPhi,\n          z = sin$1(phi),\n          k = z * cosDeltaPhi + x * sinDeltaPhi;\n      return [atan2$1(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin$1(k * cosDeltaGamma + y * sinDeltaGamma)];\n    }\n\n    rotation.invert = function (lambda, phi) {\n      var cosPhi = cos$1(phi),\n          x = cos$1(lambda) * cosPhi,\n          y = sin$1(lambda) * cosPhi,\n          z = sin$1(phi),\n          k = z * cosDeltaGamma - y * sinDeltaGamma;\n      return [atan2$1(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin$1(k * cosDeltaPhi - x * sinDeltaPhi)];\n    };\n\n    return rotation;\n  }\n\n  function rotation(rotate) {\n    rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n      return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n    }\n\n    forward.invert = function (coordinates) {\n      coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n      return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n    };\n\n    return forward;\n  } // Generates a circle centered at [0°, 0°], with a given radius and precision.\n\n\n  function circleStream(stream, radius, delta, direction, t0, t1) {\n    if (!delta) return;\n    var cosRadius = cos$1(radius),\n        sinRadius = sin$1(radius),\n        step = direction * delta;\n\n    if (t0 == null) {\n      t0 = radius + direction * tau$1;\n      t1 = radius - step / 2;\n    } else {\n      t0 = circleRadius(cosRadius, t0);\n      t1 = circleRadius(cosRadius, t1);\n      if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$1;\n    }\n\n    for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n      point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n      stream.point(point[0], point[1]);\n    }\n  } // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\n\n  function circleRadius(cosRadius, point) {\n    point = cartesian(point), point[0] -= cosRadius;\n    cartesianNormalizeInPlace(point);\n    var radius = acos$1(-point[1]);\n    return ((-point[2] < 0 ? -radius : radius) + tau$1 - epsilon$1) % tau$1;\n  }\n\n  function circle$2() {\n    var center = constant$3([0, 0]),\n        radius = constant$3(90),\n        precision = constant$3(6),\n        ring,\n        rotate,\n        stream = {\n      point: point\n    };\n\n    function point(x, y) {\n      ring.push(x = rotate(x, y));\n      x[0] *= degrees, x[1] *= degrees;\n    }\n\n    function circle() {\n      var c = center.apply(this, arguments),\n          r = radius.apply(this, arguments) * radians,\n          p = precision.apply(this, arguments) * radians;\n      ring = [];\n      rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n      circleStream(stream, r, p, 1);\n      c = {\n        type: \"Polygon\",\n        coordinates: [ring]\n      };\n      ring = rotate = null;\n      return c;\n    }\n\n    circle.center = function (_) {\n      return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$3([+_[0], +_[1]]), circle) : center;\n    };\n\n    circle.radius = function (_) {\n      return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$3(+_), circle) : radius;\n    };\n\n    circle.precision = function (_) {\n      return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$3(+_), circle) : precision;\n    };\n\n    return circle;\n  }\n\n  function clipBuffer() {\n    var lines = [],\n        line;\n    return {\n      point: function point(x, y, m) {\n        line.push([x, y, m]);\n      },\n      lineStart: function lineStart() {\n        lines.push(line = []);\n      },\n      lineEnd: noop$1,\n      rejoin: function rejoin() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      },\n      result: function result() {\n        var result = lines;\n        lines = [];\n        line = null;\n        return result;\n      }\n    };\n  }\n\n  function pointEqual(a, b) {\n    return abs$1(a[0] - b[0]) < epsilon$1 && abs$1(a[1] - b[1]) < epsilon$1;\n  }\n\n  function Intersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other; // another intersection\n\n    this.e = entry; // is an entry?\n\n    this.v = false; // visited\n\n    this.n = this.p = null; // next & previous\n  } // A generalized polygon clipping algorithm: given a polygon that has been cut\n  // into its visible line segments, and rejoins the segments by interpolating\n  // along the clip edge.\n\n\n  function clipRejoin(segments, compareIntersection, startInside, interpolate, stream) {\n    var subject = [],\n        clip = [],\n        i,\n        n;\n    segments.forEach(function (segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n,\n          p0 = segment[0],\n          p1 = segment[n],\n          x;\n\n      if (pointEqual(p0, p1)) {\n        if (!p0[2] && !p1[2]) {\n          stream.lineStart();\n\n          for (i = 0; i < n; ++i) {\n            stream.point((p0 = segment[i])[0], p0[1]);\n          }\n\n          stream.lineEnd();\n          return;\n        } // handle degenerate cases by moving the point\n\n\n        p1[0] += 2 * epsilon$1;\n      }\n\n      subject.push(x = new Intersection(p0, segment, null, true));\n      clip.push(x.o = new Intersection(p0, null, x, false));\n      subject.push(x = new Intersection(p1, segment, null, false));\n      clip.push(x.o = new Intersection(p1, null, x, true));\n    });\n    if (!subject.length) return;\n    clip.sort(compareIntersection);\n    link$1(subject);\n    link$1(clip);\n\n    for (i = 0, n = clip.length; i < n; ++i) {\n      clip[i].e = startInside = !startInside;\n    }\n\n    var start = subject[0],\n        points,\n        point;\n\n    while (1) {\n      // Find first unvisited intersection.\n      var current = start,\n          isSubject = true;\n\n      while (current.v) {\n        if ((current = current.n) === start) return;\n      }\n\n      points = current.z;\n      stream.lineStart();\n\n      do {\n        current.v = current.o.v = true;\n\n        if (current.e) {\n          if (isSubject) {\n            for (i = 0, n = points.length; i < n; ++i) {\n              stream.point((point = points[i])[0], point[1]);\n            }\n          } else {\n            interpolate(current.x, current.n.x, 1, stream);\n          }\n\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n\n            for (i = points.length - 1; i >= 0; --i) {\n              stream.point((point = points[i])[0], point[1]);\n            }\n          } else {\n            interpolate(current.x, current.p.x, -1, stream);\n          }\n\n          current = current.p;\n        }\n\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n\n      stream.lineEnd();\n    }\n  }\n\n  function link$1(array) {\n    if (!(n = array.length)) return;\n    var n,\n        i = 0,\n        a = array[0],\n        b;\n\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n\n    a.n = b = array[0];\n    b.p = a;\n  }\n\n  function longitude(point) {\n    return abs$1(point[0]) <= pi$1 ? point[0] : sign$1(point[0]) * ((abs$1(point[0]) + pi$1) % tau$1 - pi$1);\n  }\n\n  function polygonContains(polygon, point) {\n    var lambda = longitude(point),\n        phi = point[1],\n        sinPhi = sin$1(phi),\n        normal = [sin$1(lambda), -cos$1(lambda), 0],\n        angle = 0,\n        winding = 0;\n    var sum = new Adder();\n    if (sinPhi === 1) phi = halfPi$1 + epsilon$1;else if (sinPhi === -1) phi = -halfPi$1 - epsilon$1;\n\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      if (!(m = (ring = polygon[i]).length)) continue;\n      var ring,\n          m,\n          point0 = ring[m - 1],\n          lambda0 = longitude(point0),\n          phi0 = point0[1] / 2 + quarterPi,\n          sinPhi0 = sin$1(phi0),\n          cosPhi0 = cos$1(phi0);\n\n      for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n        var point1 = ring[j],\n            lambda1 = longitude(point1),\n            phi1 = point1[1] / 2 + quarterPi,\n            sinPhi1 = sin$1(phi1),\n            cosPhi1 = cos$1(phi1),\n            delta = lambda1 - lambda0,\n            sign = delta >= 0 ? 1 : -1,\n            absDelta = sign * delta,\n            antimeridian = absDelta > pi$1,\n            k = sinPhi0 * sinPhi1;\n        sum.add(atan2$1(k * sign * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n        angle += antimeridian ? delta + sign * tau$1 : delta; // Are the longitudes either side of the point’s meridian (lambda),\n        // and are the latitudes smaller than the parallel (phi)?\n\n        if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n          var arc = cartesianCross(cartesian(point0), cartesian(point1));\n          cartesianNormalizeInPlace(arc);\n          var intersection = cartesianCross(normal, arc);\n          cartesianNormalizeInPlace(intersection);\n          var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n\n          if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ delta >= 0 ? 1 : -1;\n          }\n        }\n      }\n    } // First, determine whether the South pole is inside or outside:\n    //\n    // It is inside if:\n    // * the polygon winds around it in a clockwise direction.\n    // * the polygon does not (cumulatively) wind around it, but has a negative\n    //   (counter-clockwise) area.\n    //\n    // Second, count the (signed) number of times a segment crosses a lambda\n    // from the point to the South pole.  If it is zero, then the point is the\n    // same side as the South pole.\n\n\n    return (angle < -epsilon$1 || angle < epsilon$1 && sum < -epsilon2) ^ winding & 1;\n  }\n\n  function clip(pointVisible, clipLine, interpolate, start) {\n    return function (sink) {\n      var line = clipLine(sink),\n          ringBuffer = clipBuffer(),\n          ringSink = clipLine(ringBuffer),\n          polygonStarted = false,\n          polygon,\n          segments,\n          ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function polygonEnd() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = merge(segments);\n          var startInside = polygonContains(polygon, start);\n\n          if (segments.length) {\n            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n            clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n          } else if (startInside) {\n            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n            sink.lineStart();\n            interpolate(null, null, 1, sink);\n            sink.lineEnd();\n          }\n\n          if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function sphere() {\n          sink.polygonStart();\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n          sink.polygonEnd();\n        }\n      };\n\n      function point(lambda, phi) {\n        if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n      }\n\n      function pointLine(lambda, phi) {\n        line.point(lambda, phi);\n      }\n\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n\n      function pointRing(lambda, phi) {\n        ring.push([lambda, phi]);\n        ringSink.point(lambda, phi);\n      }\n\n      function ringStart() {\n        ringSink.lineStart();\n        ring = [];\n      }\n\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringSink.lineEnd();\n        var clean = ringSink.clean(),\n            ringSegments = ringBuffer.result(),\n            i,\n            n = ringSegments.length,\n            m,\n            segment,\n            point;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return; // No intersections.\n\n        if (clean & 1) {\n          segment = ringSegments[0];\n\n          if ((m = segment.length - 1) > 0) {\n            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n            sink.lineStart();\n\n            for (i = 0; i < m; ++i) {\n              sink.point((point = segment[i])[0], point[1]);\n            }\n\n            sink.lineEnd();\n          }\n\n          return;\n        } // Rejoin connected segments.\n        // TODO reuse ringBuffer.rejoin()?\n\n\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(validSegment));\n      }\n\n      return clip;\n    };\n  }\n\n  function validSegment(segment) {\n    return segment.length > 1;\n  } // Intersections are sorted along the clip edge. For both antimeridian cutting\n  // and circle clipping, the same comparison is used.\n\n\n  function compareIntersection(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfPi$1 - epsilon$1 : halfPi$1 - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi$1 - epsilon$1 : halfPi$1 - b[1]);\n  }\n\n  var clipAntimeridian = clip(function () {\n    return true;\n  }, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi$1, -halfPi$1]); // Takes a line and cuts into visible segments. Return values: 0 - there were\n  // intersections or the line was empty; 1 - no intersections; 2 - there were\n  // intersections, and the first and last segments should be rejoined.\n\n  function clipAntimeridianLine(stream) {\n    var lambda0 = NaN,\n        phi0 = NaN,\n        sign0 = NaN,\n        _clean; // no intersections\n\n\n    return {\n      lineStart: function lineStart() {\n        stream.lineStart();\n        _clean = 1;\n      },\n      point: function point(lambda1, phi1) {\n        var sign1 = lambda1 > 0 ? pi$1 : -pi$1,\n            delta = abs$1(lambda1 - lambda0);\n\n        if (abs$1(delta - pi$1) < epsilon$1) {\n          // line crosses a pole\n          stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$1 : -halfPi$1);\n          stream.point(sign0, phi0);\n          stream.lineEnd();\n          stream.lineStart();\n          stream.point(sign1, phi0);\n          stream.point(lambda1, phi0);\n          _clean = 0;\n        } else if (sign0 !== sign1 && delta >= pi$1) {\n          // line crosses antimeridian\n          if (abs$1(lambda0 - sign0) < epsilon$1) lambda0 -= sign0 * epsilon$1; // handle degeneracies\n\n          if (abs$1(lambda1 - sign1) < epsilon$1) lambda1 -= sign1 * epsilon$1;\n          phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n          stream.point(sign0, phi0);\n          stream.lineEnd();\n          stream.lineStart();\n          stream.point(sign1, phi0);\n          _clean = 0;\n        }\n\n        stream.point(lambda0 = lambda1, phi0 = phi1);\n        sign0 = sign1;\n      },\n      lineEnd: function lineEnd() {\n        stream.lineEnd();\n        lambda0 = phi0 = NaN;\n      },\n      clean: function clean() {\n        return 2 - _clean; // if intersections, rejoin first and last segments\n      }\n    };\n  }\n\n  function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n    var cosPhi0,\n        cosPhi1,\n        sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n    return abs$1(sinLambda0Lambda1) > epsilon$1 ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1) - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n  }\n\n  function clipAntimeridianInterpolate(from, to, direction, stream) {\n    var phi;\n\n    if (from == null) {\n      phi = direction * halfPi$1;\n      stream.point(-pi$1, phi);\n      stream.point(0, phi);\n      stream.point(pi$1, phi);\n      stream.point(pi$1, 0);\n      stream.point(pi$1, -phi);\n      stream.point(0, -phi);\n      stream.point(-pi$1, -phi);\n      stream.point(-pi$1, 0);\n      stream.point(-pi$1, phi);\n    } else if (abs$1(from[0] - to[0]) > epsilon$1) {\n      var lambda = from[0] < to[0] ? pi$1 : -pi$1;\n      phi = direction * lambda / 2;\n      stream.point(-lambda, phi);\n      stream.point(0, phi);\n      stream.point(lambda, phi);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function clipCircle(radius) {\n    var cr = cos$1(radius),\n        delta = 6 * radians,\n        smallRadius = cr > 0,\n        notHemisphere = abs$1(cr) > epsilon$1; // TODO optimise for this common case\n\n    function interpolate(from, to, direction, stream) {\n      circleStream(stream, radius, delta, direction, from, to);\n    }\n\n    function visible(lambda, phi) {\n      return cos$1(lambda) * cos$1(phi) > cr;\n    } // Takes a line and cuts into visible segments. Return values used for polygon\n    // clipping: 0 - there were intersections or the line was empty; 1 - no\n    // intersections 2 - there were intersections, and the first and last segments\n    // should be rejoined.\n\n\n    function clipLine(stream) {\n      var point0, // previous point\n      c0, // code for previous point\n      v0, // visibility of previous point\n      v00, // visibility of first point\n      _clean2; // no intersections\n\n\n      return {\n        lineStart: function lineStart() {\n          v00 = v0 = false;\n          _clean2 = 1;\n        },\n        point: function point(lambda, phi) {\n          var point1 = [lambda, phi],\n              point2,\n              v = visible(lambda, phi),\n              c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? pi$1 : -pi$1), phi) : 0;\n          if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) point1[2] = 1;\n          }\n\n          if (v !== v0) {\n            _clean2 = 0;\n\n            if (v) {\n              // outside going in\n              stream.lineStart();\n              point2 = intersect(point1, point0);\n              stream.point(point2[0], point2[1]);\n            } else {\n              // inside going out\n              point2 = intersect(point0, point1);\n              stream.point(point2[0], point2[1], 2);\n              stream.lineEnd();\n            }\n\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t; // If the codes for two points are different, or are both zero,\n            // and there this segment intersects with the small circle.\n\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              _clean2 = 0;\n\n              if (smallRadius) {\n                stream.lineStart();\n                stream.point(t[0][0], t[0][1]);\n                stream.point(t[1][0], t[1][1]);\n                stream.lineEnd();\n              } else {\n                stream.point(t[1][0], t[1][1]);\n                stream.lineEnd();\n                stream.lineStart();\n                stream.point(t[0][0], t[0][1], 3);\n              }\n            }\n          }\n\n          if (v && (!point0 || !pointEqual(point0, point1))) {\n            stream.point(point1[0], point1[1]);\n          }\n\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function lineEnd() {\n          if (v0) stream.lineEnd();\n          point0 = null;\n        },\n        // Rejoin first and last segments if there were intersections and the first\n        // and last points were visible.\n        clean: function clean() {\n          return _clean2 | (v00 && v0) << 1;\n        }\n      };\n    } // Intersects the great circle between a and b with the clip circle.\n\n\n    function intersect(a, b, two) {\n      var pa = cartesian(a),\n          pb = cartesian(b); // We have two planes, n1.p = d1 and n2.p = d2.\n      // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\n      var n1 = [1, 0, 0],\n          // normal\n      n2 = cartesianCross(pa, pb),\n          n2n2 = cartesianDot(n2, n2),\n          n1n2 = n2[0],\n          // cartesianDot(n1, n2),\n      determinant = n2n2 - n1n2 * n1n2; // Two polar points.\n\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant,\n          c2 = -cr * n1n2 / determinant,\n          n1xn2 = cartesianCross(n1, n2),\n          A = cartesianScale(n1, c1),\n          B = cartesianScale(n2, c2);\n      cartesianAddInPlace(A, B); // Solve |p(t)|^2 = 1.\n\n      var u = n1xn2,\n          w = cartesianDot(A, u),\n          uu = cartesianDot(u, u),\n          t2 = w * w - uu * (cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = sqrt$2(t2),\n          q = cartesianScale(u, (-w - t) / uu);\n      cartesianAddInPlace(q, A);\n      q = spherical(q);\n      if (!two) return q; // Two intersection points.\n\n      var lambda0 = a[0],\n          lambda1 = b[0],\n          phi0 = a[1],\n          phi1 = b[1],\n          z;\n      if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n      var delta = lambda1 - lambda0,\n          polar = abs$1(delta - pi$1) < epsilon$1,\n          meridian = polar || delta < epsilon$1;\n      if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.\n\n      if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (abs$1(q[0] - lambda0) < epsilon$1 ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > pi$1 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n        var q1 = cartesianScale(u, (-w + t) / uu);\n        cartesianAddInPlace(q1, A);\n        return [q, spherical(q1)];\n      }\n    } // Generates a 4-bit vector representing the location of a point relative to\n    // the small circle's bounding box.\n\n\n    function code(lambda, phi) {\n      var r = smallRadius ? radius : pi$1 - radius,\n          code = 0;\n      if (lambda < -r) code |= 1; // left\n      else if (lambda > r) code |= 2; // right\n\n      if (phi < -r) code |= 4; // below\n      else if (phi > r) code |= 8; // above\n\n      return code;\n    }\n\n    return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$1, radius - pi$1]);\n  }\n\n  function clipLine(a, b, x0, y0, x1, y1) {\n    var ax = a[0],\n        ay = a[1],\n        bx = b[0],\n        by = b[1],\n        t0 = 0,\n        t1 = 1,\n        dx = bx - ax,\n        dy = by - ay,\n        r;\n    r = x0 - ax;\n    if (!dx && r > 0) return;\n    r /= dx;\n\n    if (dx < 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    } else if (dx > 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    }\n\n    r = x1 - ax;\n    if (!dx && r < 0) return;\n    r /= dx;\n\n    if (dx < 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    } else if (dx > 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    }\n\n    r = y0 - ay;\n    if (!dy && r > 0) return;\n    r /= dy;\n\n    if (dy < 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    } else if (dy > 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    }\n\n    r = y1 - ay;\n    if (!dy && r < 0) return;\n    r /= dy;\n\n    if (dy < 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    } else if (dy > 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    }\n\n    if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n    if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n    return true;\n  }\n\n  var clipMax = 1e9,\n      clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?\n  // TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\n  function clipRectangle(x0, y0, x1, y1) {\n    function visible(x, y) {\n      return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n    }\n\n    function interpolate(from, to, direction, stream) {\n      var a = 0,\n          a1 = 0;\n\n      if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n        do {\n          stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n        } while ((a = (a + direction + 4) % 4) !== a1);\n      } else {\n        stream.point(to[0], to[1]);\n      }\n    }\n\n    function corner(p, direction) {\n      return abs$1(p[0] - x0) < epsilon$1 ? direction > 0 ? 0 : 3 : abs$1(p[0] - x1) < epsilon$1 ? direction > 0 ? 2 : 1 : abs$1(p[1] - y0) < epsilon$1 ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n    }\n\n    function compareIntersection(a, b) {\n      return comparePoint(a.x, b.x);\n    }\n\n    function comparePoint(a, b) {\n      var ca = corner(a, 1),\n          cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n\n    return function (stream) {\n      var activeStream = stream,\n          bufferStream = clipBuffer(),\n          segments,\n          polygon,\n          ring,\n          x__,\n          y__,\n          v__,\n          // first point\n      x_,\n          y_,\n          v_,\n          // previous point\n      first,\n          clean;\n      var clipStream = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: polygonStart,\n        polygonEnd: polygonEnd\n      };\n\n      function point(x, y) {\n        if (visible(x, y)) activeStream.point(x, y);\n      }\n\n      function polygonInside() {\n        var winding = 0;\n\n        for (var i = 0, n = polygon.length; i < n; ++i) {\n          for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n            a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\n            if (a1 <= y1) {\n              if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n            } else {\n              if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n            }\n          }\n        }\n\n        return winding;\n      } // Buffer geometry within a polygon and then clip it en masse.\n\n\n      function polygonStart() {\n        activeStream = bufferStream, segments = [], polygon = [], clean = true;\n      }\n\n      function polygonEnd() {\n        var startInside = polygonInside(),\n            cleanInside = clean && startInside,\n            visible = (segments = merge(segments)).length;\n\n        if (cleanInside || visible) {\n          stream.polygonStart();\n\n          if (cleanInside) {\n            stream.lineStart();\n            interpolate(null, null, 1, stream);\n            stream.lineEnd();\n          }\n\n          if (visible) {\n            clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n          }\n\n          stream.polygonEnd();\n        }\n\n        activeStream = stream, segments = polygon = ring = null;\n      }\n\n      function lineStart() {\n        clipStream.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      } // TODO rather than special-case polygons, simply handle them separately.\n      // Ideally, coincident intersection points should be jittered to avoid\n      // clipping issues.\n\n\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferStream.rejoin();\n          segments.push(bufferStream.result());\n        }\n\n        clipStream.point = point;\n        if (v_) activeStream.lineEnd();\n      }\n\n      function linePoint(x, y) {\n        var v = visible(x, y);\n        if (polygon) ring.push([x, y]);\n\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n\n          if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n          }\n        } else {\n          if (v && v_) activeStream.point(x, y);else {\n            var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n                b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\n            if (clipLine(a, b, x0, y0, x1, y1)) {\n              if (!v_) {\n                activeStream.lineStart();\n                activeStream.point(a[0], a[1]);\n              }\n\n              activeStream.point(b[0], b[1]);\n              if (!v) activeStream.lineEnd();\n              clean = false;\n            } else if (v) {\n              activeStream.lineStart();\n              activeStream.point(x, y);\n              clean = false;\n            }\n          }\n        }\n\n        x_ = x, y_ = y, v_ = v;\n      }\n\n      return clipStream;\n    };\n  }\n\n  function extent() {\n    var x0 = 0,\n        y0 = 0,\n        x1 = 960,\n        y1 = 500,\n        cache,\n        cacheStream,\n        clip;\n    return clip = {\n      stream: function stream(_stream) {\n        return cache && cacheStream === _stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = _stream);\n      },\n      extent: function extent(_) {\n        return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n      }\n    };\n  }\n\n  var lengthSum$1, lambda0, sinPhi0, cosPhi0;\n  var lengthStream$1 = {\n    sphere: noop$1,\n    point: noop$1,\n    lineStart: lengthLineStart,\n    lineEnd: noop$1,\n    polygonStart: noop$1,\n    polygonEnd: noop$1\n  };\n\n  function lengthLineStart() {\n    lengthStream$1.point = lengthPointFirst$1;\n    lengthStream$1.lineEnd = lengthLineEnd;\n  }\n\n  function lengthLineEnd() {\n    lengthStream$1.point = lengthStream$1.lineEnd = noop$1;\n  }\n\n  function lengthPointFirst$1(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    lambda0 = lambda, sinPhi0 = sin$1(phi), cosPhi0 = cos$1(phi);\n    lengthStream$1.point = lengthPoint$1;\n  }\n\n  function lengthPoint$1(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var sinPhi = sin$1(phi),\n        cosPhi = cos$1(phi),\n        delta = abs$1(lambda - lambda0),\n        cosDelta = cos$1(delta),\n        sinDelta = sin$1(delta),\n        x = cosPhi * sinDelta,\n        y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n        z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n    lengthSum$1.add(atan2$1(sqrt$2(x * x + y * y), z));\n    lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n  }\n\n  function length$1(object) {\n    lengthSum$1 = new Adder();\n    geoStream(object, lengthStream$1);\n    return +lengthSum$1;\n  }\n\n  var coordinates = [null, null],\n      object = {\n    type: \"LineString\",\n    coordinates: coordinates\n  };\n\n  function distance(a, b) {\n    coordinates[0] = a;\n    coordinates[1] = b;\n    return length$1(object);\n  }\n\n  var containsObjectType = {\n    Feature: function Feature(object, point) {\n      return containsGeometry(object.geometry, point);\n    },\n    FeatureCollection: function FeatureCollection(object, point) {\n      var features = object.features,\n          i = -1,\n          n = features.length;\n\n      while (++i < n) {\n        if (containsGeometry(features[i].geometry, point)) return true;\n      }\n\n      return false;\n    }\n  };\n  var containsGeometryType = {\n    Sphere: function Sphere() {\n      return true;\n    },\n    Point: function Point(object, point) {\n      return containsPoint(object.coordinates, point);\n    },\n    MultiPoint: function MultiPoint(object, point) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        if (containsPoint(coordinates[i], point)) return true;\n      }\n\n      return false;\n    },\n    LineString: function LineString(object, point) {\n      return containsLine(object.coordinates, point);\n    },\n    MultiLineString: function MultiLineString(object, point) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        if (containsLine(coordinates[i], point)) return true;\n      }\n\n      return false;\n    },\n    Polygon: function Polygon(object, point) {\n      return containsPolygon(object.coordinates, point);\n    },\n    MultiPolygon: function MultiPolygon(object, point) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        if (containsPolygon(coordinates[i], point)) return true;\n      }\n\n      return false;\n    },\n    GeometryCollection: function GeometryCollection(object, point) {\n      var geometries = object.geometries,\n          i = -1,\n          n = geometries.length;\n\n      while (++i < n) {\n        if (containsGeometry(geometries[i], point)) return true;\n      }\n\n      return false;\n    }\n  };\n\n  function containsGeometry(geometry, point) {\n    return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point) : false;\n  }\n\n  function containsPoint(coordinates, point) {\n    return distance(coordinates, point) === 0;\n  }\n\n  function containsLine(coordinates, point) {\n    var ao, bo, ab;\n\n    for (var i = 0, n = coordinates.length; i < n; i++) {\n      bo = distance(coordinates[i], point);\n      if (bo === 0) return true;\n\n      if (i > 0) {\n        ab = distance(coordinates[i], coordinates[i - 1]);\n        if (ab > 0 && ao <= ab && bo <= ab && (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab) return true;\n      }\n\n      ao = bo;\n    }\n\n    return false;\n  }\n\n  function containsPolygon(coordinates, point) {\n    return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n  }\n\n  function ringRadians(ring) {\n    return ring = ring.map(pointRadians), ring.pop(), ring;\n  }\n\n  function pointRadians(point) {\n    return [point[0] * radians, point[1] * radians];\n  }\n\n  function contains$1(object, point) {\n    return (object && containsObjectType.hasOwnProperty(object.type) ? containsObjectType[object.type] : containsGeometry)(object, point);\n  }\n\n  function graticuleX(y0, y1, dy) {\n    var y = range$2(y0, y1 - epsilon$1, dy).concat(y1);\n    return function (x) {\n      return y.map(function (y) {\n        return [x, y];\n      });\n    };\n  }\n\n  function graticuleY(x0, x1, dx) {\n    var x = range$2(x0, x1 - epsilon$1, dx).concat(x1);\n    return function (y) {\n      return x.map(function (x) {\n        return [x, y];\n      });\n    };\n  }\n\n  function graticule() {\n    var x1,\n        x0,\n        X1,\n        X0,\n        y1,\n        y0,\n        Y1,\n        Y0,\n        dx = 10,\n        dy = dx,\n        DX = 90,\n        DY = 360,\n        x,\n        y,\n        X,\n        Y,\n        precision = 2.5;\n\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n\n    function lines() {\n      return range$2(ceil(X0 / DX) * DX, X1, DX).map(X).concat(range$2(ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(range$2(ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n        return abs$1(x % DX) > epsilon$1;\n      }).map(x)).concat(range$2(ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n        return abs$1(y % DY) > epsilon$1;\n      }).map(y));\n    }\n\n    graticule.lines = function () {\n      return lines().map(function (coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n\n    graticule.outline = function () {\n      return {\n        type: \"Polygon\",\n        coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n      };\n    };\n\n    graticule.extent = function (_) {\n      if (!arguments.length) return graticule.extentMinor();\n      return graticule.extentMajor(_).extentMinor(_);\n    };\n\n    graticule.extentMajor = function (_) {\n      if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.extentMinor = function (_) {\n      if (!arguments.length) return [[x0, y0], [x1, y1]];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.step = function (_) {\n      if (!arguments.length) return graticule.stepMinor();\n      return graticule.stepMajor(_).stepMinor(_);\n    };\n\n    graticule.stepMajor = function (_) {\n      if (!arguments.length) return [DX, DY];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n\n    graticule.stepMinor = function (_) {\n      if (!arguments.length) return [dx, dy];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n\n    graticule.precision = function (_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = graticuleX(y0, y1, 90);\n      y = graticuleY(x0, x1, precision);\n      X = graticuleX(Y0, Y1, 90);\n      Y = graticuleY(X0, X1, precision);\n      return graticule;\n    };\n\n    return graticule.extentMajor([[-180, -90 + epsilon$1], [180, 90 - epsilon$1]]).extentMinor([[-180, -80 - epsilon$1], [180, 80 + epsilon$1]]);\n  }\n\n  function graticule10() {\n    return graticule()();\n  }\n\n  function interpolate(a, b) {\n    var x0 = a[0] * radians,\n        y0 = a[1] * radians,\n        x1 = b[0] * radians,\n        y1 = b[1] * radians,\n        cy0 = cos$1(y0),\n        sy0 = sin$1(y0),\n        cy1 = cos$1(y1),\n        sy1 = sin$1(y1),\n        kx0 = cy0 * cos$1(x0),\n        ky0 = cy0 * sin$1(x0),\n        kx1 = cy1 * cos$1(x1),\n        ky1 = cy1 * sin$1(x1),\n        d = 2 * asin$1(sqrt$2(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n        k = sin$1(d);\n    var interpolate = d ? function (t) {\n      var B = sin$1(t *= d) / k,\n          A = sin$1(d - t) / k,\n          x = A * kx0 + B * kx1,\n          y = A * ky0 + B * ky1,\n          z = A * sy0 + B * sy1;\n      return [atan2$1(y, x) * degrees, atan2$1(z, sqrt$2(x * x + y * y)) * degrees];\n    } : function () {\n      return [x0 * degrees, y0 * degrees];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n\n  var identity$5 = function identity$5(x) {\n    return x;\n  };\n\n  var areaSum = new Adder(),\n      areaRingSum = new Adder(),\n      x00$2,\n      y00$2,\n      x0$3,\n      y0$3;\n  var areaStream = {\n    point: noop$1,\n    lineStart: noop$1,\n    lineEnd: noop$1,\n    polygonStart: function polygonStart() {\n      areaStream.lineStart = areaRingStart;\n      areaStream.lineEnd = areaRingEnd;\n    },\n    polygonEnd: function polygonEnd() {\n      areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop$1;\n      areaSum.add(abs$1(areaRingSum));\n      areaRingSum = new Adder();\n    },\n    result: function result() {\n      var area = areaSum / 2;\n      areaSum = new Adder();\n      return area;\n    }\n  };\n\n  function areaRingStart() {\n    areaStream.point = areaPointFirst;\n  }\n\n  function areaPointFirst(x, y) {\n    areaStream.point = areaPoint;\n    x00$2 = x0$3 = x, y00$2 = y0$3 = y;\n  }\n\n  function areaPoint(x, y) {\n    areaRingSum.add(y0$3 * x - x0$3 * y);\n    x0$3 = x, y0$3 = y;\n  }\n\n  function areaRingEnd() {\n    areaPoint(x00$2, y00$2);\n  }\n\n  var pathArea = areaStream;\n  var x0$2 = Infinity,\n      y0$2 = x0$2,\n      x1 = -x0$2,\n      y1 = x1;\n  var boundsStream = {\n    point: boundsPoint,\n    lineStart: noop$1,\n    lineEnd: noop$1,\n    polygonStart: noop$1,\n    polygonEnd: noop$1,\n    result: function result() {\n      var bounds = [[x0$2, y0$2], [x1, y1]];\n      x1 = y1 = -(y0$2 = x0$2 = Infinity);\n      return bounds;\n    }\n  };\n\n  function boundsPoint(x, y) {\n    if (x < x0$2) x0$2 = x;\n    if (x > x1) x1 = x;\n    if (y < y0$2) y0$2 = y;\n    if (y > y1) y1 = y;\n  }\n\n  var boundsStream$1 = boundsStream; // TODO Enforce positive area for exterior, negative area for interior?\n\n  var X0 = 0,\n      Y0 = 0,\n      Z0 = 0,\n      X1 = 0,\n      Y1 = 0,\n      Z1 = 0,\n      X2 = 0,\n      Y2 = 0,\n      Z2 = 0,\n      x00$1,\n      y00$1,\n      x0$1,\n      y0$1;\n  var centroidStream = {\n    point: centroidPoint,\n    lineStart: centroidLineStart,\n    lineEnd: centroidLineEnd,\n    polygonStart: function polygonStart() {\n      centroidStream.lineStart = centroidRingStart;\n      centroidStream.lineEnd = centroidRingEnd;\n    },\n    polygonEnd: function polygonEnd() {\n      centroidStream.point = centroidPoint;\n      centroidStream.lineStart = centroidLineStart;\n      centroidStream.lineEnd = centroidLineEnd;\n    },\n    result: function result() {\n      var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];\n      X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n      return centroid;\n    }\n  };\n\n  function centroidPoint(x, y) {\n    X0 += x;\n    Y0 += y;\n    ++Z0;\n  }\n\n  function centroidLineStart() {\n    centroidStream.point = centroidPointFirstLine;\n  }\n\n  function centroidPointFirstLine(x, y) {\n    centroidStream.point = centroidPointLine;\n    centroidPoint(x0$1 = x, y0$1 = y);\n  }\n\n  function centroidPointLine(x, y) {\n    var dx = x - x0$1,\n        dy = y - y0$1,\n        z = sqrt$2(dx * dx + dy * dy);\n    X1 += z * (x0$1 + x) / 2;\n    Y1 += z * (y0$1 + y) / 2;\n    Z1 += z;\n    centroidPoint(x0$1 = x, y0$1 = y);\n  }\n\n  function centroidLineEnd() {\n    centroidStream.point = centroidPoint;\n  }\n\n  function centroidRingStart() {\n    centroidStream.point = centroidPointFirstRing;\n  }\n\n  function centroidRingEnd() {\n    centroidPointRing(x00$1, y00$1);\n  }\n\n  function centroidPointFirstRing(x, y) {\n    centroidStream.point = centroidPointRing;\n    centroidPoint(x00$1 = x0$1 = x, y00$1 = y0$1 = y);\n  }\n\n  function centroidPointRing(x, y) {\n    var dx = x - x0$1,\n        dy = y - y0$1,\n        z = sqrt$2(dx * dx + dy * dy);\n    X1 += z * (x0$1 + x) / 2;\n    Y1 += z * (y0$1 + y) / 2;\n    Z1 += z;\n    z = y0$1 * x - x0$1 * y;\n    X2 += z * (x0$1 + x);\n    Y2 += z * (y0$1 + y);\n    Z2 += z * 3;\n    centroidPoint(x0$1 = x, y0$1 = y);\n  }\n\n  var pathCentroid = centroidStream;\n\n  function PathContext(context) {\n    this._context = context;\n  }\n\n  PathContext.prototype = {\n    _radius: 4.5,\n    pointRadius: function pointRadius(_) {\n      return this._radius = _, this;\n    },\n    polygonStart: function polygonStart() {\n      this._line = 0;\n    },\n    polygonEnd: function polygonEnd() {\n      this._line = NaN;\n    },\n    lineStart: function lineStart() {\n      this._point = 0;\n    },\n    lineEnd: function lineEnd() {\n      if (this._line === 0) this._context.closePath();\n      this._point = NaN;\n    },\n    point: function point(x, y) {\n      switch (this._point) {\n        case 0:\n          {\n            this._context.moveTo(x, y);\n\n            this._point = 1;\n            break;\n          }\n\n        case 1:\n          {\n            this._context.lineTo(x, y);\n\n            break;\n          }\n\n        default:\n          {\n            this._context.moveTo(x + this._radius, y);\n\n            this._context.arc(x, y, this._radius, 0, tau$1);\n\n            break;\n          }\n      }\n    },\n    result: noop$1\n  };\n  var lengthSum = new Adder(),\n      lengthRing,\n      x00,\n      y00,\n      x0,\n      y0;\n  var lengthStream = {\n    point: noop$1,\n    lineStart: function lineStart() {\n      lengthStream.point = lengthPointFirst;\n    },\n    lineEnd: function lineEnd() {\n      if (lengthRing) lengthPoint(x00, y00);\n      lengthStream.point = noop$1;\n    },\n    polygonStart: function polygonStart() {\n      lengthRing = true;\n    },\n    polygonEnd: function polygonEnd() {\n      lengthRing = null;\n    },\n    result: function result() {\n      var length = +lengthSum;\n      lengthSum = new Adder();\n      return length;\n    }\n  };\n\n  function lengthPointFirst(x, y) {\n    lengthStream.point = lengthPoint;\n    x00 = x0 = x, y00 = y0 = y;\n  }\n\n  function lengthPoint(x, y) {\n    x0 -= x, y0 -= y;\n    lengthSum.add(sqrt$2(x0 * x0 + y0 * y0));\n    x0 = x, y0 = y;\n  }\n\n  var pathMeasure = lengthStream;\n\n  function PathString() {\n    this._string = [];\n  }\n\n  PathString.prototype = {\n    _radius: 4.5,\n    _circle: circle$1(4.5),\n    pointRadius: function pointRadius(_) {\n      if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n      return this;\n    },\n    polygonStart: function polygonStart() {\n      this._line = 0;\n    },\n    polygonEnd: function polygonEnd() {\n      this._line = NaN;\n    },\n    lineStart: function lineStart() {\n      this._point = 0;\n    },\n    lineEnd: function lineEnd() {\n      if (this._line === 0) this._string.push(\"Z\");\n      this._point = NaN;\n    },\n    point: function point(x, y) {\n      switch (this._point) {\n        case 0:\n          {\n            this._string.push(\"M\", x, \",\", y);\n\n            this._point = 1;\n            break;\n          }\n\n        case 1:\n          {\n            this._string.push(\"L\", x, \",\", y);\n\n            break;\n          }\n\n        default:\n          {\n            if (this._circle == null) this._circle = circle$1(this._radius);\n\n            this._string.push(\"M\", x, \",\", y, this._circle);\n\n            break;\n          }\n      }\n    },\n    result: function result() {\n      if (this._string.length) {\n        var result = this._string.join(\"\");\n\n        this._string = [];\n        return result;\n      } else {\n        return null;\n      }\n    }\n  };\n\n  function circle$1(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n\n  function index$2(projection, context) {\n    var pointRadius = 4.5,\n        projectionStream,\n        contextStream;\n\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        geoStream(object, projectionStream(contextStream));\n      }\n\n      return contextStream.result();\n    }\n\n    path.area = function (object) {\n      geoStream(object, projectionStream(pathArea));\n      return pathArea.result();\n    };\n\n    path.measure = function (object) {\n      geoStream(object, projectionStream(pathMeasure));\n      return pathMeasure.result();\n    };\n\n    path.bounds = function (object) {\n      geoStream(object, projectionStream(boundsStream$1));\n      return boundsStream$1.result();\n    };\n\n    path.centroid = function (object) {\n      geoStream(object, projectionStream(pathCentroid));\n      return pathCentroid.result();\n    };\n\n    path.projection = function (_) {\n      return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$5) : (projection = _).stream, path) : projection;\n    };\n\n    path.context = function (_) {\n      if (!arguments.length) return context;\n      contextStream = _ == null ? (context = null, new PathString()) : new PathContext(context = _);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return path;\n    };\n\n    path.pointRadius = function (_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n\n    return path.projection(projection).context(context);\n  }\n\n  function transform$1(methods) {\n    return {\n      stream: transformer$3(methods)\n    };\n  }\n\n  function transformer$3(methods) {\n    return function (stream) {\n      var s = new TransformStream();\n\n      for (var key in methods) {\n        s[key] = methods[key];\n      }\n\n      s.stream = stream;\n      return s;\n    };\n  }\n\n  function TransformStream() {}\n\n  TransformStream.prototype = {\n    constructor: TransformStream,\n    point: function point(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function sphere() {\n      this.stream.sphere();\n    },\n    lineStart: function lineStart() {\n      this.stream.lineStart();\n    },\n    lineEnd: function lineEnd() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function polygonStart() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function polygonEnd() {\n      this.stream.polygonEnd();\n    }\n  };\n\n  function fit(projection, fitBounds, object) {\n    var clip = projection.clipExtent && projection.clipExtent();\n    projection.scale(150).translate([0, 0]);\n    if (clip != null) projection.clipExtent(null);\n    geoStream(object, projection.stream(boundsStream$1));\n    fitBounds(boundsStream$1.result());\n    if (clip != null) projection.clipExtent(clip);\n    return projection;\n  }\n\n  function fitExtent(projection, extent, object) {\n    return fit(projection, function (b) {\n      var w = extent[1][0] - extent[0][0],\n          h = extent[1][1] - extent[0][1],\n          k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n          x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n          y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n      projection.scale(150 * k).translate([x, y]);\n    }, object);\n  }\n\n  function fitSize(projection, size, object) {\n    return fitExtent(projection, [[0, 0], size], object);\n  }\n\n  function fitWidth(projection, width, object) {\n    return fit(projection, function (b) {\n      var w = +width,\n          k = w / (b[1][0] - b[0][0]),\n          x = (w - k * (b[1][0] + b[0][0])) / 2,\n          y = -k * b[0][1];\n      projection.scale(150 * k).translate([x, y]);\n    }, object);\n  }\n\n  function fitHeight(projection, height, object) {\n    return fit(projection, function (b) {\n      var h = +height,\n          k = h / (b[1][1] - b[0][1]),\n          x = -k * b[0][0],\n          y = (h - k * (b[1][1] + b[0][1])) / 2;\n      projection.scale(150 * k).translate([x, y]);\n    }, object);\n  }\n\n  var maxDepth = 16,\n      // maximum depth of subdivision\n  cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\n  function resample(project, delta2) {\n    return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n  }\n\n  function resampleNone(project) {\n    return transformer$3({\n      point: function point(x, y) {\n        x = project(x, y);\n        this.stream.point(x[0], x[1]);\n      }\n    });\n  }\n\n  function resample$1(project, delta2) {\n    function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0,\n          dy = y1 - y0,\n          d2 = dx * dx + dy * dy;\n\n      if (d2 > 4 * delta2 && depth--) {\n        var a = a0 + a1,\n            b = b0 + b1,\n            c = c0 + c1,\n            m = sqrt$2(a * a + b * b + c * c),\n            phi2 = asin$1(c /= m),\n            lambda2 = abs$1(abs$1(c) - 1) < epsilon$1 || abs$1(lambda0 - lambda1) < epsilon$1 ? (lambda0 + lambda1) / 2 : atan2$1(b, a),\n            p = project(lambda2, phi2),\n            x2 = p[0],\n            y2 = p[1],\n            dx2 = x2 - x0,\n            dy2 = y2 - y0,\n            dz = dy * dx2 - dx * dy2;\n\n        if (dz * dz / d2 > delta2 // perpendicular projected distance\n        || abs$1((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n        || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          // angular distance\n          resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n\n    return function (stream) {\n      var lambda00, x00, y00, a00, b00, c00, // first point\n      lambda0, x0, y0, a0, b0, c0; // previous point\n\n      var resampleStream = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          stream.polygonStart();\n          resampleStream.lineStart = ringStart;\n        },\n        polygonEnd: function polygonEnd() {\n          stream.polygonEnd();\n          resampleStream.lineStart = lineStart;\n        }\n      };\n\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n\n      function lineStart() {\n        x0 = NaN;\n        resampleStream.point = linePoint;\n        stream.lineStart();\n      }\n\n      function linePoint(lambda, phi) {\n        var c = cartesian([lambda, phi]),\n            p = project(lambda, phi);\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n\n      function lineEnd() {\n        resampleStream.point = point;\n        stream.lineEnd();\n      }\n\n      function ringStart() {\n        lineStart();\n        resampleStream.point = ringPoint;\n        resampleStream.lineEnd = ringEnd;\n      }\n\n      function ringPoint(lambda, phi) {\n        linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resampleStream.point = linePoint;\n      }\n\n      function ringEnd() {\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n        resampleStream.lineEnd = lineEnd;\n        lineEnd();\n      }\n\n      return resampleStream;\n    };\n  }\n\n  var transformRadians = transformer$3({\n    point: function point(x, y) {\n      this.stream.point(x * radians, y * radians);\n    }\n  });\n\n  function transformRotate(rotate) {\n    return transformer$3({\n      point: function point(x, y) {\n        var r = rotate(x, y);\n        return this.stream.point(r[0], r[1]);\n      }\n    });\n  }\n\n  function scaleTranslate(k, dx, dy, sx, sy) {\n    function transform(x, y) {\n      x *= sx;\n      y *= sy;\n      return [dx + k * x, dy - k * y];\n    }\n\n    transform.invert = function (x, y) {\n      return [(x - dx) / k * sx, (dy - y) / k * sy];\n    };\n\n    return transform;\n  }\n\n  function scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n    if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n    var cosAlpha = cos$1(alpha),\n        sinAlpha = sin$1(alpha),\n        a = cosAlpha * k,\n        b = sinAlpha * k,\n        ai = cosAlpha / k,\n        bi = sinAlpha / k,\n        ci = (sinAlpha * dy - cosAlpha * dx) / k,\n        fi = (sinAlpha * dx + cosAlpha * dy) / k;\n\n    function transform(x, y) {\n      x *= sx;\n      y *= sy;\n      return [a * x - b * y + dx, dy - b * x - a * y];\n    }\n\n    transform.invert = function (x, y) {\n      return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n    };\n\n    return transform;\n  }\n\n  function projection(project) {\n    return projectionMutator(function () {\n      return project;\n    })();\n  }\n\n  function projectionMutator(projectAt) {\n    var project,\n        k = 150,\n        // scale\n    x = 480,\n        y = 250,\n        // translate\n    lambda = 0,\n        phi = 0,\n        // center\n    deltaLambda = 0,\n        deltaPhi = 0,\n        deltaGamma = 0,\n        rotate,\n        // pre-rotate\n    alpha = 0,\n        // post-rotate angle\n    sx = 1,\n        // reflectX\n    sy = 1,\n        // reflectX\n    theta = null,\n        preclip = clipAntimeridian,\n        // pre-clip angle\n    x0 = null,\n        y0,\n        x1,\n        y1,\n        postclip = identity$5,\n        // post-clip extent\n    delta2 = 0.5,\n        // precision\n    projectResample,\n        projectTransform,\n        projectRotateTransform,\n        cache,\n        cacheStream;\n\n    function projection(point) {\n      return projectRotateTransform(point[0] * radians, point[1] * radians);\n    }\n\n    function invert(point) {\n      point = projectRotateTransform.invert(point[0], point[1]);\n      return point && [point[0] * degrees, point[1] * degrees];\n    }\n\n    projection.stream = function (stream) {\n      return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n    };\n\n    projection.preclip = function (_) {\n      return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n    };\n\n    projection.postclip = function (_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    };\n\n    projection.clipAngle = function (_) {\n      return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n    };\n\n    projection.clipExtent = function (_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$5) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    };\n\n    projection.scale = function (_) {\n      return arguments.length ? (k = +_, recenter()) : k;\n    };\n\n    projection.translate = function (_) {\n      return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n    };\n\n    projection.center = function (_) {\n      return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n    };\n\n    projection.rotate = function (_) {\n      return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n    };\n\n    projection.angle = function (_) {\n      return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n    };\n\n    projection.reflectX = function (_) {\n      return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n    };\n\n    projection.reflectY = function (_) {\n      return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n    };\n\n    projection.precision = function (_) {\n      return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$2(delta2);\n    };\n\n    projection.fitExtent = function (extent, object) {\n      return fitExtent(projection, extent, object);\n    };\n\n    projection.fitSize = function (size, object) {\n      return fitSize(projection, size, object);\n    };\n\n    projection.fitWidth = function (width, object) {\n      return fitWidth(projection, width, object);\n    };\n\n    projection.fitHeight = function (height, object) {\n      return fitHeight(projection, height, object);\n    };\n\n    function recenter() {\n      var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n          transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n      rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n      projectTransform = compose(project, transform);\n      projectRotateTransform = compose(rotate, projectTransform);\n      projectResample = resample(projectTransform, delta2);\n      return reset();\n    }\n\n    function reset() {\n      cache = cacheStream = null;\n      return projection;\n    }\n\n    return function () {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return recenter();\n    };\n  }\n\n  function conicProjection(projectAt) {\n    var phi0 = 0,\n        phi1 = pi$1 / 3,\n        m = projectionMutator(projectAt),\n        p = m(phi0, phi1);\n\n    p.parallels = function (_) {\n      return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n    };\n\n    return p;\n  }\n\n  function cylindricalEqualAreaRaw(phi0) {\n    var cosPhi0 = cos$1(phi0);\n\n    function forward(lambda, phi) {\n      return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n    }\n\n    forward.invert = function (x, y) {\n      return [x / cosPhi0, asin$1(y * cosPhi0)];\n    };\n\n    return forward;\n  }\n\n  function conicEqualAreaRaw(y0, y1) {\n    var sy0 = sin$1(y0),\n        n = (sy0 + sin$1(y1)) / 2; // Are the parallels symmetrical around the Equator?\n\n    if (abs$1(n) < epsilon$1) return cylindricalEqualAreaRaw(y0);\n    var c = 1 + sy0 * (2 * n - sy0),\n        r0 = sqrt$2(c) / n;\n\n    function project(x, y) {\n      var r = sqrt$2(c - 2 * n * sin$1(y)) / n;\n      return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n    }\n\n    project.invert = function (x, y) {\n      var r0y = r0 - y,\n          l = atan2$1(x, abs$1(r0y)) * sign$1(r0y);\n      if (r0y * n < 0) l -= pi$1 * sign$1(x) * sign$1(r0y);\n      return [l / n, asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n    };\n\n    return project;\n  }\n\n  function conicEqualArea() {\n    return conicProjection(conicEqualAreaRaw).scale(155.424).center([0, 33.6442]);\n  }\n\n  function albers() {\n    return conicEqualArea().parallels([29.5, 45.5]).scale(1070).translate([480, 250]).rotate([96, 0]).center([-0.6, 38.7]);\n  } // The projections must have mutually exclusive clip regions on the sphere,\n  // as this will avoid emitting interleaving lines and polygons.\n\n\n  function multiplex(streams) {\n    var n = streams.length;\n    return {\n      point: function point(x, y) {\n        var i = -1;\n\n        while (++i < n) {\n          streams[i].point(x, y);\n        }\n      },\n      sphere: function sphere() {\n        var i = -1;\n\n        while (++i < n) {\n          streams[i].sphere();\n        }\n      },\n      lineStart: function lineStart() {\n        var i = -1;\n\n        while (++i < n) {\n          streams[i].lineStart();\n        }\n      },\n      lineEnd: function lineEnd() {\n        var i = -1;\n\n        while (++i < n) {\n          streams[i].lineEnd();\n        }\n      },\n      polygonStart: function polygonStart() {\n        var i = -1;\n\n        while (++i < n) {\n          streams[i].polygonStart();\n        }\n      },\n      polygonEnd: function polygonEnd() {\n        var i = -1;\n\n        while (++i < n) {\n          streams[i].polygonEnd();\n        }\n      }\n    };\n  } // A composite projection for the United States, configured by default for\n  // 960×500. The projection also works quite well at 960×600 if you change the\n  // scale to 1285 and adjust the translate accordingly. The set of standard\n  // parallels for each region comes from USGS, which is published here:\n  // http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\n\n  function albersUsa() {\n    var cache,\n        cacheStream,\n        lower48 = albers(),\n        lower48Point,\n        alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]),\n        alaskaPoint,\n        // EPSG:3338\n    hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]),\n        hawaiiPoint,\n        // ESRI:102007\n    _point3,\n        pointStream = {\n      point: function point(x, y) {\n        _point3 = [x, y];\n      }\n    };\n\n    function albersUsa(coordinates) {\n      var x = coordinates[0],\n          y = coordinates[1];\n      return _point3 = null, (lower48Point.point(x, y), _point3) || (alaskaPoint.point(x, y), _point3) || (hawaiiPoint.point(x, y), _point3);\n    }\n\n    albersUsa.invert = function (coordinates) {\n      var k = lower48.scale(),\n          t = lower48.translate(),\n          x = (coordinates[0] - t[0]) / k,\n          y = (coordinates[1] - t[1]) / k;\n      return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii : lower48).invert(coordinates);\n    };\n\n    albersUsa.stream = function (stream) {\n      return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n    };\n\n    albersUsa.precision = function (_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n      return reset();\n    };\n\n    albersUsa.scale = function (_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n\n    albersUsa.translate = function (_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(),\n          x = +_[0],\n          y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]]).stream(pointStream);\n      alaskaPoint = alaska.translate([x - 0.307 * k, y + 0.201 * k]).clipExtent([[x - 0.425 * k + epsilon$1, y + 0.120 * k + epsilon$1], [x - 0.214 * k - epsilon$1, y + 0.234 * k - epsilon$1]]).stream(pointStream);\n      hawaiiPoint = hawaii.translate([x - 0.205 * k, y + 0.212 * k]).clipExtent([[x - 0.214 * k + epsilon$1, y + 0.166 * k + epsilon$1], [x - 0.115 * k - epsilon$1, y + 0.234 * k - epsilon$1]]).stream(pointStream);\n      return reset();\n    };\n\n    albersUsa.fitExtent = function (extent, object) {\n      return fitExtent(albersUsa, extent, object);\n    };\n\n    albersUsa.fitSize = function (size, object) {\n      return fitSize(albersUsa, size, object);\n    };\n\n    albersUsa.fitWidth = function (width, object) {\n      return fitWidth(albersUsa, width, object);\n    };\n\n    albersUsa.fitHeight = function (height, object) {\n      return fitHeight(albersUsa, height, object);\n    };\n\n    function reset() {\n      cache = cacheStream = null;\n      return albersUsa;\n    }\n\n    return albersUsa.scale(1070);\n  }\n\n  function azimuthalRaw(scale) {\n    return function (x, y) {\n      var cx = cos$1(x),\n          cy = cos$1(y),\n          k = scale(cx * cy);\n      if (k === Infinity) return [2, 0];\n      return [k * cy * sin$1(x), k * sin$1(y)];\n    };\n  }\n\n  function azimuthalInvert(angle) {\n    return function (x, y) {\n      var z = sqrt$2(x * x + y * y),\n          c = angle(z),\n          sc = sin$1(c),\n          cc = cos$1(c);\n      return [atan2$1(x * sc, z * cc), asin$1(z && y * sc / z)];\n    };\n  }\n\n  var azimuthalEqualAreaRaw = azimuthalRaw(function (cxcy) {\n    return sqrt$2(2 / (1 + cxcy));\n  });\n  azimuthalEqualAreaRaw.invert = azimuthalInvert(function (z) {\n    return 2 * asin$1(z / 2);\n  });\n\n  function azimuthalEqualArea() {\n    return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);\n  }\n\n  var azimuthalEquidistantRaw = azimuthalRaw(function (c) {\n    return (c = acos$1(c)) && c / sin$1(c);\n  });\n  azimuthalEquidistantRaw.invert = azimuthalInvert(function (z) {\n    return z;\n  });\n\n  function azimuthalEquidistant() {\n    return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);\n  }\n\n  function mercatorRaw(lambda, phi) {\n    return [lambda, log$1(tan((halfPi$1 + phi) / 2))];\n  }\n\n  mercatorRaw.invert = function (x, y) {\n    return [x, 2 * atan(exp(y)) - halfPi$1];\n  };\n\n  function mercator() {\n    return mercatorProjection(mercatorRaw).scale(961 / tau$1);\n  }\n\n  function mercatorProjection(project) {\n    var m = projection(project),\n        center = m.center,\n        scale = m.scale,\n        translate = m.translate,\n        clipExtent = m.clipExtent,\n        x0 = null,\n        y0,\n        x1,\n        y1; // clip extent\n\n    m.scale = function (_) {\n      return arguments.length ? (scale(_), reclip()) : scale();\n    };\n\n    m.translate = function (_) {\n      return arguments.length ? (translate(_), reclip()) : translate();\n    };\n\n    m.center = function (_) {\n      return arguments.length ? (center(_), reclip()) : center();\n    };\n\n    m.clipExtent = function (_) {\n      return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    };\n\n    function reclip() {\n      var k = pi$1 * scale(),\n          t = m(rotation(m.rotate()).invert([0, 0]));\n      return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n    }\n\n    return reclip();\n  }\n\n  function tany(y) {\n    return tan((halfPi$1 + y) / 2);\n  }\n\n  function conicConformalRaw(y0, y1) {\n    var cy0 = cos$1(y0),\n        n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n        f = cy0 * pow$1(tany(y0), n) / n;\n    if (!n) return mercatorRaw;\n\n    function project(x, y) {\n      if (f > 0) {\n        if (y < -halfPi$1 + epsilon$1) y = -halfPi$1 + epsilon$1;\n      } else {\n        if (y > halfPi$1 - epsilon$1) y = halfPi$1 - epsilon$1;\n      }\n\n      var r = f / pow$1(tany(y), n);\n      return [r * sin$1(n * x), f - r * cos$1(n * x)];\n    }\n\n    project.invert = function (x, y) {\n      var fy = f - y,\n          r = sign$1(n) * sqrt$2(x * x + fy * fy),\n          l = atan2$1(x, abs$1(fy)) * sign$1(fy);\n      if (fy * n < 0) l -= pi$1 * sign$1(x) * sign$1(fy);\n      return [l / n, 2 * atan(pow$1(f / r, 1 / n)) - halfPi$1];\n    };\n\n    return project;\n  }\n\n  function conicConformal() {\n    return conicProjection(conicConformalRaw).scale(109.5).parallels([30, 30]);\n  }\n\n  function equirectangularRaw(lambda, phi) {\n    return [lambda, phi];\n  }\n\n  equirectangularRaw.invert = equirectangularRaw;\n\n  function equirectangular() {\n    return projection(equirectangularRaw).scale(152.63);\n  }\n\n  function conicEquidistantRaw(y0, y1) {\n    var cy0 = cos$1(y0),\n        n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n        g = cy0 / n + y0;\n    if (abs$1(n) < epsilon$1) return equirectangularRaw;\n\n    function project(x, y) {\n      var gy = g - y,\n          nx = n * x;\n      return [gy * sin$1(nx), g - gy * cos$1(nx)];\n    }\n\n    project.invert = function (x, y) {\n      var gy = g - y,\n          l = atan2$1(x, abs$1(gy)) * sign$1(gy);\n      if (gy * n < 0) l -= pi$1 * sign$1(x) * sign$1(gy);\n      return [l / n, g - sign$1(n) * sqrt$2(x * x + gy * gy)];\n    };\n\n    return project;\n  }\n\n  function conicEquidistant() {\n    return conicProjection(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);\n  }\n\n  var A1 = 1.340264,\n      A2 = -0.081106,\n      A3 = 0.000893,\n      A4 = 0.003796,\n      M = sqrt$2(3) / 2,\n      iterations = 12;\n\n  function equalEarthRaw(lambda, phi) {\n    var l = asin$1(M * sin$1(phi)),\n        l2 = l * l,\n        l6 = l2 * l2 * l2;\n    return [lambda * cos$1(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))), l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))];\n  }\n\n  equalEarthRaw.invert = function (x, y) {\n    var l = y,\n        l2 = l * l,\n        l6 = l2 * l2 * l2;\n\n    for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n      fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n      fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n      l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n      if (abs$1(delta) < epsilon2) break;\n    }\n\n    return [M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos$1(l), asin$1(sin$1(l) / M)];\n  };\n\n  function equalEarth() {\n    return projection(equalEarthRaw).scale(177.158);\n  }\n\n  function gnomonicRaw(x, y) {\n    var cy = cos$1(y),\n        k = cos$1(x) * cy;\n    return [cy * sin$1(x) / k, sin$1(y) / k];\n  }\n\n  gnomonicRaw.invert = azimuthalInvert(atan);\n\n  function gnomonic() {\n    return projection(gnomonicRaw).scale(144.049).clipAngle(60);\n  }\n\n  function identity$4() {\n    var k = 1,\n        tx = 0,\n        ty = 0,\n        sx = 1,\n        sy = 1,\n        // scale, translate and reflect\n    alpha = 0,\n        ca,\n        sa,\n        // angle\n    x0 = null,\n        y0,\n        x1,\n        y1,\n        // clip extent\n    kx = 1,\n        ky = 1,\n        transform = transformer$3({\n      point: function point(x, y) {\n        var p = projection([x, y]);\n        this.stream.point(p[0], p[1]);\n      }\n    }),\n        postclip = identity$5,\n        cache,\n        cacheStream;\n\n    function reset() {\n      kx = k * sx;\n      ky = k * sy;\n      cache = cacheStream = null;\n      return projection;\n    }\n\n    function projection(p) {\n      var x = p[0] * kx,\n          y = p[1] * ky;\n\n      if (alpha) {\n        var t = y * ca - x * sa;\n        x = x * ca + y * sa;\n        y = t;\n      }\n\n      return [x + tx, y + ty];\n    }\n\n    projection.invert = function (p) {\n      var x = p[0] - tx,\n          y = p[1] - ty;\n\n      if (alpha) {\n        var t = y * ca + x * sa;\n        x = x * ca - y * sa;\n        y = t;\n      }\n\n      return [x / kx, y / ky];\n    };\n\n    projection.stream = function (stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n    };\n\n    projection.postclip = function (_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    };\n\n    projection.clipExtent = function (_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$5) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    };\n\n    projection.scale = function (_) {\n      return arguments.length ? (k = +_, reset()) : k;\n    };\n\n    projection.translate = function (_) {\n      return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n    };\n\n    projection.angle = function (_) {\n      return arguments.length ? (alpha = _ % 360 * radians, sa = sin$1(alpha), ca = cos$1(alpha), reset()) : alpha * degrees;\n    };\n\n    projection.reflectX = function (_) {\n      return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n    };\n\n    projection.reflectY = function (_) {\n      return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n    };\n\n    projection.fitExtent = function (extent, object) {\n      return fitExtent(projection, extent, object);\n    };\n\n    projection.fitSize = function (size, object) {\n      return fitSize(projection, size, object);\n    };\n\n    projection.fitWidth = function (width, object) {\n      return fitWidth(projection, width, object);\n    };\n\n    projection.fitHeight = function (height, object) {\n      return fitHeight(projection, height, object);\n    };\n\n    return projection;\n  }\n\n  function naturalEarth1Raw(lambda, phi) {\n    var phi2 = phi * phi,\n        phi4 = phi2 * phi2;\n    return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];\n  }\n\n  naturalEarth1Raw.invert = function (x, y) {\n    var phi = y,\n        i = 25,\n        delta;\n\n    do {\n      var phi2 = phi * phi,\n          phi4 = phi2 * phi2;\n      phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n    } while (abs$1(delta) > epsilon$1 && --i > 0);\n\n    return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];\n  };\n\n  function naturalEarth1() {\n    return projection(naturalEarth1Raw).scale(175.295);\n  }\n\n  function orthographicRaw(x, y) {\n    return [cos$1(y) * sin$1(x), sin$1(y)];\n  }\n\n  orthographicRaw.invert = azimuthalInvert(asin$1);\n\n  function orthographic() {\n    return projection(orthographicRaw).scale(249.5).clipAngle(90 + epsilon$1);\n  }\n\n  function stereographicRaw(x, y) {\n    var cy = cos$1(y),\n        k = 1 + cos$1(x) * cy;\n    return [cy * sin$1(x) / k, sin$1(y) / k];\n  }\n\n  stereographicRaw.invert = azimuthalInvert(function (z) {\n    return 2 * atan(z);\n  });\n\n  function stereographic() {\n    return projection(stereographicRaw).scale(250).clipAngle(142);\n  }\n\n  function transverseMercatorRaw(lambda, phi) {\n    return [log$1(tan((halfPi$1 + phi) / 2)), -lambda];\n  }\n\n  transverseMercatorRaw.invert = function (x, y) {\n    return [-y, 2 * atan(exp(x)) - halfPi$1];\n  };\n\n  function transverseMercator() {\n    var m = mercatorProjection(transverseMercatorRaw),\n        center = m.center,\n        rotate = m.rotate;\n\n    m.center = function (_) {\n      return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n    };\n\n    m.rotate = function (_) {\n      return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n    };\n\n    return rotate([0, 0, 90]).scale(159.155);\n  }\n\n  function defaultSeparation$1(a, b) {\n    return a.parent === b.parent ? 1 : 2;\n  }\n\n  function meanX(children) {\n    return children.reduce(meanXReduce, 0) / children.length;\n  }\n\n  function meanXReduce(x, c) {\n    return x + c.x;\n  }\n\n  function maxY(children) {\n    return 1 + children.reduce(maxYReduce, 0);\n  }\n\n  function maxYReduce(y, c) {\n    return Math.max(y, c.y);\n  }\n\n  function leafLeft(node) {\n    var children;\n\n    while (children = node.children) {\n      node = children[0];\n    }\n\n    return node;\n  }\n\n  function leafRight(node) {\n    var children;\n\n    while (children = node.children) {\n      node = children[children.length - 1];\n    }\n\n    return node;\n  }\n\n  function cluster() {\n    var separation = defaultSeparation$1,\n        dx = 1,\n        dy = 1,\n        nodeSize = false;\n\n    function cluster(root) {\n      var previousNode,\n          x = 0; // First walk, computing the initial x & y values.\n\n      root.eachAfter(function (node) {\n        var children = node.children;\n\n        if (children) {\n          node.x = meanX(children);\n          node.y = maxY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = leafLeft(root),\n          right = leafRight(root),\n          x0 = left.x - separation(left, right) / 2,\n          x1 = right.x + separation(right, left) / 2; // Second walk, normalizing x & y to the desired size.\n\n      return root.eachAfter(nodeSize ? function (node) {\n        node.x = (node.x - root.x) * dx;\n        node.y = (root.y - node.y) * dy;\n      } : function (node) {\n        node.x = (node.x - x0) / (x1 - x0) * dx;\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n      });\n    }\n\n    cluster.separation = function (x) {\n      return arguments.length ? (separation = x, cluster) : separation;\n    };\n\n    cluster.size = function (x) {\n      return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : nodeSize ? null : [dx, dy];\n    };\n\n    cluster.nodeSize = function (x) {\n      return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : nodeSize ? [dx, dy] : null;\n    };\n\n    return cluster;\n  }\n\n  function count(node) {\n    var sum = 0,\n        children = node.children,\n        i = children && children.length;\n    if (!i) sum = 1;else while (--i >= 0) {\n      sum += children[i].value;\n    }\n    node.value = sum;\n  }\n\n  function node_count() {\n    return this.eachAfter(count);\n  }\n\n  function node_each(callback, that) {\n    var index = -1;\n\n    var _iterator57 = _createForOfIteratorHelper(this),\n        _step59;\n\n    try {\n      for (_iterator57.s(); !(_step59 = _iterator57.n()).done;) {\n        var node = _step59.value;\n        callback.call(that, node, ++index, this);\n      }\n    } catch (err) {\n      _iterator57.e(err);\n    } finally {\n      _iterator57.f();\n    }\n\n    return this;\n  }\n\n  function node_eachBefore(callback, that) {\n    var node = this,\n        nodes = [node],\n        children,\n        i,\n        index = -1;\n\n    while (node = nodes.pop()) {\n      callback.call(that, node, ++index, this);\n\n      if (children = node.children) {\n        for (i = children.length - 1; i >= 0; --i) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function node_eachAfter(callback, that) {\n    var node = this,\n        nodes = [node],\n        next = [],\n        children,\n        i,\n        n,\n        index = -1;\n\n    while (node = nodes.pop()) {\n      next.push(node);\n\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n\n    while (node = next.pop()) {\n      callback.call(that, node, ++index, this);\n    }\n\n    return this;\n  }\n\n  function node_find(callback, that) {\n    var index = -1;\n\n    var _iterator58 = _createForOfIteratorHelper(this),\n        _step60;\n\n    try {\n      for (_iterator58.s(); !(_step60 = _iterator58.n()).done;) {\n        var node = _step60.value;\n\n        if (callback.call(that, node, ++index, this)) {\n          return node;\n        }\n      }\n    } catch (err) {\n      _iterator58.e(err);\n    } finally {\n      _iterator58.f();\n    }\n  }\n\n  function node_sum(value) {\n    return this.eachAfter(function (node) {\n      var sum = +value(node.data) || 0,\n          children = node.children,\n          i = children && children.length;\n\n      while (--i >= 0) {\n        sum += children[i].value;\n      }\n\n      node.value = sum;\n    });\n  }\n\n  function node_sort(compare) {\n    return this.eachBefore(function (node) {\n      if (node.children) {\n        node.children.sort(compare);\n      }\n    });\n  }\n\n  function node_path(end) {\n    var start = this,\n        ancestor = leastCommonAncestor(start, end),\n        nodes = [start];\n\n    while (start !== ancestor) {\n      start = start.parent;\n      nodes.push(start);\n    }\n\n    var k = nodes.length;\n\n    while (end !== ancestor) {\n      nodes.splice(k, 0, end);\n      end = end.parent;\n    }\n\n    return nodes;\n  }\n\n  function leastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = a.ancestors(),\n        bNodes = b.ancestors(),\n        c = null;\n    a = aNodes.pop();\n    b = bNodes.pop();\n\n    while (a === b) {\n      c = a;\n      a = aNodes.pop();\n      b = bNodes.pop();\n    }\n\n    return c;\n  }\n\n  function node_ancestors() {\n    var node = this,\n        nodes = [node];\n\n    while (node = node.parent) {\n      nodes.push(node);\n    }\n\n    return nodes;\n  }\n\n  function node_descendants() {\n    return Array.from(this);\n  }\n\n  function node_leaves() {\n    var leaves = [];\n    this.eachBefore(function (node) {\n      if (!node.children) {\n        leaves.push(node);\n      }\n    });\n    return leaves;\n  }\n\n  function node_links() {\n    var root = this,\n        links = [];\n    root.each(function (node) {\n      if (node !== root) {\n        // Don’t include the root’s parent, if any.\n        links.push({\n          source: node.parent,\n          target: node\n        });\n      }\n    });\n    return links;\n  }\n\n  function node_iterator() {\n    var node, current, next, children, i, n;\n    return _regeneratorRuntime.wrap(function node_iterator$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            node = this, next = [node];\n\n          case 1:\n            current = next.reverse(), next = [];\n\n          case 2:\n            if (!(node = current.pop())) {\n              _context9.next = 8;\n              break;\n            }\n\n            _context9.next = 5;\n            return node;\n\n          case 5:\n            if (children = node.children) {\n              for (i = 0, n = children.length; i < n; ++i) {\n                next.push(children[i]);\n              }\n            }\n\n            _context9.next = 2;\n            break;\n\n          case 8:\n            if (next.length) {\n              _context9.next = 1;\n              break;\n            }\n\n          case 9:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _marked5, this);\n  }\n\n  function hierarchy(data, children) {\n    if (data instanceof Map) {\n      data = [undefined, data];\n      if (children === undefined) children = mapChildren;\n    } else if (children === undefined) {\n      children = objectChildren;\n    }\n\n    var root = new Node$1(data),\n        node,\n        nodes = [root],\n        child,\n        childs,\n        i,\n        n;\n\n    while (node = nodes.pop()) {\n      if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n        node.children = childs;\n\n        for (i = n - 1; i >= 0; --i) {\n          nodes.push(child = childs[i] = new Node$1(childs[i]));\n          child.parent = node;\n          child.depth = node.depth + 1;\n        }\n      }\n    }\n\n    return root.eachBefore(computeHeight);\n  }\n\n  function node_copy() {\n    return hierarchy(this).eachBefore(copyData);\n  }\n\n  function objectChildren(d) {\n    return d.children;\n  }\n\n  function mapChildren(d) {\n    return Array.isArray(d) ? d[1] : null;\n  }\n\n  function copyData(node) {\n    if (node.data.value !== undefined) node.value = node.data.value;\n    node.data = node.data.data;\n  }\n\n  function computeHeight(node) {\n    var height = 0;\n\n    do {\n      node.height = height;\n    } while ((node = node.parent) && node.height < ++height);\n  }\n\n  function Node$1(data) {\n    this.data = data;\n    this.depth = this.height = 0;\n    this.parent = null;\n  }\n\n  Node$1.prototype = hierarchy.prototype = _defineProperty({\n    constructor: Node$1,\n    count: node_count,\n    each: node_each,\n    eachAfter: node_eachAfter,\n    eachBefore: node_eachBefore,\n    find: node_find,\n    sum: node_sum,\n    sort: node_sort,\n    path: node_path,\n    ancestors: node_ancestors,\n    descendants: node_descendants,\n    leaves: node_leaves,\n    links: node_links,\n    copy: node_copy\n  }, Symbol.iterator, node_iterator);\n\n  function array$1(x) {\n    return _typeof(x) === \"object\" && \"length\" in x ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n  }\n\n  function shuffle(array) {\n    var m = array.length,\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m];\n      array[m] = array[i];\n      array[i] = t;\n    }\n\n    return array;\n  }\n\n  function enclose(circles) {\n    var i = 0,\n        n = (circles = shuffle(Array.from(circles))).length,\n        B = [],\n        p,\n        e;\n\n    while (i < n) {\n      p = circles[i];\n      if (e && enclosesWeak(e, p)) ++i;else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n    }\n\n    return e;\n  }\n\n  function extendBasis(B, p) {\n    var i, j;\n    if (enclosesWeakAll(p, B)) return [p]; // If we get here then B must have at least one element.\n\n    for (i = 0; i < B.length; ++i) {\n      if (enclosesNot(p, B[i]) && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n        return [B[i], p];\n      }\n    } // If we get here then B must have at least two elements.\n\n\n    for (i = 0; i < B.length - 1; ++i) {\n      for (j = i + 1; j < B.length; ++j) {\n        if (enclosesNot(encloseBasis2(B[i], B[j]), p) && enclosesNot(encloseBasis2(B[i], p), B[j]) && enclosesNot(encloseBasis2(B[j], p), B[i]) && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n          return [B[i], B[j], p];\n        }\n      }\n    } // If we get here then something is very wrong.\n\n\n    throw new Error();\n  }\n\n  function enclosesNot(a, b) {\n    var dr = a.r - b.r,\n        dx = b.x - a.x,\n        dy = b.y - a.y;\n    return dr < 0 || dr * dr < dx * dx + dy * dy;\n  }\n\n  function enclosesWeak(a, b) {\n    var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9,\n        dx = b.x - a.x,\n        dy = b.y - a.y;\n    return dr > 0 && dr * dr > dx * dx + dy * dy;\n  }\n\n  function enclosesWeakAll(a, B) {\n    for (var i = 0; i < B.length; ++i) {\n      if (!enclosesWeak(a, B[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function encloseBasis(B) {\n    switch (B.length) {\n      case 1:\n        return encloseBasis1(B[0]);\n\n      case 2:\n        return encloseBasis2(B[0], B[1]);\n\n      case 3:\n        return encloseBasis3(B[0], B[1], B[2]);\n    }\n  }\n\n  function encloseBasis1(a) {\n    return {\n      x: a.x,\n      y: a.y,\n      r: a.r\n    };\n  }\n\n  function encloseBasis2(a, b) {\n    var x1 = a.x,\n        y1 = a.y,\n        r1 = a.r,\n        x2 = b.x,\n        y2 = b.y,\n        r2 = b.r,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        r21 = r2 - r1,\n        l = Math.sqrt(x21 * x21 + y21 * y21);\n    return {\n      x: (x1 + x2 + x21 / l * r21) / 2,\n      y: (y1 + y2 + y21 / l * r21) / 2,\n      r: (l + r1 + r2) / 2\n    };\n  }\n\n  function encloseBasis3(a, b, c) {\n    var x1 = a.x,\n        y1 = a.y,\n        r1 = a.r,\n        x2 = b.x,\n        y2 = b.y,\n        r2 = b.r,\n        x3 = c.x,\n        y3 = c.y,\n        r3 = c.r,\n        a2 = x1 - x2,\n        a3 = x1 - x3,\n        b2 = y1 - y2,\n        b3 = y1 - y3,\n        c2 = r2 - r1,\n        c3 = r3 - r1,\n        d1 = x1 * x1 + y1 * y1 - r1 * r1,\n        d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n        d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n        ab = a3 * b2 - a2 * b3,\n        xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n        xb = (b3 * c2 - b2 * c3) / ab,\n        ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n        yb = (a2 * c3 - a3 * c2) / ab,\n        A = xb * xb + yb * yb - 1,\n        B = 2 * (r1 + xa * xb + ya * yb),\n        C = xa * xa + ya * ya - r1 * r1,\n        r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n    return {\n      x: x1 + xa + xb * r,\n      y: y1 + ya + yb * r,\n      r: r\n    };\n  }\n\n  function place(b, a, c) {\n    var dx = b.x - a.x,\n        x,\n        a2,\n        dy = b.y - a.y,\n        y,\n        b2,\n        d2 = dx * dx + dy * dy;\n\n    if (d2) {\n      a2 = a.r + c.r, a2 *= a2;\n      b2 = b.r + c.r, b2 *= b2;\n\n      if (a2 > b2) {\n        x = (d2 + b2 - a2) / (2 * d2);\n        y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n        c.x = b.x - x * dx - y * dy;\n        c.y = b.y - x * dy + y * dx;\n      } else {\n        x = (d2 + a2 - b2) / (2 * d2);\n        y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n        c.x = a.x + x * dx - y * dy;\n        c.y = a.y + x * dy + y * dx;\n      }\n    } else {\n      c.x = a.x + c.r;\n      c.y = a.y;\n    }\n  }\n\n  function intersects(a, b) {\n    var dr = a.r + b.r - 1e-6,\n        dx = b.x - a.x,\n        dy = b.y - a.y;\n    return dr > 0 && dr * dr > dx * dx + dy * dy;\n  }\n\n  function score(node) {\n    var a = node._,\n        b = node.next._,\n        ab = a.r + b.r,\n        dx = (a.x * b.r + b.x * a.r) / ab,\n        dy = (a.y * b.r + b.y * a.r) / ab;\n    return dx * dx + dy * dy;\n  }\n\n  function Node(circle) {\n    this._ = circle;\n    this.next = null;\n    this.previous = null;\n  }\n\n  function packEnclose(circles) {\n    if (!(n = (circles = array$1(circles)).length)) return 0;\n    var a, b, c, n, aa, ca, i, j, k, sj, sk; // Place the first circle.\n\n    a = circles[0], a.x = 0, a.y = 0;\n    if (!(n > 1)) return a.r; // Place the second circle.\n\n    b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n    if (!(n > 2)) return a.r + b.r; // Place the third circle.\n\n    place(b, a, c = circles[2]); // Initialize the front-chain using the first three circles a, b and c.\n\n    a = new Node(a), b = new Node(b), c = new Node(c);\n    a.next = c.previous = b;\n    b.next = a.previous = c;\n    c.next = b.previous = a; // Attempt to place each remaining circle…\n\n    pack: for (i = 3; i < n; ++i) {\n      place(a._, b._, c = circles[i]), c = new Node(c); // Find the closest intersecting circle on the front-chain, if any.\n      // “Closeness” is determined by linear distance along the front-chain.\n      // “Ahead” or “behind” is likewise determined by linear distance.\n\n      j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n\n      do {\n        if (sj <= sk) {\n          if (intersects(j._, c._)) {\n            b = j, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n\n          sj += j._.r, j = j.next;\n        } else {\n          if (intersects(k._, c._)) {\n            a = k, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n\n          sk += k._.r, k = k.previous;\n        }\n      } while (j !== k.next); // Success! Insert the new circle c between a and b.\n\n\n      c.previous = a, c.next = b, a.next = b.previous = b = c; // Compute the new closest circle pair to the centroid.\n\n      aa = score(a);\n\n      while ((c = c.next) !== b) {\n        if ((ca = score(c)) < aa) {\n          a = c, aa = ca;\n        }\n      }\n\n      b = a.next;\n    } // Compute the enclosing circle of the front chain.\n\n\n    a = [b._], c = b;\n\n    while ((c = c.next) !== b) {\n      a.push(c._);\n    }\n\n    c = enclose(a); // Translate the circles to put the enclosing circle around the origin.\n\n    for (i = 0; i < n; ++i) {\n      a = circles[i], a.x -= c.x, a.y -= c.y;\n    }\n\n    return c.r;\n  }\n\n  function siblings(circles) {\n    packEnclose(circles);\n    return circles;\n  }\n\n  function optional(f) {\n    return f == null ? null : required(f);\n  }\n\n  function required(f) {\n    if (typeof f !== \"function\") throw new Error();\n    return f;\n  }\n\n  function constantZero() {\n    return 0;\n  }\n\n  function constant$2(x) {\n    return function () {\n      return x;\n    };\n  }\n\n  function defaultRadius(d) {\n    return Math.sqrt(d.value);\n  }\n\n  function index$1() {\n    var radius = null,\n        dx = 1,\n        dy = 1,\n        padding = constantZero;\n\n    function pack(root) {\n      root.x = dx / 2, root.y = dy / 2;\n\n      if (radius) {\n        root.eachBefore(radiusLeaf(radius)).eachAfter(packChildren(padding, 0.5)).eachBefore(translateChild(1));\n      } else {\n        root.eachBefore(radiusLeaf(defaultRadius)).eachAfter(packChildren(constantZero, 1)).eachAfter(packChildren(padding, root.r / Math.min(dx, dy))).eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n      }\n\n      return root;\n    }\n\n    pack.radius = function (x) {\n      return arguments.length ? (radius = optional(x), pack) : radius;\n    };\n\n    pack.size = function (x) {\n      return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n    };\n\n    pack.padding = function (x) {\n      return arguments.length ? (padding = typeof x === \"function\" ? x : constant$2(+x), pack) : padding;\n    };\n\n    return pack;\n  }\n\n  function radiusLeaf(radius) {\n    return function (node) {\n      if (!node.children) {\n        node.r = Math.max(0, +radius(node) || 0);\n      }\n    };\n  }\n\n  function packChildren(padding, k) {\n    return function (node) {\n      if (children = node.children) {\n        var children,\n            i,\n            n = children.length,\n            r = padding(node) * k || 0,\n            e;\n        if (r) for (i = 0; i < n; ++i) {\n          children[i].r += r;\n        }\n        e = packEnclose(children);\n        if (r) for (i = 0; i < n; ++i) {\n          children[i].r -= r;\n        }\n        node.r = e + r;\n      }\n    };\n  }\n\n  function translateChild(k) {\n    return function (node) {\n      var parent = node.parent;\n      node.r *= k;\n\n      if (parent) {\n        node.x = parent.x + k * node.x;\n        node.y = parent.y + k * node.y;\n      }\n    };\n  }\n\n  function roundNode(node) {\n    node.x0 = Math.round(node.x0);\n    node.y0 = Math.round(node.y0);\n    node.x1 = Math.round(node.x1);\n    node.y1 = Math.round(node.y1);\n  }\n\n  function treemapDice(parent, x0, y0, x1, y1) {\n    var nodes = parent.children,\n        node,\n        i = -1,\n        n = nodes.length,\n        k = parent.value && (x1 - x0) / parent.value;\n\n    while (++i < n) {\n      node = nodes[i], node.y0 = y0, node.y1 = y1;\n      node.x0 = x0, node.x1 = x0 += node.value * k;\n    }\n  }\n\n  function partition() {\n    var dx = 1,\n        dy = 1,\n        padding = 0,\n        round = false;\n\n    function partition(root) {\n      var n = root.height + 1;\n      root.x0 = root.y0 = padding;\n      root.x1 = dx;\n      root.y1 = dy / n;\n      root.eachBefore(positionNode(dy, n));\n      if (round) root.eachBefore(roundNode);\n      return root;\n    }\n\n    function positionNode(dy, n) {\n      return function (node) {\n        if (node.children) {\n          treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n        }\n\n        var x0 = node.x0,\n            y0 = node.y0,\n            x1 = node.x1 - padding,\n            y1 = node.y1 - padding;\n        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n        node.x0 = x0;\n        node.y0 = y0;\n        node.x1 = x1;\n        node.y1 = y1;\n      };\n    }\n\n    partition.round = function (x) {\n      return arguments.length ? (round = !!x, partition) : round;\n    };\n\n    partition.size = function (x) {\n      return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n    };\n\n    partition.padding = function (x) {\n      return arguments.length ? (padding = +x, partition) : padding;\n    };\n\n    return partition;\n  }\n\n  var preroot = {\n    depth: -1\n  },\n      ambiguous = {};\n\n  function defaultId(d) {\n    return d.id;\n  }\n\n  function defaultParentId(d) {\n    return d.parentId;\n  }\n\n  function stratify() {\n    var id = defaultId,\n        parentId = defaultParentId;\n\n    function stratify(data) {\n      var nodes = Array.from(data),\n          n = nodes.length,\n          d,\n          i,\n          root,\n          parent,\n          node,\n          nodeId,\n          nodeKey,\n          nodeByKey = new Map();\n\n      for (i = 0; i < n; ++i) {\n        d = nodes[i], node = nodes[i] = new Node$1(d);\n\n        if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n          nodeKey = node.id = nodeId;\n          nodeByKey.set(nodeKey, nodeByKey.has(nodeKey) ? ambiguous : node);\n        }\n\n        if ((nodeId = parentId(d, i, data)) != null && (nodeId += \"\")) {\n          node.parent = nodeId;\n        }\n      }\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n\n        if (nodeId = node.parent) {\n          parent = nodeByKey.get(nodeId);\n          if (!parent) throw new Error(\"missing: \" + nodeId);\n          if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n          if (parent.children) parent.children.push(node);else parent.children = [node];\n          node.parent = parent;\n        } else {\n          if (root) throw new Error(\"multiple roots\");\n          root = node;\n        }\n      }\n\n      if (!root) throw new Error(\"no root\");\n      root.parent = preroot;\n      root.eachBefore(function (node) {\n        node.depth = node.parent.depth + 1;\n        --n;\n      }).eachBefore(computeHeight);\n      root.parent = null;\n      if (n > 0) throw new Error(\"cycle\");\n      return root;\n    }\n\n    stratify.id = function (x) {\n      return arguments.length ? (id = required(x), stratify) : id;\n    };\n\n    stratify.parentId = function (x) {\n      return arguments.length ? (parentId = required(x), stratify) : parentId;\n    };\n\n    return stratify;\n  }\n\n  function defaultSeparation(a, b) {\n    return a.parent === b.parent ? 1 : 2;\n  } // function radialSeparation(a, b) {\n  //   return (a.parent === b.parent ? 1 : 2) / a.depth;\n  // }\n  // This function is used to traverse the left contour of a subtree (or\n  // subforest). It returns the successor of v on this contour. This successor is\n  // either given by the leftmost child of v or by the thread of v. The function\n  // returns null if and only if v is on the highest level of its subtree.\n\n\n  function nextLeft(v) {\n    var children = v.children;\n    return children ? children[0] : v.t;\n  } // This function works analogously to nextLeft.\n\n\n  function nextRight(v) {\n    var children = v.children;\n    return children ? children[children.length - 1] : v.t;\n  } // Shifts the current subtree rooted at w+. This is done by increasing\n  // prelim(w+) and mod(w+) by shift.\n\n\n  function moveSubtree(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  } // All other shifts, applied to the smaller subtrees between w- and w+, are\n  // performed by this function. To prepare the shifts, we have to adjust\n  // change(w+), shift(w+), and change(w-).\n\n\n  function executeShifts(v) {\n    var shift = 0,\n        change = 0,\n        children = v.children,\n        i = children.length,\n        w;\n\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  } // If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n  // returns the specified (default) ancestor.\n\n\n  function nextAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n\n  function TreeNode(node, i) {\n    this._ = node;\n    this.parent = null;\n    this.children = null;\n    this.A = null; // default ancestor\n\n    this.a = this; // ancestor\n\n    this.z = 0; // prelim\n\n    this.m = 0; // mod\n\n    this.c = 0; // change\n\n    this.s = 0; // shift\n\n    this.t = null; // thread\n\n    this.i = i; // number\n  }\n\n  TreeNode.prototype = Object.create(Node$1.prototype);\n\n  function treeRoot(root) {\n    var tree = new TreeNode(root, 0),\n        node,\n        nodes = [tree],\n        child,\n        children,\n        i,\n        n;\n\n    while (node = nodes.pop()) {\n      if (children = node._.children) {\n        node.children = new Array(n = children.length);\n\n        for (i = n - 1; i >= 0; --i) {\n          nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n          child.parent = node;\n        }\n      }\n    }\n\n    (tree.parent = new TreeNode(null, 0)).children = [tree];\n    return tree;\n  } // Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\n\n  function tree() {\n    var separation = defaultSeparation,\n        dx = 1,\n        dy = 1,\n        nodeSize = null;\n\n    function tree(root) {\n      var t = treeRoot(root); // Compute the layout using Buchheim et al.’s algorithm.\n\n      t.eachAfter(firstWalk), t.parent.m = -t.z;\n      t.eachBefore(secondWalk); // If a fixed node size is specified, scale x and y.\n\n      if (nodeSize) root.eachBefore(sizeNode); // If a fixed tree size is specified, scale x and y based on the extent.\n      // Compute the left-most, right-most, and depth-most nodes for extents.\n      else {\n          var left = root,\n              right = root,\n              bottom = root;\n          root.eachBefore(function (node) {\n            if (node.x < left.x) left = node;\n            if (node.x > right.x) right = node;\n            if (node.depth > bottom.depth) bottom = node;\n          });\n          var s = left === right ? 1 : separation(left, right) / 2,\n              tx = s - left.x,\n              kx = dx / (right.x + s + tx),\n              ky = dy / (bottom.depth || 1);\n          root.eachBefore(function (node) {\n            node.x = (node.x + tx) * kx;\n            node.y = node.depth * ky;\n          });\n        }\n      return root;\n    } // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n    // applied recursively to the children of v, as well as the function\n    // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n    // node v is placed to the midpoint of its outermost children.\n\n\n    function firstWalk(v) {\n      var children = v.children,\n          siblings = v.parent.children,\n          w = v.i ? siblings[v.i - 1] : null;\n\n      if (children) {\n        executeShifts(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    } // Computes all real x-coordinates by summing up the modifiers recursively.\n\n\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    } // The core of the algorithm. Here, a new subtree is combined with the\n    // previous subtrees. Threads are used to traverse the inside and outside\n    // contours of the left and right subtree up to the highest common level. The\n    // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n    // superscript o means outside and i means inside, the subscript - means left\n    // subtree and + means right subtree. For summing up the modifiers along the\n    // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n    // nodes of the inside contours conflict, we compute the left one of the\n    // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n    // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n    // Finally, we add a new thread (if necessary).\n\n\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v,\n            vop = v,\n            vim = w,\n            vom = vip.parent.children[0],\n            sip = vip.m,\n            sop = vop.m,\n            sim = vim.m,\n            som = vom.m,\n            shift;\n\n        while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n          vom = nextLeft(vom);\n          vop = nextRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\n          if (shift > 0) {\n            moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n\n        if (vim && !nextRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n\n        if (vip && !nextLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n\n      return ancestor;\n    }\n\n    function sizeNode(node) {\n      node.x *= dx;\n      node.y = node.depth * dy;\n    }\n\n    tree.separation = function (x) {\n      return arguments.length ? (separation = x, tree) : separation;\n    };\n\n    tree.size = function (x) {\n      return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : nodeSize ? null : [dx, dy];\n    };\n\n    tree.nodeSize = function (x) {\n      return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : nodeSize ? [dx, dy] : null;\n    };\n\n    return tree;\n  }\n\n  function treemapSlice(parent, x0, y0, x1, y1) {\n    var nodes = parent.children,\n        node,\n        i = -1,\n        n = nodes.length,\n        k = parent.value && (y1 - y0) / parent.value;\n\n    while (++i < n) {\n      node = nodes[i], node.x0 = x0, node.x1 = x1;\n      node.y0 = y0, node.y1 = y0 += node.value * k;\n    }\n  }\n\n  var phi = (1 + Math.sqrt(5)) / 2;\n\n  function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n    var rows = [],\n        nodes = parent.children,\n        row,\n        nodeValue,\n        i0 = 0,\n        i1 = 0,\n        n = nodes.length,\n        dx,\n        dy,\n        value = parent.value,\n        sumValue,\n        minValue,\n        maxValue,\n        newRatio,\n        minRatio,\n        alpha,\n        beta;\n\n    while (i0 < n) {\n      dx = x1 - x0, dy = y1 - y0; // Find the next non-empty node.\n\n      do {\n        sumValue = nodes[i1++].value;\n      } while (!sumValue && i1 < n);\n\n      minValue = maxValue = sumValue;\n      alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n      beta = sumValue * sumValue * alpha;\n      minRatio = Math.max(maxValue / beta, beta / minValue); // Keep adding nodes while the aspect ratio maintains or improves.\n\n      for (; i1 < n; ++i1) {\n        sumValue += nodeValue = nodes[i1].value;\n        if (nodeValue < minValue) minValue = nodeValue;\n        if (nodeValue > maxValue) maxValue = nodeValue;\n        beta = sumValue * sumValue * alpha;\n        newRatio = Math.max(maxValue / beta, beta / minValue);\n\n        if (newRatio > minRatio) {\n          sumValue -= nodeValue;\n          break;\n        }\n\n        minRatio = newRatio;\n      } // Position and record the row orientation.\n\n\n      rows.push(row = {\n        value: sumValue,\n        dice: dx < dy,\n        children: nodes.slice(i0, i1)\n      });\n      if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n      value -= sumValue, i0 = i1;\n    }\n\n    return rows;\n  }\n\n  var squarify = function custom(ratio) {\n    function squarify(parent, x0, y0, x1, y1) {\n      squarifyRatio(ratio, parent, x0, y0, x1, y1);\n    }\n\n    squarify.ratio = function (x) {\n      return custom((x = +x) > 1 ? x : 1);\n    };\n\n    return squarify;\n  }(phi);\n\n  function index() {\n    var tile = squarify,\n        round = false,\n        dx = 1,\n        dy = 1,\n        paddingStack = [0],\n        paddingInner = constantZero,\n        paddingTop = constantZero,\n        paddingRight = constantZero,\n        paddingBottom = constantZero,\n        paddingLeft = constantZero;\n\n    function treemap(root) {\n      root.x0 = root.y0 = 0;\n      root.x1 = dx;\n      root.y1 = dy;\n      root.eachBefore(positionNode);\n      paddingStack = [0];\n      if (round) root.eachBefore(roundNode);\n      return root;\n    }\n\n    function positionNode(node) {\n      var p = paddingStack[node.depth],\n          x0 = node.x0 + p,\n          y0 = node.y0 + p,\n          x1 = node.x1 - p,\n          y1 = node.y1 - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n\n      if (node.children) {\n        p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n        x0 += paddingLeft(node) - p;\n        y0 += paddingTop(node) - p;\n        x1 -= paddingRight(node) - p;\n        y1 -= paddingBottom(node) - p;\n        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n        tile(node, x0, y0, x1, y1);\n      }\n    }\n\n    treemap.round = function (x) {\n      return arguments.length ? (round = !!x, treemap) : round;\n    };\n\n    treemap.size = function (x) {\n      return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n    };\n\n    treemap.tile = function (x) {\n      return arguments.length ? (tile = required(x), treemap) : tile;\n    };\n\n    treemap.padding = function (x) {\n      return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n    };\n\n    treemap.paddingInner = function (x) {\n      return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$2(+x), treemap) : paddingInner;\n    };\n\n    treemap.paddingOuter = function (x) {\n      return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n    };\n\n    treemap.paddingTop = function (x) {\n      return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$2(+x), treemap) : paddingTop;\n    };\n\n    treemap.paddingRight = function (x) {\n      return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$2(+x), treemap) : paddingRight;\n    };\n\n    treemap.paddingBottom = function (x) {\n      return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$2(+x), treemap) : paddingBottom;\n    };\n\n    treemap.paddingLeft = function (x) {\n      return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$2(+x), treemap) : paddingLeft;\n    };\n\n    return treemap;\n  }\n\n  function binary(parent, x0, y0, x1, y1) {\n    var nodes = parent.children,\n        i,\n        n = nodes.length,\n        sum,\n        sums = new Array(n + 1);\n\n    for (sums[0] = sum = i = 0; i < n; ++i) {\n      sums[i + 1] = sum += nodes[i].value;\n    }\n\n    partition(0, n, parent.value, x0, y0, x1, y1);\n\n    function partition(i, j, value, x0, y0, x1, y1) {\n      if (i >= j - 1) {\n        var node = nodes[i];\n        node.x0 = x0, node.y0 = y0;\n        node.x1 = x1, node.y1 = y1;\n        return;\n      }\n\n      var valueOffset = sums[i],\n          valueTarget = value / 2 + valueOffset,\n          k = i + 1,\n          hi = j - 1;\n\n      while (k < hi) {\n        var mid = k + hi >>> 1;\n        if (sums[mid] < valueTarget) k = mid + 1;else hi = mid;\n      }\n\n      if (valueTarget - sums[k - 1] < sums[k] - valueTarget && i + 1 < k) --k;\n      var valueLeft = sums[k] - valueOffset,\n          valueRight = value - valueLeft;\n\n      if (x1 - x0 > y1 - y0) {\n        var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;\n        partition(i, k, valueLeft, x0, y0, xk, y1);\n        partition(k, j, valueRight, xk, y0, x1, y1);\n      } else {\n        var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;\n        partition(i, k, valueLeft, x0, y0, x1, yk);\n        partition(k, j, valueRight, x0, yk, x1, y1);\n      }\n    }\n  }\n\n  function sliceDice(parent, x0, y0, x1, y1) {\n    (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n  }\n\n  var resquarify = function custom(ratio) {\n    function resquarify(parent, x0, y0, x1, y1) {\n      if ((rows = parent._squarify) && rows.ratio === ratio) {\n        var rows,\n            row,\n            nodes,\n            i,\n            j = -1,\n            n,\n            m = rows.length,\n            value = parent.value;\n\n        while (++j < m) {\n          row = rows[j], nodes = row.children;\n\n          for (i = row.value = 0, n = nodes.length; i < n; ++i) {\n            row.value += nodes[i].value;\n          }\n\n          if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += (y1 - y0) * row.value / value : y1);else treemapSlice(row, x0, y0, value ? x0 += (x1 - x0) * row.value / value : x1, y1);\n          value -= row.value;\n        }\n      } else {\n        parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n        rows.ratio = ratio;\n      }\n    }\n\n    resquarify.ratio = function (x) {\n      return custom((x = +x) > 1 ? x : 1);\n    };\n\n    return resquarify;\n  }(phi);\n\n  function area$1(polygon) {\n    var i = -1,\n        n = polygon.length,\n        a,\n        b = polygon[n - 1],\n        area = 0;\n\n    while (++i < n) {\n      a = b;\n      b = polygon[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n\n    return area / 2;\n  }\n\n  function centroid(polygon) {\n    var i = -1,\n        n = polygon.length,\n        x = 0,\n        y = 0,\n        a,\n        b = polygon[n - 1],\n        c,\n        k = 0;\n\n    while (++i < n) {\n      a = b;\n      b = polygon[i];\n      k += c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n\n    return k *= 3, [x / k, y / k];\n  } // Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n  // the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n  // right, +y is up). Returns a positive value if ABC is counter-clockwise,\n  // negative if clockwise, and zero if the points are collinear.\n\n\n  function cross$1(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n\n  function lexicographicOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  } // Computes the upper convex hull per the monotone chain algorithm.\n  // Assumes points.length >= 3, is sorted by x, unique in y.\n  // Returns an array of indices into points in left-to-right order.\n\n\n  function computeUpperHullIndexes(points) {\n    var n = points.length,\n        indexes = [0, 1];\n    var size = 2,\n        i;\n\n    for (i = 2; i < n; ++i) {\n      while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) {\n        --size;\n      }\n\n      indexes[size++] = i;\n    }\n\n    return indexes.slice(0, size); // remove popped points\n  }\n\n  function hull(points) {\n    if ((n = points.length) < 3) return null;\n    var i,\n        n,\n        sortedPoints = new Array(n),\n        flippedPoints = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      sortedPoints[i] = [+points[i][0], +points[i][1], i];\n    }\n\n    sortedPoints.sort(lexicographicOrder);\n\n    for (i = 0; i < n; ++i) {\n      flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n    }\n\n    var upperIndexes = computeUpperHullIndexes(sortedPoints),\n        lowerIndexes = computeUpperHullIndexes(flippedPoints); // Construct the hull polygon, removing possible duplicate endpoints.\n\n    var skipLeft = lowerIndexes[0] === upperIndexes[0],\n        skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n        hull = []; // Add upper hull in right-to-l order.\n    // Then add lower hull in left-to-right order.\n\n    for (i = upperIndexes.length - 1; i >= 0; --i) {\n      hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n    }\n\n    for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) {\n      hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n    }\n\n    return hull;\n  }\n\n  function contains(polygon, point) {\n    var n = polygon.length,\n        p = polygon[n - 1],\n        x = point[0],\n        y = point[1],\n        x0 = p[0],\n        y0 = p[1],\n        x1,\n        y1,\n        inside = false;\n\n    for (var i = 0; i < n; ++i) {\n      p = polygon[i], x1 = p[0], y1 = p[1];\n      if (y1 > y !== y0 > y && x < (x0 - x1) * (y - y1) / (y0 - y1) + x1) inside = !inside;\n      x0 = x1, y0 = y1;\n    }\n\n    return inside;\n  }\n\n  function length(polygon) {\n    var i = -1,\n        n = polygon.length,\n        b = polygon[n - 1],\n        xa,\n        ya,\n        xb = b[0],\n        yb = b[1],\n        perimeter = 0;\n\n    while (++i < n) {\n      xa = xb;\n      ya = yb;\n      b = polygon[i];\n      xb = b[0];\n      yb = b[1];\n      xa -= xb;\n      ya -= yb;\n      perimeter += Math.hypot(xa, ya);\n    }\n\n    return perimeter;\n  }\n\n  var defaultSource = Math.random;\n\n  var uniform = function sourceRandomUniform(source) {\n    function randomUniform(min, max) {\n      min = min == null ? 0 : +min;\n      max = max == null ? 1 : +max;\n      if (arguments.length === 1) max = min, min = 0;else max -= min;\n      return function () {\n        return source() * max + min;\n      };\n    }\n\n    randomUniform.source = sourceRandomUniform;\n    return randomUniform;\n  }(defaultSource);\n\n  var int = function sourceRandomInt(source) {\n    function randomInt(min, max) {\n      if (arguments.length < 2) max = min, min = 0;\n      min = Math.floor(min);\n      max = Math.floor(max) - min;\n      return function () {\n        return Math.floor(source() * max + min);\n      };\n    }\n\n    randomInt.source = sourceRandomInt;\n    return randomInt;\n  }(defaultSource);\n\n  var normal = function sourceRandomNormal(source) {\n    function randomNormal(mu, sigma) {\n      var x, r;\n      mu = mu == null ? 0 : +mu;\n      sigma = sigma == null ? 1 : +sigma;\n      return function () {\n        var y; // If available, use the second previously-generated uniform random.\n\n        if (x != null) y = x, x = null; // Otherwise, generate a new x and y.\n        else do {\n            x = source() * 2 - 1;\n            y = source() * 2 - 1;\n            r = x * x + y * y;\n          } while (!r || r > 1);\n        return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    }\n\n    randomNormal.source = sourceRandomNormal;\n    return randomNormal;\n  }(defaultSource);\n\n  var logNormal = function sourceRandomLogNormal(source) {\n    var N = normal.source(source);\n\n    function randomLogNormal() {\n      var randomNormal = N.apply(this, arguments);\n      return function () {\n        return Math.exp(randomNormal());\n      };\n    }\n\n    randomLogNormal.source = sourceRandomLogNormal;\n    return randomLogNormal;\n  }(defaultSource);\n\n  var irwinHall = function sourceRandomIrwinHall(source) {\n    function randomIrwinHall(n) {\n      if ((n = +n) <= 0) return function () {\n        return 0;\n      };\n      return function () {\n        for (var sum = 0, i = n; i > 1; --i) {\n          sum += source();\n        }\n\n        return sum + i * source();\n      };\n    }\n\n    randomIrwinHall.source = sourceRandomIrwinHall;\n    return randomIrwinHall;\n  }(defaultSource);\n\n  var bates = function sourceRandomBates(source) {\n    var I = irwinHall.source(source);\n\n    function randomBates(n) {\n      // use limiting distribution at n === 0\n      if ((n = +n) === 0) return source;\n      var randomIrwinHall = I(n);\n      return function () {\n        return randomIrwinHall() / n;\n      };\n    }\n\n    randomBates.source = sourceRandomBates;\n    return randomBates;\n  }(defaultSource);\n\n  var exponential = function sourceRandomExponential(source) {\n    function randomExponential(lambda) {\n      return function () {\n        return -Math.log1p(-source()) / lambda;\n      };\n    }\n\n    randomExponential.source = sourceRandomExponential;\n    return randomExponential;\n  }(defaultSource);\n\n  var pareto = function sourceRandomPareto(source) {\n    function randomPareto(alpha) {\n      if ((alpha = +alpha) < 0) throw new RangeError(\"invalid alpha\");\n      alpha = 1 / -alpha;\n      return function () {\n        return Math.pow(1 - source(), alpha);\n      };\n    }\n\n    randomPareto.source = sourceRandomPareto;\n    return randomPareto;\n  }(defaultSource);\n\n  var bernoulli = function sourceRandomBernoulli(source) {\n    function randomBernoulli(p) {\n      if ((p = +p) < 0 || p > 1) throw new RangeError(\"invalid p\");\n      return function () {\n        return Math.floor(source() + p);\n      };\n    }\n\n    randomBernoulli.source = sourceRandomBernoulli;\n    return randomBernoulli;\n  }(defaultSource);\n\n  var geometric = function sourceRandomGeometric(source) {\n    function randomGeometric(p) {\n      if ((p = +p) < 0 || p > 1) throw new RangeError(\"invalid p\");\n      if (p === 0) return function () {\n        return Infinity;\n      };\n      if (p === 1) return function () {\n        return 1;\n      };\n      p = Math.log1p(-p);\n      return function () {\n        return 1 + Math.floor(Math.log1p(-source()) / p);\n      };\n    }\n\n    randomGeometric.source = sourceRandomGeometric;\n    return randomGeometric;\n  }(defaultSource);\n\n  var gamma = function sourceRandomGamma(source) {\n    var randomNormal = normal.source(source)();\n\n    function randomGamma(k, theta) {\n      if ((k = +k) < 0) throw new RangeError(\"invalid k\"); // degenerate distribution if k === 0\n\n      if (k === 0) return function () {\n        return 0;\n      };\n      theta = theta == null ? 1 : +theta; // exponential distribution if k === 1\n\n      if (k === 1) return function () {\n        return -Math.log1p(-source()) * theta;\n      };\n      var d = (k < 1 ? k + 1 : k) - 1 / 3,\n          c = 1 / (3 * Math.sqrt(d)),\n          multiplier = k < 1 ? function () {\n        return Math.pow(source(), 1 / k);\n      } : function () {\n        return 1;\n      };\n      return function () {\n        do {\n          do {\n            var x = randomNormal(),\n                v = 1 + c * x;\n          } while (v <= 0);\n\n          v *= v * v;\n          var u = 1 - source();\n        } while (u >= 1 - 0.0331 * x * x * x * x && Math.log(u) >= 0.5 * x * x + d * (1 - v + Math.log(v)));\n\n        return d * v * multiplier() * theta;\n      };\n    }\n\n    randomGamma.source = sourceRandomGamma;\n    return randomGamma;\n  }(defaultSource);\n\n  var beta = function sourceRandomBeta(source) {\n    var G = gamma.source(source);\n\n    function randomBeta(alpha, beta) {\n      var X = G(alpha),\n          Y = G(beta);\n      return function () {\n        var x = X();\n        return x === 0 ? 0 : x / (x + Y());\n      };\n    }\n\n    randomBeta.source = sourceRandomBeta;\n    return randomBeta;\n  }(defaultSource);\n\n  var binomial = function sourceRandomBinomial(source) {\n    var G = geometric.source(source),\n        B = beta.source(source);\n\n    function randomBinomial(n, p) {\n      n = +n;\n      if ((p = +p) >= 1) return function () {\n        return n;\n      };\n      if (p <= 0) return function () {\n        return 0;\n      };\n      return function () {\n        var acc = 0,\n            nn = n,\n            pp = p;\n\n        while (nn * pp > 16 && nn * (1 - pp) > 16) {\n          var i = Math.floor((nn + 1) * pp),\n              y = B(i, nn - i + 1)();\n\n          if (y <= pp) {\n            acc += i;\n            nn -= i;\n            pp = (pp - y) / (1 - y);\n          } else {\n            nn = i - 1;\n            pp /= y;\n          }\n        }\n\n        var sign = pp < 0.5,\n            pFinal = sign ? pp : 1 - pp,\n            g = G(pFinal);\n\n        for (var s = g(), k = 0; s <= nn; ++k) {\n          s += g();\n        }\n\n        return acc + (sign ? k : nn - k);\n      };\n    }\n\n    randomBinomial.source = sourceRandomBinomial;\n    return randomBinomial;\n  }(defaultSource);\n\n  var weibull = function sourceRandomWeibull(source) {\n    function randomWeibull(k, a, b) {\n      var outerFunc;\n\n      if ((k = +k) === 0) {\n        outerFunc = function outerFunc(x) {\n          return -Math.log(x);\n        };\n      } else {\n        k = 1 / k;\n\n        outerFunc = function outerFunc(x) {\n          return Math.pow(x, k);\n        };\n      }\n\n      a = a == null ? 0 : +a;\n      b = b == null ? 1 : +b;\n      return function () {\n        return a + b * outerFunc(-Math.log1p(-source()));\n      };\n    }\n\n    randomWeibull.source = sourceRandomWeibull;\n    return randomWeibull;\n  }(defaultSource);\n\n  var cauchy = function sourceRandomCauchy(source) {\n    function randomCauchy(a, b) {\n      a = a == null ? 0 : +a;\n      b = b == null ? 1 : +b;\n      return function () {\n        return a + b * Math.tan(Math.PI * source());\n      };\n    }\n\n    randomCauchy.source = sourceRandomCauchy;\n    return randomCauchy;\n  }(defaultSource);\n\n  var logistic = function sourceRandomLogistic(source) {\n    function randomLogistic(a, b) {\n      a = a == null ? 0 : +a;\n      b = b == null ? 1 : +b;\n      return function () {\n        var u = source();\n        return a + b * Math.log(u / (1 - u));\n      };\n    }\n\n    randomLogistic.source = sourceRandomLogistic;\n    return randomLogistic;\n  }(defaultSource);\n\n  var poisson = function sourceRandomPoisson(source) {\n    var G = gamma.source(source),\n        B = binomial.source(source);\n\n    function randomPoisson(lambda) {\n      return function () {\n        var acc = 0,\n            l = lambda;\n\n        while (l > 16) {\n          var n = Math.floor(0.875 * l),\n              t = G(n)();\n          if (t > l) return acc + B(n - 1, l / t)();\n          acc += n;\n          l -= t;\n        }\n\n        for (var s = -Math.log1p(-source()), k = 0; s <= l; ++k) {\n          s -= Math.log1p(-source());\n        }\n\n        return acc + k;\n      };\n    }\n\n    randomPoisson.source = sourceRandomPoisson;\n    return randomPoisson;\n  }(defaultSource); // https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\n\n\n  var mul = 0x19660D;\n  var inc = 0x3C6EF35F;\n  var eps = 1 / 0x100000000;\n\n  function lcg() {\n    var seed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Math.random();\n    var state = (0 <= seed && seed < 1 ? seed / eps : Math.abs(seed)) | 0;\n    return function () {\n      return state = mul * state + inc | 0, eps * (state >>> 0);\n    };\n  }\n\n  function initRange(domain, range) {\n    switch (arguments.length) {\n      case 0:\n        break;\n\n      case 1:\n        this.range(domain);\n        break;\n\n      default:\n        this.range(range).domain(domain);\n        break;\n    }\n\n    return this;\n  }\n\n  function initInterpolator(domain, interpolator) {\n    switch (arguments.length) {\n      case 0:\n        break;\n\n      case 1:\n        {\n          if (typeof domain === \"function\") this.interpolator(domain);else this.range(domain);\n          break;\n        }\n\n      default:\n        {\n          this.domain(domain);\n          if (typeof interpolator === \"function\") this.interpolator(interpolator);else this.range(interpolator);\n          break;\n        }\n    }\n\n    return this;\n  }\n\n  var implicit = Symbol(\"implicit\");\n\n  function ordinal() {\n    var index = new InternMap(),\n        domain = [],\n        range = [],\n        unknown = implicit;\n\n    function scale(d) {\n      var i = index.get(d);\n\n      if (i === undefined) {\n        if (unknown !== implicit) return unknown;\n        index.set(d, i = domain.push(d) - 1);\n      }\n\n      return range[i % range.length];\n    }\n\n    scale.domain = function (_) {\n      if (!arguments.length) return domain.slice();\n      domain = [], index = new InternMap();\n\n      var _iterator59 = _createForOfIteratorHelper(_),\n          _step61;\n\n      try {\n        for (_iterator59.s(); !(_step61 = _iterator59.n()).done;) {\n          var value = _step61.value;\n          if (index.has(value)) continue;\n          index.set(value, domain.push(value) - 1);\n        }\n      } catch (err) {\n        _iterator59.e(err);\n      } finally {\n        _iterator59.f();\n      }\n\n      return scale;\n    };\n\n    scale.range = function (_) {\n      return arguments.length ? (range = Array.from(_), scale) : range.slice();\n    };\n\n    scale.unknown = function (_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n\n    scale.copy = function () {\n      return ordinal(domain, range).unknown(unknown);\n    };\n\n    initRange.apply(scale, arguments);\n    return scale;\n  }\n\n  function band() {\n    var scale = ordinal().unknown(undefined),\n        domain = scale.domain,\n        ordinalRange = scale.range,\n        r0 = 0,\n        r1 = 1,\n        step,\n        bandwidth,\n        round = false,\n        paddingInner = 0,\n        paddingOuter = 0,\n        align = 0.5;\n    delete scale.unknown;\n\n    function rescale() {\n      var n = domain().length,\n          reverse = r1 < r0,\n          start = reverse ? r1 : r0,\n          stop = reverse ? r0 : r1;\n      step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n      if (round) step = Math.floor(step);\n      start += (stop - start - step * (n - paddingInner)) * align;\n      bandwidth = step * (1 - paddingInner);\n      if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n      var values = range$2(n).map(function (i) {\n        return start + step * i;\n      });\n      return ordinalRange(reverse ? values.reverse() : values);\n    }\n\n    scale.domain = function (_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.range = function (_) {\n      var _ref29, _ref30;\n\n      return arguments.length ? ((_ref29 = _, _ref30 = _slicedToArray(_ref29, 2), r0 = _ref30[0], r1 = _ref30[1], _ref29), r0 = +r0, r1 = +r1, rescale()) : [r0, r1];\n    };\n\n    scale.rangeRound = function (_) {\n      var _ref31, _ref32;\n\n      return (_ref31 = _, _ref32 = _slicedToArray(_ref31, 2), r0 = _ref32[0], r1 = _ref32[1], _ref31), r0 = +r0, r1 = +r1, round = true, rescale();\n    };\n\n    scale.bandwidth = function () {\n      return bandwidth;\n    };\n\n    scale.step = function () {\n      return step;\n    };\n\n    scale.round = function (_) {\n      return arguments.length ? (round = !!_, rescale()) : round;\n    };\n\n    scale.padding = function (_) {\n      return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n    };\n\n    scale.paddingInner = function (_) {\n      return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n    };\n\n    scale.paddingOuter = function (_) {\n      return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n    };\n\n    scale.align = function (_) {\n      return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n    };\n\n    scale.copy = function () {\n      return band(domain(), [r0, r1]).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);\n    };\n\n    return initRange.apply(rescale(), arguments);\n  }\n\n  function pointish(scale) {\n    var copy = scale.copy;\n    scale.padding = scale.paddingOuter;\n    delete scale.paddingInner;\n    delete scale.paddingOuter;\n\n    scale.copy = function () {\n      return pointish(copy());\n    };\n\n    return scale;\n  }\n\n  function point$4() {\n    return pointish(band.apply(null, arguments).paddingInner(1));\n  }\n\n  function constants(x) {\n    return function () {\n      return x;\n    };\n  }\n\n  function number$1(x) {\n    return +x;\n  }\n\n  var unit = [0, 1];\n\n  function identity$3(x) {\n    return x;\n  }\n\n  function normalize(a, b) {\n    return (b -= a = +a) ? function (x) {\n      return (x - a) / b;\n    } : constants(isNaN(b) ? NaN : 0.5);\n  }\n\n  function clamper(a, b) {\n    var t;\n    if (a > b) t = a, a = b, b = t;\n    return function (x) {\n      return Math.max(a, Math.min(b, x));\n    };\n  } // normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n  // interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\n\n\n  function bimap(domain, range, interpolate) {\n    var d0 = domain[0],\n        d1 = domain[1],\n        r0 = range[0],\n        r1 = range[1];\n    if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n    return function (x) {\n      return r0(d0(x));\n    };\n  }\n\n  function polymap(domain, range, interpolate) {\n    var j = Math.min(domain.length, range.length) - 1,\n        d = new Array(j),\n        r = new Array(j),\n        i = -1; // Reverse descending domains.\n\n    if (domain[j] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++i < j) {\n      d[i] = normalize(domain[i], domain[i + 1]);\n      r[i] = interpolate(range[i], range[i + 1]);\n    }\n\n    return function (x) {\n      var i = bisect(domain, x, 1, j) - 1;\n      return r[i](d[i](x));\n    };\n  }\n\n  function copy$1(source, target) {\n    return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());\n  }\n\n  function transformer$2() {\n    var domain = unit,\n        range = unit,\n        interpolate = interpolate$2,\n        transform,\n        untransform,\n        unknown,\n        clamp = identity$3,\n        piecewise,\n        output,\n        input;\n\n    function rescale() {\n      var n = Math.min(domain.length, range.length);\n      if (clamp !== identity$3) clamp = clamper(domain[0], domain[n - 1]);\n      piecewise = n > 2 ? polymap : bimap;\n      output = input = null;\n      return scale;\n    }\n\n    function scale(x) {\n      return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n    }\n\n    scale.invert = function (y) {\n      return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n    };\n\n    scale.domain = function (_) {\n      return arguments.length ? (domain = Array.from(_, number$1), rescale()) : domain.slice();\n    };\n\n    scale.range = function (_) {\n      return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n    };\n\n    scale.rangeRound = function (_) {\n      return range = Array.from(_), interpolate = interpolateRound, rescale();\n    };\n\n    scale.clamp = function (_) {\n      return arguments.length ? (clamp = _ ? true : identity$3, rescale()) : clamp !== identity$3;\n    };\n\n    scale.interpolate = function (_) {\n      return arguments.length ? (interpolate = _, rescale()) : interpolate;\n    };\n\n    scale.unknown = function (_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n\n    return function (t, u) {\n      transform = t, untransform = u;\n      return rescale();\n    };\n  }\n\n  function continuous() {\n    return transformer$2()(identity$3, identity$3);\n  }\n\n  function tickFormat(start, stop, count, specifier) {\n    var step = tickStep(start, stop, count),\n        precision;\n    specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\n    switch (specifier.type) {\n      case \"s\":\n        {\n          var value = Math.max(Math.abs(start), Math.abs(stop));\n          if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n          return exports.formatPrefix(specifier, value);\n        }\n\n      case \"\":\n      case \"e\":\n      case \"g\":\n      case \"p\":\n      case \"r\":\n        {\n          if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n          break;\n        }\n\n      case \"f\":\n      case \"%\":\n        {\n          if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n          break;\n        }\n    }\n\n    return exports.format(specifier);\n  }\n\n  function linearish(scale) {\n    var domain = scale.domain;\n\n    scale.ticks = function (count) {\n      var d = domain();\n      return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n    };\n\n    scale.tickFormat = function (count, specifier) {\n      var d = domain();\n      return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n    };\n\n    scale.nice = function (count) {\n      if (count == null) count = 10;\n      var d = domain();\n      var i0 = 0;\n      var i1 = d.length - 1;\n      var start = d[i0];\n      var stop = d[i1];\n      var prestep;\n      var step;\n      var maxIter = 10;\n\n      if (stop < start) {\n        step = start, start = stop, stop = step;\n        step = i0, i0 = i1, i1 = step;\n      }\n\n      while (maxIter-- > 0) {\n        step = tickIncrement(start, stop, count);\n\n        if (step === prestep) {\n          d[i0] = start;\n          d[i1] = stop;\n          return domain(d);\n        } else if (step > 0) {\n          start = Math.floor(start / step) * step;\n          stop = Math.ceil(stop / step) * step;\n        } else if (step < 0) {\n          start = Math.ceil(start * step) / step;\n          stop = Math.floor(stop * step) / step;\n        } else {\n          break;\n        }\n\n        prestep = step;\n      }\n\n      return scale;\n    };\n\n    return scale;\n  }\n\n  function linear() {\n    var scale = continuous();\n\n    scale.copy = function () {\n      return copy$1(scale, linear());\n    };\n\n    initRange.apply(scale, arguments);\n    return linearish(scale);\n  }\n\n  function identity$2(domain) {\n    var unknown;\n\n    function scale(x) {\n      return x == null || isNaN(x = +x) ? unknown : x;\n    }\n\n    scale.invert = scale;\n\n    scale.domain = scale.range = function (_) {\n      return arguments.length ? (domain = Array.from(_, number$1), scale) : domain.slice();\n    };\n\n    scale.unknown = function (_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n\n    scale.copy = function () {\n      return identity$2(domain).unknown(unknown);\n    };\n\n    domain = arguments.length ? Array.from(domain, number$1) : [0, 1];\n    return linearish(scale);\n  }\n\n  function nice(domain, interval) {\n    domain = domain.slice();\n    var i0 = 0,\n        i1 = domain.length - 1,\n        x0 = domain[i0],\n        x1 = domain[i1],\n        t;\n\n    if (x1 < x0) {\n      t = i0, i0 = i1, i1 = t;\n      t = x0, x0 = x1, x1 = t;\n    }\n\n    domain[i0] = interval.floor(x0);\n    domain[i1] = interval.ceil(x1);\n    return domain;\n  }\n\n  function transformLog(x) {\n    return Math.log(x);\n  }\n\n  function transformExp(x) {\n    return Math.exp(x);\n  }\n\n  function transformLogn(x) {\n    return -Math.log(-x);\n  }\n\n  function transformExpn(x) {\n    return -Math.exp(-x);\n  }\n\n  function pow10(x) {\n    return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n  }\n\n  function powp(base) {\n    return base === 10 ? pow10 : base === Math.E ? Math.exp : function (x) {\n      return Math.pow(base, x);\n    };\n  }\n\n  function logp(base) {\n    return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), function (x) {\n      return Math.log(x) / base;\n    });\n  }\n\n  function reflect(f) {\n    return function (x) {\n      return -f(-x);\n    };\n  }\n\n  function loggish(transform) {\n    var scale = transform(transformLog, transformExp),\n        domain = scale.domain,\n        base = 10,\n        logs,\n        pows;\n\n    function rescale() {\n      logs = logp(base), pows = powp(base);\n\n      if (domain()[0] < 0) {\n        logs = reflect(logs), pows = reflect(pows);\n        transform(transformLogn, transformExpn);\n      } else {\n        transform(transformLog, transformExp);\n      }\n\n      return scale;\n    }\n\n    scale.base = function (_) {\n      return arguments.length ? (base = +_, rescale()) : base;\n    };\n\n    scale.domain = function (_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.ticks = function (count) {\n      var d = domain(),\n          u = d[0],\n          v = d[d.length - 1],\n          r;\n      if (r = v < u) i = u, u = v, v = i;\n      var i = logs(u),\n          j = logs(v),\n          p,\n          k,\n          t,\n          n = count == null ? 10 : +count,\n          z = [];\n\n      if (!(base % 1) && j - i < n) {\n        i = Math.floor(i), j = Math.ceil(j);\n        if (u > 0) for (; i <= j; ++i) {\n          for (k = 1, p = pows(i); k < base; ++k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        } else for (; i <= j; ++i) {\n          for (k = base - 1, p = pows(i); k >= 1; --k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        }\n        if (z.length * 2 < n) z = ticks(u, v, n);\n      } else {\n        z = ticks(i, j, Math.min(j - i, n)).map(pows);\n      }\n\n      return r ? z.reverse() : z;\n    };\n\n    scale.tickFormat = function (count, specifier) {\n      if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n      if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n      if (count === Infinity) return specifier;\n      if (count == null) count = 10;\n      var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\n      return function (d) {\n        var i = d / pows(Math.round(logs(d)));\n        if (i * base < base - 0.5) i *= base;\n        return i <= k ? specifier(d) : \"\";\n      };\n    };\n\n    scale.nice = function () {\n      return domain(nice(domain(), {\n        floor: function floor(x) {\n          return pows(Math.floor(logs(x)));\n        },\n        ceil: function ceil(x) {\n          return pows(Math.ceil(logs(x)));\n        }\n      }));\n    };\n\n    return scale;\n  }\n\n  function log() {\n    var scale = loggish(transformer$2()).domain([1, 10]);\n\n    scale.copy = function () {\n      return copy$1(scale, log()).base(scale.base());\n    };\n\n    initRange.apply(scale, arguments);\n    return scale;\n  }\n\n  function transformSymlog(c) {\n    return function (x) {\n      return Math.sign(x) * Math.log1p(Math.abs(x / c));\n    };\n  }\n\n  function transformSymexp(c) {\n    return function (x) {\n      return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n    };\n  }\n\n  function symlogish(transform) {\n    var c = 1,\n        scale = transform(transformSymlog(c), transformSymexp(c));\n\n    scale.constant = function (_) {\n      return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n    };\n\n    return linearish(scale);\n  }\n\n  function symlog() {\n    var scale = symlogish(transformer$2());\n\n    scale.copy = function () {\n      return copy$1(scale, symlog()).constant(scale.constant());\n    };\n\n    return initRange.apply(scale, arguments);\n  }\n\n  function transformPow(exponent) {\n    return function (x) {\n      return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n    };\n  }\n\n  function transformSqrt(x) {\n    return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n  }\n\n  function transformSquare(x) {\n    return x < 0 ? -x * x : x * x;\n  }\n\n  function powish(transform) {\n    var scale = transform(identity$3, identity$3),\n        exponent = 1;\n\n    function rescale() {\n      return exponent === 1 ? transform(identity$3, identity$3) : exponent === 0.5 ? transform(transformSqrt, transformSquare) : transform(transformPow(exponent), transformPow(1 / exponent));\n    }\n\n    scale.exponent = function (_) {\n      return arguments.length ? (exponent = +_, rescale()) : exponent;\n    };\n\n    return linearish(scale);\n  }\n\n  function pow() {\n    var scale = powish(transformer$2());\n\n    scale.copy = function () {\n      return copy$1(scale, pow()).exponent(scale.exponent());\n    };\n\n    initRange.apply(scale, arguments);\n    return scale;\n  }\n\n  function sqrt$1() {\n    return pow.apply(null, arguments).exponent(0.5);\n  }\n\n  function square$1(x) {\n    return Math.sign(x) * x * x;\n  }\n\n  function unsquare(x) {\n    return Math.sign(x) * Math.sqrt(Math.abs(x));\n  }\n\n  function radial() {\n    var squared = continuous(),\n        range = [0, 1],\n        round = false,\n        unknown;\n\n    function scale(x) {\n      var y = unsquare(squared(x));\n      return isNaN(y) ? unknown : round ? Math.round(y) : y;\n    }\n\n    scale.invert = function (y) {\n      return squared.invert(square$1(y));\n    };\n\n    scale.domain = function (_) {\n      return arguments.length ? (squared.domain(_), scale) : squared.domain();\n    };\n\n    scale.range = function (_) {\n      return arguments.length ? (squared.range((range = Array.from(_, number$1)).map(square$1)), scale) : range.slice();\n    };\n\n    scale.rangeRound = function (_) {\n      return scale.range(_).round(true);\n    };\n\n    scale.round = function (_) {\n      return arguments.length ? (round = !!_, scale) : round;\n    };\n\n    scale.clamp = function (_) {\n      return arguments.length ? (squared.clamp(_), scale) : squared.clamp();\n    };\n\n    scale.unknown = function (_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n\n    scale.copy = function () {\n      return radial(squared.domain(), range).round(round).clamp(squared.clamp()).unknown(unknown);\n    };\n\n    initRange.apply(scale, arguments);\n    return linearish(scale);\n  }\n\n  function quantile() {\n    var domain = [],\n        range = [],\n        thresholds = [],\n        unknown;\n\n    function rescale() {\n      var i = 0,\n          n = Math.max(1, range.length);\n      thresholds = new Array(n - 1);\n\n      while (++i < n) {\n        thresholds[i - 1] = quantileSorted(domain, i / n);\n      }\n\n      return scale;\n    }\n\n    function scale(x) {\n      return x == null || isNaN(x = +x) ? unknown : range[bisect(thresholds, x)];\n    }\n\n    scale.invertExtent = function (y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN] : [i > 0 ? thresholds[i - 1] : domain[0], i < thresholds.length ? thresholds[i] : domain[domain.length - 1]];\n    };\n\n    scale.domain = function (_) {\n      if (!arguments.length) return domain.slice();\n      domain = [];\n\n      var _iterator60 = _createForOfIteratorHelper(_),\n          _step62;\n\n      try {\n        for (_iterator60.s(); !(_step62 = _iterator60.n()).done;) {\n          var d = _step62.value;\n          if (d != null && !isNaN(d = +d)) domain.push(d);\n        }\n      } catch (err) {\n        _iterator60.e(err);\n      } finally {\n        _iterator60.f();\n      }\n\n      domain.sort(ascending$3);\n      return rescale();\n    };\n\n    scale.range = function (_) {\n      return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n    };\n\n    scale.unknown = function (_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n\n    scale.quantiles = function () {\n      return thresholds.slice();\n    };\n\n    scale.copy = function () {\n      return quantile().domain(domain).range(range).unknown(unknown);\n    };\n\n    return initRange.apply(scale, arguments);\n  }\n\n  function quantize() {\n    var x0 = 0,\n        x1 = 1,\n        n = 1,\n        domain = [0.5],\n        range = [0, 1],\n        unknown;\n\n    function scale(x) {\n      return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n    }\n\n    function rescale() {\n      var i = -1;\n      domain = new Array(n);\n\n      while (++i < n) {\n        domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n      }\n\n      return scale;\n    }\n\n    scale.domain = function (_) {\n      var _ref33, _ref34;\n\n      return arguments.length ? ((_ref33 = _, _ref34 = _slicedToArray(_ref33, 2), x0 = _ref34[0], x1 = _ref34[1], _ref33), x0 = +x0, x1 = +x1, rescale()) : [x0, x1];\n    };\n\n    scale.range = function (_) {\n      return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();\n    };\n\n    scale.invertExtent = function (y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN] : i < 1 ? [x0, domain[0]] : i >= n ? [domain[n - 1], x1] : [domain[i - 1], domain[i]];\n    };\n\n    scale.unknown = function (_) {\n      return arguments.length ? (unknown = _, scale) : scale;\n    };\n\n    scale.thresholds = function () {\n      return domain.slice();\n    };\n\n    scale.copy = function () {\n      return quantize().domain([x0, x1]).range(range).unknown(unknown);\n    };\n\n    return initRange.apply(linearish(scale), arguments);\n  }\n\n  function threshold() {\n    var domain = [0.5],\n        range = [0, 1],\n        unknown,\n        n = 1;\n\n    function scale(x) {\n      return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n    }\n\n    scale.domain = function (_) {\n      return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n    };\n\n    scale.range = function (_) {\n      return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n    };\n\n    scale.invertExtent = function (y) {\n      var i = range.indexOf(y);\n      return [domain[i - 1], domain[i]];\n    };\n\n    scale.unknown = function (_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n\n    scale.copy = function () {\n      return threshold().domain(domain).range(range).unknown(unknown);\n    };\n\n    return initRange.apply(scale, arguments);\n  }\n\n  var t0 = new Date(),\n      t1 = new Date();\n\n  function newInterval(floori, offseti, count, field) {\n    function interval(date) {\n      return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;\n    }\n\n    interval.floor = function (date) {\n      return floori(date = new Date(+date)), date;\n    };\n\n    interval.ceil = function (date) {\n      return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n    };\n\n    interval.round = function (date) {\n      var d0 = interval(date),\n          d1 = interval.ceil(date);\n      return date - d0 < d1 - date ? d0 : d1;\n    };\n\n    interval.offset = function (date, step) {\n      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n    };\n\n    interval.range = function (start, stop, step) {\n      var range = [],\n          previous;\n      start = interval.ceil(start);\n      step = step == null ? 1 : Math.floor(step);\n      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n      do {\n        range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n      } while (previous < start && start < stop);\n\n      return range;\n    };\n\n    interval.filter = function (test) {\n      return newInterval(function (date) {\n        if (date >= date) while (floori(date), !test(date)) {\n          date.setTime(date - 1);\n        }\n      }, function (date, step) {\n        if (date >= date) {\n          if (step < 0) while (++step <= 0) {\n            while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n          } else while (--step >= 0) {\n            while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n          }\n        }\n      });\n    };\n\n    if (count) {\n      interval.count = function (start, end) {\n        t0.setTime(+start), t1.setTime(+end);\n        floori(t0), floori(t1);\n        return Math.floor(count(t0, t1));\n      };\n\n      interval.every = function (step) {\n        step = Math.floor(step);\n        return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n          return field(d) % step === 0;\n        } : function (d) {\n          return interval.count(0, d) % step === 0;\n        });\n      };\n    }\n\n    return interval;\n  }\n\n  var millisecond = newInterval(function () {// noop\n  }, function (date, step) {\n    date.setTime(+date + step);\n  }, function (start, end) {\n    return end - start;\n  }); // An optimized implementation for this simple case.\n\n  millisecond.every = function (k) {\n    k = Math.floor(k);\n    if (!isFinite(k) || !(k > 0)) return null;\n    if (!(k > 1)) return millisecond;\n    return newInterval(function (date) {\n      date.setTime(Math.floor(date / k) * k);\n    }, function (date, step) {\n      date.setTime(+date + step * k);\n    }, function (start, end) {\n      return (end - start) / k;\n    });\n  };\n\n  var millisecond$1 = millisecond;\n  var milliseconds = millisecond.range;\n  var durationSecond = 1000;\n  var durationMinute = durationSecond * 60;\n  var durationHour = durationMinute * 60;\n  var durationDay = durationHour * 24;\n  var durationWeek = durationDay * 7;\n  var durationMonth = durationDay * 30;\n  var durationYear = durationDay * 365;\n  var second = newInterval(function (date) {\n    date.setTime(date - date.getMilliseconds());\n  }, function (date, step) {\n    date.setTime(+date + step * durationSecond);\n  }, function (start, end) {\n    return (end - start) / durationSecond;\n  }, function (date) {\n    return date.getUTCSeconds();\n  });\n  var utcSecond = second;\n  var seconds = second.range;\n  var minute = newInterval(function (date) {\n    date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n  }, function (date, step) {\n    date.setTime(+date + step * durationMinute);\n  }, function (start, end) {\n    return (end - start) / durationMinute;\n  }, function (date) {\n    return date.getMinutes();\n  });\n  var timeMinute = minute;\n  var minutes = minute.range;\n  var hour = newInterval(function (date) {\n    date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n  }, function (date, step) {\n    date.setTime(+date + step * durationHour);\n  }, function (start, end) {\n    return (end - start) / durationHour;\n  }, function (date) {\n    return date.getHours();\n  });\n  var timeHour = hour;\n  var hours = hour.range;\n  var day = newInterval(function (date) {\n    return date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    return date.setDate(date.getDate() + step);\n  }, function (start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n  }, function (date) {\n    return date.getDate() - 1;\n  });\n  var timeDay = day;\n  var days = day.range;\n\n  function weekday(i) {\n    return newInterval(function (date) {\n      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n      date.setHours(0, 0, 0, 0);\n    }, function (date, step) {\n      date.setDate(date.getDate() + step * 7);\n    }, function (start, end) {\n      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n    });\n  }\n\n  var sunday = weekday(0);\n  var monday = weekday(1);\n  var tuesday = weekday(2);\n  var wednesday = weekday(3);\n  var thursday = weekday(4);\n  var friday = weekday(5);\n  var saturday = weekday(6);\n  var sundays = sunday.range;\n  var mondays = monday.range;\n  var tuesdays = tuesday.range;\n  var wednesdays = wednesday.range;\n  var thursdays = thursday.range;\n  var fridays = friday.range;\n  var saturdays = saturday.range;\n  var month = newInterval(function (date) {\n    date.setDate(1);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setMonth(date.getMonth() + step);\n  }, function (start, end) {\n    return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n  }, function (date) {\n    return date.getMonth();\n  });\n  var timeMonth = month;\n  var months = month.range;\n  var year = newInterval(function (date) {\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setFullYear(date.getFullYear() + step);\n  }, function (start, end) {\n    return end.getFullYear() - start.getFullYear();\n  }, function (date) {\n    return date.getFullYear();\n  }); // An optimized implementation for this simple case.\n\n  year.every = function (k) {\n    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function (date) {\n      date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n      date.setMonth(0, 1);\n      date.setHours(0, 0, 0, 0);\n    }, function (date, step) {\n      date.setFullYear(date.getFullYear() + step * k);\n    });\n  };\n\n  var timeYear = year;\n  var years = year.range;\n  var utcMinute = newInterval(function (date) {\n    date.setUTCSeconds(0, 0);\n  }, function (date, step) {\n    date.setTime(+date + step * durationMinute);\n  }, function (start, end) {\n    return (end - start) / durationMinute;\n  }, function (date) {\n    return date.getUTCMinutes();\n  });\n  var utcMinute$1 = utcMinute;\n  var utcMinutes = utcMinute.range;\n  var utcHour = newInterval(function (date) {\n    date.setUTCMinutes(0, 0, 0);\n  }, function (date, step) {\n    date.setTime(+date + step * durationHour);\n  }, function (start, end) {\n    return (end - start) / durationHour;\n  }, function (date) {\n    return date.getUTCHours();\n  });\n  var utcHour$1 = utcHour;\n  var utcHours = utcHour.range;\n  var utcDay = newInterval(function (date) {\n    date.setUTCHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setUTCDate(date.getUTCDate() + step);\n  }, function (start, end) {\n    return (end - start) / durationDay;\n  }, function (date) {\n    return date.getUTCDate() - 1;\n  });\n  var utcDay$1 = utcDay;\n  var utcDays = utcDay.range;\n\n  function utcWeekday(i) {\n    return newInterval(function (date) {\n      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n      date.setUTCHours(0, 0, 0, 0);\n    }, function (date, step) {\n      date.setUTCDate(date.getUTCDate() + step * 7);\n    }, function (start, end) {\n      return (end - start) / durationWeek;\n    });\n  }\n\n  var utcSunday = utcWeekday(0);\n  var utcMonday = utcWeekday(1);\n  var utcTuesday = utcWeekday(2);\n  var utcWednesday = utcWeekday(3);\n  var utcThursday = utcWeekday(4);\n  var utcFriday = utcWeekday(5);\n  var utcSaturday = utcWeekday(6);\n  var utcSundays = utcSunday.range;\n  var utcMondays = utcMonday.range;\n  var utcTuesdays = utcTuesday.range;\n  var utcWednesdays = utcWednesday.range;\n  var utcThursdays = utcThursday.range;\n  var utcFridays = utcFriday.range;\n  var utcSaturdays = utcSaturday.range;\n  var utcMonth = newInterval(function (date) {\n    date.setUTCDate(1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setUTCMonth(date.getUTCMonth() + step);\n  }, function (start, end) {\n    return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n  }, function (date) {\n    return date.getUTCMonth();\n  });\n  var utcMonth$1 = utcMonth;\n  var utcMonths = utcMonth.range;\n  var utcYear = newInterval(function (date) {\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step);\n  }, function (start, end) {\n    return end.getUTCFullYear() - start.getUTCFullYear();\n  }, function (date) {\n    return date.getUTCFullYear();\n  }); // An optimized implementation for this simple case.\n\n  utcYear.every = function (k) {\n    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function (date) {\n      date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n      date.setUTCMonth(0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n    }, function (date, step) {\n      date.setUTCFullYear(date.getUTCFullYear() + step * k);\n    });\n  };\n\n  var utcYear$1 = utcYear;\n  var utcYears = utcYear.range;\n\n  function ticker(year, month, week, day, hour, minute) {\n    var tickIntervals = [[utcSecond, 1, durationSecond], [utcSecond, 5, 5 * durationSecond], [utcSecond, 15, 15 * durationSecond], [utcSecond, 30, 30 * durationSecond], [minute, 1, durationMinute], [minute, 5, 5 * durationMinute], [minute, 15, 15 * durationMinute], [minute, 30, 30 * durationMinute], [hour, 1, durationHour], [hour, 3, 3 * durationHour], [hour, 6, 6 * durationHour], [hour, 12, 12 * durationHour], [day, 1, durationDay], [day, 2, 2 * durationDay], [week, 1, durationWeek], [month, 1, durationMonth], [month, 3, 3 * durationMonth], [year, 1, durationYear]];\n\n    function ticks(start, stop, count) {\n      var reverse = stop < start;\n\n      if (reverse) {\n        var _ref35 = [stop, start];\n        start = _ref35[0];\n        stop = _ref35[1];\n      }\n\n      var interval = count && typeof count.range === \"function\" ? count : tickInterval(start, stop, count);\n      var ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop\n\n      return reverse ? ticks.reverse() : ticks;\n    }\n\n    function tickInterval(start, stop, count) {\n      var target = Math.abs(stop - start) / count;\n      var i = bisector(function (_ref36) {\n        var _ref37 = _slicedToArray(_ref36, 3),\n            step = _ref37[2];\n\n        return step;\n      }).right(tickIntervals, target);\n      if (i === tickIntervals.length) return year.every(tickStep(start / durationYear, stop / durationYear, count));\n      if (i === 0) return millisecond$1.every(Math.max(tickStep(start, stop, count), 1));\n\n      var _tickIntervals = _slicedToArray(tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i], 2),\n          t = _tickIntervals[0],\n          step = _tickIntervals[1];\n\n      return t.every(step);\n    }\n\n    return [ticks, tickInterval];\n  }\n\n  var _ticker = ticker(utcYear$1, utcMonth$1, utcSunday, utcDay$1, utcHour$1, utcMinute$1),\n      _ticker2 = _slicedToArray(_ticker, 2),\n      utcTicks = _ticker2[0],\n      utcTickInterval = _ticker2[1];\n\n  var _ticker3 = ticker(timeYear, timeMonth, sunday, timeDay, timeHour, timeMinute),\n      _ticker4 = _slicedToArray(_ticker3, 2),\n      timeTicks = _ticker4[0],\n      timeTickInterval = _ticker4[1];\n\n  function localDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n      date.setFullYear(d.y);\n      return date;\n    }\n\n    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n  }\n\n  function utcDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n      date.setUTCFullYear(d.y);\n      return date;\n    }\n\n    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n  }\n\n  function newDate(y, m, d) {\n    return {\n      y: y,\n      m: m,\n      d: d,\n      H: 0,\n      M: 0,\n      S: 0,\n      L: 0\n    };\n  }\n\n  function formatLocale(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_weekdays = locale.days,\n        locale_shortWeekdays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n    var periodRe = formatRe(locale_periods),\n        periodLookup = formatLookup(locale_periods),\n        weekdayRe = formatRe(locale_weekdays),\n        weekdayLookup = formatLookup(locale_weekdays),\n        shortWeekdayRe = formatRe(locale_shortWeekdays),\n        shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n        monthRe = formatRe(locale_months),\n        monthLookup = formatLookup(locale_months),\n        shortMonthRe = formatRe(locale_shortMonths),\n        shortMonthLookup = formatLookup(locale_shortMonths);\n    var formats = {\n      \"a\": formatShortWeekday,\n      \"A\": formatWeekday,\n      \"b\": formatShortMonth,\n      \"B\": formatMonth,\n      \"c\": null,\n      \"d\": formatDayOfMonth,\n      \"e\": formatDayOfMonth,\n      \"f\": formatMicroseconds,\n      \"g\": formatYearISO,\n      \"G\": formatFullYearISO,\n      \"H\": formatHour24,\n      \"I\": formatHour12,\n      \"j\": formatDayOfYear,\n      \"L\": formatMilliseconds,\n      \"m\": formatMonthNumber,\n      \"M\": formatMinutes,\n      \"p\": formatPeriod,\n      \"q\": formatQuarter,\n      \"Q\": formatUnixTimestamp,\n      \"s\": formatUnixTimestampSeconds,\n      \"S\": formatSeconds,\n      \"u\": formatWeekdayNumberMonday,\n      \"U\": formatWeekNumberSunday,\n      \"V\": formatWeekNumberISO,\n      \"w\": formatWeekdayNumberSunday,\n      \"W\": formatWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatYear,\n      \"Y\": formatFullYear,\n      \"Z\": formatZone,\n      \"%\": formatLiteralPercent\n    };\n    var utcFormats = {\n      \"a\": formatUTCShortWeekday,\n      \"A\": formatUTCWeekday,\n      \"b\": formatUTCShortMonth,\n      \"B\": formatUTCMonth,\n      \"c\": null,\n      \"d\": formatUTCDayOfMonth,\n      \"e\": formatUTCDayOfMonth,\n      \"f\": formatUTCMicroseconds,\n      \"g\": formatUTCYearISO,\n      \"G\": formatUTCFullYearISO,\n      \"H\": formatUTCHour24,\n      \"I\": formatUTCHour12,\n      \"j\": formatUTCDayOfYear,\n      \"L\": formatUTCMilliseconds,\n      \"m\": formatUTCMonthNumber,\n      \"M\": formatUTCMinutes,\n      \"p\": formatUTCPeriod,\n      \"q\": formatUTCQuarter,\n      \"Q\": formatUnixTimestamp,\n      \"s\": formatUnixTimestampSeconds,\n      \"S\": formatUTCSeconds,\n      \"u\": formatUTCWeekdayNumberMonday,\n      \"U\": formatUTCWeekNumberSunday,\n      \"V\": formatUTCWeekNumberISO,\n      \"w\": formatUTCWeekdayNumberSunday,\n      \"W\": formatUTCWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatUTCYear,\n      \"Y\": formatUTCFullYear,\n      \"Z\": formatUTCZone,\n      \"%\": formatLiteralPercent\n    };\n    var parses = {\n      \"a\": parseShortWeekday,\n      \"A\": parseWeekday,\n      \"b\": parseShortMonth,\n      \"B\": parseMonth,\n      \"c\": parseLocaleDateTime,\n      \"d\": parseDayOfMonth,\n      \"e\": parseDayOfMonth,\n      \"f\": parseMicroseconds,\n      \"g\": parseYear,\n      \"G\": parseFullYear,\n      \"H\": parseHour24,\n      \"I\": parseHour24,\n      \"j\": parseDayOfYear,\n      \"L\": parseMilliseconds,\n      \"m\": parseMonthNumber,\n      \"M\": parseMinutes,\n      \"p\": parsePeriod,\n      \"q\": parseQuarter,\n      \"Q\": parseUnixTimestamp,\n      \"s\": parseUnixTimestampSeconds,\n      \"S\": parseSeconds,\n      \"u\": parseWeekdayNumberMonday,\n      \"U\": parseWeekNumberSunday,\n      \"V\": parseWeekNumberISO,\n      \"w\": parseWeekdayNumberSunday,\n      \"W\": parseWeekNumberMonday,\n      \"x\": parseLocaleDate,\n      \"X\": parseLocaleTime,\n      \"y\": parseYear,\n      \"Y\": parseFullYear,\n      \"Z\": parseZone,\n      \"%\": parseLiteralPercent\n    }; // These recursive directive definitions must be deferred.\n\n    formats.x = newFormat(locale_date, formats);\n    formats.X = newFormat(locale_time, formats);\n    formats.c = newFormat(locale_dateTime, formats);\n    utcFormats.x = newFormat(locale_date, utcFormats);\n    utcFormats.X = newFormat(locale_time, utcFormats);\n    utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n    function newFormat(specifier, formats) {\n      return function (date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            n = specifier.length,\n            c,\n            pad,\n            format;\n        if (!(date instanceof Date)) date = new Date(+date);\n\n        while (++i < n) {\n          if (specifier.charCodeAt(i) === 37) {\n            string.push(specifier.slice(j, i));\n            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);else pad = c === \"e\" ? \" \" : \"0\";\n            if (format = formats[c]) c = format(date, pad);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(specifier.slice(j, i));\n        return string.join(\"\");\n      };\n    }\n\n    function newParse(specifier, Z) {\n      return function (string) {\n        var d = newDate(1900, undefined, 1),\n            i = parseSpecifier(d, specifier, string += \"\", 0),\n            week,\n            day;\n        if (i != string.length) return null; // If a UNIX timestamp is specified, return it.\n\n        if (\"Q\" in d) return new Date(d.Q);\n        if (\"s\" in d) return new Date(d.s * 1000 + (\"L\" in d ? d.L : 0)); // If this is utcParse, never use the local timezone.\n\n        if (Z && !(\"Z\" in d)) d.Z = 0; // The am-pm flag is 0 for AM, and 1 for PM.\n\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12; // If the month was not specified, inherit from the quarter.\n\n        if (d.m === undefined) d.m = \"q\" in d ? d.q : 0; // Convert day-of-week and week-of-year to day-of-year.\n\n        if (\"V\" in d) {\n          if (d.V < 1 || d.V > 53) return null;\n          if (!(\"w\" in d)) d.w = 1;\n\n          if (\"Z\" in d) {\n            week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();\n            week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n            week = utcDay$1.offset(week, (d.V - 1) * 7);\n            d.y = week.getUTCFullYear();\n            d.m = week.getUTCMonth();\n            d.d = week.getUTCDate() + (d.w + 6) % 7;\n          } else {\n            week = localDate(newDate(d.y, 0, 1)), day = week.getDay();\n            week = day > 4 || day === 0 ? monday.ceil(week) : monday(week);\n            week = timeDay.offset(week, (d.V - 1) * 7);\n            d.y = week.getFullYear();\n            d.m = week.getMonth();\n            d.d = week.getDate() + (d.w + 6) % 7;\n          }\n        } else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n          day = \"Z\" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();\n          d.m = 0;\n          d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n        } // If a time zone is specified, all fields are interpreted as UTC and then\n        // offset according to the specified time zone.\n\n\n        if (\"Z\" in d) {\n          d.H += d.Z / 100 | 0;\n          d.M += d.Z % 100;\n          return utcDate(d);\n        } // Otherwise, all fields are in local time.\n\n\n        return localDate(d);\n      };\n    }\n\n    function parseSpecifier(d, specifier, string, j) {\n      var i = 0,\n          n = specifier.length,\n          m = string.length,\n          c,\n          parse;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = specifier.charCodeAt(i++);\n\n        if (c === 37) {\n          c = specifier.charAt(i++);\n          parse = parses[c in pads ? specifier.charAt(i++) : c];\n          if (!parse || (j = parse(d, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    function parsePeriod(d, string, i) {\n      var n = periodRe.exec(string.slice(i));\n      return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function parseShortWeekday(d, string, i) {\n      var n = shortWeekdayRe.exec(string.slice(i));\n      return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function parseWeekday(d, string, i) {\n      var n = weekdayRe.exec(string.slice(i));\n      return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function parseShortMonth(d, string, i) {\n      var n = shortMonthRe.exec(string.slice(i));\n      return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function parseMonth(d, string, i) {\n      var n = monthRe.exec(string.slice(i));\n      return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function parseLocaleDateTime(d, string, i) {\n      return parseSpecifier(d, locale_dateTime, string, i);\n    }\n\n    function parseLocaleDate(d, string, i) {\n      return parseSpecifier(d, locale_date, string, i);\n    }\n\n    function parseLocaleTime(d, string, i) {\n      return parseSpecifier(d, locale_time, string, i);\n    }\n\n    function formatShortWeekday(d) {\n      return locale_shortWeekdays[d.getDay()];\n    }\n\n    function formatWeekday(d) {\n      return locale_weekdays[d.getDay()];\n    }\n\n    function formatShortMonth(d) {\n      return locale_shortMonths[d.getMonth()];\n    }\n\n    function formatMonth(d) {\n      return locale_months[d.getMonth()];\n    }\n\n    function formatPeriod(d) {\n      return locale_periods[+(d.getHours() >= 12)];\n    }\n\n    function formatQuarter(d) {\n      return 1 + ~~(d.getMonth() / 3);\n    }\n\n    function formatUTCShortWeekday(d) {\n      return locale_shortWeekdays[d.getUTCDay()];\n    }\n\n    function formatUTCWeekday(d) {\n      return locale_weekdays[d.getUTCDay()];\n    }\n\n    function formatUTCShortMonth(d) {\n      return locale_shortMonths[d.getUTCMonth()];\n    }\n\n    function formatUTCMonth(d) {\n      return locale_months[d.getUTCMonth()];\n    }\n\n    function formatUTCPeriod(d) {\n      return locale_periods[+(d.getUTCHours() >= 12)];\n    }\n\n    function formatUTCQuarter(d) {\n      return 1 + ~~(d.getUTCMonth() / 3);\n    }\n\n    return {\n      format: function format(specifier) {\n        var f = newFormat(specifier += \"\", formats);\n\n        f.toString = function () {\n          return specifier;\n        };\n\n        return f;\n      },\n      parse: function parse(specifier) {\n        var p = newParse(specifier += \"\", false);\n\n        p.toString = function () {\n          return specifier;\n        };\n\n        return p;\n      },\n      utcFormat: function utcFormat(specifier) {\n        var f = newFormat(specifier += \"\", utcFormats);\n\n        f.toString = function () {\n          return specifier;\n        };\n\n        return f;\n      },\n      utcParse: function utcParse(specifier) {\n        var p = newParse(specifier += \"\", true);\n\n        p.toString = function () {\n          return specifier;\n        };\n\n        return p;\n      }\n    };\n  }\n\n  var pads = {\n    \"-\": \"\",\n    \"_\": \" \",\n    \"0\": \"0\"\n  },\n      numberRe = /^\\s*\\d+/,\n      // note: ignores next directive\n  percentRe = /^%/,\n      requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\n  function pad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function requote(s) {\n    return s.replace(requoteRe, \"\\\\$&\");\n  }\n\n  function formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function formatLookup(names) {\n    return new Map(names.map(function (name, i) {\n      return [name.toLowerCase(), i];\n    }));\n  }\n\n  function parseWeekdayNumberSunday(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekdayNumberMonday(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.u = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberSunday(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberISO(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.V = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberMonday(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseFullYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 4));\n    return n ? (d.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n  }\n\n  function parseZone(d, string, i) {\n    var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n    return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n  }\n\n  function parseQuarter(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;\n  }\n\n  function parseMonthNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function parseDayOfMonth(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseDayOfYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseHour24(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMinutes(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseSeconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMilliseconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMicroseconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 6));\n    return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n  }\n\n  function parseLiteralPercent(d, string, i) {\n    var n = percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function parseUnixTimestamp(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.Q = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseUnixTimestampSeconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.s = +n[0], i + n[0].length) : -1;\n  }\n\n  function formatDayOfMonth(d, p) {\n    return pad(d.getDate(), p, 2);\n  }\n\n  function formatHour24(d, p) {\n    return pad(d.getHours(), p, 2);\n  }\n\n  function formatHour12(d, p) {\n    return pad(d.getHours() % 12 || 12, p, 2);\n  }\n\n  function formatDayOfYear(d, p) {\n    return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n  }\n\n  function formatMilliseconds(d, p) {\n    return pad(d.getMilliseconds(), p, 3);\n  }\n\n  function formatMicroseconds(d, p) {\n    return formatMilliseconds(d, p) + \"000\";\n  }\n\n  function formatMonthNumber(d, p) {\n    return pad(d.getMonth() + 1, p, 2);\n  }\n\n  function formatMinutes(d, p) {\n    return pad(d.getMinutes(), p, 2);\n  }\n\n  function formatSeconds(d, p) {\n    return pad(d.getSeconds(), p, 2);\n  }\n\n  function formatWeekdayNumberMonday(d) {\n    var day = d.getDay();\n    return day === 0 ? 7 : day;\n  }\n\n  function formatWeekNumberSunday(d, p) {\n    return pad(sunday.count(timeYear(d) - 1, d), p, 2);\n  }\n\n  function dISO(d) {\n    var day = d.getDay();\n    return day >= 4 || day === 0 ? thursday(d) : thursday.ceil(d);\n  }\n\n  function formatWeekNumberISO(d, p) {\n    d = dISO(d);\n    return pad(thursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n  }\n\n  function formatWeekdayNumberSunday(d) {\n    return d.getDay();\n  }\n\n  function formatWeekNumberMonday(d, p) {\n    return pad(monday.count(timeYear(d) - 1, d), p, 2);\n  }\n\n  function formatYear(d, p) {\n    return pad(d.getFullYear() % 100, p, 2);\n  }\n\n  function formatYearISO(d, p) {\n    d = dISO(d);\n    return pad(d.getFullYear() % 100, p, 2);\n  }\n\n  function formatFullYear(d, p) {\n    return pad(d.getFullYear() % 10000, p, 4);\n  }\n\n  function formatFullYearISO(d, p) {\n    var day = d.getDay();\n    d = day >= 4 || day === 0 ? thursday(d) : thursday.ceil(d);\n    return pad(d.getFullYear() % 10000, p, 4);\n  }\n\n  function formatZone(d) {\n    var z = d.getTimezoneOffset();\n    return (z > 0 ? \"-\" : (z *= -1, \"+\")) + pad(z / 60 | 0, \"0\", 2) + pad(z % 60, \"0\", 2);\n  }\n\n  function formatUTCDayOfMonth(d, p) {\n    return pad(d.getUTCDate(), p, 2);\n  }\n\n  function formatUTCHour24(d, p) {\n    return pad(d.getUTCHours(), p, 2);\n  }\n\n  function formatUTCHour12(d, p) {\n    return pad(d.getUTCHours() % 12 || 12, p, 2);\n  }\n\n  function formatUTCDayOfYear(d, p) {\n    return pad(1 + utcDay$1.count(utcYear$1(d), d), p, 3);\n  }\n\n  function formatUTCMilliseconds(d, p) {\n    return pad(d.getUTCMilliseconds(), p, 3);\n  }\n\n  function formatUTCMicroseconds(d, p) {\n    return formatUTCMilliseconds(d, p) + \"000\";\n  }\n\n  function formatUTCMonthNumber(d, p) {\n    return pad(d.getUTCMonth() + 1, p, 2);\n  }\n\n  function formatUTCMinutes(d, p) {\n    return pad(d.getUTCMinutes(), p, 2);\n  }\n\n  function formatUTCSeconds(d, p) {\n    return pad(d.getUTCSeconds(), p, 2);\n  }\n\n  function formatUTCWeekdayNumberMonday(d) {\n    var dow = d.getUTCDay();\n    return dow === 0 ? 7 : dow;\n  }\n\n  function formatUTCWeekNumberSunday(d, p) {\n    return pad(utcSunday.count(utcYear$1(d) - 1, d), p, 2);\n  }\n\n  function UTCdISO(d) {\n    var day = d.getUTCDay();\n    return day >= 4 || day === 0 ? utcThursday(d) : utcThursday.ceil(d);\n  }\n\n  function formatUTCWeekNumberISO(d, p) {\n    d = UTCdISO(d);\n    return pad(utcThursday.count(utcYear$1(d), d) + (utcYear$1(d).getUTCDay() === 4), p, 2);\n  }\n\n  function formatUTCWeekdayNumberSunday(d) {\n    return d.getUTCDay();\n  }\n\n  function formatUTCWeekNumberMonday(d, p) {\n    return pad(utcMonday.count(utcYear$1(d) - 1, d), p, 2);\n  }\n\n  function formatUTCYear(d, p) {\n    return pad(d.getUTCFullYear() % 100, p, 2);\n  }\n\n  function formatUTCYearISO(d, p) {\n    d = UTCdISO(d);\n    return pad(d.getUTCFullYear() % 100, p, 2);\n  }\n\n  function formatUTCFullYear(d, p) {\n    return pad(d.getUTCFullYear() % 10000, p, 4);\n  }\n\n  function formatUTCFullYearISO(d, p) {\n    var day = d.getUTCDay();\n    d = day >= 4 || day === 0 ? utcThursday(d) : utcThursday.ceil(d);\n    return pad(d.getUTCFullYear() % 10000, p, 4);\n  }\n\n  function formatUTCZone() {\n    return \"+0000\";\n  }\n\n  function formatLiteralPercent() {\n    return \"%\";\n  }\n\n  function formatUnixTimestamp(d) {\n    return +d;\n  }\n\n  function formatUnixTimestampSeconds(d) {\n    return Math.floor(+d / 1000);\n  }\n\n  var locale;\n  exports.timeFormat = void 0;\n  exports.timeParse = void 0;\n  exports.utcFormat = void 0;\n  exports.utcParse = void 0;\n  defaultLocale({\n    dateTime: \"%x, %X\",\n    date: \"%-m/%-d/%Y\",\n    time: \"%-I:%M:%S %p\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n\n  function defaultLocale(definition) {\n    locale = formatLocale(definition);\n    exports.timeFormat = locale.format;\n    exports.timeParse = locale.parse;\n    exports.utcFormat = locale.utcFormat;\n    exports.utcParse = locale.utcParse;\n    return locale;\n  }\n\n  var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\n  function formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  var formatIso = Date.prototype.toISOString ? formatIsoNative : exports.utcFormat(isoSpecifier);\n  var formatIso$1 = formatIso;\n\n  function parseIsoNative(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  }\n\n  var parseIso = +new Date(\"2000-01-01T00:00:00.000Z\") ? parseIsoNative : exports.utcParse(isoSpecifier);\n  var parseIso$1 = parseIso;\n\n  function date(t) {\n    return new Date(t);\n  }\n\n  function number(t) {\n    return t instanceof Date ? +t : +new Date(+t);\n  }\n\n  function calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {\n    var scale = continuous(),\n        invert = scale.invert,\n        domain = scale.domain;\n    var formatMillisecond = format(\".%L\"),\n        formatSecond = format(\":%S\"),\n        formatMinute = format(\"%I:%M\"),\n        formatHour = format(\"%I %p\"),\n        formatDay = format(\"%a %d\"),\n        formatWeek = format(\"%b %d\"),\n        formatMonth = format(\"%B\"),\n        formatYear = format(\"%Y\");\n\n    function tickFormat(date) {\n      return (second(date) < date ? formatMillisecond : minute(date) < date ? formatSecond : hour(date) < date ? formatMinute : day(date) < date ? formatHour : month(date) < date ? week(date) < date ? formatDay : formatWeek : year(date) < date ? formatMonth : formatYear)(date);\n    }\n\n    scale.invert = function (y) {\n      return new Date(invert(y));\n    };\n\n    scale.domain = function (_) {\n      return arguments.length ? domain(Array.from(_, number)) : domain().map(date);\n    };\n\n    scale.ticks = function (interval) {\n      var d = domain();\n      return ticks(d[0], d[d.length - 1], interval == null ? 10 : interval);\n    };\n\n    scale.tickFormat = function (count, specifier) {\n      return specifier == null ? tickFormat : format(specifier);\n    };\n\n    scale.nice = function (interval) {\n      var d = domain();\n      if (!interval || typeof interval.range !== \"function\") interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);\n      return interval ? domain(nice(d, interval)) : scale;\n    };\n\n    scale.copy = function () {\n      return copy$1(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));\n    };\n\n    return scale;\n  }\n\n  function time() {\n    return initRange.apply(calendar(timeTicks, timeTickInterval, timeYear, timeMonth, sunday, timeDay, timeHour, timeMinute, utcSecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n  }\n\n  function utcTime() {\n    return initRange.apply(calendar(utcTicks, utcTickInterval, utcYear$1, utcMonth$1, utcSunday, utcDay$1, utcHour$1, utcMinute$1, utcSecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n  }\n\n  function transformer$1() {\n    var x0 = 0,\n        x1 = 1,\n        t0,\n        t1,\n        k10,\n        transform,\n        interpolator = identity$3,\n        clamp = false,\n        unknown;\n\n    function scale(x) {\n      return x == null || isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n    }\n\n    scale.domain = function (_) {\n      var _ref38, _ref39;\n\n      return arguments.length ? ((_ref38 = _, _ref39 = _slicedToArray(_ref38, 2), x0 = _ref39[0], x1 = _ref39[1], _ref38), t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n    };\n\n    scale.clamp = function (_) {\n      return arguments.length ? (clamp = !!_, scale) : clamp;\n    };\n\n    scale.interpolator = function (_) {\n      return arguments.length ? (interpolator = _, scale) : interpolator;\n    };\n\n    function range(interpolate) {\n      return function (_) {\n        var _ref40, _ref41;\n\n        var r0, r1;\n        return arguments.length ? ((_ref40 = _, _ref41 = _slicedToArray(_ref40, 2), r0 = _ref41[0], r1 = _ref41[1], _ref40), interpolator = interpolate(r0, r1), scale) : [interpolator(0), interpolator(1)];\n      };\n    }\n\n    scale.range = range(interpolate$2);\n    scale.rangeRound = range(interpolateRound);\n\n    scale.unknown = function (_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n\n    return function (t) {\n      transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n      return scale;\n    };\n  }\n\n  function copy(source, target) {\n    return target.domain(source.domain()).interpolator(source.interpolator()).clamp(source.clamp()).unknown(source.unknown());\n  }\n\n  function sequential() {\n    var scale = linearish(transformer$1()(identity$3));\n\n    scale.copy = function () {\n      return copy(scale, sequential());\n    };\n\n    return initInterpolator.apply(scale, arguments);\n  }\n\n  function sequentialLog() {\n    var scale = loggish(transformer$1()).domain([1, 10]);\n\n    scale.copy = function () {\n      return copy(scale, sequentialLog()).base(scale.base());\n    };\n\n    return initInterpolator.apply(scale, arguments);\n  }\n\n  function sequentialSymlog() {\n    var scale = symlogish(transformer$1());\n\n    scale.copy = function () {\n      return copy(scale, sequentialSymlog()).constant(scale.constant());\n    };\n\n    return initInterpolator.apply(scale, arguments);\n  }\n\n  function sequentialPow() {\n    var scale = powish(transformer$1());\n\n    scale.copy = function () {\n      return copy(scale, sequentialPow()).exponent(scale.exponent());\n    };\n\n    return initInterpolator.apply(scale, arguments);\n  }\n\n  function sequentialSqrt() {\n    return sequentialPow.apply(null, arguments).exponent(0.5);\n  }\n\n  function sequentialQuantile() {\n    var domain = [],\n        interpolator = identity$3;\n\n    function scale(x) {\n      if (x != null && !isNaN(x = +x)) return interpolator((bisect(domain, x, 1) - 1) / (domain.length - 1));\n    }\n\n    scale.domain = function (_) {\n      if (!arguments.length) return domain.slice();\n      domain = [];\n\n      var _iterator61 = _createForOfIteratorHelper(_),\n          _step63;\n\n      try {\n        for (_iterator61.s(); !(_step63 = _iterator61.n()).done;) {\n          var d = _step63.value;\n          if (d != null && !isNaN(d = +d)) domain.push(d);\n        }\n      } catch (err) {\n        _iterator61.e(err);\n      } finally {\n        _iterator61.f();\n      }\n\n      domain.sort(ascending$3);\n      return scale;\n    };\n\n    scale.interpolator = function (_) {\n      return arguments.length ? (interpolator = _, scale) : interpolator;\n    };\n\n    scale.range = function () {\n      return domain.map(function (d, i) {\n        return interpolator(i / (domain.length - 1));\n      });\n    };\n\n    scale.quantiles = function (n) {\n      return Array.from({\n        length: n + 1\n      }, function (_, i) {\n        return quantile$1(domain, i / n);\n      });\n    };\n\n    scale.copy = function () {\n      return sequentialQuantile(interpolator).domain(domain);\n    };\n\n    return initInterpolator.apply(scale, arguments);\n  }\n\n  function transformer() {\n    var x0 = 0,\n        x1 = 0.5,\n        x2 = 1,\n        s = 1,\n        t0,\n        t1,\n        t2,\n        k10,\n        k21,\n        interpolator = identity$3,\n        transform,\n        clamp = false,\n        unknown;\n\n    function scale(x) {\n      return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (s * x < s * t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n    }\n\n    scale.domain = function (_) {\n      var _ref42, _ref43;\n\n      return arguments.length ? ((_ref42 = _, _ref43 = _slicedToArray(_ref42, 3), x0 = _ref43[0], x1 = _ref43[1], x2 = _ref43[2], _ref42), t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), t2 = transform(x2 = +x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1, scale) : [x0, x1, x2];\n    };\n\n    scale.clamp = function (_) {\n      return arguments.length ? (clamp = !!_, scale) : clamp;\n    };\n\n    scale.interpolator = function (_) {\n      return arguments.length ? (interpolator = _, scale) : interpolator;\n    };\n\n    function range(interpolate) {\n      return function (_) {\n        var _ref44, _ref45;\n\n        var r0, r1, r2;\n        return arguments.length ? ((_ref44 = _, _ref45 = _slicedToArray(_ref44, 3), r0 = _ref45[0], r1 = _ref45[1], r2 = _ref45[2], _ref44), interpolator = piecewise(interpolate, [r0, r1, r2]), scale) : [interpolator(0), interpolator(0.5), interpolator(1)];\n      };\n    }\n\n    scale.range = range(interpolate$2);\n    scale.rangeRound = range(interpolateRound);\n\n    scale.unknown = function (_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n\n    return function (t) {\n      transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1;\n      return scale;\n    };\n  }\n\n  function diverging$1() {\n    var scale = linearish(transformer()(identity$3));\n\n    scale.copy = function () {\n      return copy(scale, diverging$1());\n    };\n\n    return initInterpolator.apply(scale, arguments);\n  }\n\n  function divergingLog() {\n    var scale = loggish(transformer()).domain([0.1, 1, 10]);\n\n    scale.copy = function () {\n      return copy(scale, divergingLog()).base(scale.base());\n    };\n\n    return initInterpolator.apply(scale, arguments);\n  }\n\n  function divergingSymlog() {\n    var scale = symlogish(transformer());\n\n    scale.copy = function () {\n      return copy(scale, divergingSymlog()).constant(scale.constant());\n    };\n\n    return initInterpolator.apply(scale, arguments);\n  }\n\n  function divergingPow() {\n    var scale = powish(transformer());\n\n    scale.copy = function () {\n      return copy(scale, divergingPow()).exponent(scale.exponent());\n    };\n\n    return initInterpolator.apply(scale, arguments);\n  }\n\n  function divergingSqrt() {\n    return divergingPow.apply(null, arguments).exponent(0.5);\n  }\n\n  function colors(specifier) {\n    var n = specifier.length / 6 | 0,\n        colors = new Array(n),\n        i = 0;\n\n    while (i < n) {\n      colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n    }\n\n    return colors;\n  }\n\n  var category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n  var Accent = colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n  var Dark2 = colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n  var Paired = colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n  var Pastel1 = colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n  var Pastel2 = colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n  var Set1 = colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n  var Set2 = colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n  var Set3 = colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n  var Tableau10 = colors(\"4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab\");\n\n  var ramp$1 = function ramp$1(scheme) {\n    return rgbBasis(scheme[scheme.length - 1]);\n  };\n\n  var scheme$q = new Array(3).concat(\"d8b365f5f5f55ab4ac\", \"a6611adfc27d80cdc1018571\", \"a6611adfc27df5f5f580cdc1018571\", \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\", \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\", \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\", \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\", \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\", \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\").map(colors);\n  var BrBG = ramp$1(scheme$q);\n  var scheme$p = new Array(3).concat(\"af8dc3f7f7f77fbf7b\", \"7b3294c2a5cfa6dba0008837\", \"7b3294c2a5cff7f7f7a6dba0008837\", \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\", \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\", \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\", \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\", \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\", \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\").map(colors);\n  var PRGn = ramp$1(scheme$p);\n  var scheme$o = new Array(3).concat(\"e9a3c9f7f7f7a1d76a\", \"d01c8bf1b6dab8e1864dac26\", \"d01c8bf1b6daf7f7f7b8e1864dac26\", \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\", \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\", \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\", \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\", \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\", \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\").map(colors);\n  var PiYG = ramp$1(scheme$o);\n  var scheme$n = new Array(3).concat(\"998ec3f7f7f7f1a340\", \"5e3c99b2abd2fdb863e66101\", \"5e3c99b2abd2f7f7f7fdb863e66101\", \"542788998ec3d8daebfee0b6f1a340b35806\", \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\", \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\", \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\", \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\", \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\").map(colors);\n  var PuOr = ramp$1(scheme$n);\n  var scheme$m = new Array(3).concat(\"ef8a62f7f7f767a9cf\", \"ca0020f4a58292c5de0571b0\", \"ca0020f4a582f7f7f792c5de0571b0\", \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\", \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\", \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\", \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\", \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\", \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\").map(colors);\n  var RdBu = ramp$1(scheme$m);\n  var scheme$l = new Array(3).concat(\"ef8a62ffffff999999\", \"ca0020f4a582bababa404040\", \"ca0020f4a582ffffffbababa404040\", \"b2182bef8a62fddbc7e0e0e09999994d4d4d\", \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\", \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\", \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\", \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\", \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\").map(colors);\n  var RdGy = ramp$1(scheme$l);\n  var scheme$k = new Array(3).concat(\"fc8d59ffffbf91bfdb\", \"d7191cfdae61abd9e92c7bb6\", \"d7191cfdae61ffffbfabd9e92c7bb6\", \"d73027fc8d59fee090e0f3f891bfdb4575b4\", \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\", \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\", \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\", \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\", \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\").map(colors);\n  var RdYlBu = ramp$1(scheme$k);\n  var scheme$j = new Array(3).concat(\"fc8d59ffffbf91cf60\", \"d7191cfdae61a6d96a1a9641\", \"d7191cfdae61ffffbfa6d96a1a9641\", \"d73027fc8d59fee08bd9ef8b91cf601a9850\", \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\", \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\", \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\", \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\", \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\").map(colors);\n  var RdYlGn = ramp$1(scheme$j);\n  var scheme$i = new Array(3).concat(\"fc8d59ffffbf99d594\", \"d7191cfdae61abdda42b83ba\", \"d7191cfdae61ffffbfabdda42b83ba\", \"d53e4ffc8d59fee08be6f59899d5943288bd\", \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\", \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\", \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\", \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\", \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\").map(colors);\n  var Spectral = ramp$1(scheme$i);\n  var scheme$h = new Array(3).concat(\"e5f5f999d8c92ca25f\", \"edf8fbb2e2e266c2a4238b45\", \"edf8fbb2e2e266c2a42ca25f006d2c\", \"edf8fbccece699d8c966c2a42ca25f006d2c\", \"edf8fbccece699d8c966c2a441ae76238b45005824\", \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\", \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\").map(colors);\n  var BuGn = ramp$1(scheme$h);\n  var scheme$g = new Array(3).concat(\"e0ecf49ebcda8856a7\", \"edf8fbb3cde38c96c688419d\", \"edf8fbb3cde38c96c68856a7810f7c\", \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\", \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\", \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\", \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\").map(colors);\n  var BuPu = ramp$1(scheme$g);\n  var scheme$f = new Array(3).concat(\"e0f3dba8ddb543a2ca\", \"f0f9e8bae4bc7bccc42b8cbe\", \"f0f9e8bae4bc7bccc443a2ca0868ac\", \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\", \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\", \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\", \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\").map(colors);\n  var GnBu = ramp$1(scheme$f);\n  var scheme$e = new Array(3).concat(\"fee8c8fdbb84e34a33\", \"fef0d9fdcc8afc8d59d7301f\", \"fef0d9fdcc8afc8d59e34a33b30000\", \"fef0d9fdd49efdbb84fc8d59e34a33b30000\", \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\", \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\", \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\").map(colors);\n  var OrRd = ramp$1(scheme$e);\n  var scheme$d = new Array(3).concat(\"ece2f0a6bddb1c9099\", \"f6eff7bdc9e167a9cf02818a\", \"f6eff7bdc9e167a9cf1c9099016c59\", \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\", \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\", \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\", \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\").map(colors);\n  var PuBuGn = ramp$1(scheme$d);\n  var scheme$c = new Array(3).concat(\"ece7f2a6bddb2b8cbe\", \"f1eef6bdc9e174a9cf0570b0\", \"f1eef6bdc9e174a9cf2b8cbe045a8d\", \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\", \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\", \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\", \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\").map(colors);\n  var PuBu = ramp$1(scheme$c);\n  var scheme$b = new Array(3).concat(\"e7e1efc994c7dd1c77\", \"f1eef6d7b5d8df65b0ce1256\", \"f1eef6d7b5d8df65b0dd1c77980043\", \"f1eef6d4b9dac994c7df65b0dd1c77980043\", \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\", \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\", \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\").map(colors);\n  var PuRd = ramp$1(scheme$b);\n  var scheme$a = new Array(3).concat(\"fde0ddfa9fb5c51b8a\", \"feebe2fbb4b9f768a1ae017e\", \"feebe2fbb4b9f768a1c51b8a7a0177\", \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\", \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\", \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\", \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\").map(colors);\n  var RdPu = ramp$1(scheme$a);\n  var scheme$9 = new Array(3).concat(\"edf8b17fcdbb2c7fb8\", \"ffffcca1dab441b6c4225ea8\", \"ffffcca1dab441b6c42c7fb8253494\", \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\", \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\", \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\", \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\").map(colors);\n  var YlGnBu = ramp$1(scheme$9);\n  var scheme$8 = new Array(3).concat(\"f7fcb9addd8e31a354\", \"ffffccc2e69978c679238443\", \"ffffccc2e69978c67931a354006837\", \"ffffccd9f0a3addd8e78c67931a354006837\", \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\", \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\", \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\").map(colors);\n  var YlGn = ramp$1(scheme$8);\n  var scheme$7 = new Array(3).concat(\"fff7bcfec44fd95f0e\", \"ffffd4fed98efe9929cc4c02\", \"ffffd4fed98efe9929d95f0e993404\", \"ffffd4fee391fec44ffe9929d95f0e993404\", \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\", \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\", \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\").map(colors);\n  var YlOrBr = ramp$1(scheme$7);\n  var scheme$6 = new Array(3).concat(\"ffeda0feb24cf03b20\", \"ffffb2fecc5cfd8d3ce31a1c\", \"ffffb2fecc5cfd8d3cf03b20bd0026\", \"ffffb2fed976feb24cfd8d3cf03b20bd0026\", \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\", \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\", \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\").map(colors);\n  var YlOrRd = ramp$1(scheme$6);\n  var scheme$5 = new Array(3).concat(\"deebf79ecae13182bd\", \"eff3ffbdd7e76baed62171b5\", \"eff3ffbdd7e76baed63182bd08519c\", \"eff3ffc6dbef9ecae16baed63182bd08519c\", \"eff3ffc6dbef9ecae16baed64292c62171b5084594\", \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\", \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\").map(colors);\n  var Blues = ramp$1(scheme$5);\n  var scheme$4 = new Array(3).concat(\"e5f5e0a1d99b31a354\", \"edf8e9bae4b374c476238b45\", \"edf8e9bae4b374c47631a354006d2c\", \"edf8e9c7e9c0a1d99b74c47631a354006d2c\", \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\", \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\", \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\").map(colors);\n  var Greens = ramp$1(scheme$4);\n  var scheme$3 = new Array(3).concat(\"f0f0f0bdbdbd636363\", \"f7f7f7cccccc969696525252\", \"f7f7f7cccccc969696636363252525\", \"f7f7f7d9d9d9bdbdbd969696636363252525\", \"f7f7f7d9d9d9bdbdbd969696737373525252252525\", \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\", \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\").map(colors);\n  var Greys = ramp$1(scheme$3);\n  var scheme$2 = new Array(3).concat(\"efedf5bcbddc756bb1\", \"f2f0f7cbc9e29e9ac86a51a3\", \"f2f0f7cbc9e29e9ac8756bb154278f\", \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\", \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\", \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\", \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\").map(colors);\n  var Purples = ramp$1(scheme$2);\n  var scheme$1 = new Array(3).concat(\"fee0d2fc9272de2d26\", \"fee5d9fcae91fb6a4acb181d\", \"fee5d9fcae91fb6a4ade2d26a50f15\", \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\", \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\", \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\", \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\").map(colors);\n  var Reds = ramp$1(scheme$1);\n  var scheme = new Array(3).concat(\"fee6cefdae6be6550d\", \"feeddefdbe85fd8d3cd94701\", \"feeddefdbe85fd8d3ce6550da63603\", \"feeddefdd0a2fdae6bfd8d3ce6550da63603\", \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\", \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\", \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\").map(colors);\n  var Oranges = ramp$1(scheme);\n\n  function cividis(t) {\n    t = Math.max(0, Math.min(1, t));\n    return \"rgb(\" + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + \", \" + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + \", \" + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67))))))) + \")\";\n  }\n\n  var cubehelix = cubehelixLong(cubehelix$3(300, 0.5, 0.0), cubehelix$3(-240, 0.5, 1.0));\n  var warm = cubehelixLong(cubehelix$3(-100, 0.75, 0.35), cubehelix$3(80, 1.50, 0.8));\n  var cool = cubehelixLong(cubehelix$3(260, 0.75, 0.35), cubehelix$3(80, 1.50, 0.8));\n  var c$2 = cubehelix$3();\n\n  function rainbow(t) {\n    if (t < 0 || t > 1) t -= Math.floor(t);\n    var ts = Math.abs(t - 0.5);\n    c$2.h = 360 * t - 100;\n    c$2.s = 1.5 - 1.5 * ts;\n    c$2.l = 0.8 - 0.9 * ts;\n    return c$2 + \"\";\n  }\n\n  var c$1 = rgb(),\n      pi_1_3 = Math.PI / 3,\n      pi_2_3 = Math.PI * 2 / 3;\n\n  function sinebow(t) {\n    var x;\n    t = (0.5 - t) * Math.PI;\n    c$1.r = 255 * (x = Math.sin(t)) * x;\n    c$1.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n    c$1.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n    return c$1 + \"\";\n  }\n\n  function turbo(t) {\n    t = Math.max(0, Math.min(1, t));\n    return \"rgb(\" + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + \", \" + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + \", \" + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66))))))) + \")\";\n  }\n\n  function ramp(range) {\n    var n = range.length;\n    return function (t) {\n      return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n    };\n  }\n\n  var viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n  var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n  var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n  var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\n  function constant$1(x) {\n    return function constant() {\n      return x;\n    };\n  }\n\n  var abs = Math.abs;\n  var atan2 = Math.atan2;\n  var cos = Math.cos;\n  var max = Math.max;\n  var min = Math.min;\n  var sin = Math.sin;\n  var sqrt = Math.sqrt;\n  var epsilon = 1e-12;\n  var pi = Math.PI;\n  var halfPi = pi / 2;\n  var tau = 2 * pi;\n\n  function acos(x) {\n    return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n  }\n\n  function asin(x) {\n    return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n  }\n\n  function arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n\n  function arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n\n  function arcStartAngle(d) {\n    return d.startAngle;\n  }\n\n  function arcEndAngle(d) {\n    return d.endAngle;\n  }\n\n  function arcPadAngle(d) {\n    return d && d.padAngle; // Note: optional!\n  }\n\n  function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var x10 = x1 - x0,\n        y10 = y1 - y0,\n        x32 = x3 - x2,\n        y32 = y3 - y2,\n        t = y32 * x10 - x32 * y10;\n    if (t * t < epsilon) return;\n    t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n    return [x0 + t * x10, y0 + t * y10];\n  } // Compute perpendicular offset line of length rc.\n  // http://mathworld.wolfram.com/Circle-LineIntersection.html\n\n\n  function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n    var x01 = x0 - x1,\n        y01 = y0 - y1,\n        lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n        ox = lo * y01,\n        oy = -lo * x01,\n        x11 = x0 + ox,\n        y11 = y0 + oy,\n        x10 = x1 + ox,\n        y10 = y1 + oy,\n        x00 = (x11 + x10) / 2,\n        y00 = (y11 + y10) / 2,\n        dx = x10 - x11,\n        dy = y10 - y11,\n        d2 = dx * dx + dy * dy,\n        r = r1 - rc,\n        D = x11 * y10 - x10 * y11,\n        d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n        cx0 = (D * dy - dx * d) / d2,\n        cy0 = (-D * dx - dy * d) / d2,\n        cx1 = (D * dy + dx * d) / d2,\n        cy1 = (-D * dx + dy * d) / d2,\n        dx0 = cx0 - x00,\n        dy0 = cy0 - y00,\n        dx1 = cx1 - x00,\n        dy1 = cy1 - y00; // Pick the closer of the two intersection points.\n    // TODO Is there a faster way to determine which intersection to use?\n\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return {\n      cx: cx0,\n      cy: cy0,\n      x01: -ox,\n      y01: -oy,\n      x11: cx0 * (r1 / r - 1),\n      y11: cy0 * (r1 / r - 1)\n    };\n  }\n\n  function arc() {\n    var innerRadius = arcInnerRadius,\n        outerRadius = arcOuterRadius,\n        cornerRadius = constant$1(0),\n        padRadius = null,\n        startAngle = arcStartAngle,\n        endAngle = arcEndAngle,\n        padAngle = arcPadAngle,\n        context = null;\n\n    function arc() {\n      var buffer,\n          r,\n          r0 = +innerRadius.apply(this, arguments),\n          r1 = +outerRadius.apply(this, arguments),\n          a0 = startAngle.apply(this, arguments) - halfPi,\n          a1 = endAngle.apply(this, arguments) - halfPi,\n          da = abs(a1 - a0),\n          cw = a1 > a0;\n      if (!context) context = buffer = path(); // Ensure that the outer radius is always larger than the inner radius.\n\n      if (r1 < r0) r = r1, r1 = r0, r0 = r; // Is it a point?\n\n      if (!(r1 > epsilon)) context.moveTo(0, 0); // Or is it a circle or annulus?\n      else if (da > tau - epsilon) {\n          context.moveTo(r1 * cos(a0), r1 * sin(a0));\n          context.arc(0, 0, r1, a0, a1, !cw);\n\n          if (r0 > epsilon) {\n            context.moveTo(r0 * cos(a1), r0 * sin(a1));\n            context.arc(0, 0, r0, a1, a0, cw);\n          }\n        } // Or is it a circular or annular sector?\n        else {\n            var a01 = a0,\n                a11 = a1,\n                a00 = a0,\n                a10 = a1,\n                da0 = da,\n                da1 = da,\n                ap = padAngle.apply(this, arguments) / 2,\n                rp = ap > epsilon && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n                rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n                rc0 = rc,\n                rc1 = rc,\n                t0,\n                t1; // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\n            if (rp > epsilon) {\n              var p0 = asin(rp / r0 * sin(ap)),\n                  p1 = asin(rp / r1 * sin(ap));\n              if ((da0 -= p0 * 2) > epsilon) p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n              if ((da1 -= p1 * 2) > epsilon) p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n            }\n\n            var x01 = r1 * cos(a01),\n                y01 = r1 * sin(a01),\n                x10 = r0 * cos(a10),\n                y10 = r0 * sin(a10); // Apply rounded corners?\n\n            if (rc > epsilon) {\n              var x11 = r1 * cos(a11),\n                  y11 = r1 * sin(a11),\n                  x00 = r0 * cos(a00),\n                  y00 = r0 * sin(a00),\n                  oc; // Restrict the corner radius according to the sector angle.\n\n              if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n                var ax = x01 - oc[0],\n                    ay = y01 - oc[1],\n                    bx = x11 - oc[0],\n                    by = y11 - oc[1],\n                    kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n                    lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n                rc0 = min(rc, (r0 - lc) / (kc - 1));\n                rc1 = min(rc, (r1 - lc) / (kc + 1));\n              }\n            } // Is the sector collapsed to a line?\n\n\n            if (!(da1 > epsilon)) context.moveTo(x01, y01); // Does the sector’s outer ring have rounded corners?\n            else if (rc1 > epsilon) {\n                t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n                t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n                context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?\n\n                if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.\n                else {\n                    context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n                    context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n                    context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n                  }\n              } // Or is the outer ring just a circular arc?\n              else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw); // Is there no inner ring, and it’s a circular sector?\n            // Or perhaps it’s an annular sector collapsed due to padding?\n\n            if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10); // Does the sector’s inner ring (or point) have rounded corners?\n            else if (rc0 > epsilon) {\n                t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n                t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n                context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?\n\n                if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.\n                else {\n                    context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n                    context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n                    context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n                  }\n              } // Or is the inner ring just a circular arc?\n              else context.arc(0, 0, r0, a10, a00, cw);\n          }\n      context.closePath();\n      if (buffer) return context = null, buffer + \"\" || null;\n    }\n\n    arc.centroid = function () {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n          a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n      return [cos(a) * r, sin(a) * r];\n    };\n\n    arc.innerRadius = function (_) {\n      return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$1(+_), arc) : innerRadius;\n    };\n\n    arc.outerRadius = function (_) {\n      return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$1(+_), arc) : outerRadius;\n    };\n\n    arc.cornerRadius = function (_) {\n      return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$1(+_), arc) : cornerRadius;\n    };\n\n    arc.padRadius = function (_) {\n      return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$1(+_), arc) : padRadius;\n    };\n\n    arc.startAngle = function (_) {\n      return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$1(+_), arc) : startAngle;\n    };\n\n    arc.endAngle = function (_) {\n      return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$1(+_), arc) : endAngle;\n    };\n\n    arc.padAngle = function (_) {\n      return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$1(+_), arc) : padAngle;\n    };\n\n    arc.context = function (_) {\n      return arguments.length ? (context = _ == null ? null : _, arc) : context;\n    };\n\n    return arc;\n  }\n\n  var slice = Array.prototype.slice;\n\n  function array(x) {\n    return _typeof(x) === \"object\" && \"length\" in x ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n  }\n\n  function Linear(context) {\n    this._context = context;\n  }\n\n  Linear.prototype = {\n    areaStart: function areaStart() {\n      this._line = 0;\n    },\n    areaEnd: function areaEnd() {\n      this._line = NaN;\n    },\n    lineStart: function lineStart() {\n      this._point = 0;\n    },\n    lineEnd: function lineEnd() {\n      if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function point(x, y) {\n      x = +x, y = +y;\n\n      switch (this._point) {\n        case 0:\n          this._point = 1;\n          this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n          break;\n\n        case 1:\n          this._point = 2;\n        // falls through\n\n        default:\n          this._context.lineTo(x, y);\n\n          break;\n      }\n    }\n  };\n\n  function curveLinear(context) {\n    return new Linear(context);\n  }\n\n  function x(p) {\n    return p[0];\n  }\n\n  function y(p) {\n    return p[1];\n  }\n\n  function line(x$1, y$1) {\n    var defined = constant$1(true),\n        context = null,\n        curve = curveLinear,\n        output = null;\n    x$1 = typeof x$1 === \"function\" ? x$1 : x$1 === undefined ? x : constant$1(x$1);\n    y$1 = typeof y$1 === \"function\" ? y$1 : y$1 === undefined ? y : constant$1(y$1);\n\n    function line(data) {\n      var i,\n          n = (data = array(data)).length,\n          d,\n          defined0 = false,\n          buffer;\n      if (context == null) output = curve(buffer = path());\n\n      for (i = 0; i <= n; ++i) {\n        if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n          if (defined0 = !defined0) output.lineStart();else output.lineEnd();\n        }\n\n        if (defined0) output.point(+x$1(d, i, data), +y$1(d, i, data));\n      }\n\n      if (buffer) return output = null, buffer + \"\" || null;\n    }\n\n    line.x = function (_) {\n      return arguments.length ? (x$1 = typeof _ === \"function\" ? _ : constant$1(+_), line) : x$1;\n    };\n\n    line.y = function (_) {\n      return arguments.length ? (y$1 = typeof _ === \"function\" ? _ : constant$1(+_), line) : y$1;\n    };\n\n    line.defined = function (_) {\n      return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$1(!!_), line) : defined;\n    };\n\n    line.curve = function (_) {\n      return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n    };\n\n    line.context = function (_) {\n      return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n    };\n\n    return line;\n  }\n\n  function area(x0, y0, y1) {\n    var x1 = null,\n        defined = constant$1(true),\n        context = null,\n        curve = curveLinear,\n        output = null;\n    x0 = typeof x0 === \"function\" ? x0 : x0 === undefined ? x : constant$1(+x0);\n    y0 = typeof y0 === \"function\" ? y0 : y0 === undefined ? constant$1(0) : constant$1(+y0);\n    y1 = typeof y1 === \"function\" ? y1 : y1 === undefined ? y : constant$1(+y1);\n\n    function area(data) {\n      var i,\n          j,\n          k,\n          n = (data = array(data)).length,\n          d,\n          defined0 = false,\n          buffer,\n          x0z = new Array(n),\n          y0z = new Array(n);\n      if (context == null) output = curve(buffer = path());\n\n      for (i = 0; i <= n; ++i) {\n        if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n          if (defined0 = !defined0) {\n            j = i;\n            output.areaStart();\n            output.lineStart();\n          } else {\n            output.lineEnd();\n            output.lineStart();\n\n            for (k = i - 1; k >= j; --k) {\n              output.point(x0z[k], y0z[k]);\n            }\n\n            output.lineEnd();\n            output.areaEnd();\n          }\n        }\n\n        if (defined0) {\n          x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n          output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n        }\n      }\n\n      if (buffer) return output = null, buffer + \"\" || null;\n    }\n\n    function arealine() {\n      return line().defined(defined).curve(curve).context(context);\n    }\n\n    area.x = function (_) {\n      return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$1(+_), x1 = null, area) : x0;\n    };\n\n    area.x0 = function (_) {\n      return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$1(+_), area) : x0;\n    };\n\n    area.x1 = function (_) {\n      return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$1(+_), area) : x1;\n    };\n\n    area.y = function (_) {\n      return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$1(+_), y1 = null, area) : y0;\n    };\n\n    area.y0 = function (_) {\n      return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$1(+_), area) : y0;\n    };\n\n    area.y1 = function (_) {\n      return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$1(+_), area) : y1;\n    };\n\n    area.lineX0 = area.lineY0 = function () {\n      return arealine().x(x0).y(y0);\n    };\n\n    area.lineY1 = function () {\n      return arealine().x(x0).y(y1);\n    };\n\n    area.lineX1 = function () {\n      return arealine().x(x1).y(y0);\n    };\n\n    area.defined = function (_) {\n      return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$1(!!_), area) : defined;\n    };\n\n    area.curve = function (_) {\n      return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n    };\n\n    area.context = function (_) {\n      return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n    };\n\n    return area;\n  }\n\n  function descending$1(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function identity$1(d) {\n    return d;\n  }\n\n  function pie() {\n    var value = identity$1,\n        sortValues = descending$1,\n        sort = null,\n        startAngle = constant$1(0),\n        endAngle = constant$1(tau),\n        padAngle = constant$1(0);\n\n    function pie(data) {\n      var i,\n          n = (data = array(data)).length,\n          j,\n          k,\n          sum = 0,\n          index = new Array(n),\n          arcs = new Array(n),\n          a0 = +startAngle.apply(this, arguments),\n          da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n          a1,\n          p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n          pa = p * (da < 0 ? -1 : 1),\n          v;\n\n      for (i = 0; i < n; ++i) {\n        if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n          sum += v;\n        }\n      } // Optionally sort the arcs by previously-computed values or by data.\n\n\n      if (sortValues != null) index.sort(function (i, j) {\n        return sortValues(arcs[i], arcs[j]);\n      });else if (sort != null) index.sort(function (i, j) {\n        return sort(data[i], data[j]);\n      }); // Compute the arcs! They are stored in the original data's order.\n\n      for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n        j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n          data: data[j],\n          index: i,\n          value: v,\n          startAngle: a0,\n          endAngle: a1,\n          padAngle: p\n        };\n      }\n\n      return arcs;\n    }\n\n    pie.value = function (_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(+_), pie) : value;\n    };\n\n    pie.sortValues = function (_) {\n      return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n    };\n\n    pie.sort = function (_) {\n      return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n    };\n\n    pie.startAngle = function (_) {\n      return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$1(+_), pie) : startAngle;\n    };\n\n    pie.endAngle = function (_) {\n      return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$1(+_), pie) : endAngle;\n    };\n\n    pie.padAngle = function (_) {\n      return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$1(+_), pie) : padAngle;\n    };\n\n    return pie;\n  }\n\n  var curveRadialLinear = curveRadial$1(curveLinear);\n\n  function Radial(curve) {\n    this._curve = curve;\n  }\n\n  Radial.prototype = {\n    areaStart: function areaStart() {\n      this._curve.areaStart();\n    },\n    areaEnd: function areaEnd() {\n      this._curve.areaEnd();\n    },\n    lineStart: function lineStart() {\n      this._curve.lineStart();\n    },\n    lineEnd: function lineEnd() {\n      this._curve.lineEnd();\n    },\n    point: function point(a, r) {\n      this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n    }\n  };\n\n  function curveRadial$1(curve) {\n    function radial(context) {\n      return new Radial(curve(context));\n    }\n\n    radial._curve = curve;\n    return radial;\n  }\n\n  function lineRadial(l) {\n    var c = l.curve;\n    l.angle = l.x, delete l.x;\n    l.radius = l.y, delete l.y;\n\n    l.curve = function (_) {\n      return arguments.length ? c(curveRadial$1(_)) : c()._curve;\n    };\n\n    return l;\n  }\n\n  function lineRadial$1() {\n    return lineRadial(line().curve(curveRadialLinear));\n  }\n\n  function areaRadial() {\n    var a = area().curve(curveRadialLinear),\n        c = a.curve,\n        x0 = a.lineX0,\n        x1 = a.lineX1,\n        y0 = a.lineY0,\n        y1 = a.lineY1;\n    a.angle = a.x, delete a.x;\n    a.startAngle = a.x0, delete a.x0;\n    a.endAngle = a.x1, delete a.x1;\n    a.radius = a.y, delete a.y;\n    a.innerRadius = a.y0, delete a.y0;\n    a.outerRadius = a.y1, delete a.y1;\n    a.lineStartAngle = function () {\n      return lineRadial(x0());\n    }, delete a.lineX0;\n    a.lineEndAngle = function () {\n      return lineRadial(x1());\n    }, delete a.lineX1;\n    a.lineInnerRadius = function () {\n      return lineRadial(y0());\n    }, delete a.lineY0;\n    a.lineOuterRadius = function () {\n      return lineRadial(y1());\n    }, delete a.lineY1;\n\n    a.curve = function (_) {\n      return arguments.length ? c(curveRadial$1(_)) : c()._curve;\n    };\n\n    return a;\n  }\n\n  function pointRadial(x, y) {\n    return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n  }\n\n  function linkSource(d) {\n    return d.source;\n  }\n\n  function linkTarget(d) {\n    return d.target;\n  }\n\n  function link(curve) {\n    var source = linkSource,\n        target = linkTarget,\n        x$1 = x,\n        y$1 = y,\n        context = null;\n\n    function link() {\n      var buffer,\n          argv = slice.call(arguments),\n          s = source.apply(this, argv),\n          t = target.apply(this, argv);\n      if (!context) context = buffer = path();\n      curve(context, +x$1.apply(this, (argv[0] = s, argv)), +y$1.apply(this, argv), +x$1.apply(this, (argv[0] = t, argv)), +y$1.apply(this, argv));\n      if (buffer) return context = null, buffer + \"\" || null;\n    }\n\n    link.source = function (_) {\n      return arguments.length ? (source = _, link) : source;\n    };\n\n    link.target = function (_) {\n      return arguments.length ? (target = _, link) : target;\n    };\n\n    link.x = function (_) {\n      return arguments.length ? (x$1 = typeof _ === \"function\" ? _ : constant$1(+_), link) : x$1;\n    };\n\n    link.y = function (_) {\n      return arguments.length ? (y$1 = typeof _ === \"function\" ? _ : constant$1(+_), link) : y$1;\n    };\n\n    link.context = function (_) {\n      return arguments.length ? (context = _ == null ? null : _, link) : context;\n    };\n\n    return link;\n  }\n\n  function curveHorizontal(context, x0, y0, x1, y1) {\n    context.moveTo(x0, y0);\n    context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n  }\n\n  function curveVertical(context, x0, y0, x1, y1) {\n    context.moveTo(x0, y0);\n    context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n  }\n\n  function curveRadial(context, x0, y0, x1, y1) {\n    var p0 = pointRadial(x0, y0),\n        p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n        p2 = pointRadial(x1, y0),\n        p3 = pointRadial(x1, y1);\n    context.moveTo(p0[0], p0[1]);\n    context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n  }\n\n  function linkHorizontal() {\n    return link(curveHorizontal);\n  }\n\n  function linkVertical() {\n    return link(curveVertical);\n  }\n\n  function linkRadial() {\n    var l = link(curveRadial);\n    l.angle = l.x, delete l.x;\n    l.radius = l.y, delete l.y;\n    return l;\n  }\n\n  var circle = {\n    draw: function draw(context, size) {\n      var r = Math.sqrt(size / pi);\n      context.moveTo(r, 0);\n      context.arc(0, 0, r, 0, tau);\n    }\n  };\n  var cross = {\n    draw: function draw(context, size) {\n      var r = Math.sqrt(size / 5) / 2;\n      context.moveTo(-3 * r, -r);\n      context.lineTo(-r, -r);\n      context.lineTo(-r, -3 * r);\n      context.lineTo(r, -3 * r);\n      context.lineTo(r, -r);\n      context.lineTo(3 * r, -r);\n      context.lineTo(3 * r, r);\n      context.lineTo(r, r);\n      context.lineTo(r, 3 * r);\n      context.lineTo(-r, 3 * r);\n      context.lineTo(-r, r);\n      context.lineTo(-3 * r, r);\n      context.closePath();\n    }\n  };\n  var tan30 = Math.sqrt(1 / 3),\n      tan30_2 = tan30 * 2;\n  var diamond = {\n    draw: function draw(context, size) {\n      var y = Math.sqrt(size / tan30_2),\n          x = y * tan30;\n      context.moveTo(0, -y);\n      context.lineTo(x, 0);\n      context.lineTo(0, y);\n      context.lineTo(-x, 0);\n      context.closePath();\n    }\n  };\n  var ka = 0.89081309152928522810,\n      kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n      kx = Math.sin(tau / 10) * kr,\n      ky = -Math.cos(tau / 10) * kr;\n  var star = {\n    draw: function draw(context, size) {\n      var r = Math.sqrt(size * ka),\n          x = kx * r,\n          y = ky * r;\n      context.moveTo(0, -r);\n      context.lineTo(x, y);\n\n      for (var i = 1; i < 5; ++i) {\n        var a = tau * i / 5,\n            c = Math.cos(a),\n            s = Math.sin(a);\n        context.lineTo(s * r, -c * r);\n        context.lineTo(c * x - s * y, s * x + c * y);\n      }\n\n      context.closePath();\n    }\n  };\n  var square = {\n    draw: function draw(context, size) {\n      var w = Math.sqrt(size),\n          x = -w / 2;\n      context.rect(x, x, w, w);\n    }\n  };\n  var sqrt3 = Math.sqrt(3);\n  var triangle = {\n    draw: function draw(context, size) {\n      var y = -Math.sqrt(size / (sqrt3 * 3));\n      context.moveTo(0, y * 2);\n      context.lineTo(-sqrt3 * y, -y);\n      context.lineTo(sqrt3 * y, -y);\n      context.closePath();\n    }\n  };\n  var c = -0.5,\n      s = Math.sqrt(3) / 2,\n      k = 1 / Math.sqrt(12),\n      a = (k / 2 + 1) * 3;\n  var wye = {\n    draw: function draw(context, size) {\n      var r = Math.sqrt(size / a),\n          x0 = r / 2,\n          y0 = r * k,\n          x1 = x0,\n          y1 = r * k + r,\n          x2 = -x1,\n          y2 = y1;\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n      context.lineTo(x2, y2);\n      context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n      context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n      context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n      context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n      context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n      context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n      context.closePath();\n    }\n  };\n  var symbols = [circle, cross, diamond, square, star, triangle, wye];\n\n  function symbol(type, size) {\n    var context = null;\n    type = typeof type === \"function\" ? type : constant$1(type || circle);\n    size = typeof size === \"function\" ? size : constant$1(size === undefined ? 64 : +size);\n\n    function symbol() {\n      var buffer;\n      if (!context) context = buffer = path();\n      type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n      if (buffer) return context = null, buffer + \"\" || null;\n    }\n\n    symbol.type = function (_) {\n      return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$1(_), symbol) : type;\n    };\n\n    symbol.size = function (_) {\n      return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$1(+_), symbol) : size;\n    };\n\n    symbol.context = function (_) {\n      return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n    };\n\n    return symbol;\n  }\n\n  function noop() {}\n\n  function point$3(that, x, y) {\n    that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x) / 6, (that._y0 + 4 * that._y1 + y) / 6);\n  }\n\n  function Basis(context) {\n    this._context = context;\n  }\n\n  Basis.prototype = {\n    areaStart: function areaStart() {\n      this._line = 0;\n    },\n    areaEnd: function areaEnd() {\n      this._line = NaN;\n    },\n    lineStart: function lineStart() {\n      this._x0 = this._x1 = this._y0 = this._y1 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function lineEnd() {\n      switch (this._point) {\n        case 3:\n          point$3(this, this._x1, this._y1);\n        // falls through\n\n        case 2:\n          this._context.lineTo(this._x1, this._y1);\n\n          break;\n      }\n\n      if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function point(x, y) {\n      x = +x, y = +y;\n\n      switch (this._point) {\n        case 0:\n          this._point = 1;\n          this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n          break;\n\n        case 1:\n          this._point = 2;\n          break;\n\n        case 2:\n          this._point = 3;\n\n          this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);\n\n        // falls through\n\n        default:\n          point$3(this, x, y);\n          break;\n      }\n\n      this._x0 = this._x1, this._x1 = x;\n      this._y0 = this._y1, this._y1 = y;\n    }\n  };\n\n  function basis(context) {\n    return new Basis(context);\n  }\n\n  function BasisClosed(context) {\n    this._context = context;\n  }\n\n  BasisClosed.prototype = {\n    areaStart: noop,\n    areaEnd: noop,\n    lineStart: function lineStart() {\n      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function lineEnd() {\n      switch (this._point) {\n        case 1:\n          {\n            this._context.moveTo(this._x2, this._y2);\n\n            this._context.closePath();\n\n            break;\n          }\n\n        case 2:\n          {\n            this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\n            this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\n            this._context.closePath();\n\n            break;\n          }\n\n        case 3:\n          {\n            this.point(this._x2, this._y2);\n            this.point(this._x3, this._y3);\n            this.point(this._x4, this._y4);\n            break;\n          }\n      }\n    },\n    point: function point(x, y) {\n      x = +x, y = +y;\n\n      switch (this._point) {\n        case 0:\n          this._point = 1;\n          this._x2 = x, this._y2 = y;\n          break;\n\n        case 1:\n          this._point = 2;\n          this._x3 = x, this._y3 = y;\n          break;\n\n        case 2:\n          this._point = 3;\n          this._x4 = x, this._y4 = y;\n\n          this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6);\n\n          break;\n\n        default:\n          point$3(this, x, y);\n          break;\n      }\n\n      this._x0 = this._x1, this._x1 = x;\n      this._y0 = this._y1, this._y1 = y;\n    }\n  };\n\n  function basisClosed(context) {\n    return new BasisClosed(context);\n  }\n\n  function BasisOpen(context) {\n    this._context = context;\n  }\n\n  BasisOpen.prototype = {\n    areaStart: function areaStart() {\n      this._line = 0;\n    },\n    areaEnd: function areaEnd() {\n      this._line = NaN;\n    },\n    lineStart: function lineStart() {\n      this._x0 = this._x1 = this._y0 = this._y1 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function lineEnd() {\n      if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function point(x, y) {\n      x = +x, y = +y;\n\n      switch (this._point) {\n        case 0:\n          this._point = 1;\n          break;\n\n        case 1:\n          this._point = 2;\n          break;\n\n        case 2:\n          this._point = 3;\n          var x0 = (this._x0 + 4 * this._x1 + x) / 6,\n              y0 = (this._y0 + 4 * this._y1 + y) / 6;\n          this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);\n          break;\n\n        case 3:\n          this._point = 4;\n        // falls through\n\n        default:\n          point$3(this, x, y);\n          break;\n      }\n\n      this._x0 = this._x1, this._x1 = x;\n      this._y0 = this._y1, this._y1 = y;\n    }\n  };\n\n  function basisOpen(context) {\n    return new BasisOpen(context);\n  }\n\n  var Bump = /*#__PURE__*/function () {\n    function Bump(context, x) {\n      _classCallCheck(this, Bump);\n\n      this._context = context;\n      this._x = x;\n    }\n\n    _createClass(Bump, [{\n      key: \"areaStart\",\n      value: function areaStart() {\n        this._line = 0;\n      }\n    }, {\n      key: \"areaEnd\",\n      value: function areaEnd() {\n        this._line = NaN;\n      }\n    }, {\n      key: \"lineStart\",\n      value: function lineStart() {\n        this._point = 0;\n      }\n    }, {\n      key: \"lineEnd\",\n      value: function lineEnd() {\n        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n        this._line = 1 - this._line;\n      }\n    }, {\n      key: \"point\",\n      value: function point(x, y) {\n        x = +x, y = +y;\n\n        switch (this._point) {\n          case 0:\n            {\n              this._point = 1;\n              if (this._line) this._context.lineTo(x, y);else this._context.moveTo(x, y);\n              break;\n            }\n\n          case 1:\n            this._point = 2;\n          // falls through\n\n          default:\n            {\n              if (this._x) this._context.bezierCurveTo(this._x0 = (this._x0 + x) / 2, this._y0, this._x0, y, x, y);else this._context.bezierCurveTo(this._x0, this._y0 = (this._y0 + y) / 2, x, this._y0, x, y);\n              break;\n            }\n        }\n\n        this._x0 = x, this._y0 = y;\n      }\n    }]);\n\n    return Bump;\n  }();\n\n  function bumpX(context) {\n    return new Bump(context, true);\n  }\n\n  function bumpY(context) {\n    return new Bump(context, false);\n  }\n\n  function Bundle(context, beta) {\n    this._basis = new Basis(context);\n    this._beta = beta;\n  }\n\n  Bundle.prototype = {\n    lineStart: function lineStart() {\n      this._x = [];\n      this._y = [];\n\n      this._basis.lineStart();\n    },\n    lineEnd: function lineEnd() {\n      var x = this._x,\n          y = this._y,\n          j = x.length - 1;\n\n      if (j > 0) {\n        var x0 = x[0],\n            y0 = y[0],\n            dx = x[j] - x0,\n            dy = y[j] - y0,\n            i = -1,\n            t;\n\n        while (++i <= j) {\n          t = i / j;\n\n          this._basis.point(this._beta * x[i] + (1 - this._beta) * (x0 + t * dx), this._beta * y[i] + (1 - this._beta) * (y0 + t * dy));\n        }\n      }\n\n      this._x = this._y = null;\n\n      this._basis.lineEnd();\n    },\n    point: function point(x, y) {\n      this._x.push(+x);\n\n      this._y.push(+y);\n    }\n  };\n\n  var bundle = function custom(beta) {\n    function bundle(context) {\n      return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n    }\n\n    bundle.beta = function (beta) {\n      return custom(+beta);\n    };\n\n    return bundle;\n  }(0.85);\n\n  function point$2(that, x, y) {\n    that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x), that._y2 + that._k * (that._y1 - y), that._x2, that._y2);\n  }\n\n  function Cardinal(context, tension) {\n    this._context = context;\n    this._k = (1 - tension) / 6;\n  }\n\n  Cardinal.prototype = {\n    areaStart: function areaStart() {\n      this._line = 0;\n    },\n    areaEnd: function areaEnd() {\n      this._line = NaN;\n    },\n    lineStart: function lineStart() {\n      this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function lineEnd() {\n      switch (this._point) {\n        case 2:\n          this._context.lineTo(this._x2, this._y2);\n\n          break;\n\n        case 3:\n          point$2(this, this._x1, this._y1);\n          break;\n      }\n\n      if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function point(x, y) {\n      x = +x, y = +y;\n\n      switch (this._point) {\n        case 0:\n          this._point = 1;\n          this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n          break;\n\n        case 1:\n          this._point = 2;\n          this._x1 = x, this._y1 = y;\n          break;\n\n        case 2:\n          this._point = 3;\n        // falls through\n\n        default:\n          point$2(this, x, y);\n          break;\n      }\n\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var cardinal = function custom(tension) {\n    function cardinal(context) {\n      return new Cardinal(context, tension);\n    }\n\n    cardinal.tension = function (tension) {\n      return custom(+tension);\n    };\n\n    return cardinal;\n  }(0);\n\n  function CardinalClosed(context, tension) {\n    this._context = context;\n    this._k = (1 - tension) / 6;\n  }\n\n  CardinalClosed.prototype = {\n    areaStart: noop,\n    areaEnd: noop,\n    lineStart: function lineStart() {\n      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function lineEnd() {\n      switch (this._point) {\n        case 1:\n          {\n            this._context.moveTo(this._x3, this._y3);\n\n            this._context.closePath();\n\n            break;\n          }\n\n        case 2:\n          {\n            this._context.lineTo(this._x3, this._y3);\n\n            this._context.closePath();\n\n            break;\n          }\n\n        case 3:\n          {\n            this.point(this._x3, this._y3);\n            this.point(this._x4, this._y4);\n            this.point(this._x5, this._y5);\n            break;\n          }\n      }\n    },\n    point: function point(x, y) {\n      x = +x, y = +y;\n\n      switch (this._point) {\n        case 0:\n          this._point = 1;\n          this._x3 = x, this._y3 = y;\n          break;\n\n        case 1:\n          this._point = 2;\n\n          this._context.moveTo(this._x4 = x, this._y4 = y);\n\n          break;\n\n        case 2:\n          this._point = 3;\n          this._x5 = x, this._y5 = y;\n          break;\n\n        default:\n          point$2(this, x, y);\n          break;\n      }\n\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var cardinalClosed = function custom(tension) {\n    function cardinal(context) {\n      return new CardinalClosed(context, tension);\n    }\n\n    cardinal.tension = function (tension) {\n      return custom(+tension);\n    };\n\n    return cardinal;\n  }(0);\n\n  function CardinalOpen(context, tension) {\n    this._context = context;\n    this._k = (1 - tension) / 6;\n  }\n\n  CardinalOpen.prototype = {\n    areaStart: function areaStart() {\n      this._line = 0;\n    },\n    areaEnd: function areaEnd() {\n      this._line = NaN;\n    },\n    lineStart: function lineStart() {\n      this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function lineEnd() {\n      if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function point(x, y) {\n      x = +x, y = +y;\n\n      switch (this._point) {\n        case 0:\n          this._point = 1;\n          break;\n\n        case 1:\n          this._point = 2;\n          break;\n\n        case 2:\n          this._point = 3;\n          this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);\n          break;\n\n        case 3:\n          this._point = 4;\n        // falls through\n\n        default:\n          point$2(this, x, y);\n          break;\n      }\n\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var cardinalOpen = function custom(tension) {\n    function cardinal(context) {\n      return new CardinalOpen(context, tension);\n    }\n\n    cardinal.tension = function (tension) {\n      return custom(+tension);\n    };\n\n    return cardinal;\n  }(0);\n\n  function point$1(that, x, y) {\n    var x1 = that._x1,\n        y1 = that._y1,\n        x2 = that._x2,\n        y2 = that._y2;\n\n    if (that._l01_a > epsilon) {\n      var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n          n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n      x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n      y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n    }\n\n    if (that._l23_a > epsilon) {\n      var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n          m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n      x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n      y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n    }\n\n    that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n  }\n\n  function CatmullRom(context, alpha) {\n    this._context = context;\n    this._alpha = alpha;\n  }\n\n  CatmullRom.prototype = {\n    areaStart: function areaStart() {\n      this._line = 0;\n    },\n    areaEnd: function areaEnd() {\n      this._line = NaN;\n    },\n    lineStart: function lineStart() {\n      this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;\n      this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;\n    },\n    lineEnd: function lineEnd() {\n      switch (this._point) {\n        case 2:\n          this._context.lineTo(this._x2, this._y2);\n\n          break;\n\n        case 3:\n          this.point(this._x2, this._y2);\n          break;\n      }\n\n      if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function point(x, y) {\n      x = +x, y = +y;\n\n      if (this._point) {\n        var x23 = this._x2 - x,\n            y23 = this._y2 - y;\n        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n      }\n\n      switch (this._point) {\n        case 0:\n          this._point = 1;\n          this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n          break;\n\n        case 1:\n          this._point = 2;\n          break;\n\n        case 2:\n          this._point = 3;\n        // falls through\n\n        default:\n          point$1(this, x, y);\n          break;\n      }\n\n      this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var catmullRom = function custom(alpha) {\n    function catmullRom(context) {\n      return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n    }\n\n    catmullRom.alpha = function (alpha) {\n      return custom(+alpha);\n    };\n\n    return catmullRom;\n  }(0.5);\n\n  function CatmullRomClosed(context, alpha) {\n    this._context = context;\n    this._alpha = alpha;\n  }\n\n  CatmullRomClosed.prototype = {\n    areaStart: noop,\n    areaEnd: noop,\n    lineStart: function lineStart() {\n      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n      this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;\n    },\n    lineEnd: function lineEnd() {\n      switch (this._point) {\n        case 1:\n          {\n            this._context.moveTo(this._x3, this._y3);\n\n            this._context.closePath();\n\n            break;\n          }\n\n        case 2:\n          {\n            this._context.lineTo(this._x3, this._y3);\n\n            this._context.closePath();\n\n            break;\n          }\n\n        case 3:\n          {\n            this.point(this._x3, this._y3);\n            this.point(this._x4, this._y4);\n            this.point(this._x5, this._y5);\n            break;\n          }\n      }\n    },\n    point: function point(x, y) {\n      x = +x, y = +y;\n\n      if (this._point) {\n        var x23 = this._x2 - x,\n            y23 = this._y2 - y;\n        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n      }\n\n      switch (this._point) {\n        case 0:\n          this._point = 1;\n          this._x3 = x, this._y3 = y;\n          break;\n\n        case 1:\n          this._point = 2;\n\n          this._context.moveTo(this._x4 = x, this._y4 = y);\n\n          break;\n\n        case 2:\n          this._point = 3;\n          this._x5 = x, this._y5 = y;\n          break;\n\n        default:\n          point$1(this, x, y);\n          break;\n      }\n\n      this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var catmullRomClosed = function custom(alpha) {\n    function catmullRom(context) {\n      return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n    }\n\n    catmullRom.alpha = function (alpha) {\n      return custom(+alpha);\n    };\n\n    return catmullRom;\n  }(0.5);\n\n  function CatmullRomOpen(context, alpha) {\n    this._context = context;\n    this._alpha = alpha;\n  }\n\n  CatmullRomOpen.prototype = {\n    areaStart: function areaStart() {\n      this._line = 0;\n    },\n    areaEnd: function areaEnd() {\n      this._line = NaN;\n    },\n    lineStart: function lineStart() {\n      this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;\n      this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;\n    },\n    lineEnd: function lineEnd() {\n      if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function point(x, y) {\n      x = +x, y = +y;\n\n      if (this._point) {\n        var x23 = this._x2 - x,\n            y23 = this._y2 - y;\n        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n      }\n\n      switch (this._point) {\n        case 0:\n          this._point = 1;\n          break;\n\n        case 1:\n          this._point = 2;\n          break;\n\n        case 2:\n          this._point = 3;\n          this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);\n          break;\n\n        case 3:\n          this._point = 4;\n        // falls through\n\n        default:\n          point$1(this, x, y);\n          break;\n      }\n\n      this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var catmullRomOpen = function custom(alpha) {\n    function catmullRom(context) {\n      return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n    }\n\n    catmullRom.alpha = function (alpha) {\n      return custom(+alpha);\n    };\n\n    return catmullRom;\n  }(0.5);\n\n  function LinearClosed(context) {\n    this._context = context;\n  }\n\n  LinearClosed.prototype = {\n    areaStart: noop,\n    areaEnd: noop,\n    lineStart: function lineStart() {\n      this._point = 0;\n    },\n    lineEnd: function lineEnd() {\n      if (this._point) this._context.closePath();\n    },\n    point: function point(x, y) {\n      x = +x, y = +y;\n      if (this._point) this._context.lineTo(x, y);else this._point = 1, this._context.moveTo(x, y);\n    }\n  };\n\n  function linearClosed(context) {\n    return new LinearClosed(context);\n  }\n\n  function sign(x) {\n    return x < 0 ? -1 : 1;\n  } // Calculate the slopes of the tangents (Hermite-type interpolation) based on\n  // the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n  // Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n  // NOV(II), P. 443, 1990.\n\n\n  function slope3(that, x2, y2) {\n    var h0 = that._x1 - that._x0,\n        h1 = x2 - that._x1,\n        s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n        s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n        p = (s0 * h1 + s1 * h0) / (h0 + h1);\n    return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n  } // Calculate a one-sided slope.\n\n\n  function slope2(that, t) {\n    var h = that._x1 - that._x0;\n    return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n  } // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n  // \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n  // with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\n\n  function _point4(that, t0, t1) {\n    var x0 = that._x0,\n        y0 = that._y0,\n        x1 = that._x1,\n        y1 = that._y1,\n        dx = (x1 - x0) / 3;\n\n    that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n  }\n\n  function MonotoneX(context) {\n    this._context = context;\n  }\n\n  MonotoneX.prototype = {\n    areaStart: function areaStart() {\n      this._line = 0;\n    },\n    areaEnd: function areaEnd() {\n      this._line = NaN;\n    },\n    lineStart: function lineStart() {\n      this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function lineEnd() {\n      switch (this._point) {\n        case 2:\n          this._context.lineTo(this._x1, this._y1);\n\n          break;\n\n        case 3:\n          _point4(this, this._t0, slope2(this, this._t0));\n\n          break;\n      }\n\n      if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function point(x, y) {\n      var t1 = NaN;\n      x = +x, y = +y;\n      if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\n      switch (this._point) {\n        case 0:\n          this._point = 1;\n          this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n          break;\n\n        case 1:\n          this._point = 2;\n          break;\n\n        case 2:\n          this._point = 3;\n\n          _point4(this, slope2(this, t1 = slope3(this, x, y)), t1);\n\n          break;\n\n        default:\n          _point4(this, this._t0, t1 = slope3(this, x, y));\n\n          break;\n      }\n\n      this._x0 = this._x1, this._x1 = x;\n      this._y0 = this._y1, this._y1 = y;\n      this._t0 = t1;\n    }\n  };\n\n  function MonotoneY(context) {\n    this._context = new ReflectContext(context);\n  }\n\n  (MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function (x, y) {\n    MonotoneX.prototype.point.call(this, y, x);\n  };\n\n  function ReflectContext(context) {\n    this._context = context;\n  }\n\n  ReflectContext.prototype = {\n    moveTo: function moveTo(x, y) {\n      this._context.moveTo(y, x);\n    },\n    closePath: function closePath() {\n      this._context.closePath();\n    },\n    lineTo: function lineTo(x, y) {\n      this._context.lineTo(y, x);\n    },\n    bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      this._context.bezierCurveTo(y1, x1, y2, x2, y, x);\n    }\n  };\n\n  function monotoneX(context) {\n    return new MonotoneX(context);\n  }\n\n  function monotoneY(context) {\n    return new MonotoneY(context);\n  }\n\n  function Natural(context) {\n    this._context = context;\n  }\n\n  Natural.prototype = {\n    areaStart: function areaStart() {\n      this._line = 0;\n    },\n    areaEnd: function areaEnd() {\n      this._line = NaN;\n    },\n    lineStart: function lineStart() {\n      this._x = [];\n      this._y = [];\n    },\n    lineEnd: function lineEnd() {\n      var x = this._x,\n          y = this._y,\n          n = x.length;\n\n      if (n) {\n        this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\n        if (n === 2) {\n          this._context.lineTo(x[1], y[1]);\n        } else {\n          var px = controlPoints(x),\n              py = controlPoints(y);\n\n          for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n            this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n          }\n        }\n      }\n\n      if (this._line || this._line !== 0 && n === 1) this._context.closePath();\n      this._line = 1 - this._line;\n      this._x = this._y = null;\n    },\n    point: function point(x, y) {\n      this._x.push(+x);\n\n      this._y.push(+y);\n    }\n  }; // See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\n  function controlPoints(x) {\n    var i,\n        n = x.length - 1,\n        m,\n        a = new Array(n),\n        b = new Array(n),\n        r = new Array(n);\n    a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\n    for (i = 1; i < n - 1; ++i) {\n      a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n    }\n\n    a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\n    for (i = 1; i < n; ++i) {\n      m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n    }\n\n    a[n - 1] = r[n - 1] / b[n - 1];\n\n    for (i = n - 2; i >= 0; --i) {\n      a[i] = (r[i] - a[i + 1]) / b[i];\n    }\n\n    b[n - 1] = (x[n] + a[n - 1]) / 2;\n\n    for (i = 0; i < n - 1; ++i) {\n      b[i] = 2 * x[i + 1] - a[i + 1];\n    }\n\n    return [a, b];\n  }\n\n  function natural(context) {\n    return new Natural(context);\n  }\n\n  function Step(context, t) {\n    this._context = context;\n    this._t = t;\n  }\n\n  Step.prototype = {\n    areaStart: function areaStart() {\n      this._line = 0;\n    },\n    areaEnd: function areaEnd() {\n      this._line = NaN;\n    },\n    lineStart: function lineStart() {\n      this._x = this._y = NaN;\n      this._point = 0;\n    },\n    lineEnd: function lineEnd() {\n      if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n      if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n      if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n    },\n    point: function point(x, y) {\n      x = +x, y = +y;\n\n      switch (this._point) {\n        case 0:\n          this._point = 1;\n          this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n          break;\n\n        case 1:\n          this._point = 2;\n        // falls through\n\n        default:\n          {\n            if (this._t <= 0) {\n              this._context.lineTo(this._x, y);\n\n              this._context.lineTo(x, y);\n            } else {\n              var x1 = this._x * (1 - this._t) + x * this._t;\n\n              this._context.lineTo(x1, this._y);\n\n              this._context.lineTo(x1, y);\n            }\n\n            break;\n          }\n      }\n\n      this._x = x, this._y = y;\n    }\n  };\n\n  function step(context) {\n    return new Step(context, 0.5);\n  }\n\n  function stepBefore(context) {\n    return new Step(context, 0);\n  }\n\n  function stepAfter(context) {\n    return new Step(context, 1);\n  }\n\n  function none$1(series, order) {\n    if (!((n = series.length) > 1)) return;\n\n    for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n      s0 = s1, s1 = series[order[i]];\n\n      for (j = 0; j < m; ++j) {\n        s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n      }\n    }\n  }\n\n  function none(series) {\n    var n = series.length,\n        o = new Array(n);\n\n    while (--n >= 0) {\n      o[n] = n;\n    }\n\n    return o;\n  }\n\n  function stackValue(d, key) {\n    return d[key];\n  }\n\n  function stackSeries(key) {\n    var series = [];\n    series.key = key;\n    return series;\n  }\n\n  function stack() {\n    var keys = constant$1([]),\n        order = none,\n        offset = none$1,\n        value = stackValue;\n\n    function stack(data) {\n      var sz = Array.from(keys.apply(this, arguments), stackSeries),\n          i,\n          n = sz.length,\n          j = -1,\n          oz;\n\n      var _iterator62 = _createForOfIteratorHelper(data),\n          _step64;\n\n      try {\n        for (_iterator62.s(); !(_step64 = _iterator62.n()).done;) {\n          var d = _step64.value;\n\n          for (i = 0, ++j; i < n; ++i) {\n            (sz[i][j] = [0, +value(d, sz[i].key, j, data)]).data = d;\n          }\n        }\n      } catch (err) {\n        _iterator62.e(err);\n      } finally {\n        _iterator62.f();\n      }\n\n      for (i = 0, oz = array(order(sz)); i < n; ++i) {\n        sz[oz[i]].index = i;\n      }\n\n      offset(sz, oz);\n      return sz;\n    }\n\n    stack.keys = function (_) {\n      return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$1(Array.from(_)), stack) : keys;\n    };\n\n    stack.value = function (_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(+_), stack) : value;\n    };\n\n    stack.order = function (_) {\n      return arguments.length ? (order = _ == null ? none : typeof _ === \"function\" ? _ : constant$1(Array.from(_)), stack) : order;\n    };\n\n    stack.offset = function (_) {\n      return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n    };\n\n    return stack;\n  }\n\n  function expand(series, order) {\n    if (!((n = series.length) > 0)) return;\n\n    for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n      for (y = i = 0; i < n; ++i) {\n        y += series[i][j][1] || 0;\n      }\n\n      if (y) for (i = 0; i < n; ++i) {\n        series[i][j][1] /= y;\n      }\n    }\n\n    none$1(series, order);\n  }\n\n  function diverging(series, order) {\n    if (!((n = series.length) > 0)) return;\n\n    for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n      for (yp = yn = 0, i = 0; i < n; ++i) {\n        if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {\n          d[0] = yp, d[1] = yp += dy;\n        } else if (dy < 0) {\n          d[1] = yn, d[0] = yn += dy;\n        } else {\n          d[0] = 0, d[1] = dy;\n        }\n      }\n    }\n  }\n\n  function silhouette(series, order) {\n    if (!((n = series.length) > 0)) return;\n\n    for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n      for (var i = 0, y = 0; i < n; ++i) {\n        y += series[i][j][1] || 0;\n      }\n\n      s0[j][1] += s0[j][0] = -y / 2;\n    }\n\n    none$1(series, order);\n  }\n\n  function wiggle(series, order) {\n    if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\n    for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n      for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n        var si = series[order[i]],\n            sij0 = si[j][1] || 0,\n            sij1 = si[j - 1][1] || 0,\n            s3 = (sij0 - sij1) / 2;\n\n        for (var k = 0; k < i; ++k) {\n          var sk = series[order[k]],\n              skj0 = sk[j][1] || 0,\n              skj1 = sk[j - 1][1] || 0;\n          s3 += skj0 - skj1;\n        }\n\n        s1 += sij0, s2 += s3 * sij0;\n      }\n\n      s0[j - 1][1] += s0[j - 1][0] = y;\n      if (s1) y -= s2 / s1;\n    }\n\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    none$1(series, order);\n  }\n\n  function appearance(series) {\n    var peaks = series.map(peak);\n    return none(series).sort(function (a, b) {\n      return peaks[a] - peaks[b];\n    });\n  }\n\n  function peak(series) {\n    var i = -1,\n        j = 0,\n        n = series.length,\n        vi,\n        vj = -Infinity;\n\n    while (++i < n) {\n      if ((vi = +series[i][1]) > vj) vj = vi, j = i;\n    }\n\n    return j;\n  }\n\n  function ascending(series) {\n    var sums = series.map(sum);\n    return none(series).sort(function (a, b) {\n      return sums[a] - sums[b];\n    });\n  }\n\n  function sum(series) {\n    var s = 0,\n        i = -1,\n        n = series.length,\n        v;\n\n    while (++i < n) {\n      if (v = +series[i][1]) s += v;\n    }\n\n    return s;\n  }\n\n  function descending(series) {\n    return ascending(series).reverse();\n  }\n\n  function insideOut(series) {\n    var n = series.length,\n        i,\n        j,\n        sums = series.map(sum),\n        order = appearance(series),\n        top = 0,\n        bottom = 0,\n        tops = [],\n        bottoms = [];\n\n    for (i = 0; i < n; ++i) {\n      j = order[i];\n\n      if (top < bottom) {\n        top += sums[j];\n        tops.push(j);\n      } else {\n        bottom += sums[j];\n        bottoms.push(j);\n      }\n    }\n\n    return bottoms.reverse().concat(tops);\n  }\n\n  function reverse(series) {\n    return none(series).reverse();\n  }\n\n  var constant = function constant(x) {\n    return function () {\n      return x;\n    };\n  };\n\n  function ZoomEvent(type, _ref46) {\n    var sourceEvent = _ref46.sourceEvent,\n        target = _ref46.target,\n        transform = _ref46.transform,\n        dispatch = _ref46.dispatch;\n    Object.defineProperties(this, {\n      type: {\n        value: type,\n        enumerable: true,\n        configurable: true\n      },\n      sourceEvent: {\n        value: sourceEvent,\n        enumerable: true,\n        configurable: true\n      },\n      target: {\n        value: target,\n        enumerable: true,\n        configurable: true\n      },\n      transform: {\n        value: transform,\n        enumerable: true,\n        configurable: true\n      },\n      _: {\n        value: dispatch\n      }\n    });\n  }\n\n  function Transform(k, x, y) {\n    this.k = k;\n    this.x = x;\n    this.y = y;\n  }\n\n  Transform.prototype = {\n    constructor: Transform,\n    scale: function scale(k) {\n      return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n    },\n    translate: function translate(x, y) {\n      return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n    },\n    apply: function apply(point) {\n      return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n    },\n    applyX: function applyX(x) {\n      return x * this.k + this.x;\n    },\n    applyY: function applyY(y) {\n      return y * this.k + this.y;\n    },\n    invert: function invert(location) {\n      return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n    },\n    invertX: function invertX(x) {\n      return (x - this.x) / this.k;\n    },\n    invertY: function invertY(y) {\n      return (y - this.y) / this.k;\n    },\n    rescaleX: function rescaleX(x) {\n      return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n    },\n    rescaleY: function rescaleY(y) {\n      return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n    },\n    toString: function toString() {\n      return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n    }\n  };\n  var identity = new Transform(1, 0, 0);\n  transform.prototype = Transform.prototype;\n\n  function transform(node) {\n    while (!node.__zoom) {\n      if (!(node = node.parentNode)) return identity;\n    }\n\n    return node.__zoom;\n  }\n\n  function nopropagation(event) {\n    event.stopImmediatePropagation();\n  }\n\n  function noevent(event) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n  } // Ignore right-click, since that should open the context menu.\n  // except for pinch-to-zoom, which is sent as a wheel+ctrlKey event\n\n\n  function defaultFilter(event) {\n    return (!event.ctrlKey || event.type === 'wheel') && !event.button;\n  }\n\n  function defaultExtent() {\n    var e = this;\n\n    if (e instanceof SVGElement) {\n      e = e.ownerSVGElement || e;\n\n      if (e.hasAttribute(\"viewBox\")) {\n        e = e.viewBox.baseVal;\n        return [[e.x, e.y], [e.x + e.width, e.y + e.height]];\n      }\n\n      return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];\n    }\n\n    return [[0, 0], [e.clientWidth, e.clientHeight]];\n  }\n\n  function defaultTransform() {\n    return this.__zoom || identity;\n  }\n\n  function defaultWheelDelta(event) {\n    return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * (event.ctrlKey ? 10 : 1);\n  }\n\n  function defaultTouchable() {\n    return navigator.maxTouchPoints || \"ontouchstart\" in this;\n  }\n\n  function defaultConstrain(transform, extent, translateExtent) {\n    var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n        dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n        dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n        dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n    return transform.translate(dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1), dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1));\n  }\n\n  function zoom() {\n    var filter = defaultFilter,\n        extent = defaultExtent,\n        constrain = defaultConstrain,\n        wheelDelta = defaultWheelDelta,\n        touchable = defaultTouchable,\n        scaleExtent = [0, Infinity],\n        translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n        duration = 250,\n        interpolate = interpolateZoom,\n        listeners = dispatch(\"start\", \"zoom\", \"end\"),\n        touchstarting,\n        touchfirst,\n        touchending,\n        touchDelay = 500,\n        wheelDelay = 150,\n        clickDistance2 = 0,\n        tapDistance = 10;\n\n    function zoom(selection) {\n      selection.property(\"__zoom\", defaultTransform).on(\"wheel.zoom\", wheeled, {\n        passive: false\n      }).on(\"mousedown.zoom\", mousedowned).on(\"dblclick.zoom\", dblclicked).filter(touchable).on(\"touchstart.zoom\", touchstarted).on(\"touchmove.zoom\", touchmoved).on(\"touchend.zoom touchcancel.zoom\", touchended).style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n    }\n\n    zoom.transform = function (collection, transform, point, event) {\n      var selection = collection.selection ? collection.selection() : collection;\n      selection.property(\"__zoom\", defaultTransform);\n\n      if (collection !== selection) {\n        schedule(collection, transform, point, event);\n      } else {\n        selection.interrupt().each(function () {\n          gesture(this, arguments).event(event).start().zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform).end();\n        });\n      }\n    };\n\n    zoom.scaleBy = function (selection, k, p, event) {\n      zoom.scaleTo(selection, function () {\n        var k0 = this.__zoom.k,\n            k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n        return k0 * k1;\n      }, p, event);\n    };\n\n    zoom.scaleTo = function (selection, k, p, event) {\n      zoom.transform(selection, function () {\n        var e = extent.apply(this, arguments),\n            t0 = this.__zoom,\n            p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p,\n            p1 = t0.invert(p0),\n            k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n        return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n      }, p, event);\n    };\n\n    zoom.translateBy = function (selection, x, y, event) {\n      zoom.transform(selection, function () {\n        return constrain(this.__zoom.translate(typeof x === \"function\" ? x.apply(this, arguments) : x, typeof y === \"function\" ? y.apply(this, arguments) : y), extent.apply(this, arguments), translateExtent);\n      }, null, event);\n    };\n\n    zoom.translateTo = function (selection, x, y, p, event) {\n      zoom.transform(selection, function () {\n        var e = extent.apply(this, arguments),\n            t = this.__zoom,\n            p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p;\n        return constrain(identity.translate(p0[0], p0[1]).scale(t.k).translate(typeof x === \"function\" ? -x.apply(this, arguments) : -x, typeof y === \"function\" ? -y.apply(this, arguments) : -y), e, translateExtent);\n      }, p, event);\n    };\n\n    function scale(transform, k) {\n      k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n      return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n    }\n\n    function translate(transform, p0, p1) {\n      var x = p0[0] - p1[0] * transform.k,\n          y = p0[1] - p1[1] * transform.k;\n      return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n    }\n\n    function centroid(extent) {\n      return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n    }\n\n    function schedule(transition, transform, point, event) {\n      transition.on(\"start.zoom\", function () {\n        gesture(this, arguments).event(event).start();\n      }).on(\"interrupt.zoom end.zoom\", function () {\n        gesture(this, arguments).event(event).end();\n      }).tween(\"zoom\", function () {\n        var that = this,\n            args = arguments,\n            g = gesture(that, args).event(event),\n            e = extent.apply(that, args),\n            p = point == null ? centroid(e) : typeof point === \"function\" ? point.apply(that, args) : point,\n            w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n            a = that.__zoom,\n            b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n            i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n        return function (t) {\n          if (t === 1) t = b; // Avoid rounding error on end.\n          else {\n              var l = i(t),\n                  k = w / l[2];\n              t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k);\n            }\n          g.zoom(null, t);\n        };\n      });\n    }\n\n    function gesture(that, args, clean) {\n      return !clean && that.__zooming || new Gesture(that, args);\n    }\n\n    function Gesture(that, args) {\n      this.that = that;\n      this.args = args;\n      this.active = 0;\n      this.sourceEvent = null;\n      this.extent = extent.apply(that, args);\n      this.taps = 0;\n    }\n\n    Gesture.prototype = {\n      event: function event(_event) {\n        if (_event) this.sourceEvent = _event;\n        return this;\n      },\n      start: function start() {\n        if (++this.active === 1) {\n          this.that.__zooming = this;\n          this.emit(\"start\");\n        }\n\n        return this;\n      },\n      zoom: function zoom(key, transform) {\n        if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n        if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n        if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n        this.that.__zoom = transform;\n        this.emit(\"zoom\");\n        return this;\n      },\n      end: function end() {\n        if (--this.active === 0) {\n          delete this.that.__zooming;\n          this.emit(\"end\");\n        }\n\n        return this;\n      },\n      emit: function emit(type) {\n        var d = select(this.that).datum();\n        listeners.call(type, this.that, new ZoomEvent(type, {\n          sourceEvent: this.sourceEvent,\n          target: zoom,\n          type: type,\n          transform: this.that.__zoom,\n          dispatch: listeners\n        }), d);\n      }\n    };\n\n    function wheeled(event) {\n      for (var _len14 = arguments.length, args = new Array(_len14 > 1 ? _len14 - 1 : 0), _key17 = 1; _key17 < _len14; _key17++) {\n        args[_key17 - 1] = arguments[_key17];\n      }\n\n      if (!filter.apply(this, arguments)) return;\n      var g = gesture(this, args).event(event),\n          t = this.__zoom,\n          k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n          p = pointer(event); // If the mouse is in the same location as before, reuse it.\n      // If there were recent wheel events, reset the wheel idle timeout.\n\n      if (g.wheel) {\n        if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n          g.mouse[1] = t.invert(g.mouse[0] = p);\n        }\n\n        clearTimeout(g.wheel);\n      } // If this wheel event won’t trigger a transform change, ignore it.\n      else if (t.k === k) return; // Otherwise, capture the mouse point and location at the start.\n        else {\n            g.mouse = [p, t.invert(p)];\n            interrupt(this);\n            g.start();\n          }\n\n      noevent(event);\n      g.wheel = setTimeout(wheelidled, wheelDelay);\n      g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n      function wheelidled() {\n        g.wheel = null;\n        g.end();\n      }\n    }\n\n    function mousedowned(event) {\n      for (var _len15 = arguments.length, args = new Array(_len15 > 1 ? _len15 - 1 : 0), _key18 = 1; _key18 < _len15; _key18++) {\n        args[_key18 - 1] = arguments[_key18];\n      }\n\n      if (touchending || !filter.apply(this, arguments)) return;\n      var currentTarget = event.currentTarget,\n          g = gesture(this, args, true).event(event),\n          v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n          p = pointer(event, currentTarget),\n          x0 = event.clientX,\n          y0 = event.clientY;\n      dragDisable(event.view);\n      nopropagation(event);\n      g.mouse = [p, this.__zoom.invert(p)];\n      interrupt(this);\n      g.start();\n\n      function mousemoved(event) {\n        noevent(event);\n\n        if (!g.moved) {\n          var dx = event.clientX - x0,\n              dy = event.clientY - y0;\n          g.moved = dx * dx + dy * dy > clickDistance2;\n        }\n\n        g.event(event).zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = pointer(event, currentTarget), g.mouse[1]), g.extent, translateExtent));\n      }\n\n      function mouseupped(event) {\n        v.on(\"mousemove.zoom mouseup.zoom\", null);\n        yesdrag(event.view, g.moved);\n        noevent(event);\n        g.event(event).end();\n      }\n    }\n\n    function dblclicked(event) {\n      for (var _len16 = arguments.length, args = new Array(_len16 > 1 ? _len16 - 1 : 0), _key19 = 1; _key19 < _len16; _key19++) {\n        args[_key19 - 1] = arguments[_key19];\n      }\n\n      if (!filter.apply(this, arguments)) return;\n      var t0 = this.__zoom,\n          p0 = pointer(event.changedTouches ? event.changedTouches[0] : event, this),\n          p1 = t0.invert(p0),\n          k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n          t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, args), translateExtent);\n      noevent(event);\n      if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0, event);else select(this).call(zoom.transform, t1, p0, event);\n    }\n\n    function touchstarted(event) {\n      for (var _len17 = arguments.length, args = new Array(_len17 > 1 ? _len17 - 1 : 0), _key20 = 1; _key20 < _len17; _key20++) {\n        args[_key20 - 1] = arguments[_key20];\n      }\n\n      if (!filter.apply(this, arguments)) return;\n      var touches = event.touches,\n          n = touches.length,\n          g = gesture(this, args, event.changedTouches.length === n).event(event),\n          started,\n          i,\n          t,\n          p;\n      nopropagation(event);\n\n      for (i = 0; i < n; ++i) {\n        t = touches[i], p = pointer(t, this);\n        p = [p, this.__zoom.invert(p), t.identifier];\n        if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;\n      }\n\n      if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\n      if (started) {\n        if (g.taps < 2) touchfirst = p[0], touchstarting = setTimeout(function () {\n          touchstarting = null;\n        }, touchDelay);\n        interrupt(this);\n        g.start();\n      }\n    }\n\n    function touchmoved(event) {\n      if (!this.__zooming) return;\n\n      for (var _len18 = arguments.length, args = new Array(_len18 > 1 ? _len18 - 1 : 0), _key21 = 1; _key21 < _len18; _key21++) {\n        args[_key21 - 1] = arguments[_key21];\n      }\n\n      var g = gesture(this, args).event(event),\n          touches = event.changedTouches,\n          n = touches.length,\n          i,\n          t,\n          p,\n          l;\n      noevent(event);\n\n      for (i = 0; i < n; ++i) {\n        t = touches[i], p = pointer(t, this);\n        if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n      }\n\n      t = g.that.__zoom;\n\n      if (g.touch1) {\n        var p0 = g.touch0[0],\n            l0 = g.touch0[1],\n            p1 = g.touch1[0],\n            l1 = g.touch1[1],\n            dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n            dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n        t = scale(t, Math.sqrt(dp / dl));\n        p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n        l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n      } else if (g.touch0) p = g.touch0[0], l = g.touch0[1];else return;\n\n      g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n    }\n\n    function touchended(event) {\n      for (var _len19 = arguments.length, args = new Array(_len19 > 1 ? _len19 - 1 : 0), _key22 = 1; _key22 < _len19; _key22++) {\n        args[_key22 - 1] = arguments[_key22];\n      }\n\n      if (!this.__zooming) return;\n      var g = gesture(this, args).event(event),\n          touches = event.changedTouches,\n          n = touches.length,\n          i,\n          t;\n      nopropagation(event);\n      if (touchending) clearTimeout(touchending);\n      touchending = setTimeout(function () {\n        touchending = null;\n      }, touchDelay);\n\n      for (i = 0; i < n; ++i) {\n        t = touches[i];\n        if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n      }\n\n      if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n      if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);else {\n        g.end(); // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.\n\n        if (g.taps === 2) {\n          t = pointer(t, this);\n\n          if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {\n            var p = select(this).on(\"dblclick.zoom\");\n            if (p) p.apply(this, arguments);\n          }\n        }\n      }\n    }\n\n    zoom.wheelDelta = function (_) {\n      return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n    };\n\n    zoom.filter = function (_) {\n      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n    };\n\n    zoom.touchable = function (_) {\n      return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n    };\n\n    zoom.extent = function (_) {\n      return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n    };\n\n    zoom.scaleExtent = function (_) {\n      return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n    };\n\n    zoom.translateExtent = function (_) {\n      return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n    };\n\n    zoom.constrain = function (_) {\n      return arguments.length ? (constrain = _, zoom) : constrain;\n    };\n\n    zoom.duration = function (_) {\n      return arguments.length ? (duration = +_, zoom) : duration;\n    };\n\n    zoom.interpolate = function (_) {\n      return arguments.length ? (interpolate = _, zoom) : interpolate;\n    };\n\n    zoom.on = function () {\n      var value = listeners.on.apply(listeners, arguments);\n      return value === listeners ? zoom : value;\n    };\n\n    zoom.clickDistance = function (_) {\n      return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n    };\n\n    zoom.tapDistance = function (_) {\n      return arguments.length ? (tapDistance = +_, zoom) : tapDistance;\n    };\n\n    return zoom;\n  }\n\n  exports.Adder = Adder;\n  exports.Delaunay = Delaunay;\n  exports.FormatSpecifier = FormatSpecifier;\n  exports.InternMap = InternMap;\n  exports.InternSet = InternSet;\n  exports.Node = Node$1;\n  exports.Voronoi = Voronoi;\n  exports.ZoomTransform = Transform;\n  exports.active = active;\n  exports.arc = arc;\n  exports.area = area;\n  exports.areaRadial = areaRadial;\n  exports.ascending = ascending$3;\n  exports.autoType = autoType;\n  exports.axisBottom = axisBottom;\n  exports.axisLeft = axisLeft;\n  exports.axisRight = axisRight;\n  exports.axisTop = axisTop;\n  exports.bin = bin;\n  exports.bisect = bisect;\n  exports.bisectCenter = bisectCenter;\n  exports.bisectLeft = bisectLeft;\n  exports.bisectRight = bisectRight;\n  exports.bisector = bisector;\n  exports.blob = blob;\n  exports.brush = brush;\n  exports.brushSelection = brushSelection;\n  exports.brushX = brushX;\n  exports.brushY = brushY;\n  exports.buffer = buffer;\n  exports.chord = chord;\n  exports.chordDirected = chordDirected;\n  exports.chordTranspose = chordTranspose;\n  exports.cluster = cluster;\n  exports.color = color;\n  exports.contourDensity = density;\n  exports.contours = contours;\n  exports.count = count$1;\n  exports.create = create$1;\n  exports.creator = creator;\n  exports.cross = cross$2;\n  exports.csv = csv;\n  exports.csvFormat = csvFormat;\n  exports.csvFormatBody = csvFormatBody;\n  exports.csvFormatRow = csvFormatRow;\n  exports.csvFormatRows = csvFormatRows;\n  exports.csvFormatValue = csvFormatValue;\n  exports.csvParse = csvParse;\n  exports.csvParseRows = csvParseRows;\n  exports.cubehelix = cubehelix$3;\n  exports.cumsum = cumsum;\n  exports.curveBasis = basis;\n  exports.curveBasisClosed = basisClosed;\n  exports.curveBasisOpen = basisOpen;\n  exports.curveBumpX = bumpX;\n  exports.curveBumpY = bumpY;\n  exports.curveBundle = bundle;\n  exports.curveCardinal = cardinal;\n  exports.curveCardinalClosed = cardinalClosed;\n  exports.curveCardinalOpen = cardinalOpen;\n  exports.curveCatmullRom = catmullRom;\n  exports.curveCatmullRomClosed = catmullRomClosed;\n  exports.curveCatmullRomOpen = catmullRomOpen;\n  exports.curveLinear = curveLinear;\n  exports.curveLinearClosed = linearClosed;\n  exports.curveMonotoneX = monotoneX;\n  exports.curveMonotoneY = monotoneY;\n  exports.curveNatural = natural;\n  exports.curveStep = step;\n  exports.curveStepAfter = stepAfter;\n  exports.curveStepBefore = stepBefore;\n  exports.descending = descending$2;\n  exports.deviation = deviation;\n  exports.difference = difference;\n  exports.disjoint = disjoint;\n  exports.dispatch = dispatch;\n  exports.drag = drag;\n  exports.dragDisable = dragDisable;\n  exports.dragEnable = yesdrag;\n  exports.dsv = dsv;\n  exports.dsvFormat = dsvFormat;\n  exports.easeBack = backInOut;\n  exports.easeBackIn = backIn;\n  exports.easeBackInOut = backInOut;\n  exports.easeBackOut = backOut;\n  exports.easeBounce = bounceOut;\n  exports.easeBounceIn = bounceIn;\n  exports.easeBounceInOut = bounceInOut;\n  exports.easeBounceOut = bounceOut;\n  exports.easeCircle = circleInOut;\n  exports.easeCircleIn = circleIn;\n  exports.easeCircleInOut = circleInOut;\n  exports.easeCircleOut = circleOut;\n  exports.easeCubic = cubicInOut;\n  exports.easeCubicIn = cubicIn;\n  exports.easeCubicInOut = cubicInOut;\n  exports.easeCubicOut = cubicOut;\n  exports.easeElastic = elasticOut;\n  exports.easeElasticIn = elasticIn;\n  exports.easeElasticInOut = elasticInOut;\n  exports.easeElasticOut = elasticOut;\n  exports.easeExp = expInOut;\n  exports.easeExpIn = expIn;\n  exports.easeExpInOut = expInOut;\n  exports.easeExpOut = expOut;\n  exports.easeLinear = linear$1;\n  exports.easePoly = polyInOut;\n  exports.easePolyIn = polyIn;\n  exports.easePolyInOut = polyInOut;\n  exports.easePolyOut = polyOut;\n  exports.easeQuad = quadInOut;\n  exports.easeQuadIn = quadIn;\n  exports.easeQuadInOut = quadInOut;\n  exports.easeQuadOut = quadOut;\n  exports.easeSin = sinInOut;\n  exports.easeSinIn = sinIn;\n  exports.easeSinInOut = sinInOut;\n  exports.easeSinOut = sinOut;\n  exports.every = every;\n  exports.extent = extent$1;\n  exports.fcumsum = fcumsum;\n  exports.filter = filter$1;\n  exports.flatGroup = flatGroup;\n  exports.flatRollup = flatRollup;\n  exports.forceCenter = center;\n  exports.forceCollide = collide;\n  exports.forceLink = link$2;\n  exports.forceManyBody = manyBody;\n  exports.forceRadial = radial$1;\n  exports.forceSimulation = simulation;\n  exports.forceX = x$1;\n  exports.forceY = y$1;\n  exports.formatDefaultLocale = defaultLocale$1;\n  exports.formatLocale = formatLocale$1;\n  exports.formatSpecifier = formatSpecifier;\n  exports.fsum = fsum;\n  exports.geoAlbers = albers;\n  exports.geoAlbersUsa = albersUsa;\n  exports.geoArea = area$2;\n  exports.geoAzimuthalEqualArea = azimuthalEqualArea;\n  exports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n  exports.geoAzimuthalEquidistant = azimuthalEquidistant;\n  exports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n  exports.geoBounds = bounds;\n  exports.geoCentroid = centroid$1;\n  exports.geoCircle = circle$2;\n  exports.geoClipAntimeridian = clipAntimeridian;\n  exports.geoClipCircle = clipCircle;\n  exports.geoClipExtent = extent;\n  exports.geoClipRectangle = clipRectangle;\n  exports.geoConicConformal = conicConformal;\n  exports.geoConicConformalRaw = conicConformalRaw;\n  exports.geoConicEqualArea = conicEqualArea;\n  exports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n  exports.geoConicEquidistant = conicEquidistant;\n  exports.geoConicEquidistantRaw = conicEquidistantRaw;\n  exports.geoContains = contains$1;\n  exports.geoDistance = distance;\n  exports.geoEqualEarth = equalEarth;\n  exports.geoEqualEarthRaw = equalEarthRaw;\n  exports.geoEquirectangular = equirectangular;\n  exports.geoEquirectangularRaw = equirectangularRaw;\n  exports.geoGnomonic = gnomonic;\n  exports.geoGnomonicRaw = gnomonicRaw;\n  exports.geoGraticule = graticule;\n  exports.geoGraticule10 = graticule10;\n  exports.geoIdentity = identity$4;\n  exports.geoInterpolate = interpolate;\n  exports.geoLength = length$1;\n  exports.geoMercator = mercator;\n  exports.geoMercatorRaw = mercatorRaw;\n  exports.geoNaturalEarth1 = naturalEarth1;\n  exports.geoNaturalEarth1Raw = naturalEarth1Raw;\n  exports.geoOrthographic = orthographic;\n  exports.geoOrthographicRaw = orthographicRaw;\n  exports.geoPath = index$2;\n  exports.geoProjection = projection;\n  exports.geoProjectionMutator = projectionMutator;\n  exports.geoRotation = rotation;\n  exports.geoStereographic = stereographic;\n  exports.geoStereographicRaw = stereographicRaw;\n  exports.geoStream = geoStream;\n  exports.geoTransform = transform$1;\n  exports.geoTransverseMercator = transverseMercator;\n  exports.geoTransverseMercatorRaw = transverseMercatorRaw;\n  exports.gray = gray;\n  exports.greatest = greatest;\n  exports.greatestIndex = greatestIndex;\n  exports.group = group;\n  exports.groupSort = groupSort;\n  exports.groups = groups;\n  exports.hcl = hcl$2;\n  exports.hierarchy = hierarchy;\n  exports.histogram = bin;\n  exports.hsl = hsl$2;\n  exports.html = html;\n  exports.image = image;\n  exports.index = index$4;\n  exports.indexes = indexes;\n  exports.interpolate = interpolate$2;\n  exports.interpolateArray = array$3;\n  exports.interpolateBasis = basis$2;\n  exports.interpolateBasisClosed = basisClosed$1;\n  exports.interpolateBlues = Blues;\n  exports.interpolateBrBG = BrBG;\n  exports.interpolateBuGn = BuGn;\n  exports.interpolateBuPu = BuPu;\n  exports.interpolateCividis = cividis;\n  exports.interpolateCool = cool;\n  exports.interpolateCubehelix = cubehelix$2;\n  exports.interpolateCubehelixDefault = cubehelix;\n  exports.interpolateCubehelixLong = cubehelixLong;\n  exports.interpolateDate = date$1;\n  exports.interpolateDiscrete = discrete;\n  exports.interpolateGnBu = GnBu;\n  exports.interpolateGreens = Greens;\n  exports.interpolateGreys = Greys;\n  exports.interpolateHcl = hcl$1;\n  exports.interpolateHclLong = hclLong;\n  exports.interpolateHsl = hsl$1;\n  exports.interpolateHslLong = hslLong;\n  exports.interpolateHue = hue;\n  exports.interpolateInferno = inferno;\n  exports.interpolateLab = lab;\n  exports.interpolateMagma = magma;\n  exports.interpolateNumber = interpolateNumber;\n  exports.interpolateNumberArray = numberArray;\n  exports.interpolateObject = object$1;\n  exports.interpolateOrRd = OrRd;\n  exports.interpolateOranges = Oranges;\n  exports.interpolatePRGn = PRGn;\n  exports.interpolatePiYG = PiYG;\n  exports.interpolatePlasma = plasma;\n  exports.interpolatePuBu = PuBu;\n  exports.interpolatePuBuGn = PuBuGn;\n  exports.interpolatePuOr = PuOr;\n  exports.interpolatePuRd = PuRd;\n  exports.interpolatePurples = Purples;\n  exports.interpolateRainbow = rainbow;\n  exports.interpolateRdBu = RdBu;\n  exports.interpolateRdGy = RdGy;\n  exports.interpolateRdPu = RdPu;\n  exports.interpolateRdYlBu = RdYlBu;\n  exports.interpolateRdYlGn = RdYlGn;\n  exports.interpolateReds = Reds;\n  exports.interpolateRgb = interpolateRgb;\n  exports.interpolateRgbBasis = rgbBasis;\n  exports.interpolateRgbBasisClosed = rgbBasisClosed;\n  exports.interpolateRound = interpolateRound;\n  exports.interpolateSinebow = sinebow;\n  exports.interpolateSpectral = Spectral;\n  exports.interpolateString = interpolateString;\n  exports.interpolateTransformCss = interpolateTransformCss;\n  exports.interpolateTransformSvg = interpolateTransformSvg;\n  exports.interpolateTurbo = turbo;\n  exports.interpolateViridis = viridis;\n  exports.interpolateWarm = warm;\n  exports.interpolateYlGn = YlGn;\n  exports.interpolateYlGnBu = YlGnBu;\n  exports.interpolateYlOrBr = YlOrBr;\n  exports.interpolateYlOrRd = YlOrRd;\n  exports.interpolateZoom = interpolateZoom;\n  exports.interrupt = interrupt;\n  exports.intersection = intersection;\n  exports.interval = interval;\n  exports.isoFormat = formatIso$1;\n  exports.isoParse = parseIso$1;\n  exports.json = json;\n  exports.lab = lab$1;\n  exports.lch = lch;\n  exports.least = least;\n  exports.leastIndex = leastIndex;\n  exports.line = line;\n  exports.lineRadial = lineRadial$1;\n  exports.linkHorizontal = linkHorizontal;\n  exports.linkRadial = linkRadial;\n  exports.linkVertical = linkVertical;\n  exports.local = local$1;\n  exports.map = map$1;\n  exports.matcher = matcher;\n  exports.max = max$3;\n  exports.maxIndex = maxIndex;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min$2;\n  exports.minIndex = minIndex;\n  exports.mode = mode;\n  exports.namespace = namespace;\n  exports.namespaces = namespaces;\n  exports.nice = nice$1;\n  exports.now = now;\n  exports.pack = index$1;\n  exports.packEnclose = enclose;\n  exports.packSiblings = siblings;\n  exports.pairs = pairs;\n  exports.partition = partition;\n  exports.path = path;\n  exports.permute = permute;\n  exports.pie = pie;\n  exports.piecewise = piecewise;\n  exports.pointRadial = pointRadial;\n  exports.pointer = pointer;\n  exports.pointers = pointers;\n  exports.polygonArea = area$1;\n  exports.polygonCentroid = centroid;\n  exports.polygonContains = contains;\n  exports.polygonHull = hull;\n  exports.polygonLength = length;\n  exports.precisionFixed = precisionFixed;\n  exports.precisionPrefix = precisionPrefix;\n  exports.precisionRound = precisionRound;\n  exports.quadtree = quadtree;\n  exports.quantile = quantile$1;\n  exports.quantileSorted = quantileSorted;\n  exports.quantize = quantize$1;\n  exports.quickselect = quickselect;\n  exports.radialArea = areaRadial;\n  exports.radialLine = lineRadial$1;\n  exports.randomBates = bates;\n  exports.randomBernoulli = bernoulli;\n  exports.randomBeta = beta;\n  exports.randomBinomial = binomial;\n  exports.randomCauchy = cauchy;\n  exports.randomExponential = exponential;\n  exports.randomGamma = gamma;\n  exports.randomGeometric = geometric;\n  exports.randomInt = int;\n  exports.randomIrwinHall = irwinHall;\n  exports.randomLcg = lcg;\n  exports.randomLogNormal = logNormal;\n  exports.randomLogistic = logistic;\n  exports.randomNormal = normal;\n  exports.randomPareto = pareto;\n  exports.randomPoisson = poisson;\n  exports.randomUniform = uniform;\n  exports.randomWeibull = weibull;\n  exports.range = range$2;\n  exports.reduce = reduce;\n  exports.reverse = reverse$1;\n  exports.rgb = rgb;\n  exports.ribbon = ribbon$1;\n  exports.ribbonArrow = ribbonArrow;\n  exports.rollup = rollup;\n  exports.rollups = rollups;\n  exports.scaleBand = band;\n  exports.scaleDiverging = diverging$1;\n  exports.scaleDivergingLog = divergingLog;\n  exports.scaleDivergingPow = divergingPow;\n  exports.scaleDivergingSqrt = divergingSqrt;\n  exports.scaleDivergingSymlog = divergingSymlog;\n  exports.scaleIdentity = identity$2;\n  exports.scaleImplicit = implicit;\n  exports.scaleLinear = linear;\n  exports.scaleLog = log;\n  exports.scaleOrdinal = ordinal;\n  exports.scalePoint = point$4;\n  exports.scalePow = pow;\n  exports.scaleQuantile = quantile;\n  exports.scaleQuantize = quantize;\n  exports.scaleRadial = radial;\n  exports.scaleSequential = sequential;\n  exports.scaleSequentialLog = sequentialLog;\n  exports.scaleSequentialPow = sequentialPow;\n  exports.scaleSequentialQuantile = sequentialQuantile;\n  exports.scaleSequentialSqrt = sequentialSqrt;\n  exports.scaleSequentialSymlog = sequentialSymlog;\n  exports.scaleSqrt = sqrt$1;\n  exports.scaleSymlog = symlog;\n  exports.scaleThreshold = threshold;\n  exports.scaleTime = time;\n  exports.scaleUtc = utcTime;\n  exports.scan = scan;\n  exports.schemeAccent = Accent;\n  exports.schemeBlues = scheme$5;\n  exports.schemeBrBG = scheme$q;\n  exports.schemeBuGn = scheme$h;\n  exports.schemeBuPu = scheme$g;\n  exports.schemeCategory10 = category10;\n  exports.schemeDark2 = Dark2;\n  exports.schemeGnBu = scheme$f;\n  exports.schemeGreens = scheme$4;\n  exports.schemeGreys = scheme$3;\n  exports.schemeOrRd = scheme$e;\n  exports.schemeOranges = scheme;\n  exports.schemePRGn = scheme$p;\n  exports.schemePaired = Paired;\n  exports.schemePastel1 = Pastel1;\n  exports.schemePastel2 = Pastel2;\n  exports.schemePiYG = scheme$o;\n  exports.schemePuBu = scheme$c;\n  exports.schemePuBuGn = scheme$d;\n  exports.schemePuOr = scheme$n;\n  exports.schemePuRd = scheme$b;\n  exports.schemePurples = scheme$2;\n  exports.schemeRdBu = scheme$m;\n  exports.schemeRdGy = scheme$l;\n  exports.schemeRdPu = scheme$a;\n  exports.schemeRdYlBu = scheme$k;\n  exports.schemeRdYlGn = scheme$j;\n  exports.schemeReds = scheme$1;\n  exports.schemeSet1 = Set1;\n  exports.schemeSet2 = Set2;\n  exports.schemeSet3 = Set3;\n  exports.schemeSpectral = scheme$i;\n  exports.schemeTableau10 = Tableau10;\n  exports.schemeYlGn = scheme$8;\n  exports.schemeYlGnBu = scheme$9;\n  exports.schemeYlOrBr = scheme$7;\n  exports.schemeYlOrRd = scheme$6;\n  exports.select = select;\n  exports.selectAll = selectAll;\n  exports.selection = selection;\n  exports.selector = selector;\n  exports.selectorAll = selectorAll;\n  exports.shuffle = shuffle$1;\n  exports.shuffler = shuffler;\n  exports.some = some;\n  exports.sort = sort;\n  exports.stack = stack;\n  exports.stackOffsetDiverging = diverging;\n  exports.stackOffsetExpand = expand;\n  exports.stackOffsetNone = none$1;\n  exports.stackOffsetSilhouette = silhouette;\n  exports.stackOffsetWiggle = wiggle;\n  exports.stackOrderAppearance = appearance;\n  exports.stackOrderAscending = ascending;\n  exports.stackOrderDescending = descending;\n  exports.stackOrderInsideOut = insideOut;\n  exports.stackOrderNone = none;\n  exports.stackOrderReverse = reverse;\n  exports.stratify = stratify;\n  exports.style = styleValue;\n  exports.subset = subset;\n  exports.sum = sum$2;\n  exports.superset = superset;\n  exports.svg = svg;\n  exports.symbol = symbol;\n  exports.symbolCircle = circle;\n  exports.symbolCross = cross;\n  exports.symbolDiamond = diamond;\n  exports.symbolSquare = square;\n  exports.symbolStar = star;\n  exports.symbolTriangle = triangle;\n  exports.symbolWye = wye;\n  exports.symbols = symbols;\n  exports.text = text;\n  exports.thresholdFreedmanDiaconis = thresholdFreedmanDiaconis;\n  exports.thresholdScott = thresholdScott;\n  exports.thresholdSturges = thresholdSturges;\n  exports.tickFormat = tickFormat;\n  exports.tickIncrement = tickIncrement;\n  exports.tickStep = tickStep;\n  exports.ticks = ticks;\n  exports.timeDay = timeDay;\n  exports.timeDays = days;\n  exports.timeFormatDefaultLocale = defaultLocale;\n  exports.timeFormatLocale = formatLocale;\n  exports.timeFriday = friday;\n  exports.timeFridays = fridays;\n  exports.timeHour = timeHour;\n  exports.timeHours = hours;\n  exports.timeInterval = newInterval;\n  exports.timeMillisecond = millisecond$1;\n  exports.timeMilliseconds = milliseconds;\n  exports.timeMinute = timeMinute;\n  exports.timeMinutes = minutes;\n  exports.timeMonday = monday;\n  exports.timeMondays = mondays;\n  exports.timeMonth = timeMonth;\n  exports.timeMonths = months;\n  exports.timeSaturday = saturday;\n  exports.timeSaturdays = saturdays;\n  exports.timeSecond = utcSecond;\n  exports.timeSeconds = seconds;\n  exports.timeSunday = sunday;\n  exports.timeSundays = sundays;\n  exports.timeThursday = thursday;\n  exports.timeThursdays = thursdays;\n  exports.timeTickInterval = timeTickInterval;\n  exports.timeTicks = timeTicks;\n  exports.timeTuesday = tuesday;\n  exports.timeTuesdays = tuesdays;\n  exports.timeWednesday = wednesday;\n  exports.timeWednesdays = wednesdays;\n  exports.timeWeek = sunday;\n  exports.timeWeeks = sundays;\n  exports.timeYear = timeYear;\n  exports.timeYears = years;\n  exports.timeout = timeout;\n  exports.timer = timer;\n  exports.timerFlush = timerFlush;\n  exports.transition = transition;\n  exports.transpose = transpose;\n  exports.tree = tree;\n  exports.treemap = index;\n  exports.treemapBinary = binary;\n  exports.treemapDice = treemapDice;\n  exports.treemapResquarify = resquarify;\n  exports.treemapSlice = treemapSlice;\n  exports.treemapSliceDice = sliceDice;\n  exports.treemapSquarify = squarify;\n  exports.tsv = tsv;\n  exports.tsvFormat = tsvFormat;\n  exports.tsvFormatBody = tsvFormatBody;\n  exports.tsvFormatRow = tsvFormatRow;\n  exports.tsvFormatRows = tsvFormatRows;\n  exports.tsvFormatValue = tsvFormatValue;\n  exports.tsvParse = tsvParse;\n  exports.tsvParseRows = tsvParseRows;\n  exports.union = union;\n  exports.utcDay = utcDay$1;\n  exports.utcDays = utcDays;\n  exports.utcFriday = utcFriday;\n  exports.utcFridays = utcFridays;\n  exports.utcHour = utcHour$1;\n  exports.utcHours = utcHours;\n  exports.utcMillisecond = millisecond$1;\n  exports.utcMilliseconds = milliseconds;\n  exports.utcMinute = utcMinute$1;\n  exports.utcMinutes = utcMinutes;\n  exports.utcMonday = utcMonday;\n  exports.utcMondays = utcMondays;\n  exports.utcMonth = utcMonth$1;\n  exports.utcMonths = utcMonths;\n  exports.utcSaturday = utcSaturday;\n  exports.utcSaturdays = utcSaturdays;\n  exports.utcSecond = utcSecond;\n  exports.utcSeconds = seconds;\n  exports.utcSunday = utcSunday;\n  exports.utcSundays = utcSundays;\n  exports.utcThursday = utcThursday;\n  exports.utcThursdays = utcThursdays;\n  exports.utcTickInterval = utcTickInterval;\n  exports.utcTicks = utcTicks;\n  exports.utcTuesday = utcTuesday;\n  exports.utcTuesdays = utcTuesdays;\n  exports.utcWednesday = utcWednesday;\n  exports.utcWednesdays = utcWednesdays;\n  exports.utcWeek = utcSunday;\n  exports.utcWeeks = utcSundays;\n  exports.utcYear = utcYear$1;\n  exports.utcYears = utcYears;\n  exports.variance = variance;\n  exports.version = version;\n  exports.window = defaultView;\n  exports.xml = xml;\n  exports.zip = zip;\n  exports.zoom = zoom;\n  exports.zoomIdentity = identity;\n  exports.zoomTransform = transform;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;","function _typeof2(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\n/*!\n * Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com\n * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)\n */\n(function () {\n  'use strict';\n\n  var _WINDOW = {};\n  var _DOCUMENT = {};\n\n  try {\n    if (typeof window !== 'undefined') _WINDOW = window;\n    if (typeof document !== 'undefined') _DOCUMENT = document;\n  } catch (e) {}\n\n  var _ref = _WINDOW.navigator || {},\n      _ref$userAgent = _ref.userAgent,\n      userAgent = _ref$userAgent === void 0 ? '' : _ref$userAgent;\n\n  var WINDOW = _WINDOW;\n  var DOCUMENT = _DOCUMENT;\n  var IS_BROWSER = !!WINDOW.document;\n  var IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === 'function' && typeof DOCUMENT.createElement === 'function';\n  var IS_IE = ~userAgent.indexOf('MSIE') || ~userAgent.indexOf('Trident/');\n  var NAMESPACE_IDENTIFIER = '___FONT_AWESOME___';\n\n  var PRODUCTION = function () {\n    try {\n      return \"production\" === 'production';\n    } catch (e) {\n      return false;\n    }\n  }();\n\n  function bunker(fn) {\n    try {\n      fn();\n    } catch (e) {\n      if (!PRODUCTION) {\n        throw e;\n      }\n    }\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      var ownKeys = Object.keys(source);\n\n      if (typeof Object.getOwnPropertySymbols === 'function') {\n        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n      }\n\n      ownKeys.forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    }\n\n    return target;\n  }\n\n  var w = WINDOW || {};\n  if (!w[NAMESPACE_IDENTIFIER]) w[NAMESPACE_IDENTIFIER] = {};\n  if (!w[NAMESPACE_IDENTIFIER].styles) w[NAMESPACE_IDENTIFIER].styles = {};\n  if (!w[NAMESPACE_IDENTIFIER].hooks) w[NAMESPACE_IDENTIFIER].hooks = {};\n  if (!w[NAMESPACE_IDENTIFIER].shims) w[NAMESPACE_IDENTIFIER].shims = [];\n  var namespace = w[NAMESPACE_IDENTIFIER];\n\n  function defineIcons(prefix, icons) {\n    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var _params$skipHooks = params.skipHooks,\n        skipHooks = _params$skipHooks === void 0 ? false : _params$skipHooks;\n    var normalized = Object.keys(icons).reduce(function (acc, iconName) {\n      var icon = icons[iconName];\n      var expanded = !!icon.icon;\n\n      if (expanded) {\n        acc[icon.iconName] = icon.icon;\n      } else {\n        acc[iconName] = icon;\n      }\n\n      return acc;\n    }, {});\n\n    if (typeof namespace.hooks.addPack === 'function' && !skipHooks) {\n      namespace.hooks.addPack(prefix, normalized);\n    } else {\n      namespace.styles[prefix] = _objectSpread({}, namespace.styles[prefix] || {}, normalized);\n    }\n    /**\n     * Font Awesome 4 used the prefix of `fa` for all icons. With the introduction\n     * of new styles we needed to differentiate between them. Prefix `fa` is now an alias\n     * for `fas` so we'll easy the upgrade process for our users by automatically defining\n     * this as well.\n     */\n\n\n    if (prefix === 'fas') {\n      defineIcons('fa', icons);\n    }\n  }\n\n  var icons = {\n    \"500px\": [448, 512, [], \"f26e\", \"M103.3 344.3c-6.5-14.2-6.9-18.3 7.4-23.1 25.6-8 8 9.2 43.2 49.2h.3v-93.9c1.2-50.2 44-92.2 97.7-92.2 53.9 0 97.7 43.5 97.7 96.8 0 63.4-60.8 113.2-128.5 93.3-10.5-4.2-2.1-31.7 8.5-28.6 53 0 89.4-10.1 89.4-64.4 0-61-77.1-89.6-116.9-44.6-23.5 26.4-17.6 42.1-17.6 157.6 50.7 31 118.3 22 160.4-20.1 24.8-24.8 38.5-58 38.5-93 0-35.2-13.8-68.2-38.8-93.3-24.8-24.8-57.8-38.5-93.3-38.5s-68.8 13.8-93.5 38.5c-.3.3-16 16.5-21.2 23.9l-.5.6c-3.3 4.7-6.3 9.1-20.1 6.1-6.9-1.7-14.3-5.8-14.3-11.8V20c0-5 3.9-10.5 10.5-10.5h241.3c8.3 0 8.3 11.6 8.3 15.1 0 3.9 0 15.1-8.3 15.1H130.3v132.9h.3c104.2-109.8 282.8-36 282.8 108.9 0 178.1-244.8 220.3-310.1 62.8zm63.3-260.8c-.5 4.2 4.6 24.5 14.6 20.6C306 56.6 384 144.5 390.6 144.5c4.8 0 22.8-15.3 14.3-22.8-93.2-89-234.5-57-238.3-38.2zM393 414.7C283 524.6 94 475.5 61 310.5c0-12.2-30.4-7.4-28.9 3.3 24 173.4 246 256.9 381.6 121.3 6.9-7.8-12.6-28.4-20.7-20.4zM213.6 306.6c0 4 4.3 7.3 5.5 8.5 3 3 6.1 4.4 8.5 4.4 3.8 0 2.6.2 22.3-19.5 19.6 19.3 19.1 19.5 22.3 19.5 5.4 0 18.5-10.4 10.7-18.2L265.6 284l18.2-18.2c6.3-6.8-10.1-21.8-16.2-15.7L249.7 268c-18.6-18.8-18.4-19.5-21.5-19.5-5 0-18 11.7-12.4 17.3L234 284c-18.1 17.9-20.4 19.2-20.4 22.6z\"],\n    \"accessible-icon\": [448, 512, [], \"f368\", \"M423.9 255.8L411 413.1c-3.3 40.7-63.9 35.1-60.6-4.9l10-122.5-41.1 2.3c10.1 20.7 15.8 43.9 15.8 68.5 0 41.2-16.1 78.7-42.3 106.5l-39.3-39.3c57.9-63.7 13.1-167.2-74-167.2-25.9 0-49.5 9.9-67.2 26L73 243.2c22-20.7 50.1-35.1 81.4-40.2l75.3-85.7-42.6-24.8-51.6 46c-30 26.8-70.6-18.5-40.5-45.4l68-60.7c9.8-8.8 24.1-10.2 35.5-3.6 0 0 139.3 80.9 139.5 81.1 16.2 10.1 20.7 36 6.1 52.6L285.7 229l106.1-5.9c18.5-1.1 33.6 14.4 32.1 32.7zm-64.9-154c28.1 0 50.9-22.8 50.9-50.9C409.9 22.8 387.1 0 359 0c-28.1 0-50.9 22.8-50.9 50.9 0 28.1 22.8 50.9 50.9 50.9zM179.6 456.5c-80.6 0-127.4-90.6-82.7-156.1l-39.7-39.7C36.4 287 24 320.3 24 356.4c0 130.7 150.7 201.4 251.4 122.5l-39.7-39.7c-16 10.9-35.3 17.3-56.1 17.3z\"],\n    \"accusoft\": [640, 512, [], \"f369\", \"M322.1 252v-1l-51.2-65.8s-12 1.6-25 15.1c-9 9.3-242.1 239.1-243.4 240.9-7 10 1.6 6.8 15.7 1.7.8 0 114.5-36.6 114.5-36.6.5-.6-.1-.1.6-.6-.4-5.1-.8-26.2-1-27.7-.6-5.2 2.2-6.9 7-8.9l92.6-33.8c.6-.8 88.5-81.7 90.2-83.3zm160.1 120.1c13.3 16.1 20.7 13.3 30.8 9.3 3.2-1.2 115.4-47.6 117.8-48.9 8-4.3-1.7-16.7-7.2-23.4-2.1-2.5-205.1-245.6-207.2-248.3-9.7-12.2-14.3-12.9-38.4-12.8-10.2 0-106.8.5-116.5.6-19.2.1-32.9-.3-19.2 16.9C250 75 476.5 365.2 482.2 372.1zm152.7 1.6c-2.3-.3-24.6-4.7-38-7.2 0 0-115 50.4-117.5 51.6-16 7.3-26.9-3.2-36.7-14.6l-57.1-74c-5.4-.9-60.4-9.6-65.3-9.3-3.1.2-9.6.8-14.4 2.9-4.9 2.1-145.2 52.8-150.2 54.7-5.1 2-11.4 3.6-11.1 7.6.2 2.5 2 2.6 4.6 3.5 2.7.8 300.9 67.6 308 69.1 15.6 3.3 38.5 10.5 53.6 1.7 2.1-1.2 123.8-76.4 125.8-77.8 5.4-4 4.3-6.8-1.7-8.2z\"],\n    \"acquisitions-incorporated\": [384, 512, [], \"f6af\", \"M357.45 468.2c-1.2-7.7-1.3-7.6-9.6-7.6-99.8.2-111.8-2.4-112.7-2.6-12.3-1.7-20.6-10.5-21-23.1-.1-1.6-.2-71.6-1-129.1-.1-4.7 1.6-6.4 5.9-7.5 12.5-3 24.9-6.1 37.3-9.7 4.3-1.3 6.8-.2 8.4 3.5 4.5 10.3 8.8 20.6 13.2 30.9 1.6 3.7.1 4.4-3.4 4.4-10-.2-20-.1-30.4-.1v27h116c-1.4-9.5-2.7-18.1-4-27.5-7 0-13.8.4-20.4-.1-22.6-1.6-18.3-4.4-84-158.6-8.8-20.1-27.9-62.1-36.5-89.2-4.4-14 5.5-25.4 18.9-26.6 18.6-1.7 37.5-1.6 56.2-2 20.6-.4 41.2-.4 61.8-.5 3.1 0 4-1.4 4.3-4.3 1.2-9.8 2.7-19.5 4-29.2.8-5.3 1.6-10.7 2.4-16.1L23.75 0c-3.6 0-5.3 1.1-4.6 5.3 2.2 13.2-.8.8 6.4 45.3 63.4 0 71.8.9 101.8.5 12.3-.2 37 3.5 37.7 22.1.4 11.4-1.1 11.3-32.6 87.4-53.8 129.8-50.7 120.3-67.3 161-1.7 4.1-3.6 5.2-7.6 5.2-8.5-.2-17-.3-25.4.1-1.9.1-5.2 1.8-5.5 3.2-1.5 8.1-2.2 16.3-3.2 24.9h114.3v-27.6c-6.9 0-33.5.4-35.3-2.9 5.3-12.3 10.4-24.4 15.7-36.7 16.3 4 31.9 7.8 47.6 11.7 3.4.9 4.6 3 4.6 6.8-.1 42.9.1 85.9.2 128.8 0 10.2-5.5 19.1-14.9 23.1-6.5 2.7-3.3 3.4-121.4 2.4-5.3 0-7.1 2-7.6 6.8-1.5 12.9-2.9 25.9-5 38.8-.8 5 1.3 5.7 5.3 5.7 183.2.6-30.7 0 337.1 0-2.5-15-4.4-29.4-6.6-43.7zm-174.9-205.7c-13.3-4.2-26.6-8.2-39.9-12.5a44.53 44.53 0 0 1-5.8-2.9c17.2-44.3 34.2-88.1 51.3-132.1 7.5 2.4 7.9-.8 9.4 0 9.3 22.5 18.1 60.1 27 82.8 6.6 16.7 13 33.5 19.7 50.9a35.78 35.78 0 0 1-3.9 2.1c-13.1 3.9-26.4 7.5-39.4 11.7a27.66 27.66 0 0 1-18.4 0z\"],\n    \"adn\": [496, 512, [], \"f170\", \"M248 167.5l64.9 98.8H183.1l64.9-98.8zM496 256c0 136.9-111.1 248-248 248S0 392.9 0 256 111.1 8 248 8s248 111.1 248 248zm-99.8 82.7L248 115.5 99.8 338.7h30.4l33.6-51.7h168.6l33.6 51.7h30.2z\"],\n    \"adversal\": [512, 512, [], \"f36a\", \"M482.1 32H28.7C5.8 32 0 37.9 0 60.9v390.2C0 474.4 5.8 480 28.7 480h453.4c24.4 0 29.9-5.2 29.9-29.7V62.2c0-24.6-5.4-30.2-29.9-30.2zM178.4 220.3c-27.5-20.2-72.1-8.7-84.2 23.4-4.3 11.1-9.3 9.5-17.5 8.3-9.7-1.5-17.2-3.2-22.5-5.5-28.8-11.4 8.6-55.3 24.9-64.3 41.1-21.4 83.4-22.2 125.3-4.8 40.9 16.8 34.5 59.2 34.5 128.5 2.7 25.8-4.3 58.3 9.3 88.8 1.9 4.4.4 7.9-2.7 10.7-8.4 6.7-39.3 2.2-46.6-7.4-1.9-2.2-1.8-3.6-3.9-6.2-3.6-3.9-7.3-2.2-11.9 1-57.4 36.4-140.3 21.4-147-43.3-3.1-29.3 12.4-57.1 39.6-71 38.2-19.5 112.2-11.8 114-30.9 1.1-10.2-1.9-20.1-11.3-27.3zm286.7 222c0 15.1-11.1 9.9-17.8 9.9H52.4c-7.4 0-18.2 4.8-17.8-10.7.4-13.9 10.5-9.1 17.1-9.1 132.3-.4 264.5-.4 396.8 0 6.8 0 16.6-4.4 16.6 9.9zm3.8-340.5v291c0 5.7-.7 13.9-8.1 13.9-12.4-.4-27.5 7.1-36.1-5.6-5.8-8.7-7.8-4-12.4-1.2-53.4 29.7-128.1 7.1-144.4-85.2-6.1-33.4-.7-67.1 15.7-100 11.8-23.9 56.9-76.1 136.1-30.5v-71c0-26.2-.1-26.2 26-26.2 3.1 0 6.6.4 9.7 0 10.1-.8 13.6 4.4 13.6 14.3-.1.2-.1.3-.1.5zm-51.5 232.3c-19.5 47.6-72.9 43.3-90 5.2-15.1-33.3-15.5-68.2.4-101.5 16.3-34.1 59.7-35.7 81.5-4.8 20.6 28.8 14.9 84.6 8.1 101.1zm-294.8 35.3c-7.5-1.3-33-3.3-33.7-27.8-.4-13.9 7.8-23 19.8-25.8 24.4-5.9 49.3-9.9 73.7-14.7 8.9-2 7.4 4.4 7.8 9.5 1.4 33-26.1 59.2-67.6 58.8z\"],\n    \"affiliatetheme\": [512, 512, [], \"f36b\", \"M159.7 237.4C108.4 308.3 43.1 348.2 14 326.6-15.2 304.9 2.8 230 54.2 159.1c51.3-70.9 116.6-110.8 145.7-89.2 29.1 21.6 11.1 96.6-40.2 167.5zm351.2-57.3C437.1 303.5 319 367.8 246.4 323.7c-25-15.2-41.3-41.2-49-73.8-33.6 64.8-92.8 113.8-164.1 133.2 49.8 59.3 124.1 96.9 207 96.9 150 0 271.6-123.1 271.6-274.9.1-8.5-.3-16.8-1-25z\"],\n    \"airbnb\": [448, 512, [], \"f834\", \"M224 373.12c-25.24-31.67-40.08-59.43-45-83.18-22.55-88 112.61-88 90.06 0-5.45 24.25-20.29 52-45 83.18zm138.15 73.23c-42.06 18.31-83.67-10.88-119.3-50.47 103.9-130.07 46.11-200-18.85-200-54.92 0-85.16 46.51-73.28 100.5 6.93 29.19 25.23 62.39 54.43 99.5-32.53 36.05-60.55 52.69-85.15 54.92-50 7.43-89.11-41.06-71.3-91.09 15.1-39.16 111.72-231.18 115.87-241.56 15.75-30.07 25.56-57.4 59.38-57.4 32.34 0 43.4 25.94 60.37 59.87 36 70.62 89.35 177.48 114.84 239.09 13.17 33.07-1.37 71.29-37.01 86.64zm47-136.12C280.27 35.93 273.13 32 224 32c-45.52 0-64.87 31.67-84.66 72.79C33.18 317.1 22.89 347.19 22 349.81-3.22 419.14 48.74 480 111.63 480c21.71 0 60.61-6.06 112.37-62.4 58.68 63.78 101.26 62.4 112.37 62.4 62.89.05 114.85-60.86 89.61-130.19.02-3.89-16.82-38.9-16.82-39.58z\"],\n    \"algolia\": [448, 512, [], \"f36c\", \"M229.3 182.6c-49.3 0-89.2 39.9-89.2 89.2 0 49.3 39.9 89.2 89.2 89.2s89.2-39.9 89.2-89.2c0-49.3-40-89.2-89.2-89.2zm62.7 56.6l-58.9 30.6c-1.8.9-3.8-.4-3.8-2.3V201c0-1.5 1.3-2.7 2.7-2.6 26.2 1 48.9 15.7 61.1 37.1.7 1.3.2 3-1.1 3.7zM389.1 32H58.9C26.4 32 0 58.4 0 90.9V421c0 32.6 26.4 59 58.9 59H389c32.6 0 58.9-26.4 58.9-58.9V90.9C448 58.4 421.6 32 389.1 32zm-202.6 84.7c0-10.8 8.7-19.5 19.5-19.5h45.3c10.8 0 19.5 8.7 19.5 19.5v15.4c0 1.8-1.7 3-3.3 2.5-12.3-3.4-25.1-5.1-38.1-5.1-13.5 0-26.7 1.8-39.4 5.5-1.7.5-3.4-.8-3.4-2.5v-15.8zm-84.4 37l9.2-9.2c7.6-7.6 19.9-7.6 27.5 0l7.7 7.7c1.1 1.1 1 3-.3 4-6.2 4.5-12.1 9.4-17.6 14.9-5.4 5.4-10.4 11.3-14.8 17.4-1 1.3-2.9 1.5-4 .3l-7.7-7.7c-7.6-7.5-7.6-19.8 0-27.4zm127.2 244.8c-70 0-126.6-56.7-126.6-126.6s56.7-126.6 126.6-126.6c70 0 126.6 56.6 126.6 126.6 0 69.8-56.7 126.6-126.6 126.6z\"],\n    \"alipay\": [448, 512, [], \"f642\", \"M377.74 32H70.26C31.41 32 0 63.41 0 102.26v307.48C0 448.59 31.41 480 70.26 480h307.48c38.52 0 69.76-31.08 70.26-69.6-45.96-25.62-110.59-60.34-171.6-88.44-32.07 43.97-84.14 81-148.62 81-70.59 0-93.73-45.3-97.04-76.37-3.97-39.01 14.88-81.5 99.52-81.5 35.38 0 79.35 10.25 127.13 24.96 16.53-30.09 26.45-60.34 26.45-60.34h-178.2v-16.7h92.08v-31.24H88.28v-19.01h109.44V92.34h50.92v50.42h109.44v19.01H248.63v31.24h88.77s-15.21 46.62-38.35 90.92c48.93 16.7 100.01 36.04 148.62 52.74V102.26C447.83 63.57 416.43 32 377.74 32zM47.28 322.95c.99 20.17 10.25 53.73 69.93 53.73 52.07 0 92.58-39.68 117.87-72.9-44.63-18.68-84.48-31.41-109.44-31.41-67.45 0-79.35 33.06-78.36 50.58z\"],\n    \"amazon\": [448, 512, [], \"f270\", \"M257.2 162.7c-48.7 1.8-169.5 15.5-169.5 117.5 0 109.5 138.3 114 183.5 43.2 6.5 10.2 35.4 37.5 45.3 46.8l56.8-56S341 288.9 341 261.4V114.3C341 89 316.5 32 228.7 32 140.7 32 94 87 94 136.3l73.5 6.8c16.3-49.5 54.2-49.5 54.2-49.5 40.7-.1 35.5 29.8 35.5 69.1zm0 86.8c0 80-84.2 68-84.2 17.2 0-47.2 50.5-56.7 84.2-57.8v40.6zm136 163.5c-7.7 10-70 67-174.5 67S34.2 408.5 9.7 379c-6.8-7.7 1-11.3 5.5-8.3C88.5 415.2 203 488.5 387.7 401c7.5-3.7 13.3 2 5.5 12zm39.8 2.2c-6.5 15.8-16 26.8-21.2 31-5.5 4.5-9.5 2.7-6.5-3.8s19.3-46.5 12.7-55c-6.5-8.3-37-4.3-48-3.2-10.8 1-13 2-14-.3-2.3-5.7 21.7-15.5 37.5-17.5 15.7-1.8 41-.8 46 5.7 3.7 5.1 0 27.1-6.5 43.1z\"],\n    \"amazon-pay\": [640, 512, [], \"f42c\", \"M14 325.3c2.3-4.2 5.2-4.9 9.7-2.5 10.4 5.6 20.6 11.4 31.2 16.7a595.88 595.88 0 0 0 127.4 46.3 616.61 616.61 0 0 0 63.2 11.8 603.33 603.33 0 0 0 95 5.2c17.4-.4 34.8-1.8 52.1-3.8a603.66 603.66 0 0 0 163.3-42.8c2.9-1.2 5.9-2 9.1-1.2 6.7 1.8 9 9 4.1 13.9a70 70 0 0 1-9.6 7.4c-30.7 21.1-64.2 36.4-99.6 47.9a473.31 473.31 0 0 1-75.1 17.6 431 431 0 0 1-53.2 4.8 21.3 21.3 0 0 0-2.5.3H308a21.3 21.3 0 0 0-2.5-.3c-3.6-.2-7.2-.3-10.7-.4a426.3 426.3 0 0 1-50.4-5.3A448.4 448.4 0 0 1 164 420a443.33 443.33 0 0 1-145.6-87c-1.8-1.6-3-3.8-4.4-5.7zM172 65.1l-4.3.6a80.92 80.92 0 0 0-38 15.1c-2.4 1.7-4.6 3.5-7.1 5.4a4.29 4.29 0 0 1-.4-1.4c-.4-2.7-.8-5.5-1.3-8.2-.7-4.6-3-6.6-7.6-6.6h-11.5c-6.9 0-8.2 1.3-8.2 8.2v209.3c0 1 0 2 .1 3 .2 3 2 4.9 4.9 5 7 .1 14.1.1 21.1 0 2.9 0 4.7-2 5-5 .1-1 .1-2 .1-3v-72.4c1.1.9 1.7 1.4 2.2 1.9 17.9 14.9 38.5 19.8 61 15.4 20.4-4 34.6-16.5 43.8-34.9 7-13.9 9.9-28.7 10.3-44.1.5-17.1-1.2-33.9-8.1-49.8-8.5-19.6-22.6-32.5-43.9-36.9-3.2-.7-6.5-1-9.8-1.5-2.8-.1-5.5-.1-8.3-.1zM124.6 107a3.48 3.48 0 0 1 1.7-3.3c13.7-9.5 28.8-14.5 45.6-13.2 14.9 1.1 27.1 8.4 33.5 25.9 3.9 10.7 4.9 21.8 4.9 33 0 10.4-.8 20.6-4 30.6-6.8 21.3-22.4 29.4-42.6 28.5-14-.6-26.2-6-37.4-13.9a3.57 3.57 0 0 1-1.7-3.3c.1-14.1 0-28.1 0-42.2s.1-28 0-42.1zm205.7-41.9c-1 .1-2 .3-2.9.4a148 148 0 0 0-28.9 4.1c-6.1 1.6-12 3.8-17.9 5.8-3.6 1.2-5.4 3.8-5.3 7.7.1 3.3-.1 6.6 0 9.9.1 4.8 2.1 6.1 6.8 4.9 7.8-2 15.6-4.2 23.5-5.7 12.3-2.3 24.7-3.3 37.2-1.4 6.5 1 12.6 2.9 16.8 8.4 3.7 4.8 5.1 10.5 5.3 16.4.3 8.3.2 16.6.3 24.9a7.84 7.84 0 0 1-.2 1.4c-.5-.1-.9 0-1.3-.1a180.56 180.56 0 0 0-32-4.9c-11.3-.6-22.5.1-33.3 3.9-12.9 4.5-23.3 12.3-29.4 24.9-4.7 9.8-5.4 20.2-3.9 30.7 2 14 9 24.8 21.4 31.7 11.9 6.6 24.8 7.4 37.9 5.4 15.1-2.3 28.5-8.7 40.3-18.4a7.36 7.36 0 0 1 1.6-1.1c.6 3.8 1.1 7.4 1.8 11 .6 3.1 2.5 5.1 5.4 5.2 5.4.1 10.9.1 16.3 0a4.84 4.84 0 0 0 4.8-4.7 26.2 26.2 0 0 0 .1-2.8v-106a80 80 0 0 0-.9-12.9c-1.9-12.9-7.4-23.5-19-30.4-6.7-4-14.1-6-21.8-7.1-3.6-.5-7.2-.8-10.8-1.3-3.9.1-7.9.1-11.9.1zm35 127.7a3.33 3.33 0 0 1-1.5 3c-11.2 8.1-23.5 13.5-37.4 14.9-5.7.6-11.4.4-16.8-1.8a20.08 20.08 0 0 1-12.4-13.3 32.9 32.9 0 0 1-.1-19.4c2.5-8.3 8.4-13 16.4-15.6a61.33 61.33 0 0 1 24.8-2.2c8.4.7 16.6 2.3 25 3.4 1.6.2 2.1 1 2.1 2.6-.1 4.8 0 9.5 0 14.3s-.2 9.4-.1 14.1zm259.9 129.4c-1-5-4.8-6.9-9.1-8.3a88.42 88.42 0 0 0-21-3.9 147.32 147.32 0 0 0-39.2 1.9c-14.3 2.7-27.9 7.3-40 15.6a13.75 13.75 0 0 0-3.7 3.5 5.11 5.11 0 0 0-.5 4c.4 1.5 2.1 1.9 3.6 1.8a16.2 16.2 0 0 0 2.2-.1c7.8-.8 15.5-1.7 23.3-2.5 11.4-1.1 22.9-1.8 34.3-.9a71.64 71.64 0 0 1 14.4 2.7c5.1 1.4 7.4 5.2 7.6 10.4.4 8-1.4 15.7-3.5 23.3-4.1 15.4-10 30.3-15.8 45.1a17.6 17.6 0 0 0-1 3c-.5 2.9 1.2 4.8 4.1 4.1a10.56 10.56 0 0 0 4.8-2.5 145.91 145.91 0 0 0 12.7-13.4c12.8-16.4 20.3-35.3 24.7-55.6.8-3.6 1.4-7.3 2.1-10.9v-17.3zM493.1 199q-19.35-53.55-38.7-107.2c-2-5.7-4.2-11.3-6.3-16.9-1.1-2.9-3.2-4.8-6.4-4.8-7.6-.1-15.2-.2-22.9-.1-2.5 0-3.7 2-3.2 4.5a43.1 43.1 0 0 0 1.9 6.1q29.4 72.75 59.1 145.5c1.7 4.1 2.1 7.6.2 11.8-3.3 7.3-5.9 15-9.3 22.3-3 6.5-8 11.4-15.2 13.3a42.13 42.13 0 0 1-15.4 1.1c-2.5-.2-5-.8-7.5-1-3.4-.2-5.1 1.3-5.2 4.8q-.15 5 0 9.9c.1 5.5 2 8 7.4 8.9a108.18 108.18 0 0 0 16.9 2c17.1.4 30.7-6.5 39.5-21.4a131.63 131.63 0 0 0 9.2-18.4q35.55-89.7 70.6-179.6a26.62 26.62 0 0 0 1.6-5.5c.4-2.8-.9-4.4-3.7-4.4-6.6-.1-13.3 0-19.9 0a7.54 7.54 0 0 0-7.7 5.2c-.5 1.4-1.1 2.7-1.6 4.1l-34.8 100c-2.5 7.2-5.1 14.5-7.7 22.2-.4-1.1-.6-1.7-.9-2.4z\"],\n    \"amilia\": [448, 512, [], \"f36d\", \"M240.1 32c-61.9 0-131.5 16.9-184.2 55.4-5.1 3.1-9.1 9.2-7.2 19.4 1.1 5.1 5.1 27.4 10.2 39.6 4.1 10.2 14.2 10.2 20.3 6.1 32.5-22.3 96.5-47.7 152.3-47.7 57.9 0 58.9 28.4 58.9 73.1v38.5C203 227.7 78.2 251 46.7 264.2 11.2 280.5 16.3 357.7 16.3 376s15.2 104 124.9 104c47.8 0 113.7-20.7 153.3-42.1v25.4c0 3 2.1 8.2 6.1 9.1 3.1 1 50.7 2 59.9 2s62.5.3 66.5-.7c4.1-1 5.1-6.1 5.1-9.1V168c-.1-80.3-57.9-136-192-136zm50.2 348c-21.4 13.2-48.7 24.4-79.1 24.4-52.8 0-58.9-33.5-59-44.7 0-12.2-3-42.7 18.3-52.9 24.3-13.2 75.1-29.4 119.8-33.5z\"],\n    \"android\": [576, 512, [], \"f17b\", \"M420.55,301.93a24,24,0,1,1,24-24,24,24,0,0,1-24,24m-265.1,0a24,24,0,1,1,24-24,24,24,0,0,1-24,24m273.7-144.48,47.94-83a10,10,0,1,0-17.27-10h0l-48.54,84.07a301.25,301.25,0,0,0-246.56,0L116.18,64.45a10,10,0,1,0-17.27,10h0l47.94,83C64.53,202.22,8.24,285.55,0,384H576c-8.24-98.45-64.54-181.78-146.85-226.55\"],\n    \"angellist\": [448, 512, [], \"f209\", \"M347.1 215.4c11.7-32.6 45.4-126.9 45.4-157.1 0-26.6-15.7-48.9-43.7-48.9-44.6 0-84.6 131.7-97.1 163.1C242 144 196.6 0 156.6 0c-31.1 0-45.7 22.9-45.7 51.7 0 35.3 34.2 126.8 46.6 162-6.3-2.3-13.1-4.3-20-4.3-23.4 0-48.3 29.1-48.3 52.6 0 8.9 4.9 21.4 8 29.7-36.9 10-51.1 34.6-51.1 71.7C46 435.6 114.4 512 210.6 512c118 0 191.4-88.6 191.4-202.9 0-43.1-6.9-82-54.9-93.7zM311.7 108c4-12.3 21.1-64.3 37.1-64.3 8.6 0 10.9 8.9 10.9 16 0 19.1-38.6 124.6-47.1 148l-34-6 33.1-93.7zM142.3 48.3c0-11.9 14.5-45.7 46.3 47.1l34.6 100.3c-15.6-1.3-27.7-3-35.4 1.4-10.9-28.8-45.5-119.7-45.5-148.8zM140 244c29.3 0 67.1 94.6 67.1 107.4 0 5.1-4.9 11.4-10.6 11.4-20.9 0-76.9-76.9-76.9-97.7.1-7.7 12.7-21.1 20.4-21.1zm184.3 186.3c-29.1 32-66.3 48.6-109.7 48.6-59.4 0-106.3-32.6-128.9-88.3-17.1-43.4 3.8-68.3 20.6-68.3 11.4 0 54.3 60.3 54.3 73.1 0 4.9-7.7 8.3-11.7 8.3-16.1 0-22.4-15.5-51.1-51.4-29.7 29.7 20.5 86.9 58.3 86.9 26.1 0 43.1-24.2 38-42 3.7 0 8.3.3 11.7-.6 1.1 27.1 9.1 59.4 41.7 61.7 0-.9 2-7.1 2-7.4 0-17.4-10.6-32.6-10.6-50.3 0-28.3 21.7-55.7 43.7-71.7 8-6 17.7-9.7 27.1-13.1 9.7-3.7 20-8 27.4-15.4-1.1-11.2-5.7-21.1-16.9-21.1-27.7 0-120.6 4-120.6-39.7 0-6.7.1-13.1 17.4-13.1 32.3 0 114.3 8 138.3 29.1 18.1 16.1 24.3 113.2-31 174.7zm-98.6-126c9.7 3.1 19.7 4 29.7 6-7.4 5.4-14 12-20.3 19.1-2.8-8.5-6.2-16.8-9.4-25.1z\"],\n    \"angrycreative\": [640, 512, [], \"f36e\", \"M640 238.2l-3.2 28.2-34.5 2.3-2 18.1 34.5-2.3-3.2 28.2-34.4 2.2-2.3 20.1 34.4-2.2-3 26.1-64.7 4.1 12.7-113.2L527 365.2l-31.9 2-23.8-117.8 30.3-2 13.6 79.4 31.7-82.4 93.1-6.2zM426.8 371.5l28.3-1.8L468 249.6l-28.4 1.9-12.8 120zM162 388.1l-19.4-36-3.5 37.4-28.2 1.7 2.7-29.1c-11 18-32 34.3-56.9 35.8C23.9 399.9-3 377 .3 339.7c2.6-29.3 26.7-62.8 67.5-65.4 37.7-2.4 47.6 23.2 51.3 28.8l2.8-30.8 38.9-2.5c20.1-1.3 38.7 3.7 42.5 23.7l2.6-26.6 64.8-4.2-2.7 27.9-36.4 2.4-1.7 17.9 36.4-2.3-2.7 27.9-36.4 2.3-1.9 19.9 36.3-2.3-2.1 20.8 55-117.2 23.8-1.6L370.4 369l8.9-85.6-22.3 1.4 2.9-27.9 75-4.9-3 28-24.3 1.6-9.7 91.9-58 3.7-4.3-15.6-39.4 2.5-8 16.3-126.2 7.7zm-44.3-70.2l-26.4 1.7C84.6 307.2 76.9 303 65 303.8c-19 1.2-33.3 17.5-34.6 33.3-1.4 16 7.3 32.5 28.7 31.2 12.8-.8 21.3-8.6 28.9-18.9l27-1.7 2.7-29.8zm56.1-7.7c1.2-12.9-7.6-13.6-26.1-12.4l-2.7 28.5c14.2-.9 27.5-2.1 28.8-16.1zm21.1 70.8l5.8-60c-5 13.5-14.7 21.1-27.9 26.6l22.1 33.4zm135.4-45l-7.9-37.8-15.8 39.3 23.7-1.5zm-170.1-74.6l-4.3-17.5-39.6 2.6-8.1 18.2-31.9 2.1 57-121.9 23.9-1.6 30.7 102 9.9-104.7 27-1.8 37.8 63.6 6.5-66.6 28.5-1.9-4 41.2c7.4-13.5 22.9-44.7 63.6-47.5 40.5-2.8 52.4 29.3 53.4 30.3l3.3-32 39.3-2.7c12.7-.9 27.8.3 36.3 9.7l-4.4-11.9 32.2-2.2 12.9 43.2 23-45.7 31-2.2-43.6 78.4-4.8 44.3-28.4 1.9 4.8-44.3-15.8-43c1 22.3-9.2 40.1-32 49.6l25.2 38.8-36.4 2.4-19.2-36.8-4 38.3-28.4 1.9 3.3-31.5c-6.7 9.3-19.7 35.4-59.6 38-26.2 1.7-45.6-10.3-55.4-39.2l-4 40.3-25 1.6-37.6-63.3-6.3 66.2-56.8 3.7zm276.6-82.1c10.2-.7 17.5-2.1 21.6-4.3 4.5-2.4 7-6.4 7.6-12.1.6-5.3-.6-8.8-3.4-10.4-3.6-2.1-10.6-2.8-22.9-2l-2.9 28.8zM327.7 214c5.6 5.9 12.7 8.5 21.3 7.9 4.7-.3 9.1-1.8 13.3-4.1 5.5-3 10.6-8 15.1-14.3l-34.2 2.3 2.4-23.9 63.1-4.3 1.2-12-31.2 2.1c-4.1-3.7-7.8-6.6-11.1-8.1-4-1.7-8.1-2.8-12.2-2.5-8 .5-15.3 3.6-22 9.2-7.7 6.4-12 14.5-12.9 24.4-1.1 9.6 1.4 17.3 7.2 23.3zm-201.3 8.2l23.8-1.6-8.3-37.6-15.5 39.2z\"],\n    \"angular\": [448, 512, [], \"f420\", \"M185.7 268.1h76.2l-38.1-91.6-38.1 91.6zM223.8 32L16 106.4l31.8 275.7 176 97.9 176-97.9 31.8-275.7zM354 373.8h-48.6l-26.2-65.4H168.6l-26.2 65.4H93.7L223.8 81.5z\"],\n    \"app-store\": [512, 512, [], \"f36f\", \"M255.9 120.9l9.1-15.7c5.6-9.8 18.1-13.1 27.9-7.5 9.8 5.6 13.1 18.1 7.5 27.9l-87.5 151.5h63.3c20.5 0 32 24.1 23.1 40.8H113.8c-11.3 0-20.4-9.1-20.4-20.4 0-11.3 9.1-20.4 20.4-20.4h52l66.6-115.4-20.8-36.1c-5.6-9.8-2.3-22.2 7.5-27.9 9.8-5.6 22.2-2.3 27.9 7.5l8.9 15.7zm-78.7 218l-19.6 34c-5.6 9.8-18.1 13.1-27.9 7.5-9.8-5.6-13.1-18.1-7.5-27.9l14.6-25.2c16.4-5.1 29.8-1.2 40.4 11.6zm168.9-61.7h53.1c11.3 0 20.4 9.1 20.4 20.4 0 11.3-9.1 20.4-20.4 20.4h-29.5l19.9 34.5c5.6 9.8 2.3 22.2-7.5 27.9-9.8 5.6-22.2 2.3-27.9-7.5-33.5-58.1-58.7-101.6-75.4-130.6-17.1-29.5-4.9-59.1 7.2-69.1 13.4 23 33.4 57.7 60.1 104zM256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm216 248c0 118.7-96.1 216-216 216-118.7 0-216-96.1-216-216 0-118.7 96.1-216 216-216 118.7 0 216 96.1 216 216z\"],\n    \"app-store-ios\": [448, 512, [], \"f370\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM127 384.5c-5.5 9.6-17.8 12.8-27.3 7.3-9.6-5.5-12.8-17.8-7.3-27.3l14.3-24.7c16.1-4.9 29.3-1.1 39.6 11.4L127 384.5zm138.9-53.9H84c-11 0-20-9-20-20s9-20 20-20h51l65.4-113.2-20.5-35.4c-5.5-9.6-2.2-21.8 7.3-27.3 9.6-5.5 21.8-2.2 27.3 7.3l8.9 15.4 8.9-15.4c5.5-9.6 17.8-12.8 27.3-7.3 9.6 5.5 12.8 17.8 7.3 27.3l-85.8 148.6h62.1c20.2 0 31.5 23.7 22.7 40zm98.1 0h-29l19.6 33.9c5.5 9.6 2.2 21.8-7.3 27.3-9.6 5.5-21.8 2.2-27.3-7.3-32.9-56.9-57.5-99.7-74-128.1-16.7-29-4.8-58 7.1-67.8 13.1 22.7 32.7 56.7 58.9 102h52c11 0 20 9 20 20 0 11.1-9 20-20 20z\"],\n    \"apper\": [640, 512, [], \"f371\", \"M42.1 239.1c22.2 0 29 2.8 33.5 14.6h.8v-22.9c0-11.3-4.8-15.4-17.9-15.4-11.3 0-14.4 2.5-15.1 12.8H4.8c.3-13.9 1.5-19.1 5.8-24.4C17.9 195 29.5 192 56.7 192c33 0 47.1 5 53.9 18.9 2 4.3 4 15.6 4 23.7v76.3H76.3l1.3-19.1h-1c-5.3 15.6-13.6 20.4-35.5 20.4-30.3 0-41.1-10.1-41.1-37.3 0-25.2 12.3-35.8 42.1-35.8zm17.1 48.1c13.1 0 16.9-3 16.9-13.4 0-9.1-4.3-11.6-19.6-11.6-13.1 0-17.9 3-17.9 12.1-.1 10.4 3.7 12.9 20.6 12.9zm77.8-94.9h38.3l-1.5 20.6h.8c9.1-17.1 15.9-20.9 37.5-20.9 14.4 0 24.7 3 31.5 9.1 9.8 8.6 12.8 20.4 12.8 48.1 0 30-3 43.1-12.1 52.9-6.8 7.3-16.4 10.1-33.2 10.1-20.4 0-29.2-5.5-33.8-21.2h-.8v70.3H137v-169zm80.9 60.7c0-27.5-3.3-32.5-20.7-32.5-16.9 0-20.7 5-20.7 28.7 0 28 3.5 33.5 21.2 33.5 16.4 0 20.2-5.6 20.2-29.7zm57.9-60.7h38.3l-1.5 20.6h.8c9.1-17.1 15.9-20.9 37.5-20.9 14.4 0 24.7 3 31.5 9.1 9.8 8.6 12.8 20.4 12.8 48.1 0 30-3 43.1-12.1 52.9-6.8 7.3-16.4 10.1-33.3 10.1-20.4 0-29.2-5.5-33.8-21.2h-.8v70.3h-39.5v-169zm80.9 60.7c0-27.5-3.3-32.5-20.7-32.5-16.9 0-20.7 5-20.7 28.7 0 28 3.5 33.5 21.2 33.5 16.4 0 20.2-5.6 20.2-29.7zm53.8-3.8c0-25.4 3.3-37.8 12.3-45.8 8.8-8.1 22.2-11.3 45.1-11.3 42.8 0 55.7 12.8 55.7 55.7v11.1h-75.3c-.3 2-.3 4-.3 4.8 0 16.9 4.5 21.9 20.1 21.9 13.9 0 17.9-3 17.9-13.9h37.5v2.3c0 9.8-2.5 18.9-6.8 24.7-7.3 9.8-19.6 13.6-44.3 13.6-27.5 0-41.6-3.3-50.6-12.3-8.5-8.5-11.3-21.3-11.3-50.8zm76.4-11.6c-.3-1.8-.3-3.3-.3-3.8 0-12.3-3.3-14.6-19.6-14.6-14.4 0-17.1 3-18.1 15.1l-.3 3.3h38.3zm55.6-45.3h38.3l-1.8 19.9h.7c6.8-14.9 14.4-20.2 29.7-20.2 10.8 0 19.1 3.3 23.4 9.3 5.3 7.3 6.8 14.4 6.8 34 0 1.5 0 5 .2 9.3h-35c.3-1.8.3-3.3.3-4 0-15.4-2-19.4-10.3-19.4-6.3 0-10.8 3.3-13.1 9.3-1 3-1 4.3-1 12.3v68h-38.3V192.3z\"],\n    \"apple\": [384, 512, [], \"f179\", \"M318.7 268.7c-.2-36.7 16.4-64.4 50-84.8-18.8-26.9-47.2-41.7-84.7-44.6-35.5-2.8-74.3 20.7-88.5 20.7-15 0-49.4-19.7-76.4-19.7C63.3 141.2 4 184.8 4 273.5q0 39.3 14.4 81.2c12.8 36.7 59 126.7 107.2 125.2 25.2-.6 43-17.9 75.8-17.9 31.8 0 48.3 17.9 76.4 17.9 48.6-.7 90.4-82.5 102.6-119.3-65.2-30.7-61.7-90-61.7-91.9zm-56.6-164.2c27.3-32.4 24.8-61.9 24-72.5-24.1 1.4-52 16.4-67.9 34.9-17.5 19.8-27.8 44.3-25.6 71.9 26.1 2 49.9-11.4 69.5-34.3z\"],\n    \"apple-pay\": [640, 512, [], \"f415\", \"M116.9 158.5c-7.5 8.9-19.5 15.9-31.5 14.9-1.5-12 4.4-24.8 11.3-32.6 7.5-9.1 20.6-15.6 31.3-16.1 1.2 12.4-3.7 24.7-11.1 33.8m10.9 17.2c-17.4-1-32.3 9.9-40.5 9.9-8.4 0-21-9.4-34.8-9.1-17.9.3-34.5 10.4-43.6 26.5-18.8 32.3-4.9 80 13.3 106.3 8.9 13 19.5 27.3 33.5 26.8 13.3-.5 18.5-8.6 34.5-8.6 16.1 0 20.8 8.6 34.8 8.4 14.5-.3 23.6-13 32.5-26 10.1-14.8 14.3-29.1 14.5-29.9-.3-.3-28-10.9-28.3-42.9-.3-26.8 21.9-39.5 22.9-40.3-12.5-18.6-32-20.6-38.8-21.1m100.4-36.2v194.9h30.3v-66.6h41.9c38.3 0 65.1-26.3 65.1-64.3s-26.4-64-64.1-64h-73.2zm30.3 25.5h34.9c26.3 0 41.3 14 41.3 38.6s-15 38.8-41.4 38.8h-34.8V165zm162.2 170.9c19 0 36.6-9.6 44.6-24.9h.6v23.4h28v-97c0-28.1-22.5-46.3-57.1-46.3-32.1 0-55.9 18.4-56.8 43.6h27.3c2.3-12 13.4-19.9 28.6-19.9 18.5 0 28.9 8.6 28.9 24.5v10.8l-37.8 2.3c-35.1 2.1-54.1 16.5-54.1 41.5.1 25.2 19.7 42 47.8 42zm8.2-23.1c-16.1 0-26.4-7.8-26.4-19.6 0-12.3 9.9-19.4 28.8-20.5l33.6-2.1v11c0 18.2-15.5 31.2-36 31.2zm102.5 74.6c29.5 0 43.4-11.3 55.5-45.4L640 193h-30.8l-35.6 115.1h-.6L537.4 193h-31.6L557 334.9l-2.8 8.6c-4.6 14.6-12.1 20.3-25.5 20.3-2.4 0-7-.3-8.9-.5v23.4c1.8.4 9.3.7 11.6.7z\"],\n    \"artstation\": [512, 512, [], \"f77a\", \"M2 377.4l43 74.3A51.35 51.35 0 0 0 90.9 480h285.4l-59.2-102.6zM501.8 350L335.6 59.3A51.38 51.38 0 0 0 290.2 32h-88.4l257.3 447.6 40.7-70.5c1.9-3.2 21-29.7 2-59.1zM275 304.5l-115.5-200L44 304.5z\"],\n    \"asymmetrik\": [576, 512, [], \"f372\", \"M517.5 309.2c38.8-40 58.1-80 58.5-116.1.8-65.5-59.4-118.2-169.4-135C277.9 38.4 118.1 73.6 0 140.5 52 114 110.6 92.3 170.7 82.3c74.5-20.5 153-25.4 221.3-14.8C544.5 91.3 588.8 195 490.8 299.2c-10.2 10.8-22 21.1-35 30.6L304.9 103.4 114.7 388.9c-65.6-29.4-76.5-90.2-19.1-151.2 20.8-22.2 48.3-41.9 79.5-58.1 20-12.2 39.7-22.6 62-30.7-65.1 20.3-122.7 52.9-161.6 92.9-27.7 28.6-41.4 57.1-41.7 82.9-.5 35.1 23.4 65.1 68.4 83l-34.5 51.7h101.6l22-34.4c22.2 1 45.3 0 68.6-2.7l-22.8 37.1h135.5L340 406.3c18.6-5.3 36.9-11.5 54.5-18.7l45.9 71.8H542L468.6 349c18.5-12.1 35-25.5 48.9-39.8zm-187.6 80.5l-25-40.6-32.7 53.3c-23.4 3.5-46.7 5.1-69.2 4.4l101.9-159.3 78.7 123c-17.2 7.4-35.3 13.9-53.7 19.2z\"],\n    \"atlassian\": [512, 512, [], \"f77b\", \"M152.2 236.4c-7.7-8.2-19.7-7.7-24.8 2.8L1.6 490.2c-5 10 2.4 21.7 13.4 21.7h175c5.8.1 11-3.2 13.4-8.4 37.9-77.8 15.1-196.3-51.2-267.1zM244.4 8.1c-122.3 193.4-8.5 348.6 65 495.5 2.5 5.1 7.7 8.4 13.4 8.4H497c11.2 0 18.4-11.8 13.4-21.7 0 0-234.5-470.6-240.4-482.3-5.3-10.6-18.8-10.8-25.6.1z\"],\n    \"audible\": [640, 512, [], \"f373\", \"M640 199.9v54l-320 200L0 254v-54l320 200 320-200.1zm-194.5 72l47.1-29.4c-37.2-55.8-100.7-92.6-172.7-92.6-72 0-135.5 36.7-172.6 92.4h.3c2.5-2.3 5.1-4.5 7.7-6.7 89.7-74.4 219.4-58.1 290.2 36.3zm-220.1 18.8c16.9-11.9 36.5-18.7 57.4-18.7 34.4 0 65.2 18.4 86.4 47.6l45.4-28.4c-20.9-29.9-55.6-49.5-94.8-49.5-38.9 0-73.4 19.4-94.4 49zM103.6 161.1c131.8-104.3 318.2-76.4 417.5 62.1l.7 1 48.8-30.4C517.1 112.1 424.8 58.1 319.9 58.1c-103.5 0-196.6 53.5-250.5 135.6 9.9-10.5 22.7-23.5 34.2-32.6zm467 32.7z\"],\n    \"autoprefixer\": [640, 512, [], \"f41c\", \"M318.4 16l-161 480h77.5l25.4-81.4h119.5L405 496h77.5L318.4 16zm-40.3 341.9l41.2-130.4h1.5l40.9 130.4h-83.6zM640 405l-10-31.4L462.1 358l19.4 56.5L640 405zm-462.1-47L10 373.7 0 405l158.5 9.4 19.4-56.4z\"],\n    \"avianex\": [512, 512, [], \"f374\", \"M453.1 32h-312c-38.9 0-76.2 31.2-83.3 69.7L1.2 410.3C-5.9 448.8 19.9 480 58.9 480h312c38.9 0 76.2-31.2 83.3-69.7l56.7-308.5c7-38.6-18.8-69.8-57.8-69.8zm-58.2 347.3l-32 13.5-115.4-110c-14.7 10-29.2 19.5-41.7 27.1l22.1 64.2-17.9 12.7-40.6-61-52.4-48.1 15.7-15.4 58 31.1c9.3-10.5 20.8-22.6 32.8-34.9L203 228.9l-68.8-99.8 18.8-28.9 8.9-4.8L265 207.8l4.9 4.5c19.4-18.8 33.8-32.4 33.8-32.4 7.7-6.5 21.5-2.9 30.7 7.9 9 10.5 10.6 24.7 2.7 31.3-1.8 1.3-15.5 11.4-35.3 25.6l4.5 7.3 94.9 119.4-6.3 7.9z\"],\n    \"aviato\": [640, 512, [], \"f421\", \"M107.2 283.5l-19-41.8H36.1l-19 41.8H0l62.2-131.4 62.2 131.4h-17.2zm-45-98.1l-19.6 42.5h39.2l-19.6-42.5zm112.7 102.4l-62.2-131.4h17.1l45.1 96 45.1-96h17l-62.1 131.4zm80.6-4.3V156.4H271v127.1h-15.5zm209.1-115.6v115.6h-17.3V167.9h-41.2v-11.5h99.6v11.5h-41.1zM640 218.8c0 9.2-1.7 17.8-5.1 25.8-3.4 8-8.2 15.1-14.2 21.1-6 6-13.1 10.8-21.1 14.2-8 3.4-16.6 5.1-25.8 5.1s-17.8-1.7-25.8-5.1c-8-3.4-15.1-8.2-21.1-14.2-6-6-10.8-13-14.2-21.1-3.4-8-5.1-16.6-5.1-25.8s1.7-17.8 5.1-25.8c3.4-8 8.2-15.1 14.2-21.1 6-6 13-8.4 21.1-11.9 8-3.4 16.6-5.1 25.8-5.1s17.8 1.7 25.8 5.1c8 3.4 15.1 5.8 21.1 11.9 6 6 10.7 13.1 14.2 21.1 3.4 8 5.1 16.6 5.1 25.8zm-15.5 0c0-7.3-1.3-14-3.9-20.3-2.6-6.3-6.2-11.7-10.8-16.3-4.6-4.6-10-8.2-16.2-10.9-6.2-2.7-12.8-4-19.8-4s-13.6 1.3-19.8 4c-6.2 2.7-11.6 6.3-16.2 10.9-4.6 4.6-8.2 10-10.8 16.3-2.6 6.3-3.9 13.1-3.9 20.3 0 7.3 1.3 14 3.9 20.3 2.6 6.3 6.2 11.7 10.8 16.3 4.6 4.6 10 8.2 16.2 10.9 6.2 2.7 12.8 4 19.8 4s13.6-1.3 19.8-4c6.2-2.7 11.6-6.3 16.2-10.9 4.6-4.6 8.2-10 10.8-16.3 2.6-6.3 3.9-13.1 3.9-20.3zm-94.8 96.7v-6.3l88.9-10-242.9 13.4c.6-2.2 1.1-4.6 1.4-7.2.3-2 .5-4.2.6-6.5l64.8-8.1-64.9 1.9c0-.4-.1-.7-.1-1.1-2.8-17.2-25.5-23.7-25.5-23.7l-1.1-26.3h23.8l19 41.8h17.1L348.6 152l-62.2 131.4h17.1l19-41.8h23.6L345 268s-22.7 6.5-25.5 23.7c-.1.3-.1.7-.1 1.1l-64.9-1.9 64.8 8.1c.1 2.3.3 4.4.6 6.5.3 2.6.8 5 1.4 7.2L78.4 299.2l88.9 10v6.3c-5.9.9-10.5 6-10.5 12.2 0 6.8 5.6 12.4 12.4 12.4 6.8 0 12.4-5.6 12.4-12.4 0-6.2-4.6-11.3-10.5-12.2v-5.8l80.3 9v5.4c-5.7 1.1-9.9 6.2-9.9 12.1 0 6.8 5.6 10.2 12.4 10.2 6.8 0 12.4-3.4 12.4-10.2 0-6-4.3-11-9.9-12.1v-4.9l28.4 3.2v23.7h-5.9V360h5.9v-6.6h5v6.6h5.9v-13.8h-5.9V323l38.3 4.3c8.1 11.4 19 13.6 19 13.6l-.1 6.7-5.1.2-.1 12.1h4.1l.1-5h5.2l.1 5h4.1l-.1-12.1-5.1-.2-.1-6.7s10.9-2.1 19-13.6l38.3-4.3v23.2h-5.9V360h5.9v-6.6h5v6.6h5.9v-13.8h-5.9v-23.7l28.4-3.2v4.9c-5.7 1.1-9.9 6.2-9.9 12.1 0 6.8 5.6 10.2 12.4 10.2 6.8 0 12.4-3.4 12.4-10.2 0-6-4.3-11-9.9-12.1v-5.4l80.3-9v5.8c-5.9.9-10.5 6-10.5 12.2 0 6.8 5.6 12.4 12.4 12.4 6.8 0 12.4-5.6 12.4-12.4-.2-6.3-4.7-11.4-10.7-12.3zm-200.8-87.6l19.6-42.5 19.6 42.5h-17.9l-1.7-40.3-1.7 40.3h-17.9z\"],\n    \"aws\": [640, 512, [], \"f375\", \"M180.41 203.01c-.72 22.65 10.6 32.68 10.88 39.05a8.164 8.164 0 0 1-4.1 6.27l-12.8 8.96a10.66 10.66 0 0 1-5.63 1.92c-.43-.02-8.19 1.83-20.48-25.61a78.608 78.608 0 0 1-62.61 29.45c-16.28.89-60.4-9.24-58.13-56.21-1.59-38.28 34.06-62.06 70.93-60.05 7.1.02 21.6.37 46.99 6.27v-15.62c2.69-26.46-14.7-46.99-44.81-43.91-2.4.01-19.4-.5-45.84 10.11-7.36 3.38-8.3 2.82-10.75 2.82-7.41 0-4.36-21.48-2.94-24.2 5.21-6.4 35.86-18.35 65.94-18.18a76.857 76.857 0 0 1 55.69 17.28 70.285 70.285 0 0 1 17.67 52.36l-.01 69.29zM93.99 235.4c32.43-.47 46.16-19.97 49.29-30.47 2.46-10.05 2.05-16.41 2.05-27.4-9.67-2.32-23.59-4.85-39.56-4.87-15.15-1.14-42.82 5.63-41.74 32.26-1.24 16.79 11.12 31.4 29.96 30.48zm170.92 23.05c-7.86.72-11.52-4.86-12.68-10.37l-49.8-164.65c-.97-2.78-1.61-5.65-1.92-8.58a4.61 4.61 0 0 1 3.86-5.25c.24-.04-2.13 0 22.25 0 8.78-.88 11.64 6.03 12.55 10.37l35.72 140.83 33.16-140.83c.53-3.22 2.94-11.07 12.8-10.24h17.16c2.17-.18 11.11-.5 12.68 10.37l33.42 142.63L420.98 80.1c.48-2.18 2.72-11.37 12.68-10.37h19.72c.85-.13 6.15-.81 5.25 8.58-.43 1.85 3.41-10.66-52.75 169.9-1.15 5.51-4.82 11.09-12.68 10.37h-18.69c-10.94 1.15-12.51-9.66-12.68-10.75L328.67 110.7l-32.78 136.99c-.16 1.09-1.73 11.9-12.68 10.75h-18.3zm273.48 5.63c-5.88.01-33.92-.3-57.36-12.29a12.802 12.802 0 0 1-7.81-11.91v-10.75c0-8.45 6.2-6.9 8.83-5.89 10.04 4.06 16.48 7.14 28.81 9.6 36.65 7.53 52.77-2.3 56.72-4.48 13.15-7.81 14.19-25.68 5.25-34.95-10.48-8.79-15.48-9.12-53.13-21-4.64-1.29-43.7-13.61-43.79-52.36-.61-28.24 25.05-56.18 69.52-55.95 12.67-.01 46.43 4.13 55.57 15.62 1.35 2.09 2.02 4.55 1.92 7.04v10.11c0 4.44-1.62 6.66-4.87 6.66-7.71-.86-21.39-11.17-49.16-10.75-6.89-.36-39.89.91-38.41 24.97-.43 18.96 26.61 26.07 29.7 26.89 36.46 10.97 48.65 12.79 63.12 29.58 17.14 22.25 7.9 48.3 4.35 55.44-19.08 37.49-68.42 34.44-69.26 34.42zm40.2 104.86c-70.03 51.72-171.69 79.25-258.49 79.25A469.127 469.127 0 0 1 2.83 327.46c-6.53-5.89-.77-13.96 7.17-9.47a637.37 637.37 0 0 0 316.88 84.12 630.22 630.22 0 0 0 241.59-49.55c11.78-5 21.77 7.8 10.12 16.38zm29.19-33.29c-8.96-11.52-59.28-5.38-81.81-2.69-6.79.77-7.94-5.12-1.79-9.47 40.07-28.17 105.88-20.1 113.44-10.63 7.55 9.47-2.05 75.41-39.56 106.91-5.76 4.87-11.27 2.3-8.71-4.1 8.44-21.25 27.39-68.49 18.43-80.02z\"],\n    \"bandcamp\": [512, 512, [], \"f2d5\", \"M256,8C119,8,8,119,8,256S119,504,256,504,504,393,504,256,393,8,256,8Zm48.2,326.1h-181L207.9,178h181Z\"],\n    \"battle-net\": [512, 512, [], \"f835\", \"M448.61 225.62c26.87.18 35.57-7.43 38.92-12.37 12.47-16.32-7.06-47.6-52.85-71.33 17.76-33.58 30.11-63.68 36.34-85.3 3.38-11.83 1.09-19 .45-20.25-1.72 10.52-15.85 48.46-48.2 100.05-25-11.22-56.52-20.1-93.77-23.8-8.94-16.94-34.88-63.86-60.48-88.93C252.18 7.14 238.7 1.07 228.18.22h-.05c-13.83-1.55-22.67 5.85-27.4 11-17.2 18.53-24.33 48.87-25 84.07-7.24-12.35-17.17-24.63-28.5-25.93h-.18c-20.66-3.48-38.39 29.22-36 81.29-38.36 1.38-71 5.75-93 11.23-9.9 2.45-16.22 7.27-17.76 9.72 1-.38 22.4-9.22 111.56-9.22 5.22 53 29.75 101.82 26 93.19-9.73 15.4-38.24 62.36-47.31 97.7-5.87 22.88-4.37 37.61.15 47.14 5.57 12.75 16.41 16.72 23.2 18.26 25 5.71 55.38-3.63 86.7-21.14-7.53 12.84-13.9 28.51-9.06 39.34 7.31 19.65 44.49 18.66 88.44-9.45 20.18 32.18 40.07 57.94 55.7 74.12a39.79 39.79 0 0 0 8.75 7.09c5.14 3.21 8.58 3.37 8.58 3.37-8.24-6.75-34-38-62.54-91.78 22.22-16 45.65-38.87 67.47-69.27 122.82 4.6 143.29-24.76 148-31.64 14.67-19.88 3.43-57.44-57.32-93.69zm-77.85 106.22c23.81-37.71 30.34-67.77 29.45-92.33 27.86 17.57 47.18 37.58 49.06 58.83 1.14 12.93-8.1 29.12-78.51 33.5zM216.9 387.69c9.76-6.23 19.53-13.12 29.2-20.49 6.68 13.33 13.6 26.1 20.6 38.19-40.6 21.86-68.84 12.76-49.8-17.7zm215-171.35c-10.29-5.34-21.16-10.34-32.38-15.05a722.459 722.459 0 0 0 22.74-36.9c39.06 24.1 45.9 53.18 9.64 51.95zM279.18 398c-5.51-11.35-11-23.5-16.5-36.44 43.25 1.27 62.42-18.73 63.28-20.41 0 .07-25 15.64-62.53 12.25a718.78 718.78 0 0 0 85.06-84q13.06-15.31 24.93-31.11c-.36-.29-1.54-3-16.51-12-51.7 60.27-102.34 98-132.75 115.92-20.59-11.18-40.84-31.78-55.71-61.49-20-39.92-30-82.39-31.57-116.07 12.3.91 25.27 2.17 38.85 3.88-22.29 36.8-14.39 63-13.47 64.23 0-.07-.95-29.17 20.14-59.57a695.23 695.23 0 0 0 44.67 152.84c.93-.38 1.84.88 18.67-8.25-26.33-74.47-33.76-138.17-34-173.43 20-12.42 48.18-19.8 81.63-17.81 44.57 2.67 86.36 15.25 116.32 30.71q-10.69 15.66-23.33 32.47C365.63 152 339.1 145.84 337.5 146c.11 0 25.9 14.07 41.52 47.22a717.63 717.63 0 0 0-115.34-31.71 646.608 646.608 0 0 0-39.39-6.05c-.07.45-1.81 1.85-2.16 20.33C300 190.28 358.78 215.68 389.36 233c.74 23.55-6.95 51.61-25.41 79.57-24.6 37.31-56.39 67.23-84.77 85.43zm27.4-287c-44.56-1.66-73.58 7.43-94.69 20.67 2-52.3 21.31-76.38 38.21-75.28C267 52.15 305 108.55 306.58 111zm-130.65 3.1c.48 12.11 1.59 24.62 3.21 37.28-14.55-.85-28.74-1.25-42.4-1.26-.08 3.24-.12-51 24.67-49.59h.09c5.76 1.09 10.63 6.88 14.43 13.57zm-28.06 162c20.76 39.7 43.3 60.57 65.25 72.31-46.79 24.76-77.53 20-84.92 4.51-.2-.21-11.13-15.3 19.67-76.81zm210.06 74.8\"],\n    \"behance\": [576, 512, [], \"f1b4\", \"M232 237.2c31.8-15.2 48.4-38.2 48.4-74 0-70.6-52.6-87.8-113.3-87.8H0v354.4h171.8c64.4 0 124.9-30.9 124.9-102.9 0-44.5-21.1-77.4-64.7-89.7zM77.9 135.9H151c28.1 0 53.4 7.9 53.4 40.5 0 30.1-19.7 42.2-47.5 42.2h-79v-82.7zm83.3 233.7H77.9V272h84.9c34.3 0 56 14.3 56 50.6 0 35.8-25.9 47-57.6 47zm358.5-240.7H376V94h143.7v34.9zM576 305.2c0-75.9-44.4-139.2-124.9-139.2-78.2 0-131.3 58.8-131.3 135.8 0 79.9 50.3 134.7 131.3 134.7 61.3 0 101-27.6 120.1-86.3H509c-6.7 21.9-34.3 33.5-55.7 33.5-41.3 0-63-24.2-63-65.3h185.1c.3-4.2.6-8.7.6-13.2zM390.4 274c2.3-33.7 24.7-54.8 58.5-54.8 35.4 0 53.2 20.8 56.2 54.8H390.4z\"],\n    \"behance-square\": [448, 512, [], \"f1b5\", \"M186.5 293c0 19.3-14 25.4-31.2 25.4h-45.1v-52.9h46c18.6.1 30.3 7.8 30.3 27.5zm-7.7-82.3c0-17.7-13.7-21.9-28.9-21.9h-39.6v44.8H153c15.1 0 25.8-6.6 25.8-22.9zm132.3 23.2c-18.3 0-30.5 11.4-31.7 29.7h62.2c-1.7-18.5-11.3-29.7-30.5-29.7zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zM271.7 185h77.8v-18.9h-77.8V185zm-43 110.3c0-24.1-11.4-44.9-35-51.6 17.2-8.2 26.2-17.7 26.2-37 0-38.2-28.5-47.5-61.4-47.5H68v192h93.1c34.9-.2 67.6-16.9 67.6-55.9zM380 280.5c0-41.1-24.1-75.4-67.6-75.4-42.4 0-71.1 31.8-71.1 73.6 0 43.3 27.3 73 71.1 73 33.2 0 54.7-14.9 65.1-46.8h-33.7c-3.7 11.9-18.6 18.1-30.2 18.1-22.4 0-34.1-13.1-34.1-35.3h100.2c.1-2.3.3-4.8.3-7.2z\"],\n    \"bimobject\": [448, 512, [], \"f378\", \"M416 32H32C14.4 32 0 46.4 0 64v384c0 17.6 14.4 32 32 32h384c17.6 0 32-14.4 32-32V64c0-17.6-14.4-32-32-32zm-64 257.4c0 49.4-11.4 82.6-103.8 82.6h-16.9c-44.1 0-62.4-14.9-70.4-38.8h-.9V368H96V136h64v74.7h1.1c4.6-30.5 39.7-38.8 69.7-38.8h17.3c92.4 0 103.8 33.1 103.8 82.5v35zm-64-28.9v22.9c0 21.7-3.4 33.8-38.4 33.8h-45.3c-28.9 0-44.1-6.5-44.1-35.7v-19c0-29.3 15.2-35.7 44.1-35.7h45.3c35-.2 38.4 12 38.4 33.7z\"],\n    \"bitbucket\": [512, 512, [], \"f171\", \"M22.2 32A16 16 0 0 0 6 47.8a26.35 26.35 0 0 0 .2 2.8l67.9 412.1a21.77 21.77 0 0 0 21.3 18.2h325.7a16 16 0 0 0 16-13.4L505 50.7a16 16 0 0 0-13.2-18.3 24.58 24.58 0 0 0-2.8-.2L22.2 32zm285.9 297.8h-104l-28.1-147h157.3l-25.2 147z\"],\n    \"bitcoin\": [512, 512, [], \"f379\", \"M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zm-141.651-35.33c4.937-32.999-20.191-50.739-54.55-62.573l11.146-44.702-27.213-6.781-10.851 43.524c-7.154-1.783-14.502-3.464-21.803-5.13l10.929-43.81-27.198-6.781-11.153 44.686c-5.922-1.349-11.735-2.682-17.377-4.084l.031-.14-37.53-9.37-7.239 29.062s20.191 4.627 19.765 4.913c11.022 2.751 13.014 10.044 12.68 15.825l-12.696 50.925c.76.194 1.744.473 2.829.907-.907-.225-1.876-.473-2.876-.713l-17.796 71.338c-1.349 3.348-4.767 8.37-12.471 6.464.271.395-19.78-4.937-19.78-4.937l-13.51 31.147 35.414 8.827c6.588 1.651 13.045 3.379 19.4 5.006l-11.262 45.213 27.182 6.781 11.153-44.733a1038.209 1038.209 0 0 0 21.687 5.627l-11.115 44.523 27.213 6.781 11.262-45.128c46.404 8.781 81.299 5.239 95.986-36.727 11.836-33.79-.589-53.281-25.004-65.991 17.78-4.098 31.174-15.792 34.747-39.949zm-62.177 87.179c-8.41 33.79-65.308 15.523-83.755 10.943l14.944-59.899c18.446 4.603 77.6 13.717 68.811 48.956zm8.417-87.667c-7.673 30.736-55.031 15.12-70.393 11.292l13.548-54.327c15.363 3.828 64.836 10.973 56.845 43.035z\"],\n    \"bity\": [496, 512, [], \"f37a\", \"M78.4 67.2C173.8-22 324.5-24 421.5 71c14.3 14.1-6.4 37.1-22.4 21.5-84.8-82.4-215.8-80.3-298.9-3.2-16.3 15.1-36.5-8.3-21.8-22.1zm98.9 418.6c19.3 5.7 29.3-23.6 7.9-30C73 421.9 9.4 306.1 37.7 194.8c5-19.6-24.9-28.1-30.2-7.1-32.1 127.4 41.1 259.8 169.8 298.1zm148.1-2c121.9-40.2 192.9-166.9 164.4-291-4.5-19.7-34.9-13.8-30 7.9 24.2 107.7-37.1 217.9-143.2 253.4-21.2 7-10.4 36 8.8 29.7zm-62.9-79l.2-71.8c0-8.2-6.6-14.8-14.8-14.8-8.2 0-14.8 6.7-14.8 14.8l-.2 71.8c0 8.2 6.6 14.8 14.8 14.8s14.8-6.6 14.8-14.8zm71-269c2.1 90.9 4.7 131.9-85.5 132.5-92.5-.7-86.9-44.3-85.5-132.5 0-21.8-32.5-19.6-32.5 0v71.6c0 69.3 60.7 90.9 118 90.1 57.3.8 118-20.8 118-90.1v-71.6c0-19.6-32.5-21.8-32.5 0z\"],\n    \"black-tie\": [448, 512, [], \"f27e\", \"M0 32v448h448V32H0zm316.5 325.2L224 445.9l-92.5-88.7 64.5-184-64.5-86.6h184.9L252 173.2l64.5 184z\"],\n    \"blackberry\": [512, 512, [], \"f37b\", \"M166 116.9c0 23.4-16.4 49.1-72.5 49.1H23.4l21-88.8h67.8c42.1 0 53.8 23.3 53.8 39.7zm126.2-39.7h-67.8L205.7 166h70.1c53.8 0 70.1-25.7 70.1-49.1.1-16.4-11.6-39.7-53.7-39.7zM88.8 208.1H21L0 296.9h70.1c56.1 0 72.5-23.4 72.5-49.1 0-16.3-11.7-39.7-53.8-39.7zm180.1 0h-67.8l-18.7 88.8h70.1c53.8 0 70.1-23.4 70.1-49.1 0-16.3-11.7-39.7-53.7-39.7zm189.3-53.8h-67.8l-18.7 88.8h70.1c53.8 0 70.1-23.4 70.1-49.1.1-16.3-11.6-39.7-53.7-39.7zm-28 137.9h-67.8L343.7 381h70.1c56.1 0 70.1-23.4 70.1-49.1 0-16.3-11.6-39.7-53.7-39.7zM240.8 346H173l-18.7 88.8h70.1c56.1 0 70.1-25.7 70.1-49.1.1-16.3-11.6-39.7-53.7-39.7z\"],\n    \"blogger\": [448, 512, [], \"f37c\", \"M162.4 196c4.8-4.9 6.2-5.1 36.4-5.1 27.2 0 28.1.1 32.1 2.1 5.8 2.9 8.3 7 8.3 13.6 0 5.9-2.4 10-7.6 13.4-2.8 1.8-4.5 1.9-31.1 2.1-16.4.1-29.5-.2-31.5-.8-10.3-2.9-14.1-17.7-6.6-25.3zm61.4 94.5c-53.9 0-55.8.2-60.2 4.1-3.5 3.1-5.7 9.4-5.1 13.9.7 4.7 4.8 10.1 9.2 12 2.2 1 14.1 1.7 56.3 1.2l47.9-.6 9.2-1.5c9-5.1 10.5-17.4 3.1-24.4-5.3-4.7-5-4.7-60.4-4.7zm223.4 130.1c-3.5 28.4-23 50.4-51.1 57.5-7.2 1.8-9.7 1.9-172.9 1.8-157.8 0-165.9-.1-172-1.8-8.4-2.2-15.6-5.5-22.3-10-5.6-3.8-13.9-11.8-17-16.4-3.8-5.6-8.2-15.3-10-22C.1 423 0 420.3 0 256.3 0 93.2 0 89.7 1.8 82.6 8.1 57.9 27.7 39 53 33.4c7.3-1.6 332.1-1.9 340-.3 21.2 4.3 37.9 17.1 47.6 36.4 7.7 15.3 7-1.5 7.3 180.6.2 115.8 0 164.5-.7 170.5zm-85.4-185.2c-1.1-5-4.2-9.6-7.7-11.5-1.1-.6-8-1.3-15.5-1.7-12.4-.6-13.8-.8-17.8-3.1-6.2-3.6-7.9-7.6-8-18.3 0-20.4-8.5-39.4-25.3-56.5-12-12.2-25.3-20.5-40.6-25.1-3.6-1.1-11.8-1.5-39.2-1.8-42.9-.5-52.5.4-67.1 6.2-27 10.7-46.3 33.4-53.4 62.4-1.3 5.4-1.6 14.2-1.9 64.3-.4 62.8 0 72.1 4 84.5 9.7 30.7 37.1 53.4 64.6 58.4 9.2 1.7 122.2 2.1 133.7.5 20.1-2.7 35.9-10.8 50.7-25.9 10.7-10.9 17.4-22.8 21.8-38.5 3.2-10.9 2.9-88.4 1.7-93.9z\"],\n    \"blogger-b\": [448, 512, [], \"f37d\", \"M446.6 222.7c-1.8-8-6.8-15.4-12.5-18.5-1.8-1-13-2.2-25-2.7-20.1-.9-22.3-1.3-28.7-5-10.1-5.9-12.8-12.3-12.9-29.5-.1-33-13.8-63.7-40.9-91.3-19.3-19.7-40.9-33-65.5-40.5-5.9-1.8-19.1-2.4-63.3-2.9-69.4-.8-84.8.6-108.4 10C45.9 59.5 14.7 96.1 3.3 142.9 1.2 151.7.7 165.8.2 246.8c-.6 101.5.1 116.4 6.4 136.5 15.6 49.6 59.9 86.3 104.4 94.3 14.8 2.7 197.3 3.3 216 .8 32.5-4.4 58-17.5 81.9-41.9 17.3-17.7 28.1-36.8 35.2-62.1 4.9-17.6 4.5-142.8 2.5-151.7zm-322.1-63.6c7.8-7.9 10-8.2 58.8-8.2 43.9 0 45.4.1 51.8 3.4 9.3 4.7 13.4 11.3 13.4 21.9 0 9.5-3.8 16.2-12.3 21.6-4.6 2.9-7.3 3.1-50.3 3.3-26.5.2-47.7-.4-50.8-1.2-16.6-4.7-22.8-28.5-10.6-40.8zm191.8 199.8l-14.9 2.4-77.5.9c-68.1.8-87.3-.4-90.9-2-7.1-3.1-13.8-11.7-14.9-19.4-1.1-7.3 2.6-17.3 8.2-22.4 7.1-6.4 10.2-6.6 97.3-6.7 89.6-.1 89.1-.1 97.6 7.8 12.1 11.3 9.5 31.2-4.9 39.4z\"],\n    \"bluetooth\": [448, 512, [], \"f293\", \"M292.6 171.1L249.7 214l-.3-86 43.2 43.1m-43.2 219.8l43.1-43.1-42.9-42.9-.2 86zM416 259.4C416 465 344.1 512 230.9 512S32 465 32 259.4 115.4 0 228.6 0 416 53.9 416 259.4zm-158.5 0l79.4-88.6L211.8 36.5v176.9L138 139.6l-27 26.9 92.7 93-92.7 93 26.9 26.9 73.8-73.8 2.3 170 127.4-127.5-83.9-88.7z\"],\n    \"bluetooth-b\": [320, 512, [], \"f294\", \"M196.48 260.023l92.626-103.333L143.125 0v206.33l-86.111-86.111-31.406 31.405 108.061 108.399L25.608 368.422l31.406 31.405 86.111-86.111L145.84 512l148.552-148.644-97.912-103.333zm40.86-102.996l-49.977 49.978-.338-100.295 50.315 50.317zM187.363 313.04l49.977 49.978-50.315 50.316.338-100.294z\"],\n    \"bootstrap\": [576, 512, [], \"f836\", \"M333.5,201.4c0-22.1-15.6-34.3-43-34.3h-50.4v71.2h42.5C315.4,238.2,333.5,225,333.5,201.4z M517,188.6 c-9.5-30.9-10.9-68.8-9.8-98.1c1.1-30.5-22.7-58.5-54.7-58.5H123.7c-32.1,0-55.8,28.1-54.7,58.5c1,29.3-0.3,67.2-9.8,98.1 c-9.6,31-25.7,50.6-52.2,53.1v28.5c26.4,2.5,42.6,22.1,52.2,53.1c9.5,30.9,10.9,68.8,9.8,98.1c-1.1,30.5,22.7,58.5,54.7,58.5h328.7 c32.1,0,55.8-28.1,54.7-58.5c-1-29.3,0.3-67.2,9.8-98.1c9.6-31,25.7-50.6,52.1-53.1v-28.5C542.7,239.2,526.5,219.6,517,188.6z M300.2,375.1h-97.9V136.8h97.4c43.3,0,71.7,23.4,71.7,59.4c0,25.3-19.1,47.9-43.5,51.8v1.3c33.2,3.6,55.5,26.6,55.5,58.3 C383.4,349.7,352.1,375.1,300.2,375.1z M290.2,266.4h-50.1v78.4h52.3c34.2,0,52.3-13.7,52.3-39.5 C344.7,279.6,326.1,266.4,290.2,266.4z\"],\n    \"btc\": [384, 512, [], \"f15a\", \"M310.204 242.638c27.73-14.18 45.377-39.39 41.28-81.3-5.358-57.351-52.458-76.573-114.85-81.929V0h-48.528v77.203c-12.605 0-25.525.315-38.444.63V0h-48.528v79.409c-17.842.539-38.622.276-97.37 0v51.678c38.314-.678 58.417-3.14 63.023 21.427v217.429c-2.925 19.492-18.524 16.685-53.255 16.071L3.765 443.68c88.481 0 97.37.315 97.37.315V512h48.528v-67.06c13.234.315 26.154.315 38.444.315V512h48.528v-68.005c81.299-4.412 135.647-24.894 142.895-101.467 5.671-61.446-23.32-88.862-69.326-99.89zM150.608 134.553c27.415 0 113.126-8.507 113.126 48.528 0 54.515-85.71 48.212-113.126 48.212v-96.74zm0 251.776V279.821c32.772 0 133.127-9.138 133.127 53.255-.001 60.186-100.355 53.253-133.127 53.253z\"],\n    \"buffer\": [448, 512, [], \"f837\", \"M427.84 380.67l-196.5 97.82a18.6 18.6 0 0 1-14.67 0L20.16 380.67c-4-2-4-5.28 0-7.29L67.22 350a18.65 18.65 0 0 1 14.69 0l134.76 67a18.51 18.51 0 0 0 14.67 0l134.76-67a18.62 18.62 0 0 1 14.68 0l47.06 23.43c4.05 1.96 4.05 5.24 0 7.24zm0-136.53l-47.06-23.43a18.62 18.62 0 0 0-14.68 0l-134.76 67.08a18.68 18.68 0 0 1-14.67 0L81.91 220.71a18.65 18.65 0 0 0-14.69 0l-47.06 23.43c-4 2-4 5.29 0 7.31l196.51 97.8a18.6 18.6 0 0 0 14.67 0l196.5-97.8c4.05-2.02 4.05-5.3 0-7.31zM20.16 130.42l196.5 90.29a20.08 20.08 0 0 0 14.67 0l196.51-90.29c4-1.86 4-4.89 0-6.74L231.33 33.4a19.88 19.88 0 0 0-14.67 0l-196.5 90.28c-4.05 1.85-4.05 4.88 0 6.74z\"],\n    \"buromobelexperte\": [448, 512, [], \"f37f\", \"M0 32v128h128V32H0zm120 120H8V40h112v112zm40-120v128h128V32H160zm120 120H168V40h112v112zm40-120v128h128V32H320zm120 120H328V40h112v112zM0 192v128h128V192H0zm120 120H8V200h112v112zm40-120v128h128V192H160zm120 120H168V200h112v112zm40-120v128h128V192H320zm120 120H328V200h112v112zM0 352v128h128V352H0zm120 120H8V360h112v112zm40-120v128h128V352H160zm120 120H168V360h112v112zm40-120v128h128V352H320z\"],\n    \"buy-n-large\": [576, 512, [], \"f8a6\", \"M288 32C133.27 32 7.79 132.32 7.79 256S133.27 480 288 480s280.21-100.32 280.21-224S442.73 32 288 32zm-85.39 357.19L64.1 390.55l77.25-290.74h133.44c63.15 0 84.93 28.65 78 72.84a60.24 60.24 0 0 1-1.5 6.85 77.39 77.39 0 0 0-17.21-1.93c-42.35 0-76.69 33.88-76.69 75.65 0 37.14 27.14 68 62.93 74.45-18.24 37.16-56.16 60.92-117.71 61.52zM358 207.11h32l-22.16 90.31h-35.41l-11.19-35.63-7.83 35.63h-37.83l26.63-90.31h31.34l15 36.75zm145.86 182.08H306.79L322.63 328a78.8 78.8 0 0 0 11.47.83c42.34 0 76.69-33.87 76.69-75.65 0-32.65-21-60.46-50.38-71.06l21.33-82.35h92.5l-53.05 205.36h103.87zM211.7 269.39H187l-13.8 56.47h24.7c16.14 0 32.11-3.18 37.94-26.65 5.56-22.31-7.99-29.82-24.14-29.82zM233 170h-21.34L200 217.71h21.37c18 0 35.38-14.64 39.21-30.14C265.23 168.71 251.07 170 233 170z\"],\n    \"buysellads\": [448, 512, [], \"f20d\", \"M224 150.7l42.9 160.7h-85.8L224 150.7zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-65.3 325.3l-94.5-298.7H159.8L65.3 405.3H156l111.7-91.6 24.2 91.6h90.8z\"],\n    \"canadian-maple-leaf\": [512, 512, [], \"f785\", \"M383.8 351.7c2.5-2.5 105.2-92.4 105.2-92.4l-17.5-7.5c-10-4.9-7.4-11.5-5-17.4 2.4-7.6 20.1-67.3 20.1-67.3s-47.7 10-57.7 12.5c-7.5 2.4-10-2.5-12.5-7.5s-15-32.4-15-32.4-52.6 59.9-55.1 62.3c-10 7.5-20.1 0-17.6-10 0-10 27.6-129.6 27.6-129.6s-30.1 17.4-40.1 22.4c-7.5 5-12.6 5-17.6-5C293.5 72.3 255.9 0 255.9 0s-37.5 72.3-42.5 79.8c-5 10-10 10-17.6 5-10-5-40.1-22.4-40.1-22.4S183.3 182 183.3 192c2.5 10-7.5 17.5-17.6 10-2.5-2.5-55.1-62.3-55.1-62.3S98.1 167 95.6 172s-5 9.9-12.5 7.5C73 177 25.4 167 25.4 167s17.6 59.7 20.1 67.3c2.4 6 5 12.5-5 17.4L23 259.3s102.6 89.9 105.2 92.4c5.1 5 10 7.5 5.1 22.5-5.1 15-10.1 35.1-10.1 35.1s95.2-20.1 105.3-22.6c8.7-.9 18.3 2.5 18.3 12.5S241 512 241 512h30s-5.8-102.7-5.8-112.8 9.5-13.4 18.4-12.5c10 2.5 105.2 22.6 105.2 22.6s-5-20.1-10-35.1 0-17.5 5-22.5z\"],\n    \"cc-amazon-pay\": [576, 512, [], \"f42d\", \"M124.7 201.8c.1-11.8 0-23.5 0-35.3v-35.3c0-1.3.4-2 1.4-2.7 11.5-8 24.1-12.1 38.2-11.1 12.5.9 22.7 7 28.1 21.7 3.3 8.9 4.1 18.2 4.1 27.7 0 8.7-.7 17.3-3.4 25.6-5.7 17.8-18.7 24.7-35.7 23.9-11.7-.5-21.9-5-31.4-11.7-.9-.8-1.4-1.6-1.3-2.8zm154.9 14.6c4.6 1.8 9.3 2 14.1 1.5 11.6-1.2 21.9-5.7 31.3-12.5.9-.6 1.3-1.3 1.3-2.5-.1-3.9 0-7.9 0-11.8 0-4-.1-8 0-12 0-1.4-.4-2-1.8-2.2-7-.9-13.9-2.2-20.9-2.9-7-.6-14-.3-20.8 1.9-6.7 2.2-11.7 6.2-13.7 13.1-1.6 5.4-1.6 10.8.1 16.2 1.6 5.5 5.2 9.2 10.4 11.2zM576 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h480c26.5 0 48 21.5 48 48zm-207.5 23.9c.4 1.7.9 3.4 1.6 5.1 16.5 40.6 32.9 81.3 49.5 121.9 1.4 3.5 1.7 6.4.2 9.9-2.8 6.2-4.9 12.6-7.8 18.7-2.6 5.5-6.7 9.5-12.7 11.2-4.2 1.1-8.5 1.3-12.9.9-2.1-.2-4.2-.7-6.3-.8-2.8-.2-4.2 1.1-4.3 4-.1 2.8-.1 5.6 0 8.3.1 4.6 1.6 6.7 6.2 7.5 4.7.8 9.4 1.6 14.2 1.7 14.3.3 25.7-5.4 33.1-17.9 2.9-4.9 5.6-10.1 7.7-15.4 19.8-50.1 39.5-100.3 59.2-150.5.6-1.5 1.1-3 1.3-4.6.4-2.4-.7-3.6-3.1-3.7-5.6-.1-11.1 0-16.7 0-3.1 0-5.3 1.4-6.4 4.3-.4 1.1-.9 2.3-1.3 3.4l-29.1 83.7c-2.1 6.1-4.2 12.1-6.5 18.6-.4-.9-.6-1.4-.8-1.9-10.8-29.9-21.6-59.9-32.4-89.8-1.7-4.7-3.5-9.5-5.3-14.2-.9-2.5-2.7-4-5.4-4-6.4-.1-12.8-.2-19.2-.1-2.2 0-3.3 1.6-2.8 3.7zM242.4 206c1.7 11.7 7.6 20.8 18 26.6 9.9 5.5 20.7 6.2 31.7 4.6 12.7-1.9 23.9-7.3 33.8-15.5.4-.3.8-.6 1.4-1 .5 3.2.9 6.2 1.5 9.2.5 2.6 2.1 4.3 4.5 4.4 4.6.1 9.1.1 13.7 0 2.3-.1 3.8-1.6 4-3.9.1-.8.1-1.6.1-2.3v-88.8c0-3.6-.2-7.2-.7-10.8-1.6-10.8-6.2-19.7-15.9-25.4-5.6-3.3-11.8-5-18.2-5.9-3-.4-6-.7-9.1-1.1h-10c-.8.1-1.6.3-2.5.3-8.2.4-16.3 1.4-24.2 3.5-5.1 1.3-10 3.2-15 4.9-3 1-4.5 3.2-4.4 6.5.1 2.8-.1 5.6 0 8.3.1 4.1 1.8 5.2 5.7 4.1 6.5-1.7 13.1-3.5 19.7-4.8 10.3-1.9 20.7-2.7 31.1-1.2 5.4.8 10.5 2.4 14.1 7 3.1 4 4.2 8.8 4.4 13.7.3 6.9.2 13.9.3 20.8 0 .4-.1.7-.2 1.2-.4 0-.8 0-1.1-.1-8.8-2.1-17.7-3.6-26.8-4.1-9.5-.5-18.9.1-27.9 3.2-10.8 3.8-19.5 10.3-24.6 20.8-4.1 8.3-4.6 17-3.4 25.8zM98.7 106.9v175.3c0 .8 0 1.7.1 2.5.2 2.5 1.7 4.1 4.1 4.2 5.9.1 11.8.1 17.7 0 2.5 0 4-1.7 4.1-4.1.1-.8.1-1.7.1-2.5v-60.7c.9.7 1.4 1.2 1.9 1.6 15 12.5 32.2 16.6 51.1 12.9 17.1-3.4 28.9-13.9 36.7-29.2 5.8-11.6 8.3-24.1 8.7-37 .5-14.3-1-28.4-6.8-41.7-7.1-16.4-18.9-27.3-36.7-30.9-2.7-.6-5.5-.8-8.2-1.2h-7c-1.2.2-2.4.3-3.6.5-11.7 1.4-22.3 5.8-31.8 12.7-2 1.4-3.9 3-5.9 4.5-.1-.5-.3-.8-.4-1.2-.4-2.3-.7-4.6-1.1-6.9-.6-3.9-2.5-5.5-6.4-5.6h-9.7c-5.9-.1-6.9 1-6.9 6.8zM493.6 339c-2.7-.7-5.1 0-7.6 1-43.9 18.4-89.5 30.2-136.8 35.8-14.5 1.7-29.1 2.8-43.7 3.2-26.6.7-53.2-.8-79.6-4.3-17.8-2.4-35.5-5.7-53-9.9-37-8.9-72.7-21.7-106.7-38.8-8.8-4.4-17.4-9.3-26.1-14-3.8-2.1-6.2-1.5-8.2 2.1v1.7c1.2 1.6 2.2 3.4 3.7 4.8 36 32.2 76.6 56.5 122 72.9 21.9 7.9 44.4 13.7 67.3 17.5 14 2.3 28 3.8 42.2 4.5 3 .1 6 .2 9 .4.7 0 1.4.2 2.1.3h17.7c.7-.1 1.4-.3 2.1-.3 14.9-.4 29.8-1.8 44.6-4 21.4-3.2 42.4-8.1 62.9-14.7 29.6-9.6 57.7-22.4 83.4-40.1 2.8-1.9 5.7-3.8 8-6.2 4.3-4.4 2.3-10.4-3.3-11.9zm50.4-27.7c-.8-4.2-4-5.8-7.6-7-5.7-1.9-11.6-2.8-17.6-3.3-11-.9-22-.4-32.8 1.6-12 2.2-23.4 6.1-33.5 13.1-1.2.8-2.4 1.8-3.1 3-.6.9-.7 2.3-.5 3.4.3 1.3 1.7 1.6 3 1.5.6 0 1.2 0 1.8-.1l19.5-2.1c9.6-.9 19.2-1.5 28.8-.8 4.1.3 8.1 1.2 12 2.2 4.3 1.1 6.2 4.4 6.4 8.7.3 6.7-1.2 13.1-2.9 19.5-3.5 12.9-8.3 25.4-13.3 37.8-.3.8-.7 1.7-.8 2.5-.4 2.5 1 4 3.4 3.5 1.4-.3 3-1.1 4-2.1 3.7-3.6 7.5-7.2 10.6-11.2 10.7-13.8 17-29.6 20.7-46.6.7-3 1.2-6.1 1.7-9.1.2-4.7.2-9.6.2-14.5z\"],\n    \"cc-amex\": [576, 512, [], \"f1f3\", \"M325.1 167.8c0-16.4-14.1-18.4-27.4-18.4l-39.1-.3v69.3H275v-25.1h18c18.4 0 14.5 10.3 14.8 25.1h16.6v-13.5c0-9.2-1.5-15.1-11-18.4 7.4-3 11.8-10.7 11.7-18.7zm-29.4 11.3H275v-15.3h21c5.1 0 10.7 1 10.7 7.4 0 6.6-5.3 7.9-11 7.9zM279 268.6h-52.7l-21 22.8-20.5-22.8h-66.5l-.1 69.3h65.4l21.3-23 20.4 23h32.2l.1-23.3c18.9 0 49.3 4.6 49.3-23.3 0-17.3-12.3-22.7-27.9-22.7zm-103.8 54.7h-40.6v-13.8h36.3v-14.1h-36.3v-12.5h41.7l17.9 20.2zm65.8 8.2l-25.3-28.1L241 276zm37.8-31h-21.2v-17.6h21.5c5.6 0 10.2 2.3 10.2 8.4 0 6.4-4.6 9.2-10.5 9.2zm-31.6-136.7v-14.6h-55.5v69.3h55.5v-14.3h-38.9v-13.8h37.8v-14.1h-37.8v-12.5zM576 255.4h-.2zm-194.6 31.9c0-16.4-14.1-18.7-27.1-18.7h-39.4l-.1 69.3h16.6l.1-25.3h17.6c11 0 14.8 2 14.8 13.8l-.1 11.5h16.6l.1-13.8c0-8.9-1.8-15.1-11-18.4 7.7-3.1 11.8-10.8 11.9-18.4zm-29.2 11.2h-20.7v-15.6h21c5.1 0 10.7 1 10.7 7.4 0 6.9-5.4 8.2-11 8.2zm-172.8-80v-69.3h-27.6l-19.7 47-21.7-47H83.3v65.7l-28.1-65.7H30.7L1 218.5h17.9l6.4-15.3h34.5l6.4 15.3H100v-54.2l24 54.2h14.6l24-54.2v54.2zM31.2 188.8l11.2-27.6 11.5 27.6zm477.4 158.9v-4.5c-10.8 5.6-3.9 4.5-156.7 4.5 0-25.2.1-23.9 0-25.2-1.7-.1-3.2-.1-9.4-.1 0 17.9-.1 6.8-.1 25.3h-39.6c0-12.1.1-15.3.1-29.2-10 6-22.8 6.4-34.3 6.2 0 14.7-.1 8.3-.1 23h-48.9c-5.1-5.7-2.7-3.1-15.4-17.4-3.2 3.5-12.8 13.9-16.1 17.4h-82v-92.3h83.1c5 5.6 2.8 3.1 15.5 17.2 3.2-3.5 12.2-13.4 15.7-17.2h58c9.8 0 18 1.9 24.3 5.6v-5.6c54.3 0 64.3-1.4 75.7 5.1v-5.1h78.2v5.2c11.4-6.9 19.6-5.2 64.9-5.2v5c10.3-5.9 16.6-5.2 54.3-5V80c0-26.5-21.5-48-48-48h-480c-26.5 0-48 21.5-48 48v109.8c9.4-21.9 19.7-46 23.1-53.9h39.7c4.3 10.1 1.6 3.7 9 21.1v-21.1h46c2.9 6.2 11.1 24 13.9 30 5.8-13.6 10.1-23.9 12.6-30h103c0-.1 11.5 0 11.6 0 43.7.2 53.6-.8 64.4 5.3v-5.3H363v9.3c7.6-6.1 17.9-9.3 30.7-9.3h27.6c0 .5 1.9.3 2.3.3H456c4.2 9.8 2.6 6 8.8 20.6v-20.6h43.3c4.9 8-1-1.8 11.2 18.4v-18.4h39.9v92h-41.6c-5.4-9-1.4-2.2-13.2-21.9v21.9h-52.8c-6.4-14.8-.1-.3-6.6-15.3h-19c-4.2 10-2.2 5.2-6.4 15.3h-26.8c-12.3 0-22.3-3-29.7-8.9v8.9h-66.5c-.3-13.9-.1-24.8-.1-24.8-1.8-.3-3.4-.2-9.8-.2v25.1H151.2v-11.4c-2.5 5.6-2.7 5.9-5.1 11.4h-29.5c-4-8.9-2.9-6.4-5.1-11.4v11.4H58.6c-4.2-10.1-2.2-5.3-6.4-15.3H33c-4.2 10-2.2 5.2-6.4 15.3H0V432c0 26.5 21.5 48 48 48h480.1c26.5 0 48-21.5 48-48v-90.4c-12.7 8.3-32.7 6.1-67.5 6.1zm36.3-64.5H575v-14.6h-32.9c-12.8 0-23.8 6.6-23.8 20.7 0 33 42.7 12.8 42.7 27.4 0 5.1-4.3 6.4-8.4 6.4h-32l-.1 14.8h32c8.4 0 17.6-1.8 22.5-8.9v-25.8c-10.5-13.8-39.3-1.3-39.3-13.5 0-5.8 4.6-6.5 9.2-6.5zm-57 39.8h-32.2l-.1 14.8h32.2c14.8 0 26.2-5.6 26.2-22 0-33.2-42.9-11.2-42.9-26.3 0-5.6 4.9-6.4 9.2-6.4h30.4v-14.6h-33.2c-12.8 0-23.5 6.6-23.5 20.7 0 33 42.7 12.5 42.7 27.4-.1 5.4-4.7 6.4-8.8 6.4zm-42.2-40.1v-14.3h-55.2l-.1 69.3h55.2l.1-14.3-38.6-.3v-13.8H445v-14.1h-37.8v-12.5zm-56.3-108.1c-.3.2-1.4 2.2-1.4 7.6 0 6 .9 7.7 1.1 7.9.2.1 1.1.5 3.4.5l7.3-16.9c-1.1 0-2.1-.1-3.1-.1-5.6 0-7 .7-7.3 1zm20.4-10.5h-.1zm-16.2-15.2c-23.5 0-34 12-34 35.3 0 22.2 10.2 34 33 34h19.2l6.4-15.3h34.3l6.6 15.3h33.7v-51.9l31.2 51.9h23.6v-69h-16.9v48.1l-29.1-48.1h-25.3v65.4l-27.9-65.4h-24.8l-23.5 54.5h-7.4c-13.3 0-16.1-8.1-16.1-19.9 0-23.8 15.7-20 33.1-19.7v-15.2zm42.1 12.1l11.2 27.6h-22.8zm-101.1-12v69.3h16.9v-69.3z\"],\n    \"cc-apple-pay\": [576, 512, [], \"f416\", \"M302.2 218.4c0 17.2-10.5 27.1-29 27.1h-24.3v-54.2h24.4c18.4 0 28.9 9.8 28.9 27.1zm47.5 62.6c0 8.3 7.2 13.7 18.5 13.7 14.4 0 25.2-9.1 25.2-21.9v-7.7l-23.5 1.5c-13.3.9-20.2 5.8-20.2 14.4zM576 79v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V79c0-26.5 21.5-48 48-48h480c26.5 0 48 21.5 48 48zM127.8 197.2c8.4.7 16.8-4.2 22.1-10.4 5.2-6.4 8.6-15 7.7-23.7-7.4.3-16.6 4.9-21.9 11.3-4.8 5.5-8.9 14.4-7.9 22.8zm60.6 74.5c-.2-.2-19.6-7.6-19.8-30-.2-18.7 15.3-27.7 16-28.2-8.8-13-22.4-14.4-27.1-14.7-12.2-.7-22.6 6.9-28.4 6.9-5.9 0-14.7-6.6-24.3-6.4-12.5.2-24.2 7.3-30.5 18.6-13.1 22.6-3.4 56 9.3 74.4 6.2 9.1 13.7 19.1 23.5 18.7 9.3-.4 13-6 24.2-6 11.3 0 14.5 6 24.3 5.9 10.2-.2 16.5-9.1 22.8-18.2 6.9-10.4 9.8-20.4 10-21zm135.4-53.4c0-26.6-18.5-44.8-44.9-44.8h-51.2v136.4h21.2v-46.6h29.3c26.8 0 45.6-18.4 45.6-45zm90 23.7c0-19.7-15.8-32.4-40-32.4-22.5 0-39.1 12.9-39.7 30.5h19.1c1.6-8.4 9.4-13.9 20-13.9 13 0 20.2 6 20.2 17.2v7.5l-26.4 1.6c-24.6 1.5-37.9 11.6-37.9 29.1 0 17.7 13.7 29.4 33.4 29.4 13.3 0 25.6-6.7 31.2-17.4h.4V310h19.6v-68zM516 210.9h-21.5l-24.9 80.6h-.4l-24.9-80.6H422l35.9 99.3-1.9 6c-3.2 10.2-8.5 14.2-17.9 14.2-1.7 0-4.9-.2-6.2-.3v16.4c1.2.4 6.5.5 8.1.5 20.7 0 30.4-7.9 38.9-31.8L516 210.9z\"],\n    \"cc-diners-club\": [576, 512, [], \"f24c\", \"M239.7 79.9c-96.9 0-175.8 78.6-175.8 175.8 0 96.9 78.9 175.8 175.8 175.8 97.2 0 175.8-78.9 175.8-175.8 0-97.2-78.6-175.8-175.8-175.8zm-39.9 279.6c-41.7-15.9-71.4-56.4-71.4-103.8s29.7-87.9 71.4-104.1v207.9zm79.8.3V151.6c41.7 16.2 71.4 56.7 71.4 104.1s-29.7 87.9-71.4 104.1zM528 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM329.7 448h-90.3c-106.2 0-193.8-85.5-193.8-190.2C45.6 143.2 133.2 64 239.4 64h90.3c105 0 200.7 79.2 200.7 193.8 0 104.7-95.7 190.2-200.7 190.2z\"],\n    \"cc-discover\": [576, 512, [], \"f1f2\", \"M520.4 196.1c0-7.9-5.5-12.1-15.6-12.1h-4.9v24.9h4.7c10.3 0 15.8-4.4 15.8-12.8zM528 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-44.1 138.9c22.6 0 52.9-4.1 52.9 24.4 0 12.6-6.6 20.7-18.7 23.2l25.8 34.4h-19.6l-22.2-32.8h-2.2v32.8h-16zm-55.9.1h45.3v14H444v18.2h28.3V217H444v22.2h29.3V253H428zm-68.7 0l21.9 55.2 22.2-55.2h17.5l-35.5 84.2h-8.6l-35-84.2zm-55.9-3c24.7 0 44.6 20 44.6 44.6 0 24.7-20 44.6-44.6 44.6-24.7 0-44.6-20-44.6-44.6 0-24.7 20-44.6 44.6-44.6zm-49.3 6.1v19c-20.1-20.1-46.8-4.7-46.8 19 0 25 27.5 38.5 46.8 19.2v19c-29.7 14.3-63.3-5.7-63.3-38.2 0-31.2 33.1-53 63.3-38zm-97.2 66.3c11.4 0 22.4-15.3-3.3-24.4-15-5.5-20.2-11.4-20.2-22.7 0-23.2 30.6-31.4 49.7-14.3l-8.4 10.8c-10.4-11.6-24.9-6.2-24.9 2.5 0 4.4 2.7 6.9 12.3 10.3 18.2 6.6 23.6 12.5 23.6 25.6 0 29.5-38.8 37.4-56.6 11.3l10.3-9.9c3.7 7.1 9.9 10.8 17.5 10.8zM55.4 253H32v-82h23.4c26.1 0 44.1 17 44.1 41.1 0 18.5-13.2 40.9-44.1 40.9zm67.5 0h-16v-82h16zM544 433c0 8.2-6.8 15-15 15H128c189.6-35.6 382.7-139.2 416-160zM74.1 191.6c-5.2-4.9-11.6-6.6-21.9-6.6H48v54.2h4.2c10.3 0 17-2 21.9-6.4 5.7-5.2 8.9-12.8 8.9-20.7s-3.2-15.5-8.9-20.5z\"],\n    \"cc-jcb\": [576, 512, [], \"f24b\", \"M431.5 244.3V212c41.2 0 38.5.2 38.5.2 7.3 1.3 13.3 7.3 13.3 16 0 8.8-6 14.5-13.3 15.8-1.2.4-3.3.3-38.5.3zm42.8 20.2c-2.8-.7-3.3-.5-42.8-.5v35c39.6 0 40 .2 42.8-.5 7.5-1.5 13.5-8 13.5-17 0-8.7-6-15.5-13.5-17zM576 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h480c26.5 0 48 21.5 48 48zM182 192.3h-57c0 67.1 10.7 109.7-35.8 109.7-19.5 0-38.8-5.7-57.2-14.8v28c30 8.3 68 8.3 68 8.3 97.9 0 82-47.7 82-131.2zm178.5 4.5c-63.4-16-165-14.9-165 59.3 0 77.1 108.2 73.6 165 59.2V287C312.9 311.7 253 309 253 256s59.8-55.6 107.5-31.2v-28zM544 286.5c0-18.5-16.5-30.5-38-32v-.8c19.5-2.7 30.3-15.5 30.3-30.2 0-19-15.7-30-37-31 0 0 6.3-.3-120.3-.3v127.5h122.7c24.3.1 42.3-12.9 42.3-33.2z\"],\n    \"cc-mastercard\": [576, 512, [], \"f1f1\", \"M482.9 410.3c0 6.8-4.6 11.7-11.2 11.7-6.8 0-11.2-5.2-11.2-11.7 0-6.5 4.4-11.7 11.2-11.7 6.6 0 11.2 5.2 11.2 11.7zm-310.8-11.7c-7.1 0-11.2 5.2-11.2 11.7 0 6.5 4.1 11.7 11.2 11.7 6.5 0 10.9-4.9 10.9-11.7-.1-6.5-4.4-11.7-10.9-11.7zm117.5-.3c-5.4 0-8.7 3.5-9.5 8.7h19.1c-.9-5.7-4.4-8.7-9.6-8.7zm107.8.3c-6.8 0-10.9 5.2-10.9 11.7 0 6.5 4.1 11.7 10.9 11.7 6.8 0 11.2-4.9 11.2-11.7 0-6.5-4.4-11.7-11.2-11.7zm105.9 26.1c0 .3.3.5.3 1.1 0 .3-.3.5-.3 1.1-.3.3-.3.5-.5.8-.3.3-.5.5-1.1.5-.3.3-.5.3-1.1.3-.3 0-.5 0-1.1-.3-.3 0-.5-.3-.8-.5-.3-.3-.5-.5-.5-.8-.3-.5-.3-.8-.3-1.1 0-.5 0-.8.3-1.1 0-.5.3-.8.5-1.1.3-.3.5-.3.8-.5.5-.3.8-.3 1.1-.3.5 0 .8 0 1.1.3.5.3.8.3 1.1.5s.2.6.5 1.1zm-2.2 1.4c.5 0 .5-.3.8-.3.3-.3.3-.5.3-.8 0-.3 0-.5-.3-.8-.3 0-.5-.3-1.1-.3h-1.6v3.5h.8V426h.3l1.1 1.4h.8l-1.1-1.3zM576 81v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V81c0-26.5 21.5-48 48-48h480c26.5 0 48 21.5 48 48zM64 220.6c0 76.5 62.1 138.5 138.5 138.5 27.2 0 53.9-8.2 76.5-23.1-72.9-59.3-72.4-171.2 0-230.5-22.6-15-49.3-23.1-76.5-23.1-76.4-.1-138.5 62-138.5 138.2zm224 108.8c70.5-55 70.2-162.2 0-217.5-70.2 55.3-70.5 162.6 0 217.5zm-142.3 76.3c0-8.7-5.7-14.4-14.7-14.7-4.6 0-9.5 1.4-12.8 6.5-2.4-4.1-6.5-6.5-12.2-6.5-3.8 0-7.6 1.4-10.6 5.4V392h-8.2v36.7h8.2c0-18.9-2.5-30.2 9-30.2 10.2 0 8.2 10.2 8.2 30.2h7.9c0-18.3-2.5-30.2 9-30.2 10.2 0 8.2 10 8.2 30.2h8.2v-23zm44.9-13.7h-7.9v4.4c-2.7-3.3-6.5-5.4-11.7-5.4-10.3 0-18.2 8.2-18.2 19.3 0 11.2 7.9 19.3 18.2 19.3 5.2 0 9-1.9 11.7-5.4v4.6h7.9V392zm40.5 25.6c0-15-22.9-8.2-22.9-15.2 0-5.7 11.9-4.8 18.5-1.1l3.3-6.5c-9.4-6.1-30.2-6-30.2 8.2 0 14.3 22.9 8.3 22.9 15 0 6.3-13.5 5.8-20.7.8l-3.5 6.3c11.2 7.6 32.6 6 32.6-7.5zm35.4 9.3l-2.2-6.8c-3.8 2.1-12.2 4.4-12.2-4.1v-16.6h13.1V392h-13.1v-11.2h-8.2V392h-7.6v7.3h7.6V416c0 17.6 17.3 14.4 22.6 10.9zm13.3-13.4h27.5c0-16.2-7.4-22.6-17.4-22.6-10.6 0-18.2 7.9-18.2 19.3 0 20.5 22.6 23.9 33.8 14.2l-3.8-6c-7.8 6.4-19.6 5.8-21.9-4.9zm59.1-21.5c-4.6-2-11.6-1.8-15.2 4.4V392h-8.2v36.7h8.2V408c0-11.6 9.5-10.1 12.8-8.4l2.4-7.6zm10.6 18.3c0-11.4 11.6-15.1 20.7-8.4l3.8-6.5c-11.6-9.1-32.7-4.1-32.7 15 0 19.8 22.4 23.8 32.7 15l-3.8-6.5c-9.2 6.5-20.7 2.6-20.7-8.6zm66.7-18.3H408v4.4c-8.3-11-29.9-4.8-29.9 13.9 0 19.2 22.4 24.7 29.9 13.9v4.6h8.2V392zm33.7 0c-2.4-1.2-11-2.9-15.2 4.4V392h-7.9v36.7h7.9V408c0-11 9-10.3 12.8-8.4l2.4-7.6zm40.3-14.9h-7.9v19.3c-8.2-10.9-29.9-5.1-29.9 13.9 0 19.4 22.5 24.6 29.9 13.9v4.6h7.9v-51.7zm7.6-75.1v4.6h.8V302h1.9v-.8h-4.6v.8h1.9zm6.6 123.8c0-.5 0-1.1-.3-1.6-.3-.3-.5-.8-.8-1.1-.3-.3-.8-.5-1.1-.8-.5 0-1.1-.3-1.6-.3-.3 0-.8.3-1.4.3-.5.3-.8.5-1.1.8-.5.3-.8.8-.8 1.1-.3.5-.3 1.1-.3 1.6 0 .3 0 .8.3 1.4 0 .3.3.8.8 1.1.3.3.5.5 1.1.8.5.3 1.1.3 1.4.3.5 0 1.1 0 1.6-.3.3-.3.8-.5 1.1-.8.3-.3.5-.8.8-1.1.3-.6.3-1.1.3-1.4zm3.2-124.7h-1.4l-1.6 3.5-1.6-3.5h-1.4v5.4h.8v-4.1l1.6 3.5h1.1l1.4-3.5v4.1h1.1v-5.4zm4.4-80.5c0-76.2-62.1-138.3-138.5-138.3-27.2 0-53.9 8.2-76.5 23.1 72.1 59.3 73.2 171.5 0 230.5 22.6 15 49.5 23.1 76.5 23.1 76.4.1 138.5-61.9 138.5-138.4z\"],\n    \"cc-paypal\": [576, 512, [], \"f1f4\", \"M186.3 258.2c0 12.2-9.7 21.5-22 21.5-9.2 0-16-5.2-16-15 0-12.2 9.5-22 21.7-22 9.3 0 16.3 5.7 16.3 15.5zM80.5 209.7h-4.7c-1.5 0-3 1-3.2 2.7l-4.3 26.7 8.2-.3c11 0 19.5-1.5 21.5-14.2 2.3-13.4-6.2-14.9-17.5-14.9zm284 0H360c-1.8 0-3 1-3.2 2.7l-4.2 26.7 8-.3c13 0 22-3 22-18-.1-10.6-9.6-11.1-18.1-11.1zM576 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h480c26.5 0 48 21.5 48 48zM128.3 215.4c0-21-16.2-28-34.7-28h-40c-2.5 0-5 2-5.2 4.7L32 294.2c-.3 2 1.2 4 3.2 4h19c2.7 0 5.2-2.9 5.5-5.7l4.5-26.6c1-7.2 13.2-4.7 18-4.7 28.6 0 46.1-17 46.1-45.8zm84.2 8.8h-19c-3.8 0-4 5.5-4.2 8.2-5.8-8.5-14.2-10-23.7-10-24.5 0-43.2 21.5-43.2 45.2 0 19.5 12.2 32.2 31.7 32.2 9 0 20.2-4.9 26.5-11.9-.5 1.5-1 4.7-1 6.2 0 2.3 1 4 3.2 4H200c2.7 0 5-2.9 5.5-5.7l10.2-64.3c.3-1.9-1.2-3.9-3.2-3.9zm40.5 97.9l63.7-92.6c.5-.5.5-1 .5-1.7 0-1.7-1.5-3.5-3.2-3.5h-19.2c-1.7 0-3.5 1-4.5 2.5l-26.5 39-11-37.5c-.8-2.2-3-4-5.5-4h-18.7c-1.7 0-3.2 1.8-3.2 3.5 0 1.2 19.5 56.8 21.2 62.1-2.7 3.8-20.5 28.6-20.5 31.6 0 1.8 1.5 3.2 3.2 3.2h19.2c1.8-.1 3.5-1.1 4.5-2.6zm159.3-106.7c0-21-16.2-28-34.7-28h-39.7c-2.7 0-5.2 2-5.5 4.7l-16.2 102c-.2 2 1.3 4 3.2 4h20.5c2 0 3.5-1.5 4-3.2l4.5-29c1-7.2 13.2-4.7 18-4.7 28.4 0 45.9-17 45.9-45.8zm84.2 8.8h-19c-3.8 0-4 5.5-4.3 8.2-5.5-8.5-14-10-23.7-10-24.5 0-43.2 21.5-43.2 45.2 0 19.5 12.2 32.2 31.7 32.2 9.3 0 20.5-4.9 26.5-11.9-.3 1.5-1 4.7-1 6.2 0 2.3 1 4 3.2 4H484c2.7 0 5-2.9 5.5-5.7l10.2-64.3c.3-1.9-1.2-3.9-3.2-3.9zm47.5-33.3c0-2-1.5-3.5-3.2-3.5h-18.5c-1.5 0-3 1.2-3.2 2.7l-16.2 104-.3.5c0 1.8 1.5 3.5 3.5 3.5h16.5c2.5 0 5-2.9 5.2-5.7L544 191.2v-.3zm-90 51.8c-12.2 0-21.7 9.7-21.7 22 0 9.7 7 15 16.2 15 12 0 21.7-9.2 21.7-21.5.1-9.8-6.9-15.5-16.2-15.5z\"],\n    \"cc-stripe\": [576, 512, [], \"f1f5\", \"M492.4 220.8c-8.9 0-18.7 6.7-18.7 22.7h36.7c0-16-9.3-22.7-18-22.7zM375 223.4c-8.2 0-13.3 2.9-17 7l.2 52.8c3.5 3.7 8.5 6.7 16.8 6.7 13.1 0 21.9-14.3 21.9-33.4 0-18.6-9-33.2-21.9-33.1zM528 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM122.2 281.1c0 25.6-20.3 40.1-49.9 40.3-12.2 0-25.6-2.4-38.8-8.1v-33.9c12 6.4 27.1 11.3 38.9 11.3 7.9 0 13.6-2.1 13.6-8.7 0-17-54-10.6-54-49.9 0-25.2 19.2-40.2 48-40.2 11.8 0 23.5 1.8 35.3 6.5v33.4c-10.8-5.8-24.5-9.1-35.3-9.1-7.5 0-12.1 2.2-12.1 7.7 0 16 54.3 8.4 54.3 50.7zm68.8-56.6h-27V275c0 20.9 22.5 14.4 27 12.6v28.9c-4.7 2.6-13.3 4.7-24.9 4.7-21.1 0-36.9-15.5-36.9-36.5l.2-113.9 34.7-7.4v30.8H191zm74 2.4c-4.5-1.5-18.7-3.6-27.1 7.4v84.4h-35.5V194.2h30.7l2.2 10.5c8.3-15.3 24.9-12.2 29.6-10.5h.1zm44.1 91.8h-35.7V194.2h35.7zm0-142.9l-35.7 7.6v-28.9l35.7-7.6zm74.1 145.5c-12.4 0-20-5.3-25.1-9l-.1 40.2-35.5 7.5V194.2h31.3l1.8 8.8c4.9-4.5 13.9-11.1 27.8-11.1 24.9 0 48.4 22.5 48.4 63.8 0 45.1-23.2 65.5-48.6 65.6zm160.4-51.5h-69.5c1.6 16.6 13.8 21.5 27.6 21.5 14.1 0 25.2-3 34.9-7.9V312c-9.7 5.3-22.4 9.2-39.4 9.2-34.6 0-58.8-21.7-58.8-64.5 0-36.2 20.5-64.9 54.3-64.9 33.7 0 51.3 28.7 51.3 65.1 0 3.5-.3 10.9-.4 12.9z\"],\n    \"cc-visa\": [576, 512, [], \"f1f0\", \"M470.1 231.3s7.6 37.2 9.3 45H446c3.3-8.9 16-43.5 16-43.5-.2.3 3.3-9.1 5.3-14.9l2.8 13.4zM576 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h480c26.5 0 48 21.5 48 48zM152.5 331.2L215.7 176h-42.5l-39.3 106-4.3-21.5-14-71.4c-2.3-9.9-9.4-12.7-18.2-13.1H32.7l-.7 3.1c15.8 4 29.9 9.8 42.2 17.1l35.8 135h42.5zm94.4.2L272.1 176h-40.2l-25.1 155.4h40.1zm139.9-50.8c.2-17.7-10.6-31.2-33.7-42.3-14.1-7.1-22.7-11.9-22.7-19.2.2-6.6 7.3-13.4 23.1-13.4 13.1-.3 22.7 2.8 29.9 5.9l3.6 1.7 5.5-33.6c-7.9-3.1-20.5-6.6-36-6.6-39.7 0-67.6 21.2-67.8 51.4-.3 22.3 20 34.7 35.2 42.2 15.5 7.6 20.8 12.6 20.8 19.3-.2 10.4-12.6 15.2-24.1 15.2-16 0-24.6-2.5-37.7-8.3l-5.3-2.5-5.6 34.9c9.4 4.3 26.8 8.1 44.8 8.3 42.2.1 69.7-20.8 70-53zM528 331.4L495.6 176h-31.1c-9.6 0-16.9 2.8-21 12.9l-59.7 142.5H426s6.9-19.2 8.4-23.3H486c1.2 5.5 4.8 23.3 4.8 23.3H528z\"],\n    \"centercode\": [512, 512, [], \"f380\", \"M329.2 268.6c-3.8 35.2-35.4 60.6-70.6 56.8-35.2-3.8-60.6-35.4-56.8-70.6 3.8-35.2 35.4-60.6 70.6-56.8 35.1 3.8 60.6 35.4 56.8 70.6zm-85.8 235.1C96.7 496-8.2 365.5 10.1 224.3c11.2-86.6 65.8-156.9 139.1-192 161-77.1 349.7 37.4 354.7 216.6 4.1 147-118.4 262.2-260.5 254.8zm179.9-180c27.9-118-160.5-205.9-237.2-234.2-57.5 56.3-69.1 188.6-33.8 344.4 68.8 15.8 169.1-26.4 271-110.2z\"],\n    \"centos\": [448, 512, [], \"f789\", \"M289.6 97.5l31.6 31.7-76.3 76.5V97.5zm-162.4 31.7l76.3 76.5V97.5h-44.7zm41.5-41.6h44.7v127.9l10.8 10.8 10.8-10.8V87.6h44.7L224.2 32zm26.2 168.1l-10.8-10.8H55.5v-44.8L0 255.7l55.5 55.6v-44.8h128.6l10.8-10.8zm79.3-20.7h107.9v-44.8l-31.6-31.7zm173.3 20.7L392 200.1v44.8H264.3l-10.8 10.8 10.8 10.8H392v44.8l55.5-55.6zM65.4 176.2l32.5-31.7 90.3 90.5h15.3v-15.3l-90.3-90.5 31.6-31.7H65.4zm316.7-78.7h-78.5l31.6 31.7-90.3 90.5V235h15.3l90.3-90.5 31.6 31.7zM203.5 413.9V305.8l-76.3 76.5 31.6 31.7h44.7zM65.4 235h108.8l-76.3-76.5-32.5 31.7zm316.7 100.2l-31.6 31.7-90.3-90.5h-15.3v15.3l90.3 90.5-31.6 31.7h78.5zm0-58.8H274.2l76.3 76.5 31.6-31.7zm-60.9 105.8l-76.3-76.5v108.1h44.7zM97.9 352.9l76.3-76.5H65.4v44.8zm181.8 70.9H235V295.9l-10.8-10.8-10.8 10.8v127.9h-44.7l55.5 55.6zm-166.5-41.6l90.3-90.5v-15.3h-15.3l-90.3 90.5-32.5-31.7v78.7h79.4z\"],\n    \"chrome\": [496, 512, [], \"f268\", \"M131.5 217.5L55.1 100.1c47.6-59.2 119-91.8 192-92.1 42.3-.3 85.5 10.5 124.8 33.2 43.4 25.2 76.4 61.4 97.4 103L264 133.4c-58.1-3.4-113.4 29.3-132.5 84.1zm32.9 38.5c0 46.2 37.4 83.6 83.6 83.6s83.6-37.4 83.6-83.6-37.4-83.6-83.6-83.6-83.6 37.3-83.6 83.6zm314.9-89.2L339.6 174c37.9 44.3 38.5 108.2 6.6 157.2L234.1 503.6c46.5 2.5 94.4-7.7 137.8-32.9 107.4-62 150.9-192 107.4-303.9zM133.7 303.6L40.4 120.1C14.9 159.1 0 205.9 0 256c0 124 90.8 226.7 209.5 244.9l63.7-124.8c-57.6 10.8-113.2-20.8-139.5-72.5z\"],\n    \"chromecast\": [512, 512, [], \"f838\", \"M447.8,64H64c-23.6,0-42.7,19.1-42.7,42.7v63.9H64v-63.9h383.8v298.6H298.6V448H448c23.6,0,42.7-19.1,42.7-42.7V106.7 C490.7,83.1,471.4,64,447.8,64z M21.3,383.6L21.3,383.6l0,63.9h63.9C85.2,412.2,56.6,383.6,21.3,383.6L21.3,383.6z M21.3,298.6V341 c58.9,0,106.6,48.1,106.6,107h42.7C170.7,365.6,103.7,298.7,21.3,298.6z M213.4,448h42.7c-0.5-129.5-105.3-234.3-234.8-234.6l0,42.4 C127.3,255.6,213.3,342,213.4,448z\"],\n    \"cloudflare\": [640, 512, [], \"e07d\", \"M407.906,319.913l-230.8-2.928a4.58,4.58,0,0,1-3.632-1.926,4.648,4.648,0,0,1-.494-4.147,6.143,6.143,0,0,1,5.361-4.076L411.281,303.9c27.631-1.26,57.546-23.574,68.022-50.784l13.286-34.542a7.944,7.944,0,0,0,.524-2.936,7.735,7.735,0,0,0-.164-1.631A151.91,151.91,0,0,0,201.257,198.4,68.12,68.12,0,0,0,94.2,269.59C41.924,271.106,0,313.728,0,366.12a96.054,96.054,0,0,0,1.029,13.958,4.508,4.508,0,0,0,4.445,3.871l426.1.051c.043,0,.08-.019.122-.02a5.606,5.606,0,0,0,5.271-4l3.273-11.265c3.9-13.4,2.448-25.8-4.1-34.9C430.124,325.423,420.09,320.487,407.906,319.913ZM513.856,221.1c-2.141,0-4.271.062-6.391.164a3.771,3.771,0,0,0-3.324,2.653l-9.077,31.193c-3.9,13.4-2.449,25.786,4.1,34.89,6.02,8.4,16.054,13.323,28.238,13.9l49.2,2.939a4.491,4.491,0,0,1,3.51,1.894,4.64,4.64,0,0,1,.514,4.169,6.153,6.153,0,0,1-5.351,4.075l-51.125,2.939c-27.754,1.27-57.669,23.574-68.145,50.784l-3.695,9.606a2.716,2.716,0,0,0,2.427,3.68c.046,0,.088.017.136.017h175.91a4.69,4.69,0,0,0,4.539-3.37,124.807,124.807,0,0,0,4.682-34C640,277.3,583.524,221.1,513.856,221.1Z\"],\n    \"cloudscale\": [448, 512, [], \"f383\", \"M318.1 154l-9.4 7.6c-22.5-19.3-51.5-33.6-83.3-33.6C153.8 128 96 188.8 96 260.3c0 6.6.4 13.1 1.4 19.4-2-56 41.8-97.4 92.6-97.4 24.2 0 46.2 9.4 62.6 24.7l-25.2 20.4c-8.3-.9-16.8 1.8-23.1 8.1-11.1 11-11.1 28.9 0 40 11.1 11 28.9 11 40 0 6.3-6.3 9-14.9 8.1-23.1l75.2-88.8c6.3-6.5-3.3-15.9-9.5-9.6zm-83.8 111.5c-5.6 5.5-14.6 5.5-20.2 0-5.6-5.6-5.6-14.6 0-20.2s14.6-5.6 20.2 0 5.6 14.7 0 20.2zM224 32C100.5 32 0 132.5 0 256s100.5 224 224 224 224-100.5 224-224S347.5 32 224 32zm0 384c-88.2 0-160-71.8-160-160S135.8 96 224 96s160 71.8 160 160-71.8 160-160 160z\"],\n    \"cloudsmith\": [332, 512, [], \"f384\", \"M332.5 419.9c0 46.4-37.6 84.1-84 84.1s-84-37.7-84-84.1 37.6-84 84-84 84 37.6 84 84zm-84-243.9c46.4 0 80-37.6 80-84s-33.6-84-80-84-88 37.6-88 84-29.6 76-76 76-84 41.6-84 88 37.6 80 84 80 84-33.6 84-80 33.6-80 80-80z\"],\n    \"cloudversify\": [616, 512, [], \"f385\", \"M148.6 304c8.2 68.5 67.4 115.5 146 111.3 51.2 43.3 136.8 45.8 186.4-5.6 69.2 1.1 118.5-44.6 131.5-99.5 14.8-62.5-18.2-132.5-92.1-155.1-33-88.1-131.4-101.5-186.5-85-57.3 17.3-84.3 53.2-99.3 109.7-7.8 2.7-26.5 8.9-45 24.1 11.7 0 15.2 8.9 15.2 19.5v20.4c0 10.7-8.7 19.5-19.5 19.5h-20.2c-10.7 0-19.5-6-19.5-16.7V240H98.8C95 240 88 244.3 88 251.9v40.4c0 6.4 5.3 11.8 11.7 11.8h48.9zm227.4 8c-10.7 46.3 21.7 72.4 55.3 86.8C324.1 432.6 259.7 348 296 288c-33.2 21.6-33.7 71.2-29.2 92.9-17.9-12.4-53.8-32.4-57.4-79.8-3-39.9 21.5-75.7 57-93.9C297 191.4 369.9 198.7 400 248c-14.1-48-53.8-70.1-101.8-74.8 30.9-30.7 64.4-50.3 114.2-43.7 69.8 9.3 133.2 82.8 67.7 150.5 35-16.3 48.7-54.4 47.5-76.9l10.5 19.6c11.8 22 15.2 47.6 9.4 72-9.2 39-40.6 68.8-79.7 76.5-32.1 6.3-83.1-5.1-91.8-59.2zM128 208H88.2c-8.9 0-16.2-7.3-16.2-16.2v-39.6c0-8.9 7.3-16.2 16.2-16.2H128c8.9 0 16.2 7.3 16.2 16.2v39.6c0 8.9-7.3 16.2-16.2 16.2zM10.1 168C4.5 168 0 163.5 0 157.9v-27.8c0-5.6 4.5-10.1 10.1-10.1h27.7c5.5 0 10.1 4.5 10.1 10.1v27.8c0 5.6-4.5 10.1-10.1 10.1H10.1zM168 142.7v-21.4c0-5.1 4.2-9.3 9.3-9.3h21.4c5.1 0 9.3 4.2 9.3 9.3v21.4c0 5.1-4.2 9.3-9.3 9.3h-21.4c-5.1 0-9.3-4.2-9.3-9.3zM56 235.5v25c0 6.3-5.1 11.5-11.4 11.5H19.4C13.1 272 8 266.8 8 260.5v-25c0-6.3 5.1-11.5 11.4-11.5h25.1c6.4 0 11.5 5.2 11.5 11.5z\"],\n    \"codepen\": [512, 512, [], \"f1cb\", \"M502.285 159.704l-234-156c-7.987-4.915-16.511-4.96-24.571 0l-234 156C3.714 163.703 0 170.847 0 177.989v155.999c0 7.143 3.714 14.286 9.715 18.286l234 156.022c7.987 4.915 16.511 4.96 24.571 0l234-156.022c6-3.999 9.715-11.143 9.715-18.286V177.989c-.001-7.142-3.715-14.286-9.716-18.285zM278 63.131l172.286 114.858-76.857 51.429L278 165.703V63.131zm-44 0v102.572l-95.429 63.715-76.857-51.429L234 63.131zM44 219.132l55.143 36.857L44 292.846v-73.714zm190 229.715L61.714 333.989l76.857-51.429L234 346.275v102.572zm22-140.858l-77.715-52 77.715-52 77.715 52-77.715 52zm22 140.858V346.275l95.429-63.715 76.857 51.429L278 448.847zm190-156.001l-55.143-36.857L468 219.132v73.714z\"],\n    \"codiepie\": [472, 512, [], \"f284\", \"M422.5 202.9c30.7 0 33.5 53.1-.3 53.1h-10.8v44.3h-26.6v-97.4h37.7zM472 352.6C429.9 444.5 350.4 504 248 504 111 504 0 393 0 256S111 8 248 8c97.4 0 172.8 53.7 218.2 138.4l-186 108.8L472 352.6zm-38.5 12.5l-60.3-30.7c-27.1 44.3-70.4 71.4-122.4 71.4-82.5 0-149.2-66.7-149.2-148.9 0-82.5 66.7-149.2 149.2-149.2 48.4 0 88.9 23.5 116.9 63.4l59.5-34.6c-40.7-62.6-104.7-100-179.2-100-121.2 0-219.5 98.3-219.5 219.5S126.8 475.5 248 475.5c78.6 0 146.5-42.1 185.5-110.4z\"],\n    \"confluence\": [512, 512, [], \"f78d\", \"M2.3 412.2c-4.5 7.6-2.1 17.5 5.5 22.2l105.9 65.2c7.7 4.7 17.7 2.4 22.4-5.3 0-.1.1-.2.1-.2 67.1-112.2 80.5-95.9 280.9-.7 8.1 3.9 17.8.4 21.7-7.7.1-.1.1-.3.2-.4l50.4-114.1c3.6-8.1-.1-17.6-8.1-21.3-22.2-10.4-66.2-31.2-105.9-50.3C127.5 179 44.6 345.3 2.3 412.2zm507.4-312.1c4.5-7.6 2.1-17.5-5.5-22.2L398.4 12.8c-7.5-5-17.6-3.1-22.6 4.4-.2.3-.4.6-.6 1-67.3 112.6-81.1 95.6-280.6.9-8.1-3.9-17.8-.4-21.7 7.7-.1.1-.1.3-.2.4L22.2 141.3c-3.6 8.1.1 17.6 8.1 21.3 22.2 10.4 66.3 31.2 106 50.4 248 120 330.8-45.4 373.4-112.9z\"],\n    \"connectdevelop\": [576, 512, [], \"f20e\", \"M550.5 241l-50.089-86.786c1.071-2.142 1.875-4.553 1.875-7.232 0-8.036-6.696-14.733-14.732-15.001l-55.447-95.893c.536-1.607 1.071-3.214 1.071-4.821 0-8.571-6.964-15.268-15.268-15.268-4.821 0-8.839 2.143-11.786 5.625H299.518C296.839 18.143 292.821 16 288 16s-8.839 2.143-11.518 5.625H170.411C167.464 18.143 163.447 16 158.625 16c-8.303 0-15.268 6.696-15.268 15.268 0 1.607.536 3.482 1.072 4.821l-55.983 97.233c-5.356 2.41-9.107 7.5-9.107 13.661 0 .535.268 1.071.268 1.607l-53.304 92.143c-7.232 1.339-12.59 7.5-12.59 15 0 7.232 5.089 13.393 12.054 15l55.179 95.358c-.536 1.607-.804 2.946-.804 4.821 0 7.232 5.089 13.393 12.054 14.732l51.697 89.732c-.536 1.607-1.071 3.482-1.071 5.357 0 8.571 6.964 15.268 15.268 15.268 4.821 0 8.839-2.143 11.518-5.357h106.875C279.161 493.857 283.447 496 288 496s8.839-2.143 11.518-5.357h107.143c2.678 2.946 6.696 4.821 10.982 4.821 8.571 0 15.268-6.964 15.268-15.268 0-1.607-.267-2.946-.803-4.285l51.697-90.268c6.964-1.339 12.054-7.5 12.054-14.732 0-1.607-.268-3.214-.804-4.821l54.911-95.358c6.964-1.339 12.322-7.5 12.322-15-.002-7.232-5.092-13.393-11.788-14.732zM153.535 450.732l-43.66-75.803h43.66v75.803zm0-83.839h-43.66c-.268-1.071-.804-2.142-1.339-3.214l44.999-47.41v50.624zm0-62.411l-50.357 53.304c-1.339-.536-2.679-1.34-4.018-1.607L43.447 259.75c.535-1.339.535-2.679.535-4.018s0-2.41-.268-3.482l51.965-90c2.679-.268 5.357-1.072 7.768-2.679l50.089 51.965v92.946zm0-102.322l-45.803-47.41c1.339-2.143 2.143-4.821 2.143-7.767 0-.268-.268-.804-.268-1.072l43.928-15.804v72.053zm0-80.625l-43.66 15.804 43.66-75.536v59.732zm326.519 39.108l.804 1.339L445.5 329.125l-63.75-67.232 98.036-101.518.268.268zM291.75 355.107l11.518 11.786H280.5l11.25-11.786zm-.268-11.25l-83.303-85.446 79.553-84.375 83.036 87.589-79.286 82.232zm5.357 5.893l79.286-82.232 67.5 71.25-5.892 28.125H313.714l-16.875-17.143zM410.411 44.393c1.071.536 2.142 1.072 3.482 1.34l57.857 100.714v.536c0 2.946.803 5.624 2.143 7.767L376.393 256l-83.035-87.589L410.411 44.393zm-9.107-2.143L287.732 162.518l-57.054-60.268 166.339-60h4.287zm-123.483 0c2.678 2.678 6.16 4.285 10.179 4.285s7.5-1.607 10.179-4.285h75L224.786 95.821 173.893 42.25h103.928zm-116.249 5.625l1.071-2.142a33.834 33.834 0 0 0 2.679-.804l51.161 53.84-54.911 19.821V47.875zm0 79.286l60.803-21.964 59.732 63.214-79.553 84.107-40.982-42.053v-83.304zm0 92.678L198 257.607l-36.428 38.304v-76.072zm0 87.858l42.053-44.464 82.768 85.982-17.143 17.678H161.572v-59.196zm6.964 162.053c-1.607-1.607-3.482-2.678-5.893-3.482l-1.071-1.607v-89.732h99.91l-91.607 94.821h-1.339zm129.911 0c-2.679-2.41-6.428-4.285-10.447-4.285s-7.767 1.875-10.447 4.285h-96.429l91.607-94.821h38.304l91.607 94.821H298.447zm120-11.786l-4.286 7.5c-1.339.268-2.41.803-3.482 1.339l-89.196-91.875h114.376l-17.412 83.036zm12.856-22.232l12.858-60.803h21.964l-34.822 60.803zm34.822-68.839h-20.357l4.553-21.16 17.143 18.214c-.535.803-1.071 1.874-1.339 2.946zm66.161-107.411l-55.447 96.697c-1.339.535-2.679 1.071-4.018 1.874l-20.625-21.964 34.554-163.928 45.803 79.286c-.267 1.339-.803 2.678-.803 4.285 0 1.339.268 2.411.536 3.75z\"],\n    \"contao\": [512, 512, [], \"f26d\", \"M45.4 305c14.4 67.1 26.4 129 68.2 175H34c-18.7 0-34-15.2-34-34V66c0-18.7 15.2-34 34-34h57.7C77.9 44.6 65.6 59.2 54.8 75.6c-45.4 70-27 146.8-9.4 229.4zM478 32h-90.2c21.4 21.4 39.2 49.5 52.7 84.1l-137.1 29.3c-14.9-29-37.8-53.3-82.6-43.9-24.6 5.3-41 19.3-48.3 34.6-8.8 18.7-13.2 39.8 8.2 140.3 21.1 100.2 33.7 117.7 49.5 131.2 12.9 11.1 33.4 17 58.3 11.7 44.5-9.4 55.7-40.7 57.4-73.2l137.4-29.6c3.2 71.5-18.7 125.2-57.4 163.6H478c18.7 0 34-15.2 34-34V66c0-18.8-15.2-34-34-34z\"],\n    \"cotton-bureau\": [512, 512, [], \"f89e\", \"M474.31 330.41c-23.66 91.85-94.23 144.59-201.9 148.35V429.6c0-48 26.41-74.39 74.39-74.39 62 0 99.2-37.2 99.2-99.21 0-61.37-36.53-98.28-97.38-99.06-33-69.32-146.5-64.65-177.24 0C110.52 157.72 74 194.63 74 256c0 62.13 37.27 99.41 99.4 99.41 48 0 74.55 26.23 74.55 74.39V479c-134.43-5-211.1-85.07-211.1-223 0-141.82 81.35-223.2 223.2-223.2 114.77 0 189.84 53.2 214.69 148.81H500C473.88 71.51 388.22 8 259.82 8 105 8 12 101.19 12 255.82 12 411.14 105.19 504.34 259.82 504c128.27 0 213.87-63.81 239.67-173.59zM357 182.33c41.37 3.45 64.2 29 64.2 73.67 0 48-26.43 74.41-74.4 74.41-28.61 0-49.33-9.59-61.59-27.33 83.06-16.55 75.59-99.67 71.79-120.75zm-81.68 97.36c-2.46-10.34-16.33-87 56.23-97 2.27 10.09 16.52 87.11-56.26 97zM260 132c28.61 0 49 9.67 61.44 27.61-28.36 5.48-49.36 20.59-61.59 43.45-12.23-22.86-33.23-38-61.6-43.45 12.41-17.69 33.27-27.35 61.57-27.35zm-71.52 50.72c73.17 10.57 58.91 86.81 56.49 97-72.41-9.84-59-86.95-56.25-97zM173.2 330.41c-48 0-74.4-26.4-74.4-74.41 0-44.36 22.86-70 64.22-73.67-6.75 37.2-1.38 106.53 71.65 120.75-12.14 17.63-32.84 27.3-61.14 27.3zm53.21 12.39A80.8 80.8 0 0 0 260 309.25c7.77 14.49 19.33 25.54 33.82 33.55a80.28 80.28 0 0 0-33.58 33.83c-8-14.5-19.07-26.23-33.56-33.83z\"],\n    \"cpanel\": [640, 512, [], \"f388\", \"M210.3 220.2c-5.6-24.8-26.9-41.2-51-41.2h-37c-7.1 0-12.5 4.5-14.3 10.9L73.1 320l24.7-.1c6.8 0 12.3-4.5 14.2-10.7l25.8-95.7h19.8c8.4 0 16.2 5.6 18.3 14.8 2.5 10.9-5.9 22.6-18.3 22.6h-10.3c-7 0-12.5 4.6-14.3 10.8l-6.4 23.8h32c37.2 0 58.3-36.2 51.7-65.3zm-156.5 28h18.6c6.9 0 12.4-4.4 14.3-10.9l6.2-23.6h-40C30 213.7 9 227.8 1.7 254.8-7 288.6 18.5 320 52 320h12.4l7.1-26.1c1.2-4.4-2.2-8.3-6.4-8.3H53.8c-24.7 0-24.9-37.4 0-37.4zm247.5-34.8h-77.9l-3.5 13.4c-2.4 9.6 4.5 18.5 14.2 18.5h57.5c4 0 2.4 4.3 2.1 5.3l-8.6 31.8c-.4 1.4-.9 5.3-5.5 5.3h-34.9c-5.3 0-5.3-7.9 0-7.9h21.6c6.8 0 12.3-4.6 14.2-10.8l3.5-13.2h-48.4c-39.2 0-43.6 63.8-.7 63.8l57.5.2c11.2 0 20.6-7.2 23.4-17.8l14-51.8c4.8-19.2-9.7-36.8-28.5-36.8zM633.1 179h-18.9c-4.9 0-9.2 3.2-10.4 7.9L568.2 320c20.7 0 39.8-13.8 44.9-34.5l26.5-98.2c1.2-4.3-2-8.3-6.5-8.3zm-236.3 34.7v.1h-48.3l-26.2 98c-1.2 4.4 2.2 8.3 6.4 8.3h18.9c4.8 0 9.2-3 10.4-7.8l17.2-64H395c12.5 0 21.4 11.8 18.1 23.4l-10.6 40c-1.2 4.3 1.9 8.3 6.4 8.3H428c4.6 0 9.1-2.9 10.3-7.8l8.8-33.1c9-33.1-15.9-65.4-50.3-65.4zm98.3 74.6c-3.6 0-6-3.4-5.1-6.7l8-30c.9-3.9 3.7-6 7.8-6h32.9c2.6 0 4.6 2.4 3.9 5.1l-.7 2.6c-.6 2-1.9 3-3.9 3h-21.6c-7 0-12.6 4.6-14.2 10.8l-3.5 13h53.4c10.5 0 20.3-6.6 23.2-17.6l3.2-12c4.9-19.1-9.3-36.8-28.3-36.8h-47.3c-17.9 0-33.8 12-38.6 29.6l-10.8 40c-5 17.7 8.3 36.7 28.3 36.7h66.7c6.8 0 12.3-4.5 14.2-10.7l5.7-21z\"],\n    \"creative-commons\": [496, 512, [], \"f25e\", \"M245.83 214.87l-33.22 17.28c-9.43-19.58-25.24-19.93-27.46-19.93-22.13 0-33.22 14.61-33.22 43.84 0 23.57 9.21 43.84 33.22 43.84 14.47 0 24.65-7.09 30.57-21.26l30.55 15.5c-6.17 11.51-25.69 38.98-65.1 38.98-22.6 0-73.96-10.32-73.96-77.05 0-58.69 43-77.06 72.63-77.06 30.72-.01 52.7 11.95 65.99 35.86zm143.05 0l-32.78 17.28c-9.5-19.77-25.72-19.93-27.9-19.93-22.14 0-33.22 14.61-33.22 43.84 0 23.55 9.23 43.84 33.22 43.84 14.45 0 24.65-7.09 30.54-21.26l31 15.5c-2.1 3.75-21.39 38.98-65.09 38.98-22.69 0-73.96-9.87-73.96-77.05 0-58.67 42.97-77.06 72.63-77.06 30.71-.01 52.58 11.95 65.56 35.86zM247.56 8.05C104.74 8.05 0 123.11 0 256.05c0 138.49 113.6 248 247.56 248 129.93 0 248.44-100.87 248.44-248 0-137.87-106.62-248-248.44-248zm.87 450.81c-112.54 0-203.7-93.04-203.7-202.81 0-105.42 85.43-203.27 203.72-203.27 112.53 0 202.82 89.46 202.82 203.26-.01 121.69-99.68 202.82-202.84 202.82z\"],\n    \"creative-commons-by\": [496, 512, [], \"f4e7\", \"M314.9 194.4v101.4h-28.3v120.5h-77.1V295.9h-28.3V194.4c0-4.4 1.6-8.2 4.6-11.3 3.1-3.1 6.9-4.7 11.3-4.7H299c4.1 0 7.8 1.6 11.1 4.7 3.1 3.2 4.8 6.9 4.8 11.3zm-101.5-63.7c0-23.3 11.5-35 34.5-35s34.5 11.7 34.5 35c0 23-11.5 34.5-34.5 34.5s-34.5-11.5-34.5-34.5zM247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3z\"],\n    \"creative-commons-nc\": [496, 512, [], \"f4e8\", \"M247.6 8C387.4 8 496 115.9 496 256c0 147.2-118.5 248-248.4 248C113.1 504 0 393.2 0 256 0 123.1 104.7 8 247.6 8zM55.8 189.1c-7.4 20.4-11.1 42.7-11.1 66.9 0 110.9 92.1 202.4 203.7 202.4 122.4 0 177.2-101.8 178.5-104.1l-93.4-41.6c-7.7 37.1-41.2 53-68.2 55.4v38.1h-28.8V368c-27.5-.3-52.6-10.2-75.3-29.7l34.1-34.5c31.7 29.4 86.4 31.8 86.4-2.2 0-6.2-2.2-11.2-6.6-15.1-14.2-6-1.8-.1-219.3-97.4zM248.4 52.3c-38.4 0-112.4 8.7-170.5 93l94.8 42.5c10-31.3 40.4-42.9 63.8-44.3v-38.1h28.8v38.1c22.7 1.2 43.4 8.9 62 23L295 199.7c-42.7-29.9-83.5-8-70 11.1 53.4 24.1 43.8 19.8 93 41.6l127.1 56.7c4.1-17.4 6.2-35.1 6.2-53.1 0-57-19.8-105-59.3-143.9-39.3-39.9-87.2-59.8-143.6-59.8z\"],\n    \"creative-commons-nc-eu\": [496, 512, [], \"f4e9\", \"M247.7 8C103.6 8 0 124.8 0 256c0 136.3 111.7 248 247.7 248C377.9 504 496 403.1 496 256 496 117 388.4 8 247.7 8zm.6 450.7c-112 0-203.6-92.5-203.6-202.7 0-23.2 3.7-45.2 10.9-66l65.7 29.1h-4.7v29.5h23.3c0 6.2-.4 3.2-.4 19.5h-22.8v29.5h27c11.4 67 67.2 101.3 124.6 101.3 26.6 0 50.6-7.9 64.8-15.8l-10-46.1c-8.7 4.6-28.2 10.8-47.3 10.8-28.2 0-58.1-10.9-67.3-50.2h90.3l128.3 56.8c-1.5 2.1-56.2 104.3-178.8 104.3zm-16.7-190.6l-.5-.4.9.4h-.4zm77.2-19.5h3.7v-29.5h-70.3l-28.6-12.6c2.5-5.5 5.4-10.5 8.8-14.3 12.9-15.8 31.1-22.4 51.1-22.4 18.3 0 35.3 5.4 46.1 10l11.6-47.3c-15-6.6-37-12.4-62.3-12.4-39 0-72.2 15.8-95.9 42.3-5.3 6.1-9.8 12.9-13.9 20.1l-81.6-36.1c64.6-96.8 157.7-93.6 170.7-93.6 113 0 203 90.2 203 203.4 0 18.7-2.1 36.3-6.3 52.9l-136.1-60.5z\"],\n    \"creative-commons-nc-jp\": [496, 512, [], \"f4ea\", \"M247.7 8C103.6 8 0 124.8 0 256c0 136.4 111.8 248 247.7 248C377.9 504 496 403.2 496 256 496 117.2 388.5 8 247.7 8zm.6 450.7c-112 0-203.6-92.5-203.6-202.7 0-21.1 3-41.2 9-60.3l127 56.5h-27.9v38.6h58.1l5.7 11.8v18.7h-63.8V360h63.8v56h61.7v-56h64.2v-35.7l81 36.1c-1.5 2.2-57.1 98.3-175.2 98.3zm87.6-137.3h-57.6v-18.7l2.9-5.6 54.7 24.3zm6.5-51.4v-17.8h-38.6l63-116H301l-43.4 96-23-10.2-39.6-85.7h-65.8l27.3 51-81.9-36.5c27.8-44.1 82.6-98.1 173.7-98.1 112.8 0 203 90 203 203.4 0 21-2.7 40.6-7.9 59l-101-45.1z\"],\n    \"creative-commons-nd\": [496, 512, [], \"f4eb\", \"M247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3zm94 144.3v42.5H162.1V197h180.3zm0 79.8v42.5H162.1v-42.5h180.3z\"],\n    \"creative-commons-pd\": [496, 512, [], \"f4ec\", \"M248 8C111 8 0 119.1 0 256c0 137 111 248 248 248s248-111 248-248C496 119.1 385 8 248 8zm0 449.5c-139.2 0-235.8-138-190.2-267.9l78.8 35.1c-2.1 10.5-3.3 21.5-3.3 32.9 0 99 73.9 126.9 120.4 126.9 22.9 0 53.5-6.7 79.4-29.5L297 311.1c-5.5 6.3-17.6 16.7-36.3 16.7-37.8 0-53.7-39.9-53.9-71.9 230.4 102.6 216.5 96.5 217.9 96.8-34.3 62.4-100.6 104.8-176.7 104.8zm194.2-150l-224-100c18.8-34 54.9-30.7 74.7-11l40.4-41.6c-27.1-23.3-58-27.5-78.1-27.5-47.4 0-80.9 20.5-100.7 51.6l-74.9-33.4c36.1-54.9 98.1-91.2 168.5-91.2 111.1 0 201.5 90.4 201.5 201.5 0 18-2.4 35.4-6.8 52-.3-.1-.4-.2-.6-.4z\"],\n    \"creative-commons-pd-alt\": [496, 512, [], \"f4ed\", \"M247.6 8C104.7 8 0 123.1 0 256c0 138.5 113.6 248 247.6 248C377.5 504 496 403.1 496 256 496 118.1 389.4 8 247.6 8zm.8 450.8c-112.5 0-203.7-93-203.7-202.8 0-105.4 85.5-203.3 203.7-203.3 112.6 0 202.9 89.5 202.8 203.3 0 121.7-99.6 202.8-202.8 202.8zM316.7 186h-53.2v137.2h53.2c21.4 0 70-5.1 70-68.6 0-63.4-48.6-68.6-70-68.6zm.8 108.5h-19.9v-79.7l19.4-.1c3.8 0 35-2.1 35 39.9 0 24.6-10.5 39.9-34.5 39.9zM203.7 186h-68.2v137.3h34.6V279h27c54.1 0 57.1-37.5 57.1-46.5 0-31-16.8-46.5-50.5-46.5zm-4.9 67.3h-29.2v-41.6h28.3c30.9 0 28.8 41.6.9 41.6z\"],\n    \"creative-commons-remix\": [496, 512, [], \"f4ee\", \"M247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3zm161.7 207.7l4.9 2.2v70c-7.2 3.6-63.4 27.5-67.3 28.8-6.5-1.8-113.7-46.8-137.3-56.2l-64.2 26.6-63.3-27.5v-63.8l59.3-24.8c-.7-.7-.4 5-.4-70.4l67.3-29.7L361 178.5v61.6l49.1 20.3zm-70.4 81.5v-43.8h-.4v-1.8l-113.8-46.5V295l113.8 46.9v-.4l.4.4zm7.5-57.6l39.9-16.4-36.8-15.5-39 16.4 35.9 15.5zm52.3 38.1v-43L355.2 298v43.4l44.3-19z\"],\n    \"creative-commons-sa\": [496, 512, [], \"f4ef\", \"M247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3zM137.7 221c13-83.9 80.5-95.7 108.9-95.7 99.8 0 127.5 82.5 127.5 134.2 0 63.6-41 132.9-128.9 132.9-38.9 0-99.1-20-109.4-97h62.5c1.5 30.1 19.6 45.2 54.5 45.2 23.3 0 58-18.2 58-82.8 0-82.5-49.1-80.6-56.7-80.6-33.1 0-51.7 14.6-55.8 43.8h18.2l-49.2 49.2-49-49.2h19.4z\"],\n    \"creative-commons-sampling\": [496, 512, [], \"f4f0\", \"M247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3zm3.6 53.2c2.8-.3 11.5 1 11.5 11.5l6.6 107.2 4.9-59.3c0-6 4.7-10.6 10.6-10.6 5.9 0 10.6 4.7 10.6 10.6 0 2.5-.5-5.7 5.7 81.5l5.8-64.2c.3-2.9 2.9-9.3 10.2-9.3 3.8 0 9.9 2.3 10.6 8.9l11.5 96.5 5.3-12.8c1.8-4.4 5.2-6.6 10.2-6.6h58v21.3h-50.9l-18.2 44.3c-3.9 9.9-19.5 9.1-20.8-3.1l-4-31.9-7.5 92.6c-.3 3-3 9.3-10.2 9.3-3 0-9.8-2.1-10.6-9.3 0-1.9.6 5.8-6.2-77.9l-5.3 72.2c-1.1 4.8-4.8 9.3-10.6 9.3-2.9 0-9.8-2-10.6-9.3 0-1.9.5 6.7-5.8-87.7l-5.8 94.8c0 6.3-3.6 12.4-10.6 12.4-5.2 0-10.6-4.1-10.6-12l-5.8-87.7c-5.8 92.5-5.3 84-5.3 85.9-1.1 4.8-4.8 9.3-10.6 9.3-3 0-9.8-2.1-10.6-9.3 0-.7-.4-1.1-.4-2.6l-6.2-88.6L182 348c-.7 6.5-6.7 9.3-10.6 9.3-5.8 0-9.6-4.1-10.6-8.9L149.7 272c-2 4-3.5 8.4-11.1 8.4H87.2v-21.3H132l13.7-27.9c4.4-9.9 18.2-7.2 19.9 2.7l3.1 20.4 8.4-97.9c0-6 4.8-10.6 10.6-10.6.5 0 10.6-.2 10.6 12.4l4.9 69.1 6.6-92.6c0-10.1 9.5-10.6 10.2-10.6.6 0 10.6.7 10.6 10.6l5.3 80.6 6.2-97.9c.1-1.1-.6-10.3 9.9-11.5z\"],\n    \"creative-commons-sampling-plus\": [496, 512, [], \"f4f1\", \"M247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3zm107 205.6c-4.7 0-9 2.8-10.7 7.2l-4 9.5-11-92.8c-1.7-13.9-22-13.4-23.1.4l-4.3 51.4-5.2-68.8c-1.1-14.3-22.1-14.2-23.2 0l-3.5 44.9-5.9-94.3c-.9-14.5-22.3-14.4-23.2 0l-5.1 83.7-4.3-66.3c-.9-14.4-22.2-14.4-23.2 0l-5.3 80.2-4.1-57c-1.1-14.3-22-14.3-23.2-.2l-7.7 89.8-1.8-12.2c-1.7-11.4-17.1-13.6-22-3.3l-13.2 27.7H87.5v23.2h51.3c4.4 0 8.4-2.5 10.4-6.4l10.7 73.1c2 13.5 21.9 13 23.1-.7l3.8-43.6 5.7 78.3c1.1 14.4 22.3 14.2 23.2-.1l4.6-70.4 4.8 73.3c.9 14.4 22.3 14.4 23.2-.1l4.9-80.5 4.5 71.8c.9 14.3 22.1 14.5 23.2.2l4.6-58.6 4.9 64.4c1.1 14.3 22 14.2 23.1.1l6.8-83 2.7 22.3c1.4 11.8 17.7 14.1 22.3 3.1l18-43.4h50.5V258l-58.4.3zm-78 5.2h-21.9v21.9c0 4.1-3.3 7.5-7.5 7.5-4.1 0-7.5-3.3-7.5-7.5v-21.9h-21.9c-4.1 0-7.5-3.3-7.5-7.5 0-4.1 3.4-7.5 7.5-7.5h21.9v-21.9c0-4.1 3.4-7.5 7.5-7.5s7.5 3.3 7.5 7.5v21.9h21.9c4.1 0 7.5 3.3 7.5 7.5 0 4.1-3.4 7.5-7.5 7.5z\"],\n    \"creative-commons-share\": [496, 512, [], \"f4f2\", \"M247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3zm101 132.4c7.8 0 13.7 6.1 13.7 13.7v182.5c0 7.7-6.1 13.7-13.7 13.7H214.3c-7.7 0-13.7-6-13.7-13.7v-54h-54c-7.8 0-13.7-6-13.7-13.7V131.1c0-8.2 6.6-12.7 12.4-13.7h136.4c7.7 0 13.7 6 13.7 13.7v54h54zM159.9 300.3h40.7V198.9c0-7.4 5.8-12.6 12-13.7h55.8v-40.3H159.9v155.4zm176.2-88.1H227.6v155.4h108.5V212.2z\"],\n    \"creative-commons-zero\": [496, 512, [], \"f4f3\", \"M247.6 8C389.4 8 496 118.1 496 256c0 147.1-118.5 248-248.4 248C113.6 504 0 394.5 0 256 0 123.1 104.7 8 247.6 8zm.8 44.7C130.2 52.7 44.7 150.6 44.7 256c0 109.8 91.2 202.8 203.7 202.8 103.2 0 202.8-81.1 202.8-202.8.1-113.8-90.2-203.3-202.8-203.3zm-.4 60.5c-81.9 0-102.5 77.3-102.5 142.8 0 65.5 20.6 142.8 102.5 142.8S350.5 321.5 350.5 256c0-65.5-20.6-142.8-102.5-142.8zm0 53.9c3.3 0 6.4.5 9.2 1.2 5.9 5.1 8.8 12.1 3.1 21.9l-54.5 100.2c-1.7-12.7-1.9-25.1-1.9-34.4 0-28.8 2-88.9 44.1-88.9zm40.8 46.2c2.9 15.4 3.3 31.4 3.3 42.7 0 28.9-2 88.9-44.1 88.9-13.5 0-32.6-7.7-20.1-26.4l60.9-105.2z\"],\n    \"critical-role\": [448, 512, [], \"f6c9\", \"M225.82 0c.26.15 216.57 124.51 217.12 124.72 3 1.18 3.7 3.46 3.7 6.56q-.11 125.17 0 250.36a5.88 5.88 0 0 1-3.38 5.78c-21.37 12-207.86 118.29-218.93 124.58h-3C142 466.34 3.08 386.56 2.93 386.48a3.29 3.29 0 0 1-1.88-3.24c0-.87 0-225.94-.05-253.1a5 5 0 0 1 2.93-4.93C27.19 112.11 213.2 6 224.07 0zM215.4 20.42l-.22-.16Q118.06 75.55 21 130.87c0 .12.08.23.13.35l30.86 11.64c-7.71 6-8.32 6-10.65 5.13-.1 0-24.17-9.28-26.8-10v230.43c.88-1.41 64.07-110.91 64.13-111 1.62-2.82 3-1.92 9.12-1.52 1.4.09 1.48.22.78 1.42-41.19 71.33-36.4 63-67.48 116.94-.81 1.4-.61 1.13 1.25 1.13h186.5c1.44 0 1.69-.23 1.7-1.64v-8.88c0-1.34 2.36-.81-18.37-1-7.46-.07-14.14-3.22-21.38-12.7-7.38-9.66-14.62-19.43-21.85-29.21-2.28-3.08-3.45-2.38-16.76-2.38-1.75 0-1.78 0-1.76 1.82.29 26.21.15 25.27 1 32.66.52 4.37 2.16 4.2 9.69 4.81 3.14.26 3.88 4.08.52 4.92-1.57.39-31.6.51-33.67-.1a2.42 2.42 0 0 1 .3-4.73c3.29-.76 6.16.81 6.66-4.44 1.3-13.66 1.17-9 1.1-79.42 0-10.82-.35-12.58-5.36-13.55-1.22-.24-3.54-.16-4.69-.55-2.88-1-2-4.84 1.77-4.85 33.67 0 46.08-1.07 56.06 4.86 7.74 4.61 12 11.48 12.51 20.4.88 14.59-6.51 22.35-15 32.59a1.46 1.46 0 0 0 0 2.22c2.6 3.25 5 6.63 7.71 9.83 27.56 33.23 24.11 30.54 41.28 33.06.89.13 1-.42 1-1.15v-11c0-1 .32-1.43 1.41-1.26a72.37 72.37 0 0 0 23.58-.3c1.08-.15 1.5.2 1.48 1.33 0 .11.88 26.69.87 26.8-.05 1.52.67 1.62 1.89 1.62h186.71Q386.51 304.6 346 234.33c2.26-.66-.4 0 6.69-1.39 2-.39 2.05-.41 3.11 1.44 7.31 12.64 77.31 134 77.37 134.06V138c-1.72.5-103.3 38.72-105.76 39.68-1.08.42-1.55.2-1.91-.88-.63-1.9-1.34-3.76-2.09-5.62-.32-.79-.09-1.13.65-1.39.1 0 95.53-35.85 103-38.77-65.42-37.57-130.56-75-196-112.6l86.82 150.39-.28.33c-9.57-.9-10.46-1.6-11.8-3.94-1-1.69-73.5-127.71-82-142.16-9.1 14.67-83.56 146.21-85.37 146.32-2.93.17-5.88.08-9.25.08q43.25-74.74 86.18-149zm51.93 129.92a37.68 37.68 0 0 0 5.54-.85c1.69-.3 2.53.2 2.6 1.92 0 .11.07 19.06-.86 20.45s-1.88 1.22-2.6-.19c-5-9.69 6.22-9.66-39.12-12-.7 0-1 .23-1 .93 0 .13 3.72 122 3.73 122.11 0 .89.52 1.2 1.21 1.51a83.92 83.92 0 0 1 8.7 4.05c7.31 4.33 11.38 10.84 12.41 19.31 1.44 11.8-2.77 35.77-32.21 37.14-2.75.13-28.26 1.08-34.14-23.25-4.66-19.26 8.26-32.7 19.89-36.4a2.45 2.45 0 0 0 2-2.66c.1-5.63 3-107.1 3.71-121.35.05-1.08-.62-1.16-1.35-1.15-32.35.52-36.75-.34-40.22 8.52-2.42 6.18-4.14 1.32-3.95.23q1.59-9 3.31-18c.4-2.11 1.43-2.61 3.43-1.86 5.59 2.11 6.72 1.7 37.25 1.92 1.73 0 1.78-.08 1.82-1.85.68-27.49.58-22.59 1-29.55a2.69 2.69 0 0 0-1.63-2.8c-5.6-2.91-8.75-7.55-8.9-13.87-.35-14.81 17.72-21.67 27.38-11.51 6.84 7.19 5.8 18.91-2.45 24.15a4.35 4.35 0 0 0-2.22 4.34c0 .59-.11-4.31 1 30.05 0 .9.43 1.12 1.24 1.11.1 0 23-.09 34.47-.37zM68.27 141.7c19.84-4.51 32.68-.56 52.49 1.69 2.76.31 3.74 1.22 3.62 4-.21 5-1.16 22.33-1.24 23.15a2.65 2.65 0 0 1-1.63 2.34c-4.06 1.7-3.61-4.45-4-7.29-3.13-22.43-73.87-32.7-74.63 25.4-.31 23.92 17 53.63 54.08 50.88 27.24-2 19-20.19 24.84-20.47a2.72 2.72 0 0 1 3 3.36c-1.83 10.85-3.42 18.95-3.45 19.15-1.54 9.17-86.7 22.09-93.35-42.06-2.71-25.85 10.44-53.37 40.27-60.15zm80 87.67h-19.49a2.57 2.57 0 0 1-2.66-1.79c2.38-3.75 5.89.92 5.86-6.14-.08-25.75.21-38 .23-40.1 0-3.42-.53-4.65-3.32-4.94-7-.72-3.11-3.37-1.11-3.38 11.84-.1 22.62-.18 30.05.72 8.77 1.07 16.71 12.63 7.93 22.62-2 2.25-4 4.42-6.14 6.73.95 1.15 6.9 8.82 17.28 19.68 2.66 2.78 6.15 3.51 9.88 3.13a2.21 2.21 0 0 0 2.23-2.12c.3-3.42.26 4.73.45-40.58 0-5.65-.34-6.58-3.23-6.83-3.95-.35-4-2.26-.69-3.37l19.09-.09c.32 0 4.49.53 1 3.38 0 .05-.16 0-.24 0-3.61.26-3.94 1-4 4.62-.27 43.93.07 40.23.41 42.82.11.84.27 2.23 5.1 2.14 2.49 0 3.86 3.37 0 3.4-10.37.08-20.74 0-31.11.07-10.67 0-13.47-6.2-24.21-20.82-1.6-2.18-8.31-2.36-8.2-.37.88 16.47 0 17.78 4 17.67 4.75-.1 4.73 3.57.83 3.55zm275-10.15c-1.21 7.13.17 10.38-5.3 10.34-61.55-.42-47.82-.22-50.72-.31a18.4 18.4 0 0 1-3.63-.73c-2.53-.6 1.48-1.23-.38-5.6-1.43-3.37-2.78-6.78-4.11-10.19a1.94 1.94 0 0 0-2-1.44 138 138 0 0 0-14.58.07 2.23 2.23 0 0 0-1.62 1.06c-1.58 3.62-3.07 7.29-4.51 11-1.27 3.23 7.86 1.32 12.19 2.16 3 .57 4.53 3.72.66 3.73H322.9c-2.92 0-3.09-3.15-.74-3.21a6.3 6.3 0 0 0 5.92-3.47c1.5-3 2.8-6 4.11-9.09 18.18-42.14 17.06-40.17 18.42-41.61a1.83 1.83 0 0 1 3 0c2.93 3.34 18.4 44.71 23.62 51.92 2 2.7 5.74 2 6.36 2 3.61.13 4-1.11 4.13-4.29.09-1.87.08 1.17.07-41.24 0-4.46-2.36-3.74-5.55-4.27-.26 0-2.56-.63-.08-3.06.21-.2-.89-.24 21.7-.15 2.32 0 5.32 2.75-1.21 3.45a2.56 2.56 0 0 0-2.66 2.83c-.07 1.63-.19 38.89.29 41.21a3.06 3.06 0 0 0 3.23 2.43c13.25.43 14.92.44 16-3.41 1.67-5.78 4.13-2.52 3.73-.19zm-104.72 64.37c-4.24 0-4.42-3.39-.61-3.41 35.91-.16 28.11.38 37.19-.65 1.68-.19 2.38.24 2.25 1.89-.26 3.39-.64 6.78-1 10.16-.25 2.16-3.2 2.61-3.4-.15-.38-5.31-2.15-4.45-15.63-5.08-1.58-.07-1.64 0-1.64 1.52V304c0 1.65 0 1.6 1.62 1.47 3.12-.25 10.31.34 15.69-1.52.47-.16 3.3-1.79 3.07 1.76 0 .21-.76 10.35-1.18 11.39-.53 1.29-1.88 1.51-2.58.32-1.17-2 0-5.08-3.71-5.3-15.42-.9-12.91-2.55-12.91 6 0 12.25-.76 16.11 3.89 16.24 16.64.48 14.4 0 16.43-5.71.84-2.37 3.5-1.77 3.18.58-.44 3.21-.85 6.43-1.23 9.64 0 .36-.16 2.4-4.66 2.39-37.16-.08-34.54-.19-35.21-.31-2.72-.51-2.2-3 .22-3.45 1.1-.19 4 .54 4.16-2.56 2.44-56.22-.07-51.34-3.91-51.33zm-.41-109.52c2.46.61 3.13 1.76 2.95 4.65-.33 5.3-.34 9-.55 9.69-.66 2.23-3.15 2.12-3.34-.27-.38-4.81-3.05-7.82-7.57-9.15-26.28-7.73-32.81 15.46-27.17 30.22 5.88 15.41 22 15.92 28.86 13.78 5.92-1.85 5.88-6.5 6.91-7.58 1.23-1.3 2.25-1.84 3.12 1.1 0 .1.57 11.89-6 12.75-1.6.21-19.38 3.69-32.68-3.39-21-11.19-16.74-35.47-6.88-45.33 14-14.06 39.91-7.06 42.32-6.47zM289.8 280.14c3.28 0 3.66 3 .16 3.43-2.61.32-5-.42-5 5.46 0 2-.19 29.05.4 41.45.11 2.29 1.15 3.52 3.44 3.65 22 1.21 14.95-1.65 18.79-6.34 1.83-2.24 2.76.84 2.76 1.08.35 13.62-4 12.39-5.19 12.4l-38.16-.19c-1.93-.23-2.06-3-.42-3.38 2-.48 4.94.4 5.13-2.8 1-15.87.57-44.65.34-47.81-.27-3.77-2.8-3.27-5.68-3.71-2.47-.38-2-3.22.34-3.22 1.45-.02 17.97-.03 23.09-.02zm-31.63-57.79c.07 4.08 2.86 3.46 6 3.58 2.61.1 2.53 3.41-.07 3.43-6.48 0-13.7 0-21.61-.06-3.84 0-3.38-3.35 0-3.37 4.49 0 3.24 1.61 3.41-45.54 0-5.08-3.27-3.54-4.72-4.23-2.58-1.23-1.36-3.09.41-3.15 1.29 0 20.19-.41 21.17.21s1.87 1.65-.42 2.86c-1 .52-3.86-.28-4.15 2.47 0 .21-.82 1.63-.07 43.8zm-36.91 274.27a2.93 2.93 0 0 0 3.26 0c17-9.79 182-103.57 197.42-112.51-.14-.43 11.26-.18-181.52-.27-1.22 0-1.57.37-1.53 1.56 0 .1 1.25 44.51 1.22 50.38a28.33 28.33 0 0 1-1.36 7.71c-.55 1.83.38-.5-13.5 32.23-.73 1.72-1 2.21-2-.08-4.19-10.34-8.28-20.72-12.57-31a23.6 23.6 0 0 1-2-10.79c.16-2.46.8-16.12 1.51-48 0-1.95 0-2-2-2h-183c2.58 1.63 178.32 102.57 196 112.76zm-90.9-188.75c0 2.4.36 2.79 2.76 3 11.54 1.17 21 3.74 25.64-7.32 6-14.46 2.66-34.41-12.48-38.84-2-.59-16-2.76-15.94 1.51.05 8.04.01 11.61.02 41.65zm105.75-15.05c0 2.13 1.07 38.68 1.09 39.13.34 9.94-25.58 5.77-25.23-2.59.08-2 1.37-37.42 1.1-39.43-14.1 7.44-14.42 40.21 6.44 48.8a17.9 17.9 0 0 0 22.39-7.07c4.91-7.76 6.84-29.47-5.43-39a2.53 2.53 0 0 1-.36.12zm-12.28-198c-9.83 0-9.73 14.75-.07 14.87s10.1-14.88.07-14.91zm-80.15 103.83c0 1.8.41 2.4 2.17 2.58 13.62 1.39 12.51-11 12.16-13.36-1.69-11.22-14.38-10.2-14.35-7.81.05 4.5-.03 13.68.02 18.59zm212.32 6.4l-6.1-15.84c-2.16 5.48-4.16 10.57-6.23 15.84z\"],\n    \"css3\": [512, 512, [], \"f13c\", \"M480 32l-64 368-223.3 80L0 400l19.6-94.8h82l-8 40.6L210 390.2l134.1-44.4 18.8-97.1H29.5l16-82h333.7l10.5-52.7H56.3l16.3-82H480z\"],\n    \"css3-alt\": [384, 512, [], \"f38b\", \"M0 32l34.9 395.8L192 480l157.1-52.2L384 32H0zm313.1 80l-4.8 47.3L193 208.6l-.3.1h111.5l-12.8 146.6-98.2 28.7-98.8-29.2-6.4-73.9h48.9l3.2 38.3 52.6 13.3 54.7-15.4 3.7-61.6-166.3-.5v-.1l-.2.1-3.6-46.3L193.1 162l6.5-2.7H76.7L70.9 112h242.2z\"],\n    \"cuttlefish\": [440, 512, [], \"f38c\", \"M344 305.5c-17.5 31.6-57.4 54.5-96 54.5-56.6 0-104-47.4-104-104s47.4-104 104-104c38.6 0 78.5 22.9 96 54.5 13.7-50.9 41.7-93.3 87-117.8C385.7 39.1 320.5 8 248 8 111 8 0 119 0 256s111 248 248 248c72.5 0 137.7-31.1 183-80.7-45.3-24.5-73.3-66.9-87-117.8z\"],\n    \"d-and-d\": [576, 512, [], \"f38d\", \"M82.5 98.9c-.6-17.2 2-33.8 12.7-48.2.3 7.4 1.2 14.5 4.2 21.6 5.9-27.5 19.7-49.3 42.3-65.5-1.9 5.9-3.5 11.8-3 17.7 8.7-7.4 18.8-17.8 44.4-22.7 14.7-2.8 29.7-2 42.1 1 38.5 9.3 61 34.3 69.7 72.3 5.3 23.1.7 45-8.3 66.4-5.2 12.4-12 24.4-20.7 35.1-2-1.9-3.9-3.8-5.8-5.6-42.8-40.8-26.8-25.2-37.4-37.4-1.1-1.2-1-2.2-.1-3.6 8.3-13.5 11.8-28.2 10-44-1.1-9.8-4.3-18.9-11.3-26.2-14.5-15.3-39.2-15-53.5.6-11.4 12.5-14.1 27.4-10.9 43.6.2 1.3.4 2.7 0 3.9-3.4 13.7-4.6 27.6-2.5 41.6.1.5.1 1.1.1 1.6 0 .3-.1.5-.2 1.1-21.8-11-36-28.3-43.2-52.2-8.3 17.8-11.1 35.5-6.6 54.1-15.6-15.2-21.3-34.3-22-55.2zm469.6 123.2c-11.6-11.6-25-20.4-40.1-26.6-12.8-5.2-26-7.9-39.9-7.1-10 .6-19.6 3.1-29 6.4-2.5.9-5.1 1.6-7.7 2.2-4.9 1.2-7.3-3.1-4.7-6.8 3.2-4.6 3.4-4.2 15-12 .6-.4 1.2-.8 2.2-1.5h-2.5c-.6 0-1.2.2-1.9.3-19.3 3.3-30.7 15.5-48.9 29.6-10.4 8.1-13.8 3.8-12-.5 1.4-3.5 3.3-6.7 5.1-10 1-1.8 2.3-3.4 3.5-5.1-.2-.2-.5-.3-.7-.5-27 18.3-46.7 42.4-57.7 73.3.3.3.7.6 1 .9.3-.6.5-1.2.9-1.7 10.4-12.1 22.8-21.8 36.6-29.8 18.2-10.6 37.5-18.3 58.7-20.2 4.3-.4 8.7-.1 13.1-.1-1.8.7-3.5.9-5.3 1.1-18.5 2.4-35.5 9-51.5 18.5-30.2 17.9-54.5 42.2-75.1 70.4-.3.4-.4.9-.7 1.3 14.5 5.3 24 17.3 36.1 25.6.2-.1.3-.2.4-.4l1.2-2.7c12.2-26.9 27-52.3 46.7-74.5 16.7-18.8 38-25.3 62.5-20 5.9 1.3 11.4 4.4 17.2 6.8 2.3-1.4 5.1-3.2 8-4.7 8.4-4.3 17.4-7 26.7-9 14.7-3.1 29.5-4.9 44.5-1.3v-.5c-.5-.4-1.2-.8-1.7-1.4zM316.7 397.6c-39.4-33-22.8-19.5-42.7-35.6-.8.9 0-.2-1.9 3-11.2 19.1-25.5 35.3-44 47.6-10.3 6.8-21.5 11.8-34.1 11.8-21.6 0-38.2-9.5-49.4-27.8-12-19.5-13.3-40.7-8.2-62.6 7.8-33.8 30.1-55.2 38.6-64.3-18.7-6.2-33 1.7-46.4 13.9.8-13.9 4.3-26.2 11.8-37.3-24.3 10.6-45.9 25-64.8 43.9-.3-5.8 5.4-43.7 5.6-44.7.3-2.7-.6-5.3-3-7.4-24.2 24.7-44.5 51.8-56.1 84.6 7.4-5.9 14.9-11.4 23.6-16.2-8.3 22.3-19.6 52.8-7.8 101.1 4.6 19 11.9 36.8 24.1 52.3 2.9 3.7 6.3 6.9 9.5 10.3.2-.2.4-.3.6-.5-1.4-7-2.2-14.1-1.5-21.9 2.2 3.2 3.9 6 5.9 8.6 12.6 16 28.7 27.4 47.2 35.6 25 11.3 51.1 13.3 77.9 8.6 54.9-9.7 90.7-48.6 116-98.8 1-1.8.6-2.9-.9-4.2zm172-46.4c-9.5-3.1-22.2-4.2-28.7-2.9 9.9 4 14.1 6.6 18.8 12 12.6 14.4 10.4 34.7-5.4 45.6-11.7 8.1-24.9 10.5-38.9 9.1-1.2-.1-2.3-.4-3-.6 2.8-3.7 6-7 8.1-10.8 9.4-16.8 5.4-42.1-8.7-56.1-2.1-2.1-4.6-3.9-7-5.9-.3 1.3-.1 2.1.1 2.8 4.2 16.6-8.1 32.4-24.8 31.8-7.6-.3-13.9-3.8-19.6-8.5-19.5-16.1-39.1-32.1-58.5-48.3-5.9-4.9-12.5-8.1-20.1-8.7-4.6-.4-9.3-.6-13.9-.9-5.9-.4-8.8-2.8-10.4-8.4-.9-3.4-1.5-6.8-2.2-10.2-1.5-8.1-6.2-13-14.3-14.2-4.4-.7-8.9-1-13.3-1.5-13-1.4-19.8-7.4-22.6-20.3-5 11-1.6 22.4 7.3 29.9 4.5 3.8 9.3 7.3 13.8 11.2 4.6 3.8 7.4 8.7 7.9 14.8.4 4.7.8 9.5 1.8 14.1 2.2 10.6 8.9 18.4 17 25.1 16.5 13.7 33 27.3 49.5 41.1 17.9 15 13.9 32.8 13 56-.9 22.9 12.2 42.9 33.5 51.2 1 .4 2 .6 3.6 1.1-15.7-18.2-10.1-44.1.7-52.3.3 2.2.4 4.3.9 6.4 9.4 44.1 45.4 64.2 85 56.9 16-2.9 30.6-8.9 42.9-19.8 2-1.8 3.7-4.1 5.9-6.5-19.3 4.6-35.8.1-50.9-10.6.7-.3 1.3-.3 1.9-.3 21.3 1.8 40.6-3.4 57-17.4 19.5-16.6 26.6-42.9 17.4-66-8.3-20.1-23.6-32.3-43.8-38.9zM99.4 179.3c-5.3-9.2-13.2-15.6-22.1-21.3 13.7-.5 26.6.2 39.6 3.7-7-12.2-8.5-24.7-5-38.7 5.3 11.9 13.7 20.1 23.6 26.8 19.7 13.2 35.7 19.6 46.7 30.2 3.4 3.3 6.3 7.1 9.6 10.9-.8-2.1-1.4-4.1-2.2-6-5-10.6-13-18.6-22.6-25-1.8-1.2-2.8-2.5-3.4-4.5-3.3-12.5-3-25.1-.7-37.6 1-5.5 2.8-10.9 4.5-16.3.8-2.4 2.3-4.6 4-6.6.6 6.9 0 25.5 19.6 46 10.8 11.3 22.4 21.9 33.9 32.7 9 8.5 18.3 16.7 25.5 26.8 1.1 1.6 2.2 3.3 3.8 4.7-5-13-14.2-24.1-24.2-33.8-9.6-9.3-19.4-18.4-29.2-27.4-3.3-3-4.6-6.7-5.1-10.9-1.2-10.4 0-20.6 4.3-30.2.5-1 1.1-2 1.9-3.3.5 4.2.6 7.9 1.4 11.6 4.8 23.1 20.4 36.3 49.3 63.5 10 9.4 19.3 19.2 25.6 31.6 4.8 9.3 7.3 19 5.7 29.6-.1.6.5 1.7 1.1 2 6.2 2.6 10 6.9 9.7 14.3 7.7-2.6 12.5-8 16.4-14.5 4.2 20.2-9.1 50.3-27.2 58.7.4-4.5 5-23.4-16.5-27.7-6.8-1.3-12.8-1.3-22.9-2.1 4.7-9 10.4-20.6.5-22.4-24.9-4.6-52.8 1.9-57.8 4.6 8.2.4 16.3 1 23.5 3.3-2 6.5-4 12.7-5.8 18.9-1.9 6.5 2.1 14.6 9.3 9.6 1.2-.9 2.3-1.9 3.3-2.7-3.1 17.9-2.9 15.9-2.8 18.3.3 10.2 9.5 7.8 15.7 7.3-2.5 11.8-29.5 27.3-45.4 25.8 7-4.7 12.7-10.3 15.9-17.9-6.5.8-12.9 1.6-19.2 2.4l-.3-.9c4.7-3.4 8-7.8 10.2-13.1 8.7-21.1-3.6-38-25-39.9-9.1-.8-17.8.8-25.9 5.5 6.2-15.6 17.2-26.6 32.6-34.5-15.2-4.3-8.9-2.7-24.6-6.3 14.6-9.3 30.2-13.2 46.5-14.6-5.2-3.2-48.1-3.6-70.2 20.9 7.9 1.4 15.5 2.8 23.2 4.2-23.8 7-44 19.7-62.4 35.6 1.1-4.8 2.7-9.5 3.3-14.3.6-4.5.8-9.2.1-13.6-1.5-9.4-8.9-15.1-19.7-16.3-7.9-.9-15.6.1-23.3 1.3-.9.1-1.7.3-2.9 0 15.8-14.8 36-21.7 53.1-33.5 6-4.5 6.8-8.2 3-14.9zm128.4 26.8c3.3 16 12.6 25.5 23.8 24.3-4.6-11.3-12.1-19.5-23.8-24.3z\"],\n    \"d-and-d-beyond\": [640, 512, [], \"f6ca\", \"M313.8 241.5c13.8 0 21-10.1 24.8-17.9-1-1.1-5-4.2-7.4-6.6-2.4 4.3-8.2 10.7-13.9 10.7-10.2 0-15.4-14.7-3.2-26.6-.5-.2-4.3-1.8-8 2.4 0-3 1-5.1 2.1-6.6-3.5 1.3-9.8 5.6-11.4 7.9.2-5.8 1.6-7.5.6-9l-.2-.2s-8.5 5.6-9.3 14.7c0 0 1.1-1.6 2.1-1.9.6-.3 1.3 0 .6 1.9-.2.6-5.8 15.7 5.1 26-.6-1.6-1.9-7.6 2.4-1.9-.3.1 5.8 7.1 15.7 7.1zm52.4-21.1c0-4-4.9-4.4-5.6-4.5 2 3.9.9 7.5.2 9 2.5-.4 5.4-1.6 5.4-4.5zm10.3 5.2c0-6.4-6.2-11.4-13.5-10.7 8 1.3 5.6 13.8-5 11.4 3.7-2.6 3.2-9.9-1.3-12.5 1.4 4.2-3 8.2-7.4 4.6-2.4-1.9-8-6.6-10.6-8.6-2.4-2.1-5.5-1-6.6-1.8-1.3-1.1-.5-3.8-2.2-5-1.6-.8-3-.3-4.8-1-1.6-.6-2.7-1.9-2.6-3.5-2.5 4.4 3.4 6.3 4.5 8.5 1 1.9-.8 4.8 4 8.5 14.8 11.6 9.1 8 10.4 18.1.6 4.3 4.2 6.7 6.4 7.4-2.1-1.9-2.9-6.4 0-9.3 0 13.9 19.2 13.3 23.1 6.4-2.4 1.1-7-.2-9-1.9 7.7 1 14.2-4.1 14.6-10.6zm-39.4-18.4c2 .8 1.6.7 6.4 4.5 10.2-24.5 21.7-15.7 22-15.5 2.2-1.9 9.8-3.8 13.8-2.7-2.4-2.7-7.5-6.2-13.3-6.2-4.7 0-7.4 2.2-8 1.3-.8-1.4 3.2-3.4 3.2-3.4-5.4.2-9.6 6.7-11.2 5.9-1.1-.5 1.4-3.7 1.4-3.7-5.1 2.9-9.3 9.1-10.2 13 4.6-5.8 13.8-9.8 19.7-9-10.5.5-19.5 9.7-23.8 15.8zm242.5 51.9c-20.7 0-40 1.3-50.3 2.1l7.4 8.2v77.2l-7.4 8.2c10.4.8 30.9 2.1 51.6 2.1 42.1 0 59.1-20.7 59.1-48.9 0-29.3-23.2-48.9-60.4-48.9zm-15.1 75.6v-53.3c30.1-3.3 46.8 3.8 46.8 26.3 0 25.6-21.4 30.2-46.8 27zM301.6 181c-1-3.4-.2-6.9 1.1-9.4 1 3 2.6 6.4 7.5 9-.5-2.4-.2-5.6.5-8-1.4-5.4 2.1-9.9 6.4-9.9 6.9 0 8.5 8.8 4.7 14.4 2.1 3.2 5.5 5.6 7.7 7.8 3.2-3.7 5.5-9.5 5.5-13.8 0-8.2-5.5-15.9-16.7-16.5-20-.9-20.2 16.6-20 18.9.5 5.2 3.4 7.8 3.3 7.5zm-.4 6c-.5 1.8-7 3.7-10.2 6.9 4.8-1 7-.2 7.8 1.8.5 1.4-.2 3.4-.5 5.6 1.6-1.8 7-5.5 11-6.2-1-.3-3.4-.8-4.3-.8 2.9-3.4 9.3-4.5 12.8-3.7-2.2-.2-6.7 1.1-8.5 2.6 1.6.3 3 .6 4.3 1.1-2.1.8-4.8 3.4-5.8 6.1 7-5 13.1 5.2 7 8.2.8.2 2.7 0 3.5-.5-.3 1.1-1.9 3-3 3.4 2.9 0 7-1.9 8.2-4.6 0 0-1.8.6-2.6-.2s.3-4.3.3-4.3c-2.3 2.9-3.4-1.3-1.3-4.2-1-.3-3.5-.6-4.6-.5 3.2-1.1 10.4-1.8 11.2-.3.6 1.1-1 3.4-1 3.4 4-.5 8.3 1.1 6.7 5.1 2.9-1.4 5.5-5.9 4.8-10.4-.3 1-1.6 2.4-2.9 2.7.2-1.4-1-2.2-1.9-2.6 1.7-9.6-14.6-14.2-14.1-23.9-1 1.3-1.8 5-.8 7.1 2.7 3.2 8.7 6.7 10.1 12.2-2.6-6.4-15.1-11.4-14.6-20.2-1.6 1.6-2.6 7.8-1.3 11 2.4 1.4 4.5 3.8 4.8 6.1-2.2-5.1-11.4-6.1-13.9-12.2-.6 2.2-.3 5 1 6.7 0 0-2.2-.8-7-.6 1.7.6 5.1 3.5 4.8 5.2zm25.9 7.4c-2.7 0-3.5-2.1-4.2-4.3 3.3 1.3 4.2 4.3 4.2 4.3zm38.9 3.7l-1-.6c-1.1-1-2.9-1.4-4.7-1.4-2.9 0-5.8 1.3-7.5 3.4-.8.8-1.4 1.8-2.1 2.6v15.7c3.5 2.6 7.1-2.9 3-7.2 1.5.3 4.6 2.7 5.1 3.2 0 0 2.6-.5 5-.5 2.1 0 3.9.3 5.6 1.1V196c-1.1.5-2.2 1-2.7 1.4zM79.9 305.9c17.2-4.6 16.2-18 16.2-19.9 0-20.6-24.1-25-37-25H3l8.3 8.6v29.5H0l11.4 14.6V346L3 354.6c61.7 0 73.8 1.5 86.4-5.9 6.7-4 9.9-9.8 9.9-17.6 0-5.1 2.6-18.8-19.4-25.2zm-41.3-27.5c20 0 29.6-.8 29.6 9.1v3c0 12.1-19 8.8-29.6 8.8zm0 59.2V315c12.2 0 32.7-2.3 32.7 8.8v4.5h.2c0 11.2-12.5 9.3-32.9 9.3zm101.2-19.3l23.1.2v-.2l14.1-21.2h-37.2v-14.9h52.4l-14.1-21v-.2l-73.5.2 7.4 8.2v77.1l-7.4 8.2h81.2l14.1-21.2-60.1.2zm214.7-60.1c-73.9 0-77.5 99.3-.3 99.3 77.9 0 74.1-99.3.3-99.3zm-.3 77.5c-37.4 0-36.9-55.3.2-55.3 36.8.1 38.8 55.3-.2 55.3zm-91.3-8.3l44.1-66.2h-41.7l6.1 7.2-20.5 37.2h-.3l-21-37.2 6.4-7.2h-44.9l44.1 65.8.2 19.4-7.7 8.2h42.6l-7.2-8.2zm-28.4-151.3c1.6 1.3 2.9 2.4 2.9 6.6v38.8c0 4.2-.8 5.3-2.7 6.4-.1.1-7.5 4.5-7.9 4.6h35.1c10 0 17.4-1.5 26-8.6-.6-5 .2-9.5.8-12 0-.2-1.8 1.4-2.7 3.5 0-5.7 1.6-15.4 9.6-20.5-.1 0-3.7-.8-9 1.1 2-3.1 10-7.9 10.4-7.9-8.2-26-38-22.9-32.2-22.9-30.9 0-32.6.3-39.9-4 .1.8.5 8.2 9.6 14.9zm21.5 5.5c4.6 0 23.1-3.3 23.1 17.3 0 20.7-18.4 17.3-23.1 17.3zm228.9 79.6l7 8.3V312h-.3c-5.4-14.4-42.3-41.5-45.2-50.9h-31.6l7.4 8.5v76.9l-7.2 8.3h39l-7.4-8.2v-47.4h.3c3.7 10.6 44.5 42.9 48.5 55.6h21.3v-85.2l7.4-8.3zm-106.7-96.1c-32.2 0-32.8.2-39.9-4 .1.7.5 8.3 9.6 14.9 3.1 2 2.9 4.3 2.9 9.5 1.8-1.1 3.8-2.2 6.1-3-1.1 1.1-2.7 2.7-3.5 4.5 1-1.1 7.5-5.1 14.6-3.5-1.6.3-4 1.1-6.1 2.9.1 0 2.1-1.1 7.5-.3v-4.3c4.7 0 23.1-3.4 23.1 17.3 0 20.5-18.5 17.3-19.7 17.3 5.7 4.4 5.8 12 2.2 16.3h.3c33.4 0 36.7-27.3 36.7-34 0-3.8-1.1-32-33.8-33.6z\"],\n    \"dailymotion\": [448, 512, [], \"e052\", \"M298.93,267a48.4,48.4,0,0,0-24.36-6.21q-19.83,0-33.44,13.27t-13.61,33.42q0,21.16,13.28,34.6t33.43,13.44q20.5,0,34.11-13.78T322,307.47A47.13,47.13,0,0,0,315.9,284,44.13,44.13,0,0,0,298.93,267ZM0,32V480H448V32ZM374.71,405.26h-53.1V381.37h-.67q-15.79,26.2-55.78,26.2-27.56,0-48.89-13.1a88.29,88.29,0,0,1-32.94-35.77q-11.6-22.68-11.59-50.89,0-27.56,11.76-50.22a89.9,89.9,0,0,1,32.93-35.78q21.18-13.09,47.72-13.1a80.87,80.87,0,0,1,29.74,5.21q13.28,5.21,25,17V153l55.79-12.09Z\"],\n    \"dashcube\": [448, 512, [], \"f210\", \"M326.6 104H110.4c-51.1 0-91.2 43.3-91.2 93.5V427c0 50.5 40.1 85 91.2 85h227.2c51.1 0 91.2-34.5 91.2-85V0L326.6 104zM153.9 416.5c-17.7 0-32.4-15.1-32.4-32.8V240.8c0-17.7 14.7-32.5 32.4-32.5h140.7c17.7 0 32 14.8 32 32.5v123.5l51.1 52.3H153.9z\"],\n    \"deezer\": [576, 512, [], \"e077\", \"M451.46,244.71H576V172H451.46Zm0-173.89v72.67H576V70.82Zm0,275.06H576V273.2H451.46ZM0,447.09H124.54V374.42H0Zm150.47,0H275V374.42H150.47Zm150.52,0H425.53V374.42H301Zm150.47,0H576V374.42H451.46ZM301,345.88H425.53V273.2H301Zm-150.52,0H275V273.2H150.47Zm0-101.17H275V172H150.47Z\"],\n    \"delicious\": [448, 512, [], \"f1a5\", \"M446.5 68c-.4-1.5-.9-3-1.4-4.5-.9-2.5-2-4.8-3.3-7.1-1.4-2.4-3-4.8-4.7-6.9-2.1-2.5-4.4-4.8-6.9-6.8-1.1-.9-2.2-1.7-3.3-2.5-1.3-.9-2.6-1.7-4-2.4-1.8-1-3.6-1.8-5.5-2.5-1.7-.7-3.5-1.3-5.4-1.7-3.8-1-7.9-1.5-12-1.5H48C21.5 32 0 53.5 0 80v352c0 4.1.5 8.2 1.5 12 2 7.7 5.8 14.6 11 20.3 1 1.1 2.1 2.2 3.3 3.3 5.7 5.2 12.6 9 20.3 11 3.8 1 7.9 1.5 12 1.5h352c26.5 0 48-21.5 48-48V80c-.1-4.1-.6-8.2-1.6-12zM416 432c0 8.8-7.2 16-16 16H224V256H32V80c0-8.8 7.2-16 16-16h176v192h192z\"],\n    \"deploydog\": [512, 512, [], \"f38e\", \"M382.2 136h51.7v239.6h-51.7v-20.7c-19.8 24.8-52.8 24.1-73.8 14.7-26.2-11.7-44.3-38.1-44.3-71.8 0-29.8 14.8-57.9 43.3-70.8 20.2-9.1 52.7-10.6 74.8 12.9V136zm-64.7 161.8c0 18.2 13.6 33.5 33.2 33.5 19.8 0 33.2-16.4 33.2-32.9 0-17.1-13.7-33.2-33.2-33.2-19.6 0-33.2 16.4-33.2 32.6zM188.5 136h51.7v239.6h-51.7v-20.7c-19.8 24.8-52.8 24.1-73.8 14.7-26.2-11.7-44.3-38.1-44.3-71.8 0-29.8 14.8-57.9 43.3-70.8 20.2-9.1 52.7-10.6 74.8 12.9V136zm-64.7 161.8c0 18.2 13.6 33.5 33.2 33.5 19.8 0 33.2-16.4 33.2-32.9 0-17.1-13.7-33.2-33.2-33.2-19.7 0-33.2 16.4-33.2 32.6zM448 96c17.5 0 32 14.4 32 32v256c0 17.5-14.4 32-32 32H64c-17.5 0-32-14.4-32-32V128c0-17.5 14.4-32 32-32h384m0-32H64C28.8 64 0 92.8 0 128v256c0 35.2 28.8 64 64 64h384c35.2 0 64-28.8 64-64V128c0-35.2-28.8-64-64-64z\"],\n    \"deskpro\": [480, 512, [], \"f38f\", \"M205.9 512l31.1-38.4c12.3-.2 25.6-1.4 36.5-6.6 38.9-18.6 38.4-61.9 38.3-63.8-.1-5-.8-4.4-28.9-37.4H362c-.2 50.1-7.3 68.5-10.2 75.7-9.4 23.7-43.9 62.8-95.2 69.4-8.7 1.1-32.8 1.2-50.7 1.1zm200.4-167.7c38.6 0 58.5-13.6 73.7-30.9l-175.5-.3-17.4 31.3 119.2-.1zm-43.6-223.9v168.3h-73.5l-32.7 55.5H250c-52.3 0-58.1-56.5-58.3-58.9-1.2-13.2-21.3-11.6-20.1 1.8 1.4 15.8 8.8 40 26.4 57.1h-91c-25.5 0-110.8-26.8-107-114V16.9C0 .9 9.7.3 15 .1h82c.2 0 .3.1.5.1 4.3-.4 50.1-2.1 50.1 43.7 0 13.3 20.2 13.4 20.2 0 0-18.2-5.5-32.8-15.8-43.7h84.2c108.7-.4 126.5 79.4 126.5 120.2zm-132.5 56l64 29.3c13.3-45.5-42.2-71.7-64-29.3z\"],\n    \"dev\": [448, 512, [], \"f6cc\", \"M120.12 208.29c-3.88-2.9-7.77-4.35-11.65-4.35H91.03v104.47h17.45c3.88 0 7.77-1.45 11.65-4.35 3.88-2.9 5.82-7.25 5.82-13.06v-69.65c-.01-5.8-1.96-10.16-5.83-13.06zM404.1 32H43.9C19.7 32 .06 51.59 0 75.8v360.4C.06 460.41 19.7 480 43.9 480h360.2c24.21 0 43.84-19.59 43.9-43.8V75.8c-.06-24.21-19.7-43.8-43.9-43.8zM154.2 291.19c0 18.81-11.61 47.31-48.36 47.25h-46.4V172.98h47.38c35.44 0 47.36 28.46 47.37 47.28l.01 70.93zm100.68-88.66H201.6v38.42h32.57v29.57H201.6v38.41h53.29v29.57h-62.18c-11.16.29-20.44-8.53-20.72-19.69V193.7c-.27-11.15 8.56-20.41 19.71-20.69h63.19l-.01 29.52zm103.64 115.29c-13.2 30.75-36.85 24.63-47.44 0l-38.53-144.8h32.57l29.71 113.72 29.57-113.72h32.58l-38.46 144.8z\"],\n    \"deviantart\": [320, 512, [], \"f1bd\", \"M320 93.2l-98.2 179.1 7.4 9.5H320v127.7H159.1l-13.5 9.2-43.7 84c-.3 0-8.6 8.6-9.2 9.2H0v-93.2l93.2-179.4-7.4-9.2H0V102.5h156l13.5-9.2 43.7-84c.3 0 8.6-8.6 9.2-9.2H320v93.1z\"],\n    \"dhl\": [640, 512, [], \"f790\", \"M238 301.2h58.7L319 271h-58.7L238 301.2zM0 282.9v6.4h81.8l4.7-6.4H0zM172.9 271c-8.7 0-6-3.6-4.6-5.5 2.8-3.8 7.6-10.4 10.4-14.1 2.8-3.7 2.8-5.9-2.8-5.9h-51l-41.1 55.8h100.1c33.1 0 51.5-22.5 57.2-30.3h-68.2zm317.5-6.9l39.3-53.4h-62.2l-39.3 53.4h62.2zM95.3 271H0v6.4h90.6l4.7-6.4zm111-26.6c-2.8 3.8-7.5 10.4-10.3 14.2-1.4 2-4.1 5.5 4.6 5.5h45.6s7.3-10 13.5-18.4c8.4-11.4.7-35-29.2-35H112.6l-20.4 27.8h111.4c5.6 0 5.5 2.2 2.7 5.9zM0 301.2h73.1l4.7-6.4H0v6.4zm323 0h58.7L404 271h-58.7c-.1 0-22.3 30.2-22.3 30.2zm222 .1h95v-6.4h-90.3l-4.7 6.4zm22.3-30.3l-4.7 6.4H640V271h-72.7zm-13.5 18.3H640v-6.4h-81.5l-4.7 6.4zm-164.2-78.6l-22.5 30.6h-26.2l22.5-30.6h-58.7l-39.3 53.4H409l39.3-53.4h-58.7zm33.5 60.3s-4.3 5.9-6.4 8.7c-7.4 10-.9 21.6 23.2 21.6h94.3l22.3-30.3H423.1z\"],\n    \"diaspora\": [512, 512, [], \"f791\", \"M251.64 354.55c-1.4 0-88 119.9-88.7 119.9S76.34 414 76 413.25s86.6-125.7 86.6-127.4c0-2.2-129.6-44-137.6-47.1-1.3-.5 31.4-101.8 31.7-102.1.6-.7 144.4 47 145.5 47 .4 0 .9-.6 1-1.3.4-2 1-148.6 1.7-149.6.8-1.2 104.5-.7 105.1-.3 1.5 1 3.5 156.1 6.1 156.1 1.4 0 138.7-47 139.3-46.3.8.9 31.9 102.2 31.5 102.6-.9.9-140.2 47.1-140.6 48.8-.3 1.4 82.8 122.1 82.5 122.9s-85.5 63.5-86.3 63.5c-1-.2-89-125.5-90.9-125.5z\"],\n    \"digg\": [512, 512, [], \"f1a6\", \"M81.7 172.3H0v174.4h132.7V96h-51v76.3zm0 133.4H50.9v-92.3h30.8v92.3zm297.2-133.4v174.4h81.8v28.5h-81.8V416H512V172.3H378.9zm81.8 133.4h-30.8v-92.3h30.8v92.3zm-235.6 41h82.1v28.5h-82.1V416h133.3V172.3H225.1v174.4zm51.2-133.3h30.8v92.3h-30.8v-92.3zM153.3 96h51.3v51h-51.3V96zm0 76.3h51.3v174.4h-51.3V172.3z\"],\n    \"digital-ocean\": [512, 512, [], \"f391\", \"M87 481.8h73.7v-73.6H87zM25.4 346.6v61.6H87v-61.6zm466.2-169.7c-23-74.2-82.4-133.3-156.6-156.6C164.9-32.8 8 93.7 8 255.9h95.8c0-101.8 101-180.5 208.1-141.7 39.7 14.3 71.5 46.1 85.8 85.7 39.1 107-39.7 207.8-141.4 208v.3h-.3V504c162.6 0 288.8-156.8 235.6-327.1zm-235.3 231v-95.3h-95.6v95.6H256v-.3z\"],\n    \"discord\": [640, 512, [], \"f392\", \"M524.531,69.836a1.5,1.5,0,0,0-.764-.7A485.065,485.065,0,0,0,404.081,32.03a1.816,1.816,0,0,0-1.923.91,337.461,337.461,0,0,0-14.9,30.6,447.848,447.848,0,0,0-134.426,0,309.541,309.541,0,0,0-15.135-30.6,1.89,1.89,0,0,0-1.924-.91A483.689,483.689,0,0,0,116.085,69.137a1.712,1.712,0,0,0-.788.676C39.068,183.651,18.186,294.69,28.43,404.354a2.016,2.016,0,0,0,.765,1.375A487.666,487.666,0,0,0,176.02,479.918a1.9,1.9,0,0,0,2.063-.676A348.2,348.2,0,0,0,208.12,430.4a1.86,1.86,0,0,0-1.019-2.588,321.173,321.173,0,0,1-45.868-21.853,1.885,1.885,0,0,1-.185-3.126c3.082-2.309,6.166-4.711,9.109-7.137a1.819,1.819,0,0,1,1.9-.256c96.229,43.917,200.41,43.917,295.5,0a1.812,1.812,0,0,1,1.924.233c2.944,2.426,6.027,4.851,9.132,7.16a1.884,1.884,0,0,1-.162,3.126,301.407,301.407,0,0,1-45.89,21.83,1.875,1.875,0,0,0-1,2.611,391.055,391.055,0,0,0,30.014,48.815,1.864,1.864,0,0,0,2.063.7A486.048,486.048,0,0,0,610.7,405.729a1.882,1.882,0,0,0,.765-1.352C623.729,277.594,590.933,167.465,524.531,69.836ZM222.491,337.58c-28.972,0-52.844-26.587-52.844-59.239S193.056,219.1,222.491,219.1c29.665,0,53.306,26.82,52.843,59.239C275.334,310.993,251.924,337.58,222.491,337.58Zm195.38,0c-28.971,0-52.843-26.587-52.843-59.239S388.437,219.1,417.871,219.1c29.667,0,53.307,26.82,52.844,59.239C470.715,310.993,447.538,337.58,417.871,337.58Z\"],\n    \"discourse\": [448, 512, [], \"f393\", \"M225.9 32C103.3 32 0 130.5 0 252.1 0 256 .1 480 .1 480l225.8-.2c122.7 0 222.1-102.3 222.1-223.9C448 134.3 348.6 32 225.9 32zM224 384c-19.4 0-37.9-4.3-54.4-12.1L88.5 392l22.9-75c-9.8-18.1-15.4-38.9-15.4-61 0-70.7 57.3-128 128-128s128 57.3 128 128-57.3 128-128 128z\"],\n    \"dochub\": [416, 512, [], \"f394\", \"M397.9 160H256V19.6L397.9 160zM304 192v130c0 66.8-36.5 100.1-113.3 100.1H96V84.8h94.7c12 0 23.1.8 33.1 2.5v-84C212.9 1.1 201.4 0 189.2 0H0v512h189.2C329.7 512 400 447.4 400 318.1V192h-96z\"],\n    \"docker\": [640, 512, [], \"f395\", \"M349.9 236.3h-66.1v-59.4h66.1v59.4zm0-204.3h-66.1v60.7h66.1V32zm78.2 144.8H362v59.4h66.1v-59.4zm-156.3-72.1h-66.1v60.1h66.1v-60.1zm78.1 0h-66.1v60.1h66.1v-60.1zm276.8 100c-14.4-9.7-47.6-13.2-73.1-8.4-3.3-24-16.7-44.9-41.1-63.7l-14-9.3-9.3 14c-18.4 27.8-23.4 73.6-3.7 103.8-8.7 4.7-25.8 11.1-48.4 10.7H2.4c-8.7 50.8 5.8 116.8 44 162.1 37.1 43.9 92.7 66.2 165.4 66.2 157.4 0 273.9-72.5 328.4-204.2 21.4.4 67.6.1 91.3-45.2 1.5-2.5 6.6-13.2 8.5-17.1l-13.3-8.9zm-511.1-27.9h-66v59.4h66.1v-59.4zm78.1 0h-66.1v59.4h66.1v-59.4zm78.1 0h-66.1v59.4h66.1v-59.4zm-78.1-72.1h-66.1v60.1h66.1v-60.1z\"],\n    \"draft2digital\": [480, 512, [], \"f396\", \"M480 398.1l-144-82.2v64.7h-91.3c30.8-35 81.8-95.9 111.8-149.3 35.2-62.6 16.1-123.4-12.8-153.3-4.4-4.6-62.2-62.9-166-41.2-59.1 12.4-89.4 43.4-104.3 67.3-13.1 20.9-17 39.8-18.2 47.7-5.5 33 19.4 67.1 56.7 67.1 31.7 0 57.3-25.7 57.3-57.4 0-27.1-19.7-52.1-48-56.8 1.8-7.3 17.7-21.1 26.3-24.7 41.1-17.3 78 5.2 83.3 33.5 8.3 44.3-37.1 90.4-69.7 127.6C84.5 328.1 18.3 396.8 0 415.9l336-.1V480zM369.9 371l47.1 27.2-47.1 27.2zM134.2 161.4c0 12.4-10 22.4-22.4 22.4s-22.4-10-22.4-22.4 10-22.4 22.4-22.4 22.4 10.1 22.4 22.4zM82.5 380.5c25.6-27.4 97.7-104.7 150.8-169.9 35.1-43.1 40.3-82.4 28.4-112.7-7.4-18.8-17.5-30.2-24.3-35.7 45.3 2.1 68 23.4 82.2 38.3 0 0 42.4 48.2 5.8 113.3-37 65.9-110.9 147.5-128.5 166.7z\"],\n    \"dribbble\": [512, 512, [], \"f17d\", \"M256 8C119.252 8 8 119.252 8 256s111.252 248 248 248 248-111.252 248-248S392.748 8 256 8zm163.97 114.366c29.503 36.046 47.369 81.957 47.835 131.955-6.984-1.477-77.018-15.682-147.502-6.818-5.752-14.041-11.181-26.393-18.617-41.614 78.321-31.977 113.818-77.482 118.284-83.523zM396.421 97.87c-3.81 5.427-35.697 48.286-111.021 76.519-34.712-63.776-73.185-116.168-79.04-124.008 67.176-16.193 137.966 1.27 190.061 47.489zm-230.48-33.25c5.585 7.659 43.438 60.116 78.537 122.509-99.087 26.313-186.36 25.934-195.834 25.809C62.38 147.205 106.678 92.573 165.941 64.62zM44.17 256.323c0-2.166.043-4.322.108-6.473 9.268.19 111.92 1.513 217.706-30.146 6.064 11.868 11.857 23.915 17.174 35.949-76.599 21.575-146.194 83.527-180.531 142.306C64.794 360.405 44.17 310.73 44.17 256.323zm81.807 167.113c22.127-45.233 82.178-103.622 167.579-132.756 29.74 77.283 42.039 142.053 45.189 160.638-68.112 29.013-150.015 21.053-212.768-27.882zm248.38 8.489c-2.171-12.886-13.446-74.897-41.152-151.033 66.38-10.626 124.7 6.768 131.947 9.055-9.442 58.941-43.273 109.844-90.795 141.978z\"],\n    \"dribbble-square\": [448, 512, [], \"f397\", \"M90.2 228.2c8.9-42.4 37.4-77.7 75.7-95.7 3.6 4.9 28 38.8 50.7 79-64 17-120.3 16.8-126.4 16.7zM314.6 154c-33.6-29.8-79.3-41.1-122.6-30.6 3.8 5.1 28.6 38.9 51 80 48.6-18.3 69.1-45.9 71.6-49.4zM140.1 364c40.5 31.6 93.3 36.7 137.3 18-2-12-10-53.8-29.2-103.6-55.1 18.8-93.8 56.4-108.1 85.6zm98.8-108.2c-3.4-7.8-7.2-15.5-11.1-23.2C159.6 253 93.4 252.2 87.4 252c0 1.4-.1 2.8-.1 4.2 0 35.1 13.3 67.1 35.1 91.4 22.2-37.9 67.1-77.9 116.5-91.8zm34.9 16.3c17.9 49.1 25.1 89.1 26.5 97.4 30.7-20.7 52.5-53.6 58.6-91.6-4.6-1.5-42.3-12.7-85.1-5.8zm-20.3-48.4c4.8 9.8 8.3 17.8 12 26.8 45.5-5.7 90.7 3.4 95.2 4.4-.3-32.3-11.8-61.9-30.9-85.1-2.9 3.9-25.8 33.2-76.3 53.9zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-64 176c0-88.2-71.8-160-160-160S64 167.8 64 256s71.8 160 160 160 160-71.8 160-160z\"],\n    \"dropbox\": [528, 512, [], \"f16b\", \"M264.4 116.3l-132 84.3 132 84.3-132 84.3L0 284.1l132.3-84.3L0 116.3 132.3 32l132.1 84.3zM131.6 395.7l132-84.3 132 84.3-132 84.3-132-84.3zm132.8-111.6l132-84.3-132-83.6L395.7 32 528 116.3l-132.3 84.3L528 284.8l-132.3 84.3-131.3-85z\"],\n    \"drupal\": [448, 512, [], \"f1a9\", \"M319.5 114.7c-22.2-14-43.5-19.5-64.7-33.5-13-8.8-31.3-30-46.5-48.3-2.7 29.3-11.5 41.2-22 49.5-21.3 17-34.8 22.2-53.5 32.3C117 123 32 181.5 32 290.5 32 399.7 123.8 480 225.8 480 327.5 480 416 406 416 294c0-112.3-83-171-96.5-179.3zm2.5 325.6c-20.1 20.1-90.1 28.7-116.7 4.2-4.8-4.8.3-12 6.5-12 0 0 17 13.3 51.5 13.3 27 0 46-7.7 54.5-14 6.1-4.6 8.4 4.3 4.2 8.5zm-54.5-52.6c8.7-3.6 29-3.8 36.8 1.3 4.1 2.8 16.1 18.8 6.2 23.7-8.4 4.2-1.2-15.7-26.5-15.7-14.7 0-19.5 5.2-26.7 11-7 6-9.8 8-12.2 4.7-6-8.2 15.9-22.3 22.4-25zM360 405c-15.2-1-45.5-48.8-65-49.5-30.9-.9-104.1 80.7-161.3 42-38.8-26.6-14.6-104.8 51.8-105.2 49.5-.5 83.8 49 108.5 48.5 21.3-.3 61.8-41.8 81.8-41.8 48.7 0 23.3 109.3-15.8 106z\"],\n    \"dyalog\": [416, 512, [], \"f399\", \"M0 32v119.2h64V96h107.2C284.6 96 352 176.2 352 255.9 352 332 293.4 416 171.2 416H0v64h171.2C331.9 480 416 367.3 416 255.9c0-58.7-22.1-113.4-62.3-154.3C308.9 56 245.7 32 171.2 32H0z\"],\n    \"earlybirds\": [480, 512, [], \"f39a\", \"M313.2 47.5c1.2-13 21.3-14 36.6-8.7.9.3 26.2 9.7 19 15.2-27.9-7.4-56.4 18.2-55.6-6.5zm-201 6.9c30.7-8.1 62 20 61.1-7.1-1.3-14.2-23.4-15.3-40.2-9.6-1 .3-28.7 10.5-20.9 16.7zM319.4 160c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zm-159.7 0c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zm318.5 163.2c-9.9 24-40.7 11-63.9-1.2-13.5 69.1-58.1 111.4-126.3 124.2.3.9-2-.1 24 1 33.6 1.4 63.8-3.1 97.4-8-19.8-13.8-11.4-37.1-9.8-38.1 1.4-.9 14.7 1.7 21.6 11.5 8.6-12.5 28.4-14.8 30.2-13.6 1.6 1.1 6.6 20.9-6.9 34.6 4.7-.9 8.2-1.6 9.8-2.1 2.6-.8 17.7 11.3 3.1 13.3-14.3 2.3-22.6 5.1-47.1 10.8-45.9 10.7-85.9 11.8-117.7 12.8l1 11.6c3.8 18.1-23.4 24.3-27.6 6.2.8 17.9-27.1 21.8-28.4-1l-.5 5.3c-.7 18.4-28.4 17.9-28.3-.6-7.5 13.5-28.1 6.8-26.4-8.5l1.2-12.4c-36.7.9-59.7 3.1-61.8 3.1-20.9 0-20.9-31.6 0-31.6 2.4 0 27.7 1.3 63.2 2.8-61.1-15.5-103.7-55-114.9-118.2-25 12.8-57.5 26.8-68.2.8-10.5-25.4 21.5-42.6 66.8-73.4.7-6.6 1.6-13.3 2.7-19.8-14.4-19.6-11.6-36.3-16.1-60.4-16.8 2.4-23.2-9.1-23.6-23.1.3-7.3 2.1-14.9 2.4-15.4 1.1-1.8 10.1-2 12.7-2.6 6-31.7 50.6-33.2 90.9-34.5 19.7-21.8 45.2-41.5 80.9-48.3C203.3 29 215.2 8.5 216.2 8c1.7-.8 21.2 4.3 26.3 23.2 5.2-8.8 18.3-11.4 19.6-10.7 1.1.6 6.4 15-4.9 25.9 40.3 3.5 72.2 24.7 96 50.7 36.1 1.5 71.8 5.9 77.1 34 2.7.6 11.6.8 12.7 2.6.3.5 2.1 8.1 2.4 15.4-.5 13.9-6.8 25.4-23.6 23.1-3.2 17.3-2.7 32.9-8.7 47.7 2.4 11.7 4 23.8 4.8 36.4 37 25.4 70.3 42.5 60.3 66.9zM207.4 159.9c.9-44-37.9-42.2-78.6-40.3-21.7 1-38.9 1.9-45.5 13.9-11.4 20.9 5.9 92.9 23.2 101.2 9.8 4.7 73.4 7.9 86.3-7.1 8.2-9.4 15-49.4 14.6-67.7zm52 58.3c-4.3-12.4-6-30.1-15.3-32.7-2-.5-9-.5-11 0-10 2.8-10.8 22.1-17 37.2 15.4 0 19.3 9.7 23.7 9.7 4.3 0 6.3-11.3 19.6-14.2zm135.7-84.7c-6.6-12.1-24.8-12.9-46.5-13.9-40.2-1.9-78.2-3.8-77.3 40.3-.5 18.3 5 58.3 13.2 67.8 13 14.9 76.6 11.8 86.3 7.1 15.8-7.6 36.5-78.9 24.3-101.3z\"],\n    \"ebay\": [640, 512, [], \"f4f4\", \"M606 189.5l-54.8 109.9-54.9-109.9h-37.5l10.9 20.6c-11.5-19-35.9-26-63.3-26-31.8 0-67.9 8.7-71.5 43.1h33.7c1.4-13.8 15.7-21.8 35-21.8 26 0 41 9.6 41 33v3.4c-12.7 0-28 .1-41.7.4-42.4.9-69.6 10-76.7 34.4 1-5.2 1.5-10.6 1.5-16.2 0-52.1-39.7-76.2-75.4-76.2-21.3 0-43 5.5-58.7 24.2v-80.6h-32.1v169.5c0 10.3-.6 22.9-1.1 33.1h31.5c.7-6.3 1.1-12.9 1.1-19.5 13.6 16.6 35.4 24.9 58.7 24.9 36.9 0 64.9-21.9 73.3-54.2-.5 2.8-.7 5.8-.7 9 0 24.1 21.1 45 60.6 45 26.6 0 45.8-5.7 61.9-25.5 0 6.6.3 13.3 1.1 20.2h29.8c-.7-8.2-1-17.5-1-26.8v-65.6c0-9.3-1.7-17.2-4.8-23.8l61.5 116.1-28.5 54.1h35.9L640 189.5zM243.7 313.8c-29.6 0-50.2-21.5-50.2-53.8 0-32.4 20.6-53.8 50.2-53.8 29.8 0 50.2 21.4 50.2 53.8 0 32.3-20.4 53.8-50.2 53.8zm200.9-47.3c0 30-17.9 48.4-51.6 48.4-25.1 0-35-13.4-35-25.8 0-19.1 18.1-24.4 47.2-25.3 13.1-.5 27.6-.6 39.4-.6zm-411.9 1.6h128.8v-8.5c0-51.7-33.1-75.4-78.4-75.4-56.8 0-83 30.8-83 77.6 0 42.5 25.3 74 82.5 74 31.4 0 68-11.7 74.4-46.1h-33.1c-12 35.8-87.7 36.7-91.2-21.6zm95-21.4H33.3c6.9-56.6 92.1-54.7 94.4 0z\"],\n    \"edge\": [512, 512, [], \"f282\", \"M481.92,134.48C440.87,54.18,352.26,8,255.91,8,137.05,8,37.51,91.68,13.47,203.66c26-46.49,86.22-79.14,149.46-79.14,79.27,0,121.09,48.93,122.25,50.18,22,23.8,33,50.39,33,83.1,0,10.4-5.31,25.82-15.11,38.57-1.57,2-6.39,4.84-6.39,11,0,5.06,3.29,9.92,9.14,14,27.86,19.37,80.37,16.81,80.51,16.81A115.39,115.39,0,0,0,444.94,322a118.92,118.92,0,0,0,58.95-102.44C504.39,176.13,488.39,147.26,481.92,134.48ZM212.77,475.67a154.88,154.88,0,0,1-46.64-45c-32.94-47.42-34.24-95.6-20.1-136A155.5,155.5,0,0,1,203,215.75c59-45.2,94.84-5.65,99.06-1a80,80,0,0,0-4.89-10.14c-9.24-15.93-24-36.41-56.56-53.51-33.72-17.69-70.59-18.59-77.64-18.59-38.71,0-77.9,13-107.53,35.69C35.68,183.3,12.77,208.72,8.6,243c-1.08,12.31-2.75,62.8,23,118.27a248,248,0,0,0,248.3,141.61C241.78,496.26,214.05,476.24,212.77,475.67Zm250.72-98.33a7.76,7.76,0,0,0-7.92-.23,181.66,181.66,0,0,1-20.41,9.12,197.54,197.54,0,0,1-69.55,12.52c-91.67,0-171.52-63.06-171.52-144A61.12,61.12,0,0,1,200.61,228,168.72,168.72,0,0,0,161.85,278c-14.92,29.37-33,88.13,13.33,151.66,6.51,8.91,23,30,56,47.67,23.57,12.65,49,19.61,71.7,19.61,35.14,0,115.43-33.44,163-108.87A7.75,7.75,0,0,0,463.49,377.34Z\"],\n    \"edge-legacy\": [512, 512, [], \"e078\", \"M25.71,228.16l.35-.48c0,.16,0,.32-.07.48Zm460.58,15.51c0-44-7.76-84.46-28.81-122.4C416.5,47.88,343.91,8,258.89,8,119,7.72,40.62,113.21,26.06,227.68c42.42-61.31,117.07-121.38,220.37-125,0,0,109.67,0,99.42,105H170c6.37-37.39,18.55-59,34.34-78.93-75.05,34.9-121.85,96.1-120.75,188.32.83,71.45,50.13,144.84,120.75,172,83.35,31.84,192.77,7.2,240.13-21.33V363.31C363.6,419.8,173.6,424.23,172.21,295.74H486.29V243.67Z\"],\n    \"elementor\": [448, 512, [], \"f430\", \"M425.6 32H22.4C10 32 0 42 0 54.4v403.2C0 470 10 480 22.4 480h403.2c12.4 0 22.4-10 22.4-22.4V54.4C448 42 438 32 425.6 32M164.3 355.5h-39.8v-199h39.8v199zm159.3 0H204.1v-39.8h119.5v39.8zm0-79.6H204.1v-39.8h119.5v39.8zm0-79.7H204.1v-39.8h119.5v39.8z\"],\n    \"ello\": [496, 512, [], \"f5f1\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm143.84 285.2C375.31 358.51 315.79 404.8 248 404.8s-127.31-46.29-143.84-111.6c-1.65-7.44 2.48-15.71 9.92-17.36 7.44-1.65 15.71 2.48 17.36 9.92 14.05 52.91 62 90.11 116.56 90.11s102.51-37.2 116.56-90.11c1.65-7.44 9.92-12.4 17.36-9.92 7.44 1.65 12.4 9.92 9.92 17.36z\"],\n    \"ember\": [640, 512, [], \"f423\", \"M639.9 254.6c-1.1-10.7-10.7-6.8-10.7-6.8s-15.6 12.1-29.3 10.7c-13.7-1.3-9.4-32-9.4-32s3-28.1-5.1-30.4c-8.1-2.4-18 7.3-18 7.3s-12.4 13.7-18.3 31.2l-1.6.5s1.9-30.6-.3-37.6c-1.6-3.5-16.4-3.2-18.8 3s-14.2 49.2-15 67.2c0 0-23.1 19.6-43.3 22.8s-25-9.4-25-9.4 54.8-15.3 52.9-59.1-44.2-27.6-49-24c-4.6 3.5-29.4 18.4-36.6 59.7-.2 1.4-.7 7.5-.7 7.5s-21.2 14.2-33 18c0 0 33-55.6-7.3-80.9-11.4-6.8-21.3-.5-27.2 5.3 13.6-17.3 46.4-64.2 36.9-105.2-5.8-24.4-18-27.1-29.2-23.1-17 6.7-23.5 16.7-23.5 16.7s-22 32-27.1 79.5-12.6 105.1-12.6 105.1-10.5 10.2-20.2 10.7-5.4-28.7-5.4-28.7 7.5-44.6 7-52.1-1.1-11.6-9.9-14.2c-8.9-2.7-18.5 8.6-18.5 8.6s-25.5 38.7-27.7 44.6l-1.3 2.4-1.3-1.6s18-52.7.8-53.5-28.5 18.8-28.5 18.8-19.6 32.8-20.4 36.5l-1.3-1.6s8.1-38.2 6.4-47.6c-1.6-9.4-10.5-7.5-10.5-7.5s-11.3-1.3-14.2 5.9-13.7 55.3-15 70.7c0 0-28.2 20.2-46.8 20.4-18.5.3-16.7-11.8-16.7-11.8s68-23.3 49.4-69.2c-8.3-11.8-18-15.5-31.7-15.3-13.7.3-30.3 8.6-41.3 33.3-5.3 11.8-6.8 23-7.8 31.5 0 0-12.3 2.4-18.8-2.9s-10 0-10 0-11.2 14-.1 18.3 28.1 6.1 28.1 6.1c1.6 7.5 6.2 19.5 19.6 29.7 20.2 15.3 58.8-1.3 58.8-1.3l15.9-8.8s.5 14.6 12.1 16.7 16.4 1 36.5-47.9c11.8-25 12.6-23.6 12.6-23.6l1.3-.3s-9.1 46.8-5.6 59.7C187.7 319.4 203 318 203 318s8.3 2.4 15-21.2 19.6-49.9 19.6-49.9h1.6s-5.6 48.1 3 63.7 30.9 5.3 30.9 5.3 15.6-7.8 18-10.2c0 0 18.5 15.8 44.6 12.9 58.3-11.5 79.1-25.9 79.1-25.9s10 24.4 41.1 26.7c35.5 2.7 54.8-18.6 54.8-18.6s-.3 13.5 12.1 18.6 20.7-22.8 20.7-22.8l20.7-57.2h1.9s1.1 37.3 21.5 43.2 47-13.7 47-13.7 6.4-3.5 5.3-14.3zm-578 5.3c.8-32 21.8-45.9 29-39 7.3 7 4.6 22-9.1 31.4-13.7 9.5-19.9 7.6-19.9 7.6zm272.8-123.8s19.1-49.7 23.6-25.5-40 96.2-40 96.2c.5-16.2 16.4-70.7 16.4-70.7zm22.8 138.4c-12.6 33-43.3 19.6-43.3 19.6s-3.5-11.8 6.4-44.9 33.3-20.2 33.3-20.2 16.2 12.4 3.6 45.5zm84.6-14.6s-3-10.5 8.1-30.6c11-20.2 19.6-9.1 19.6-9.1s9.4 10.2-1.3 25.5-26.4 14.2-26.4 14.2z\"],\n    \"empire\": [496, 512, [], \"f1d1\", \"M287.6 54.2c-10.8-2.2-22.1-3.3-33.5-3.6V32.4c78.1 2.2 146.1 44 184.6 106.6l-15.8 9.1c-6.1-9.7-12.7-18.8-20.2-27.1l-18 15.5c-26-29.6-61.4-50.7-101.9-58.4l4.8-23.9zM53.4 322.4l23-7.7c-6.4-18.3-10-38.2-10-58.7s3.3-40.4 9.7-58.7l-22.7-7.7c3.6-10.8 8.3-21.3 13.6-31l-15.8-9.1C34 181 24.1 217.5 24.1 256s10 75 27.1 106.6l15.8-9.1c-5.3-10-9.7-20.3-13.6-31.1zM213.1 434c-40.4-8-75.8-29.1-101.9-58.7l-18 15.8c-7.5-8.6-14.4-17.7-20.2-27.4l-16 9.4c38.5 62.3 106.8 104.3 184.9 106.6v-18.3c-11.3-.3-22.7-1.7-33.5-3.6l4.7-23.8zM93.3 120.9l18 15.5c26-29.6 61.4-50.7 101.9-58.4l-4.7-23.8c10.8-2.2 22.1-3.3 33.5-3.6V32.4C163.9 34.6 95.9 76.4 57.4 139l15.8 9.1c6-9.7 12.6-18.9 20.1-27.2zm309.4 270.2l-18-15.8c-26 29.6-61.4 50.7-101.9 58.7l4.7 23.8c-10.8 1.9-22.1 3.3-33.5 3.6v18.3c78.1-2.2 146.4-44.3 184.9-106.6l-16.1-9.4c-5.7 9.7-12.6 18.8-20.1 27.4zM496 256c0 137-111 248-248 248S0 393 0 256 111 8 248 8s248 111 248 248zm-12.2 0c0-130.1-105.7-235.8-235.8-235.8S12.2 125.9 12.2 256 117.9 491.8 248 491.8 483.8 386.1 483.8 256zm-39-106.6l-15.8 9.1c5.3 9.7 10 20.2 13.6 31l-22.7 7.7c6.4 18.3 9.7 38.2 9.7 58.7s-3.6 40.4-10 58.7l23 7.7c-3.9 10.8-8.3 21-13.6 31l15.8 9.1C462 331 471.9 294.5 471.9 256s-9.9-75-27.1-106.6zm-183 177.7c16.3-3.3 30.4-11.6 40.7-23.5l51.2 44.8c11.9-13.6 21.3-29.3 27.1-46.8l-64.2-22.1c2.5-7.5 3.9-15.2 3.9-23.5s-1.4-16.1-3.9-23.5l64.5-22.1c-6.1-17.4-15.5-33.2-27.4-46.8l-51.2 44.8c-10.2-11.9-24.4-20.5-40.7-23.8l13.3-66.4c-8.6-1.9-17.7-2.8-27.1-2.8-9.4 0-18.5.8-27.1 2.8l13.3 66.4c-16.3 3.3-30.4 11.9-40.7 23.8l-51.2-44.8c-11.9 13.6-21.3 29.3-27.4 46.8l64.5 22.1c-2.5 7.5-3.9 15.2-3.9 23.5s1.4 16.1 3.9 23.5l-64.2 22.1c5.8 17.4 15.2 33.2 27.1 46.8l51.2-44.8c10.2 11.9 24.4 20.2 40.7 23.5l-13.3 66.7c8.6 1.7 17.7 2.8 27.1 2.8 9.4 0 18.5-1.1 27.1-2.8l-13.3-66.7z\"],\n    \"envira\": [448, 512, [], \"f299\", \"M0 32c477.6 0 366.6 317.3 367.1 366.3L448 480h-26l-70.4-71.2c-39 4.2-124.4 34.5-214.4-37C47 300.3 52 214.7 0 32zm79.7 46c-49.7-23.5-5.2 9.2-5.2 9.2 45.2 31.2 66 73.7 90.2 119.9 31.5 60.2 79 139.7 144.2 167.7 65 28 34.2 12.5 6-8.5-28.2-21.2-68.2-87-91-130.2-31.7-60-61-118.6-144.2-158.1z\"],\n    \"erlang\": [640, 512, [], \"f39d\", \"M87.2 53.5H0v405h100.4c-49.7-52.6-78.8-125.3-78.7-212.1-.1-76.7 24-142.7 65.5-192.9zm238.2 9.7c-45.9.1-85.1 33.5-89.2 83.2h169.9c-1.1-49.7-34.5-83.1-80.7-83.2zm230.7-9.6h.3l-.1-.1zm.3 0c31.4 42.7 48.7 97.5 46.2 162.7.5 6 .5 11.7 0 24.1H230.2c-.2 109.7 38.9 194.9 138.6 195.3 68.5-.3 118-51 151.9-106.1l96.4 48.2c-17.4 30.9-36.5 57.8-57.9 80.8H640v-405z\"],\n    \"ethereum\": [320, 512, [], \"f42e\", \"M311.9 260.8L160 353.6 8 260.8 160 0l151.9 260.8zM160 383.4L8 290.6 160 512l152-221.4-152 92.8z\"],\n    \"etsy\": [384, 512, [], \"f2d7\", \"M384 348c-1.75 10.75-13.75 110-15.5 132-117.879-4.299-219.895-4.743-368.5 0v-25.5c45.457-8.948 60.627-8.019 61-35.25 1.793-72.322 3.524-244.143 0-322-1.029-28.46-12.13-26.765-61-36v-25.5c73.886 2.358 255.933 8.551 362.999-3.75-3.5 38.25-7.75 126.5-7.75 126.5H332C320.947 115.665 313.241 68 277.25 68h-137c-10.25 0-10.75 3.5-10.75 9.75V241.5c58 .5 88.5-2.5 88.5-2.5 29.77-.951 27.56-8.502 40.75-65.251h25.75c-4.407 101.351-3.91 61.829-1.75 160.25H257c-9.155-40.086-9.065-61.045-39.501-61.5 0 0-21.5-2-88-2v139c0 26 14.25 38.25 44.25 38.25H263c63.636 0 66.564-24.996 98.751-99.75H384z\"],\n    \"evernote\": [384, 512, [], \"f839\", \"M120.82 132.21c1.6 22.31-17.55 21.59-21.61 21.59-68.93 0-73.64-1-83.58 3.34-.56.22-.74 0-.37-.37L123.79 46.45c.38-.37.6-.22.38.37-4.35 9.99-3.35 15.09-3.35 85.39zm79 308c-14.68-37.08 13-76.93 52.52-76.62 17.49 0 22.6 23.21 7.95 31.42-6.19 3.3-24.95 1.74-25.14 19.2-.05 17.09 19.67 25 31.2 24.89A45.64 45.64 0 0 0 312 393.45v-.08c0-11.63-7.79-47.22-47.54-55.34-7.72-1.54-65-6.35-68.35-50.52-3.74 16.93-17.4 63.49-43.11 69.09-8.74 1.94-69.68 7.64-112.92-36.77 0 0-18.57-15.23-28.23-57.95-3.38-15.75-9.28-39.7-11.14-62 0-18 11.14-30.45 25.07-32.2 81 0 90 2.32 101-7.8 9.82-9.24 7.8-15.5 7.8-102.78 1-8.3 7.79-30.81 53.41-24.14 6 .86 31.91 4.18 37.48 30.64l64.26 11.15c20.43 3.71 70.94 7 80.6 57.94 22.66 121.09 8.91 238.46 7.8 238.46C362.15 485.53 267.06 480 267.06 480c-18.95-.23-54.25-9.4-67.27-39.83zm80.94-204.84c-1 1.92-2.2 6 .85 7 14.09 4.93 39.75 6.84 45.88 5.53 3.11-.25 3.05-4.43 2.48-6.65-3.53-21.85-40.83-26.5-49.24-5.92z\"],\n    \"expeditedssl\": [496, 512, [], \"f23e\", \"M248 43.4C130.6 43.4 35.4 138.6 35.4 256S130.6 468.6 248 468.6 460.6 373.4 460.6 256 365.4 43.4 248 43.4zm-97.4 132.9c0-53.7 43.7-97.4 97.4-97.4s97.4 43.7 97.4 97.4v26.6c0 5-3.9 8.9-8.9 8.9h-17.7c-5 0-8.9-3.9-8.9-8.9v-26.6c0-82.1-124-82.1-124 0v26.6c0 5-3.9 8.9-8.9 8.9h-17.7c-5 0-8.9-3.9-8.9-8.9v-26.6zM389.7 380c0 9.7-8 17.7-17.7 17.7H124c-9.7 0-17.7-8-17.7-17.7V238.3c0-9.7 8-17.7 17.7-17.7h248c9.7 0 17.7 8 17.7 17.7V380zm-248-137.3v132.9c0 2.5-1.9 4.4-4.4 4.4h-8.9c-2.5 0-4.4-1.9-4.4-4.4V242.7c0-2.5 1.9-4.4 4.4-4.4h8.9c2.5 0 4.4 1.9 4.4 4.4zm141.7 48.7c0 13-7.2 24.4-17.7 30.4v31.6c0 5-3.9 8.9-8.9 8.9h-17.7c-5 0-8.9-3.9-8.9-8.9v-31.6c-10.5-6.1-17.7-17.4-17.7-30.4 0-19.7 15.8-35.4 35.4-35.4s35.5 15.8 35.5 35.4zM248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 478.3C121 486.3 17.7 383 17.7 256S121 25.7 248 25.7 478.3 129 478.3 256 375 486.3 248 486.3z\"],\n    \"facebook\": [512, 512, [], \"f09a\", \"M504 256C504 119 393 8 256 8S8 119 8 256c0 123.78 90.69 226.38 209.25 245V327.69h-63V256h63v-54.64c0-62.15 37-96.48 93.67-96.48 27.14 0 55.52 4.84 55.52 4.84v61h-31.28c-30.8 0-40.41 19.12-40.41 38.73V256h68.78l-11 71.69h-57.78V501C413.31 482.38 504 379.78 504 256z\"],\n    \"facebook-f\": [320, 512, [], \"f39e\", \"M279.14 288l14.22-92.66h-88.91v-60.13c0-25.35 12.42-50.06 52.24-50.06h40.42V6.26S260.43 0 225.36 0c-73.22 0-121.08 44.38-121.08 124.72v70.62H22.89V288h81.39v224h100.17V288z\"],\n    \"facebook-messenger\": [512, 512, [], \"f39f\", \"M256.55 8C116.52 8 8 110.34 8 248.57c0 72.3 29.71 134.78 78.07 177.94 8.35 7.51 6.63 11.86 8.05 58.23A19.92 19.92 0 0 0 122 502.31c52.91-23.3 53.59-25.14 62.56-22.7C337.85 521.8 504 423.7 504 248.57 504 110.34 396.59 8 256.55 8zm149.24 185.13l-73 115.57a37.37 37.37 0 0 1-53.91 9.93l-58.08-43.47a15 15 0 0 0-18 0l-78.37 59.44c-10.46 7.93-24.16-4.6-17.11-15.67l73-115.57a37.36 37.36 0 0 1 53.91-9.93l58.06 43.46a15 15 0 0 0 18 0l78.41-59.38c10.44-7.98 24.14 4.54 17.09 15.62z\"],\n    \"facebook-square\": [448, 512, [], \"f082\", \"M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h137.25V327.69h-63V256h63v-54.64c0-62.15 37-96.48 93.67-96.48 27.14 0 55.52 4.84 55.52 4.84v61h-31.27c-30.81 0-40.42 19.12-40.42 38.73V256h68.78l-11 71.69h-57.78V480H400a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48z\"],\n    \"fantasy-flight-games\": [512, 512, [], \"f6dc\", \"M256 32.86L32.86 256 256 479.14 479.14 256 256 32.86zM88.34 255.83c1.96-2 11.92-12.3 96.49-97.48 41.45-41.75 86.19-43.77 119.77-18.69 24.63 18.4 62.06 58.9 62.15 59 .68.74 1.07 2.86.58 3.38-11.27 11.84-22.68 23.54-33.5 34.69-34.21-32.31-40.52-38.24-48.51-43.95-17.77-12.69-41.4-10.13-56.98 5.1-2.17 2.13-1.79 3.43.12 5.35 2.94 2.95 28.1 28.33 35.09 35.78-11.95 11.6-23.66 22.97-35.69 34.66-12.02-12.54-24.48-25.53-36.54-38.11-21.39 21.09-41.69 41.11-61.85 60.99a42569.01 42569.01 0 0 1-41.13-40.72zm234.82 101.6c-35.49 35.43-78.09 38.14-106.99 20.47-22.08-13.5-39.38-32.08-72.93-66.84 12.05-12.37 23.79-24.42 35.37-36.31 33.02 31.91 37.06 36.01 44.68 42.09 18.48 14.74 42.52 13.67 59.32-1.8 3.68-3.39 3.69-3.64.14-7.24-10.59-10.73-21.19-21.44-31.77-32.18-1.32-1.34-3.03-2.48-.8-4.69 10.79-10.71 21.48-21.52 32.21-32.29.26-.26.65-.38 1.91-1.07 12.37 12.87 24.92 25.92 37.25 38.75 21.01-20.73 41.24-40.68 61.25-60.42 13.68 13.4 27.13 26.58 40.86 40.03-20.17 20.86-81.68 82.71-100.5 101.5zM256 0L0 256l256 256 256-256L256 0zM16 256L256 16l240 240-240 240L16 256z\"],\n    \"fedex\": [640, 512, [], \"f797\", \"M586 284.5l53.3-59.9h-62.4l-21.7 24.8-22.5-24.8H414v-16h56.1v-48.1H318.9V236h-.5c-9.6-11-21.5-14.8-35.4-14.8-28.4 0-49.8 19.4-57.3 44.9-18-59.4-97.4-57.6-121.9-14v-24.2H49v-26.2h60v-41.1H0V345h49v-77.5h48.9c-1.5 5.7-2.3 11.8-2.3 18.2 0 73.1 102.6 91.4 130.2 23.7h-42c-14.7 20.9-45.8 8.9-45.8-14.6h85.5c3.7 30.5 27.4 56.9 60.1 56.9 14.1 0 27-6.9 34.9-18.6h.5V345h212.2l22.1-25 22.3 25H640l-54-60.5zm-446.7-16.6c6.1-26.3 41.7-25.6 46.5 0h-46.5zm153.4 48.9c-34.6 0-34-62.8 0-62.8 32.6 0 34.5 62.8 0 62.8zm167.8 19.1h-94.4V169.4h95v30.2H405v33.9h55.5v28.1h-56.1v44.7h56.1v29.6zm-45.9-39.8v-24.4h56.1v-44l50.7 57-50.7 57v-45.6h-56.1zm138.6 10.3l-26.1 29.5H489l45.6-51.2-45.6-51.2h39.7l26.6 29.3 25.6-29.3h38.5l-45.4 51 46 51.4h-40.5l-26.3-29.5z\"],\n    \"fedora\": [448, 512, [], \"f798\", \"M225 32C101.3 31.7.8 131.7.4 255.4L0 425.7a53.6 53.6 0 0 0 53.6 53.9l170.2.4c123.7.3 224.3-99.7 224.6-223.4S348.7 32.3 225 32zm169.8 157.2L333 126.6c2.3-4.7 3.8-9.2 3.8-14.3v-1.6l55.2 56.1a101 101 0 0 1 2.8 22.4zM331 94.3a106.06 106.06 0 0 1 58.5 63.8l-54.3-54.6a26.48 26.48 0 0 0-4.2-9.2zM118.1 247.2a49.66 49.66 0 0 0-7.7 11.4l-8.5-8.5a85.78 85.78 0 0 1 16.2-2.9zM97 251.4l11.8 11.9-.9 8a34.74 34.74 0 0 0 2.4 12.5l-27-27.2a80.6 80.6 0 0 1 13.7-5.2zm-18.2 7.4l38.2 38.4a53.17 53.17 0 0 0-14.1 4.7L67.6 266a107 107 0 0 1 11.2-7.2zm-15.2 9.8l35.3 35.5a67.25 67.25 0 0 0-10.5 8.5L53.5 278a64.33 64.33 0 0 1 10.1-9.4zm-13.3 12.3l34.9 35a56.84 56.84 0 0 0-7.7 11.4l-35.8-35.9c2.8-3.8 5.7-7.2 8.6-10.5zm-11 14.3l36.4 36.6a48.29 48.29 0 0 0-3.6 15.2l-39.5-39.8a99.81 99.81 0 0 1 6.7-12zm-8.8 16.3l41.3 41.8a63.47 63.47 0 0 0 6.7 26.2L25.8 326c1.4-4.9 2.9-9.6 4.7-14.5zm-7.9 43l61.9 62.2a31.24 31.24 0 0 0-3.6 14.3v1.1l-55.4-55.7a88.27 88.27 0 0 1-2.9-21.9zm5.3 30.7l54.3 54.6a28.44 28.44 0 0 0 4.2 9.2 106.32 106.32 0 0 1-58.5-63.8zm-5.3-37a80.69 80.69 0 0 1 2.1-17l72.2 72.5a37.59 37.59 0 0 0-9.9 8.7zm253.3-51.8l-42.6-.1-.1 56c-.2 69.3-64.4 115.8-125.7 102.9-5.7 0-19.9-8.7-19.9-24.2a24.89 24.89 0 0 1 24.5-24.6c6.3 0 6.3 1.6 15.7 1.6a55.91 55.91 0 0 0 56.1-55.9l.1-47c0-4.5-4.5-9-8.9-9l-33.6-.1c-32.6-.1-32.5-49.4.1-49.3l42.6.1.1-56a105.18 105.18 0 0 1 105.6-105 86.35 86.35 0 0 1 20.2 2.3c11.2 1.8 19.9 11.9 19.9 24 0 15.5-14.9 27.8-30.3 23.9-27.4-5.9-65.9 14.4-66 54.9l-.1 47a8.94 8.94 0 0 0 8.9 9l33.6.1c32.5.2 32.4 49.5-.2 49.4zm23.5-.3a35.58 35.58 0 0 0 7.6-11.4l8.5 8.5a102 102 0 0 1-16.1 2.9zm21-4.2L308.6 280l.9-8.1a34.74 34.74 0 0 0-2.4-12.5l27 27.2a74.89 74.89 0 0 1-13.7 5.3zm18-7.4l-38-38.4c4.9-1.1 9.6-2.4 13.7-4.7l36.2 35.9c-3.8 2.5-7.9 5-11.9 7.2zm15.5-9.8l-35.3-35.5a61.06 61.06 0 0 0 10.5-8.5l34.9 35a124.56 124.56 0 0 1-10.1 9zm13.2-12.3l-34.9-35a63.18 63.18 0 0 0 7.7-11.4l35.8 35.9a130.28 130.28 0 0 1-8.6 10.5zm11-14.3l-36.4-36.6a48.29 48.29 0 0 0 3.6-15.2l39.5 39.8a87.72 87.72 0 0 1-6.7 12zm13.5-30.9a140.63 140.63 0 0 1-4.7 14.3L345.6 190a58.19 58.19 0 0 0-7.1-26.2zm1-5.6l-71.9-72.1a32 32 0 0 0 9.9-9.2l64.3 64.7a90.93 90.93 0 0 1-2.3 16.6z\"],\n    \"figma\": [384, 512, [], \"f799\", \"M14 95.7924C14 42.8877 56.8878 0 109.793 0H274.161C327.066 0 369.954 42.8877 369.954 95.7924C369.954 129.292 352.758 158.776 326.711 175.897C352.758 193.019 369.954 222.502 369.954 256.002C369.954 308.907 327.066 351.795 274.161 351.795H272.081C247.279 351.795 224.678 342.369 207.666 326.904V415.167C207.666 468.777 163.657 512 110.309 512C57.5361 512 14 469.243 14 416.207C14 382.709 31.1945 353.227 57.2392 336.105C31.1945 318.983 14 289.5 14 256.002C14 222.502 31.196 193.019 57.2425 175.897C31.196 158.776 14 129.292 14 95.7924ZM176.288 191.587H109.793C74.2172 191.587 45.3778 220.427 45.3778 256.002C45.3778 291.44 73.9948 320.194 109.381 320.416C109.518 320.415 109.655 320.415 109.793 320.415H176.288V191.587ZM207.666 256.002C207.666 291.577 236.505 320.417 272.081 320.417H274.161C309.737 320.417 338.576 291.577 338.576 256.002C338.576 220.427 309.737 191.587 274.161 191.587H272.081C236.505 191.587 207.666 220.427 207.666 256.002ZM109.793 351.795C109.655 351.795 109.518 351.794 109.381 351.794C73.9948 352.015 45.3778 380.769 45.3778 416.207C45.3778 451.652 74.6025 480.622 110.309 480.622C146.591 480.622 176.288 451.186 176.288 415.167V351.795H109.793ZM109.793 31.3778C74.2172 31.3778 45.3778 60.2173 45.3778 95.7924C45.3778 131.368 74.2172 160.207 109.793 160.207H176.288V31.3778H109.793ZM207.666 160.207H274.161C309.737 160.207 338.576 131.368 338.576 95.7924C338.576 60.2173 309.737 31.3778 274.161 31.3778H207.666V160.207Z\"],\n    \"firefox\": [512, 512, [], \"f269\", \"M503.52,241.48c-.12-1.56-.24-3.12-.24-4.68v-.12l-.36-4.68v-.12a245.86,245.86,0,0,0-7.32-41.15c0-.12,0-.12-.12-.24l-1.08-4c-.12-.24-.12-.48-.24-.6-.36-1.2-.72-2.52-1.08-3.72-.12-.24-.12-.6-.24-.84-.36-1.2-.72-2.4-1.08-3.48-.12-.36-.24-.6-.36-1-.36-1.2-.72-2.28-1.2-3.48l-.36-1.08c-.36-1.08-.84-2.28-1.2-3.36a8.27,8.27,0,0,0-.36-1c-.48-1.08-.84-2.28-1.32-3.36-.12-.24-.24-.6-.36-.84-.48-1.2-1-2.28-1.44-3.48,0-.12-.12-.24-.12-.36-1.56-3.84-3.24-7.68-5-11.4l-.36-.72c-.48-1-.84-1.8-1.32-2.64-.24-.48-.48-1.08-.72-1.56-.36-.84-.84-1.56-1.2-2.4-.36-.6-.6-1.2-1-1.8s-.84-1.44-1.2-2.28c-.36-.6-.72-1.32-1.08-1.92s-.84-1.44-1.2-2.16a18.07,18.07,0,0,0-1.2-2c-.36-.72-.84-1.32-1.2-2s-.84-1.32-1.2-2-.84-1.32-1.2-1.92-.84-1.44-1.32-2.16a15.63,15.63,0,0,0-1.2-1.8L463.2,119a15.63,15.63,0,0,0-1.2-1.8c-.48-.72-1.08-1.56-1.56-2.28-.36-.48-.72-1.08-1.08-1.56l-1.8-2.52c-.36-.48-.6-.84-1-1.32-1-1.32-1.8-2.52-2.76-3.72a248.76,248.76,0,0,0-23.51-26.64A186.82,186.82,0,0,0,412,62.46c-4-3.48-8.16-6.72-12.48-9.84a162.49,162.49,0,0,0-24.6-15.12c-2.4-1.32-4.8-2.52-7.2-3.72a254,254,0,0,0-55.43-19.56c-1.92-.36-3.84-.84-5.64-1.2h-.12c-1-.12-1.8-.36-2.76-.48a236.35,236.35,0,0,0-38-4H255.14a234.62,234.62,0,0,0-45.48,5c-33.59,7.08-63.23,21.24-82.91,39-1.08,1-1.92,1.68-2.4,2.16l-.48.48H124l-.12.12.12-.12a.12.12,0,0,0,.12-.12l-.12.12a.42.42,0,0,1,.24-.12c14.64-8.76,34.92-16,49.44-19.56l5.88-1.44c.36-.12.84-.12,1.2-.24,1.68-.36,3.36-.72,5.16-1.08.24,0,.6-.12.84-.12C250.94,20.94,319.34,40.14,367,85.61a171.49,171.49,0,0,1,26.88,32.76c30.36,49.2,27.48,111.11,3.84,147.59-34.44,53-111.35,71.27-159,24.84a84.19,84.19,0,0,1-25.56-59,74.05,74.05,0,0,1,6.24-31c1.68-3.84,13.08-25.67,18.24-24.59-13.08-2.76-37.55,2.64-54.71,28.19-15.36,22.92-14.52,58.2-5,83.28a132.85,132.85,0,0,1-12.12-39.24c-12.24-82.55,43.31-153,94.31-170.51-27.48-24-96.47-22.31-147.71,15.36-29.88,22-51.23,53.16-62.51,90.36,1.68-20.88,9.6-52.08,25.8-83.88-17.16,8.88-39,37-49.8,62.88-15.6,37.43-21,82.19-16.08,124.79.36,3.24.72,6.36,1.08,9.6,19.92,117.11,122,206.38,244.78,206.38C392.77,503.42,504,392.19,504,255,503.88,250.48,503.76,245.92,503.52,241.48Z\"],\n    \"firefox-browser\": [512, 512, [], \"e007\", \"M189.37,152.86Zm-58.74-29.37C130.79,123.5,130.71,123.5,130.63,123.49Zm351.42,45.35c-10.61-25.5-32.08-53-48.94-61.73,13.72,26.89,21.67,53.88,24.7,74,0,0,0,.14.05.41-27.58-68.75-74.35-96.47-112.55-156.83-1.93-3.05-3.86-6.11-5.74-9.33-1-1.65-1.86-3.34-2.69-5.05A44.88,44.88,0,0,1,333.24.69a.63.63,0,0,0-.55-.66.9.9,0,0,0-.46,0l-.12.07-.18.1.1-.14c-54.23,31.77-76.72,87.38-82.5,122.78a130,130,0,0,0-48.33,12.33,6.25,6.25,0,0,0-3.09,7.75,6.13,6.13,0,0,0,7.79,3.79l.52-.21a117.84,117.84,0,0,1,42.11-11l1.42-.1c2-.12,4-.2,6-.22A122.61,122.61,0,0,1,291,140c.67.2,1.32.42,2,.63,1.89.57,3.76,1.2,5.62,1.87,1.36.5,2.71,1,4.05,1.58,1.09.44,2.18.88,3.25,1.35q2.52,1.13,5,2.35c.75.37,1.5.74,2.25,1.13q2.4,1.26,4.74,2.63,1.51.87,3,1.8a124.89,124.89,0,0,1,42.66,44.13c-13-9.15-36.35-18.19-58.82-14.28,87.74,43.86,64.18,194.9-57.39,189.2a108.43,108.43,0,0,1-31.74-6.12c-2.42-.91-4.8-1.89-7.16-2.93-1.38-.63-2.76-1.27-4.12-2C174.5,346,149.9,316.92,146.83,281.59c0,0,11.25-41.95,80.62-41.95,7.5,0,28.93-20.92,29.33-27-.09-2-42.54-18.87-59.09-35.18-8.85-8.71-13.05-12.91-16.77-16.06a69.58,69.58,0,0,0-6.31-4.77A113.05,113.05,0,0,1,173.92,97c-25.06,11.41-44.55,29.45-58.71,45.37h-.12c-9.67-12.25-9-52.65-8.43-61.08-.12-.53-7.22,3.68-8.15,4.31a178.54,178.54,0,0,0-23.84,20.43A214,214,0,0,0,51.9,133.36l0,0a.08.08,0,0,1,0,0,205.84,205.84,0,0,0-32.73,73.9c-.06.27-2.33,10.21-4,22.48q-.42,2.87-.78,5.74c-.57,3.69-1,7.71-1.44,14,0,.24,0,.48-.05.72-.18,2.71-.34,5.41-.49,8.12,0,.41,0,.82,0,1.24,0,134.7,109.21,243.89,243.92,243.89,120.64,0,220.82-87.58,240.43-202.62.41-3.12.74-6.26,1.11-9.41,4.85-41.83-.54-85.79-15.82-122.55Z\"],\n    \"first-order\": [448, 512, [], \"f2b0\", \"M12.9 229.2c.1-.1.2-.3.3-.4 0 .1 0 .3-.1.4h-.2zM224 96.6c-7.1 0-14.6.6-21.4 1.7l3.7 67.4-22-64c-14.3 3.7-27.7 9.4-40 16.6l29.4 61.4-45.1-50.9c-11.4 8.9-21.7 19.1-30.6 30.9l50.6 45.4-61.1-29.7c-7.1 12.3-12.9 25.7-16.6 40l64.3 22.6-68-4c-.9 7.1-1.4 14.6-1.4 22s.6 14.6 1.4 21.7l67.7-4-64 22.6c3.7 14.3 9.4 27.7 16.6 40.3l61.1-29.7L97.7 352c8.9 11.7 19.1 22.3 30.9 30.9l44.9-50.9-29.5 61.4c12.3 7.4 25.7 13.1 40 16.9l22.3-64.6-4 68c7.1 1.1 14.6 1.7 21.7 1.7 7.4 0 14.6-.6 21.7-1.7l-4-68.6 22.6 65.1c14.3-4 27.7-9.4 40-16.9L274.9 332l44.9 50.9c11.7-8.9 22-19.1 30.6-30.9l-50.6-45.1 61.1 29.4c7.1-12.3 12.9-25.7 16.6-40.3l-64-22.3 67.4 4c1.1-7.1 1.4-14.3 1.4-21.7s-.3-14.9-1.4-22l-67.7 4 64-22.3c-3.7-14.3-9.1-28-16.6-40.3l-60.9 29.7 50.6-45.4c-8.9-11.7-19.1-22-30.6-30.9l-45.1 50.9 29.4-61.1c-12.3-7.4-25.7-13.1-40-16.9L241.7 166l4-67.7c-7.1-1.2-14.3-1.7-21.7-1.7zM443.4 128v256L224 512 4.6 384V128L224 0l219.4 128zm-17.1 10.3L224 20.9 21.7 138.3v235.1L224 491.1l202.3-117.7V138.3zM224 37.1l187.7 109.4v218.9L224 474.9 36.3 365.4V146.6L224 37.1zm0 50.9c-92.3 0-166.9 75.1-166.9 168 0 92.6 74.6 167.7 166.9 167.7 92 0 166.9-75.1 166.9-167.7 0-92.9-74.9-168-166.9-168z\"],\n    \"first-order-alt\": [496, 512, [], \"f50a\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm0 488.21C115.34 496.21 7.79 388.66 7.79 256S115.34 15.79 248 15.79 488.21 123.34 488.21 256 380.66 496.21 248 496.21zm0-459.92C126.66 36.29 28.29 134.66 28.29 256S126.66 475.71 248 475.71 467.71 377.34 467.71 256 369.34 36.29 248 36.29zm0 431.22c-116.81 0-211.51-94.69-211.51-211.51S131.19 44.49 248 44.49 459.51 139.19 459.51 256 364.81 467.51 248 467.51zm186.23-162.98a191.613 191.613 0 0 1-20.13 48.69l-74.13-35.88 61.48 54.82a193.515 193.515 0 0 1-37.2 37.29l-54.8-61.57 35.88 74.27a190.944 190.944 0 0 1-48.63 20.23l-27.29-78.47 4.79 82.93c-8.61 1.18-17.4 1.8-26.33 1.8s-17.72-.62-26.33-1.8l4.76-82.46-27.15 78.03a191.365 191.365 0 0 1-48.65-20.2l35.93-74.34-54.87 61.64a193.85 193.85 0 0 1-37.22-37.28l61.59-54.9-74.26 35.93a191.638 191.638 0 0 1-20.14-48.69l77.84-27.11-82.23 4.76c-1.16-8.57-1.78-17.32-1.78-26.21 0-9 .63-17.84 1.82-26.51l82.38 4.77-77.94-27.16a191.726 191.726 0 0 1 20.23-48.67l74.22 35.92-61.52-54.86a193.85 193.85 0 0 1 37.28-37.22l54.76 61.53-35.83-74.17a191.49 191.49 0 0 1 48.65-20.13l26.87 77.25-4.71-81.61c8.61-1.18 17.39-1.8 26.32-1.8s17.71.62 26.32 1.8l-4.74 82.16 27.05-77.76c17.27 4.5 33.6 11.35 48.63 20.17l-35.82 74.12 54.72-61.47a193.13 193.13 0 0 1 37.24 37.23l-61.45 54.77 74.12-35.86a191.515 191.515 0 0 1 20.2 48.65l-77.81 27.1 82.24-4.75c1.19 8.66 1.82 17.5 1.82 26.49 0 8.88-.61 17.63-1.78 26.19l-82.12-4.75 77.72 27.09z\"],\n    \"firstdraft\": [384, 512, [], \"f3a1\", \"M384 192h-64v128H192v128H0v-25.6h166.4v-128h128v-128H384V192zm-25.6 38.4v128h-128v128H64V512h192V384h128V230.4h-25.6zm25.6 192h-89.6V512H320v-64h64v-25.6zM0 0v384h128V256h128V128h128V0H0z\"],\n    \"flickr\": [448, 512, [], \"f16e\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM144.5 319c-35.1 0-63.5-28.4-63.5-63.5s28.4-63.5 63.5-63.5 63.5 28.4 63.5 63.5-28.4 63.5-63.5 63.5zm159 0c-35.1 0-63.5-28.4-63.5-63.5s28.4-63.5 63.5-63.5 63.5 28.4 63.5 63.5-28.4 63.5-63.5 63.5z\"],\n    \"flipboard\": [448, 512, [], \"f44d\", \"M0 32v448h448V32H0zm358.4 179.2h-89.6v89.6h-89.6v89.6H89.6V121.6h268.8v89.6z\"],\n    \"fly\": [384, 512, [], \"f417\", \"M197.8 427.8c12.9 11.7 33.7 33.3 33.2 50.7 0 .8-.1 1.6-.1 2.5-1.8 19.8-18.8 31.1-39.1 31-25-.1-39.9-16.8-38.7-35.8 1-16.2 20.5-36.7 32.4-47.6 2.3-2.1 2.7-2.7 5.6-3.6 3.4 0 3.9.3 6.7 2.8zM331.9 67.3c-16.3-25.7-38.6-40.6-63.3-52.1C243.1 4.5 214-.2 192 0c-44.1 0-71.2 13.2-81.1 17.3C57.3 45.2 26.5 87.2 28 158.6c7.1 82.2 97 176 155.8 233.8 1.7 1.6 4.5 4.5 6.2 5.1l3.3.1c2.1-.7 1.8-.5 3.5-2.1 52.3-49.2 140.7-145.8 155.9-215.7 7-39.2 3.1-72.5-20.8-112.5zM186.8 351.9c-28-51.1-65.2-130.7-69.3-189-3.4-47.5 11.4-131.2 69.3-136.7v325.7zM328.7 180c-16.4 56.8-77.3 128-118.9 170.3C237.6 298.4 275 217 277 158.4c1.6-45.9-9.8-105.8-48-131.4 88.8 18.3 115.5 98.1 99.7 153z\"],\n    \"font-awesome\": [448, 512, [], \"f2b4\", \"M400 32H48A48 48 0 0 0 0 80V432a48 48 0 0 0 48 48H400a48 48 0 0 0 48-48V80A48 48 0 0 0 400 32ZM336 312c-31.6 11.2-41.2 16-59.8 16-31.4 0-43.2-16-74.6-16a80 80 0 0 0-25.6 4V284a85.9 85.9 0 0 1 25.6-4c31.2 0 43.2 16 74.6 16 10.2 0 17.8-1.4 27.8-4.6v-96c-10 3.2-17.6 4.6-27.8 4.6-31.4 0-43.2-16-74.6-16-25.4 0-37.4 10.4-57.6 14.4V352a16 16 0 0 1-32 0V160a16 16 0 0 1 32 0v6.4c20.2-4 32.2-14.4 57.6-14.4 31.2 0 43.2 16 74.6 16 18.6 0 28.2-4.8 59.8-16Z\"],\n    \"font-awesome-alt\": [448, 512, [], \"f35c\", \"M400 32H48A48 48 0 0 0 0 80V432a48 48 0 0 0 48 48H400a48 48 0 0 0 48-48V80A48 48 0 0 0 400 32Zm16 400a16 16 0 0 1-16 16H48a16 16 0 0 1-16-16V80A16 16 0 0 1 48 64H400a16 16 0 0 1 16 16ZM201.6 152c-25.4 0-37.4 10.4-57.6 14.4V160a16 16 0 0 0-32 0V352a16 16 0 0 0 32 0V198.4c20.2-4 32.2-14.4 57.6-14.4 31.4 0 43.2 16 74.6 16 10.2 0 17.8-1.4 27.8-4.6v96c-10 3.2-17.6 4.6-27.8 4.6-31.4 0-43.4-16-74.6-16a85.9 85.9 0 0 0-25.6 4v32a80 80 0 0 1 25.6-4c31.4 0 43.2 16 74.6 16 18.6 0 28.2-4.8 59.8-16V152c-31.6 11.2-41.2 16-59.8 16C244.8 168 232.8 152 201.6 152Z\"],\n    \"font-awesome-flag\": [448, 512, [], \"f425\", \"M448 48V384c-63 23-82 32-119 32-63 0-87-32-150-32-20 0-36 4-51 8V328c15-4 31-8 51-8 63 0 87 32 150 32 20 0 35-3 55-9V135c-20 6-35 9-55 9-63 0-87-32-150-32-51 0-75 21-115 29V448a31.6 31.6 0 0 1-32 32A31.6 31.6 0 0 1 0 448V64A31.6 31.6 0 0 1 32 32 31.6 31.6 0 0 1 64 64V77c40-8 64-29 115-29 63 0 87 32 150 32C366 80 385 71 448 48Z\"],\n    \"font-awesome-logo-full\": [3992, 512, [\"Font Awesome\"], \"f4e6\", \"M1209.7 156.5c-57.8 0-102 43.9-102 99.1 0 56 44.6 99.1 102 99.1 57.4 0 102-43.1 102-99.1C1311.7 200.4 1267.5 156.5 1209.7 156.5Zm0 152.7c-35.1 0-51.8-27.4-51.8-53.2 0-25.8 16.7-53.2 51.8-53.2 35.1 0 51.8 27.8 51.8 53.2C1261.1 281.8 1244.8 309.2 1209.7 309.2Zm962.1-136.1c-4.4-10.9-12.3-16.5-23.5-16.5s-19.1 5.6-23.5 16.5l-59.4 145.8c-7.2 17.7 2.8 27.4 4.4 29a24.6 24.6 0 0 0 17.5 6.8c10.8 0 18.7-6 23.1-18.1l4-10.1h67.7l4 10.1c4.8 12.1 12.3 18.1 23.1 18.1a24.6 24.6 0 0 0 17.5-6.8c10-10.1 6.8-22.6 4.4-29Zm-43 113.6 19.1-56 19.1 56Zm-574.5-130.1c-14.3 0-24.7 10.9-24.7 25.4v76.5l-68.5-85.8c-4.4-5.6-11.6-16.1-25.5-16.1-19.1 0-24.3 17.7-24.3 25.4V329.7c0 14.1 10.4 25.4 24.7 25.4 14.3 0 24.7-10.9 24.7-25.4V252.8l68.9 86.2c4.8 5.6 11.6 16.1 25.5 16.1 19.1 0 23.9-17.3 23.9-25.4V181.9C1579 167.4 1568.6 156.5 1554.3 156.5Zm-554.1 1.6H916.5c-19.9 0-25.1 17.3-25.1 25.4V328.1c0 19.7 16.7 25.4 24.7 25.4 8 0 24.7-5.2 24.7-25.4V285h44.6c12.8 0 22.7-9.3 22.7-22.6 0-17.7-15.5-22.1-22.7-22.1H940.8V203.6h59.4c12.8 0 22.7-9.3 22.7-22.6C1022.9 163 1007.3 158.1 1000.2 158.1Zm815.1 0H1691.7c-7.2 0-22.7 4.4-22.7 22.2 0 13.3 10 22.6 22.7 22.6h37V327.7c0 14.1 10.4 25.4 24.7 25.4 14.3 0 24.7-10.9 24.7-25.4V202.8h37c12.7 0 22.7-9.3 22.7-22.6C1837.9 163 1822.4 158.1 1815.2 158.1Zm1789.5-1.6c-9.6 0-17.5 6-25.1 18.1l-46.6 76.1L3486.4 174.6q-10.8-18.1-25.1-18.1c-19.5 0-24.7 18.1-24.7 25.8V329.7c0 14.1 10.4 25.4 24.7 25.4s24.7-10.9 24.7-25.4V262.8L3510.7 302.7c6.4 10.1 13.9 15.3 22.3 15.3 8.8 0 15.9-5.2 22.3-15.3l24.7-39.9v66.9c0 14.1 10.3 25.4 24.7 25.4 14.3 0 24.7-10.9 24.7-25.4V182.3C3629.4 174.2 3624.6 156.5 3604.7 156.5Zm248.6 149.8h-65.7V272.9h39.4c11.9 0 21.1-8.9 21.1-20.9 0-12.1-9.2-20.9-21.1-20.9h-39.4V204.8h62.1c12.8 0 22.7-9.3 22.7-22.6 0-17.7-15.6-22.2-22.7-22.2h-86.4c-19.9 0-25.1 17.3-25.1 25.4V326.5c0 8.1 5.2 25.4 25.1 25.4h90c12.8 0 22.7-9.3 22.7-22.6C3876 311.2 3860.5 306.3 3853.3 306.3ZM3235 156.5c-57.8 0-102 43.9-102 99.1 0 56 44.6 99.1 102 99.1 57.4 0 102-43.1 102-99.1C3337 200.4 3292.8 156.5 3235 156.5Zm0 152.7c-35.1 0-51.8-27.4-51.8-53.2 0-25.8 16.7-53.2 51.8-53.2 35.1 0 51.8 27.8 51.8 53.2C3286.8 281.8 3270.1 309.2 3235 309.2ZM2550.2 156.5c-11.2 0-19.1 5.6-23.1 16.5l-34.3 94.7-31.5-92.2c-4.4-12.5-12.3-18.9-24.3-18.9-11.9 0-19.9 6.4-24.3 18.9l-31.5 92.2-34.3-95.5q-5.4-15.7-22.7-15.7c-6.8 0-12.3 2.4-17.5 7.3-5.2 5.2-10.8 14.5-4.8 28.6l55.8 145.8c4 11.3 11.6 16.9 23.1 16.9q16.7 0 22.7-16.9l33.5-91.8 33.5 91.8q6 16.9 22.7 16.9c11.2 0 19.1-5.6 23.1-16.9l55.8-145.8c3.6-9.3 4.4-19.3-4.8-28.6A23 23 0 0 0 2550.2 156.5Zm444.2 81-21.9-9.3c-11.9-4.8-16.3-8.5-16.3-15.7q0-12.1 16.7-12.1c12.7 0 19.5 7.7 24.3 10.9 7.2 5.2 18.3 6.8 27.9-2 10.8-10.5 6.8-23.8 1.2-30.6-12.3-14.9-30.3-22.2-53.8-22.2-19.1 0-35.1 5.2-47.4 15.7-12.3 10.5-18.7 24.2-18.7 41.1 0 24.2 15.9 43.5 47.8 57.6l19.5 8.9c15.9 6.8 19.1 9.7 19.1 17.7 0 9.3-6.4 14.1-19.5 14.1-19.1 0-34.7-14.9-36.3-16.1-10.8-7.3-21.5-2-26.3 2.8-6.8 6.4-12.7 20.9 3.2 36.2 6.8 6.4 15.5 11.7 26.7 15.3a94.6 94.6 0 0 0 32.7 5.6c19.9 0 36.7-5.2 49.8-16.1 13.1-10.9 19.5-25.4 19.5-43.5q0-20.5-12-33.8C3022.7 253.2 3010.7 244.3 2994.4 237.5Zm-206.4 68.9h-65.7V272.9h39.4c12 0 21.1-8.9 21.1-20.9 0-12.1-9.2-20.9-21.1-20.9h-39.4V204.8h62.1c12.8 0 22.7-9.3 22.7-22.6 0-17.7-15.5-22.2-22.7-22.2h-86.4c-19.9 0-25.1 17.3-25.1 25.4V326.5c0 8.1 5.2 25.4 25.1 25.4h90c12.7 0 22.7-9.3 22.7-22.6C2810.8 311.2 2795.2 306.3 2788 306.3ZM178.3 49.1c-50.5 0-74.4 20.7-114.6 28.7V65A31.8 31.8 0 1 0 0 65V447a31.8 31.8 0 0 0 63.7 0V141.4c40.2-8 64.1-28.7 114.6-28.7 62.5 0 86 31.8 148.4 31.8 20.3 0 35.4-2.8 55.3-9.2v191c-19.9 6.4-35 9.2-55.3 9.2-62.5 0-86.4-31.8-148.4-31.8-20.3 0-36.2 3.6-50.9 8V375.4a159.1 159.1 0 0 1 50.9-8c62.5 0 86 31.8 148.4 31.8 37 0 56.1-9.6 119-31.8V49.1C382.8 71.4 363.7 80.9 326.7 80.9 264.2 80.9 240.4 49.1 178.3 49.1Z\"],\n    \"fonticons\": [448, 512, [], \"f280\", \"M0 32v448h448V32zm187 140.9c-18.4 0-19 9.9-19 27.4v23.3c0 2.4-3.5 4.4-.6 4.4h67.4l-11.1 37.3H168v112.9c0 5.8-2 6.7 3.2 7.3l43.5 4.1v25.1H84V389l21.3-2c5.2-.6 6.7-2.3 6.7-7.9V267.7c0-2.3-2.9-2.3-5.8-2.3H84V228h28v-21c0-49.6 26.5-70 77.3-70 34.1 0 64.7 8.2 64.7 52.8l-50.7 6.1c.3-18.7-4.4-23-16.3-23zm74.3 241.8v-25.1l20.4-2.6c5.2-.6 7.6-1.7 7.6-7.3V271.8c0-4.1-2.9-6.7-6.7-7.9l-24.2-6.4 6.7-29.5h80.2v151.7c0 5.8-2.6 6.4 2.9 7.3l15.7 2.6v25.1zm80.8-255.5l9 33.2-7.3 7.3-31.2-16.6-31.2 16.6-7.3-7.3 9-33.2-21.8-24.2 3.5-9.6h27.7l15.5-28h9.3l15.5 28h27.7l3.5 9.6z\"],\n    \"fonticons-fi\": [384, 512, [], \"f3a2\", \"M114.4 224h92.4l-15.2 51.2h-76.4V433c0 8-2.8 9.2 4.4 10l59.6 5.6V483H0v-35.2l29.2-2.8c7.2-.8 9.2-3.2 9.2-10.8V278.4c0-3.2-4-3.2-8-3.2H0V224h38.4v-28.8c0-68 36.4-96 106-96 46.8 0 88.8 11.2 88.8 72.4l-69.6 8.4c.4-25.6-6-31.6-22.4-31.6-25.2 0-26 13.6-26 37.6v32c0 3.2-4.8 6-.8 6zM384 483H243.2v-34.4l28-3.6c7.2-.8 10.4-2.4 10.4-10V287c0-5.6-4-9.2-9.2-10.8l-33.2-8.8 9.2-40.4h110v208c0 8-3.6 8.8 4 10l21.6 3.6V483zm-30-347.2l12.4 45.6-10 10-42.8-22.8-42.8 22.8-10-10 12.4-45.6-30-36.4 4.8-10h38L307.2 51H320l21.2 38.4h38l4.8 13.2-30 33.2z\"],\n    \"fort-awesome\": [512, 512, [], \"f286\", \"M489.2 287.9h-27.4c-2.6 0-4.6 2-4.6 4.6v32h-36.6V146.2c0-2.6-2-4.6-4.6-4.6h-27.4c-2.6 0-4.6 2-4.6 4.6v32h-36.6v-32c0-2.6-2-4.6-4.6-4.6h-27.4c-2.6 0-4.6 2-4.6 4.6v32h-36.6v-32c0-6-8-4.6-11.7-4.6v-38c8.3-2 17.1-3.4 25.7-3.4 10.9 0 20.9 4.3 31.4 4.3 4.6 0 27.7-1.1 27.7-8v-60c0-2.6-2-4.6-4.6-4.6-5.1 0-15.1 4.3-24 4.3-9.7 0-20.9-4.3-32.6-4.3-8 0-16 1.1-23.7 2.9v-4.9c5.4-2.6 9.1-8.3 9.1-14.3 0-20.7-31.4-20.8-31.4 0 0 6 3.7 11.7 9.1 14.3v111.7c-3.7 0-11.7-1.4-11.7 4.6v32h-36.6v-32c0-2.6-2-4.6-4.6-4.6h-27.4c-2.6 0-4.6 2-4.6 4.6v32H128v-32c0-2.6-2-4.6-4.6-4.6H96c-2.6 0-4.6 2-4.6 4.6v178.3H54.8v-32c0-2.6-2-4.6-4.6-4.6H22.8c-2.6 0-4.6 2-4.6 4.6V512h182.9v-96c0-72.6 109.7-72.6 109.7 0v96h182.9V292.5c.1-2.6-1.9-4.6-4.5-4.6zm-288.1-4.5c0 2.6-2 4.6-4.6 4.6h-27.4c-2.6 0-4.6-2-4.6-4.6v-64c0-2.6 2-4.6 4.6-4.6h27.4c2.6 0 4.6 2 4.6 4.6v64zm146.4 0c0 2.6-2 4.6-4.6 4.6h-27.4c-2.6 0-4.6-2-4.6-4.6v-64c0-2.6 2-4.6 4.6-4.6h27.4c2.6 0 4.6 2 4.6 4.6v64z\"],\n    \"fort-awesome-alt\": [512, 512, [], \"f3a3\", \"M208 237.4h-22.2c-2.1 0-3.7 1.6-3.7 3.7v51.7c0 2.1 1.6 3.7 3.7 3.7H208c2.1 0 3.7-1.6 3.7-3.7v-51.7c0-2.1-1.6-3.7-3.7-3.7zm118.2 0H304c-2.1 0-3.7 1.6-3.7 3.7v51.7c0 2.1 1.6 3.7 3.7 3.7h22.2c2.1 0 3.7-1.6 3.7-3.7v-51.7c-.1-2.1-1.7-3.7-3.7-3.7zm132-125.1c-2.3-3.2-4.6-6.4-7.1-9.5-9.8-12.5-20.8-24-32.8-34.4-4.5-3.9-9.1-7.6-13.9-11.2-1.6-1.2-3.2-2.3-4.8-3.5C372 34.1 340.3 20 306 13c-16.2-3.3-32.9-5-50-5s-33.9 1.7-50 5c-34.3 7.1-66 21.2-93.3 40.8-1.6 1.1-3.2 2.3-4.8 3.5-4.8 3.6-9.4 7.3-13.9 11.2-3 2.6-5.9 5.3-8.8 8s-5.7 5.5-8.4 8.4c-5.5 5.7-10.7 11.8-15.6 18-2.4 3.1-4.8 6.3-7.1 9.5C25.2 153 8.3 202.5 8.3 256c0 2 .1 4 .1 6 .1.7.1 1.3.1 2 .1 1.3.1 2.7.2 4 0 .8.1 1.5.1 2.3 0 1.3.1 2.5.2 3.7.1.8.1 1.6.2 2.4.1 1.1.2 2.3.3 3.5 0 .8.1 1.6.2 2.4.1 1.2.3 2.4.4 3.6.1.8.2 1.5.3 2.3.1 1.3.3 2.6.5 3.9.1.6.2 1.3.3 1.9l.9 5.7c.1.6.2 1.1.3 1.7.3 1.3.5 2.7.8 4 .2.8.3 1.6.5 2.4.2 1 .5 2.1.7 3.2.2.9.4 1.7.6 2.6.2 1 .4 2 .7 3 .2.9.5 1.8.7 2.7.3 1 .5 1.9.8 2.9.3.9.5 1.8.8 2.7.2.9.5 1.9.8 2.8s.5 1.8.8 2.7c.3 1 .6 1.9.9 2.8.6 1.6 1.1 3.3 1.7 4.9.4 1 .7 1.9 1 2.8.3 1 .7 2 1.1 3 .3.8.6 1.5.9 2.3l1.2 3c.3.7.6 1.5.9 2.2.4 1 .9 2 1.3 3l.9 2.1c.5 1 .9 2 1.4 3 .3.7.6 1.3.9 2 .5 1 1 2.1 1.5 3.1.2.6.5 1.1.8 1.7.6 1.1 1.1 2.2 1.7 3.3.1.2.2.3.3.5 2.2 4.1 4.4 8.2 6.8 12.2.2.4.5.8.7 1.2.7 1.1 1.3 2.2 2 3.3.3.5.6.9.9 1.4.6 1.1 1.3 2.1 2 3.2.3.5.6.9.9 1.4.7 1.1 1.4 2.1 2.1 3.2.2.4.5.8.8 1.2.7 1.1 1.5 2.2 2.3 3.3.2.2.3.5.5.7 37.5 51.7 94.4 88.5 160 99.4.9.1 1.7.3 2.6.4 1 .2 2.1.4 3.1.5s1.9.3 2.8.4c1 .2 2 .3 3 .4.9.1 1.9.2 2.9.3s1.9.2 2.9.3 2.1.2 3.1.3c.9.1 1.8.1 2.7.2 1.1.1 2.3.1 3.4.2.8 0 1.7.1 2.5.1 1.3 0 2.6.1 3.9.1.7.1 1.4.1 2.1.1 2 .1 4 .1 6 .1s4-.1 6-.1c.7 0 1.4-.1 2.1-.1 1.3 0 2.6 0 3.9-.1.8 0 1.7-.1 2.5-.1 1.1-.1 2.3-.1 3.4-.2.9 0 1.8-.1 2.7-.2 1-.1 2.1-.2 3.1-.3s1.9-.2 2.9-.3c.9-.1 1.9-.2 2.9-.3s2-.3 3-.4 1.9-.3 2.8-.4c1-.2 2.1-.3 3.1-.5.9-.1 1.7-.3 2.6-.4 65.6-11 122.5-47.7 160.1-102.4.2-.2.3-.5.5-.7.8-1.1 1.5-2.2 2.3-3.3.2-.4.5-.8.8-1.2.7-1.1 1.4-2.1 2.1-3.2.3-.5.6-.9.9-1.4.6-1.1 1.3-2.1 2-3.2.3-.5.6-.9.9-1.4.7-1.1 1.3-2.2 2-3.3.2-.4.5-.8.7-1.2 2.4-4 4.6-8.1 6.8-12.2.1-.2.2-.3.3-.5.6-1.1 1.1-2.2 1.7-3.3.2-.6.5-1.1.8-1.7.5-1 1-2.1 1.5-3.1.3-.7.6-1.3.9-2 .5-1 1-2 1.4-3l.9-2.1c.5-1 .9-2 1.3-3 .3-.7.6-1.5.9-2.2l1.2-3c.3-.8.6-1.5.9-2.3.4-1 .7-2 1.1-3s.7-1.9 1-2.8c.6-1.6 1.2-3.3 1.7-4.9.3-1 .6-1.9.9-2.8s.5-1.8.8-2.7c.2-.9.5-1.9.8-2.8s.6-1.8.8-2.7c.3-1 .5-1.9.8-2.9.2-.9.5-1.8.7-2.7.2-1 .5-2 .7-3 .2-.9.4-1.7.6-2.6.2-1 .5-2.1.7-3.2.2-.8.3-1.6.5-2.4.3-1.3.6-2.7.8-4 .1-.6.2-1.1.3-1.7l.9-5.7c.1-.6.2-1.3.3-1.9.1-1.3.3-2.6.5-3.9.1-.8.2-1.5.3-2.3.1-1.2.3-2.4.4-3.6 0-.8.1-1.6.2-2.4.1-1.1.2-2.3.3-3.5.1-.8.1-1.6.2-2.4.1 1.7.1.5.2-.7 0-.8.1-1.5.1-2.3.1-1.3.2-2.7.2-4 .1-.7.1-1.3.1-2 .1-2 .1-4 .1-6 0-53.5-16.9-103-45.8-143.7zM448 371.5c-9.4 15.5-20.6 29.9-33.6 42.9-20.6 20.6-44.5 36.7-71.2 48-13.9 5.8-28.2 10.3-42.9 13.2v-75.8c0-58.6-88.6-58.6-88.6 0v75.8c-14.7-2.9-29-7.3-42.9-13.2-26.7-11.3-50.6-27.4-71.2-48-13-13-24.2-27.4-33.6-42.9v-71.3c0-2.1 1.6-3.7 3.7-3.7h22.1c2.1 0 3.7 1.6 3.7 3.7V326h29.6V182c0-2.1 1.6-3.7 3.7-3.7h22.1c2.1 0 3.7 1.6 3.7 3.7v25.9h29.5V182c0-2.1 1.6-3.7 3.7-3.7H208c2.1 0 3.7 1.6 3.7 3.7v25.9h29.5V182c0-4.8 6.5-3.7 9.5-3.7V88.1c-4.4-2-7.4-6.7-7.4-11.5 0-16.8 25.4-16.8 25.4 0 0 4.8-3 9.4-7.4 11.5V92c6.3-1.4 12.7-2.3 19.2-2.3 9.4 0 18.4 3.5 26.3 3.5 7.2 0 15.2-3.5 19.4-3.5 2.1 0 3.7 1.6 3.7 3.7v48.4c0 5.6-18.7 6.5-22.4 6.5-8.6 0-16.6-3.5-25.4-3.5-7 0-14.1 1.2-20.8 2.8v30.7c3 0 9.5-1.1 9.5 3.7v25.9h29.5V182c0-2.1 1.6-3.7 3.7-3.7h22.2c2.1 0 3.7 1.6 3.7 3.7v25.9h29.5V182c0-2.1 1.6-3.7 3.7-3.7h22.1c2.1 0 3.7 1.6 3.7 3.7v144h29.5v-25.8c0-2.1 1.6-3.7 3.7-3.7h22.2c2.1 0 3.7 1.6 3.7 3.7z\"],\n    \"forumbee\": [448, 512, [], \"f211\", \"M5.8 309.7C2 292.7 0 275.5 0 258.3 0 135 99.8 35 223.1 35c16.6 0 33.3 2 49.3 5.5C149 87.5 51.9 186 5.8 309.7zm392.9-189.2C385 103 369 87.8 350.9 75.2c-149.6 44.3-266.3 162.1-309.7 312 12.5 18.1 28 35.6 45.2 49 43.1-151.3 161.2-271.7 312.3-315.7zm15.8 252.7c15.2-25.1 25.4-53.7 29.5-82.8-79.4 42.9-145 110.6-187.6 190.3 30-4.4 58.9-15.3 84.6-31.3 35 13.1 70.9 24.3 107 33.6-9.3-36.5-20.4-74.5-33.5-109.8zm29.7-145.5c-2.6-19.5-7.9-38.7-15.8-56.8C290.5 216.7 182 327.5 137.1 466c18.1 7.6 37 12.5 56.6 15.2C240 367.1 330.5 274.4 444.2 227.7z\"],\n    \"foursquare\": [368, 512, [], \"f180\", \"M323.1 3H49.9C12.4 3 0 31.3 0 49.1v433.8c0 20.3 12.1 27.7 18.2 30.1 6.2 2.5 22.8 4.6 32.9-7.1C180 356.5 182.2 354 182.2 354c3.1-3.4 3.4-3.1 6.8-3.1h83.4c35.1 0 40.6-25.2 44.3-39.7l48.6-243C373.8 25.8 363.1 3 323.1 3zm-16.3 73.8l-11.4 59.7c-1.2 6.5-9.5 13.2-16.9 13.2H172.1c-12 0-20.6 8.3-20.6 20.3v13c0 12 8.6 20.6 20.6 20.6h90.4c8.3 0 16.6 9.2 14.8 18.2-1.8 8.9-10.5 53.8-11.4 58.8-.9 4.9-6.8 13.5-16.9 13.5h-73.5c-13.5 0-17.2 1.8-26.5 12.6 0 0-8.9 11.4-89.5 108.3-.9.9-1.8.6-1.8-.3V75.9c0-7.7 6.8-16.6 16.6-16.6h219c8.2 0 15.6 7.7 13.5 17.5z\"],\n    \"free-code-camp\": [576, 512, [], \"f2c5\", \"M97.22,96.21c10.36-10.65,16-17.12,16-21.9,0-2.76-1.92-5.51-3.83-7.42A14.81,14.81,0,0,0,101,64.05c-8.48,0-20.92,8.79-35.84,25.69C23.68,137,2.51,182.81,3.37,250.34s17.47,117,54.06,161.87C76.22,435.86,90.62,448,100.9,448a13.55,13.55,0,0,0,8.37-3.84c1.91-2.76,3.81-5.63,3.81-8.38,0-5.63-3.86-12.2-13.2-20.55-44.45-42.33-67.32-97-67.48-165C32.25,188.8,54,137.83,97.22,96.21ZM239.47,420.07c.58.37.91.55.91.55Zm93.79.55.17-.13C333.24,420.62,333.17,420.67,333.26,420.62Zm3.13-158.18c-16.24-4.15,50.41-82.89-68.05-177.17,0,0,15.54,49.38-62.83,159.57-74.27,104.35,23.46,168.73,34,175.23-6.73-4.35-47.4-35.7,9.55-128.64,11-18.3,25.53-34.87,43.5-72.16,0,0,15.91,22.45,7.6,71.13C287.7,364,354,342.91,355,343.94c22.75,26.78-17.72,73.51-21.58,76.55,5.49-3.65,117.71-78,33-188.1C360.43,238.4,352.62,266.59,336.39,262.44ZM510.88,89.69C496,72.79,483.52,64,475,64a14.81,14.81,0,0,0-8.39,2.84c-1.91,1.91-3.83,4.66-3.83,7.42,0,4.78,5.6,11.26,16,21.9,43.23,41.61,65,92.59,64.82,154.06-.16,68-23,122.63-67.48,165-9.34,8.35-13.18,14.92-13.2,20.55,0,2.75,1.9,5.62,3.81,8.38A13.61,13.61,0,0,0,475.1,448c10.28,0,24.68-12.13,43.47-35.79,36.59-44.85,53.14-94.38,54.06-161.87S552.32,137,510.88,89.69Z\"],\n    \"freebsd\": [448, 512, [], \"f3a4\", \"M303.7 96.2c11.1-11.1 115.5-77 139.2-53.2 23.7 23.7-42.1 128.1-53.2 139.2-11.1 11.1-39.4.9-63.1-22.9-23.8-23.7-34.1-52-22.9-63.1zM109.9 68.1C73.6 47.5 22 24.6 5.6 41.1c-16.6 16.6 7.1 69.4 27.9 105.7 18.5-32.2 44.8-59.3 76.4-78.7zM406.7 174c3.3 11.3 2.7 20.7-2.7 26.1-20.3 20.3-87.5-27-109.3-70.1-18-32.3-11.1-53.4 14.9-48.7 5.7-3.6 12.3-7.6 19.6-11.6-29.8-15.5-63.6-24.3-99.5-24.3-119.1 0-215.6 96.5-215.6 215.6 0 119 96.5 215.6 215.6 215.6S445.3 380.1 445.3 261c0-38.4-10.1-74.5-27.7-105.8-3.9 7-7.6 13.3-10.9 18.8z\"],\n    \"fulcrum\": [320, 512, [], \"f50b\", \"M95.75 164.14l-35.38 43.55L25 164.14l35.38-43.55zM144.23 0l-20.54 198.18L72.72 256l51 57.82L144.23 512V300.89L103.15 256l41.08-44.89zm79.67 164.14l35.38 43.55 35.38-43.55-35.38-43.55zm-48.48 47L216.5 256l-41.08 44.89V512L196 313.82 247 256l-51-57.82L175.42 0z\"],\n    \"galactic-republic\": [496, 512, [], \"f50c\", \"M248 504C111.25 504 0 392.75 0 256S111.25 8 248 8s248 111.25 248 248-111.25 248-248 248zm0-479.47C120.37 24.53 16.53 128.37 16.53 256S120.37 487.47 248 487.47 479.47 383.63 479.47 256 375.63 24.53 248 24.53zm27.62 21.81v24.62a185.933 185.933 0 0 1 83.57 34.54l17.39-17.36c-28.75-22.06-63.3-36.89-100.96-41.8zm-55.37.07c-37.64 4.94-72.16 19.8-100.88 41.85l17.28 17.36h.08c24.07-17.84 52.55-30.06 83.52-34.67V46.41zm12.25 50.17v82.87c-10.04 2.03-19.42 5.94-27.67 11.42l-58.62-58.59-21.93 21.93 58.67 58.67c-5.47 8.23-9.45 17.59-11.47 27.62h-82.9v31h82.9c2.02 10.02 6.01 19.31 11.47 27.54l-58.67 58.69 21.93 21.93 58.62-58.62a77.873 77.873 0 0 0 27.67 11.47v82.9h31v-82.9c10.05-2.03 19.37-6.06 27.62-11.55l58.67 58.69 21.93-21.93-58.67-58.69c5.46-8.23 9.47-17.52 11.5-27.54h82.87v-31h-82.87c-2.02-10.02-6.03-19.38-11.5-27.62l58.67-58.67-21.93-21.93-58.67 58.67c-8.25-5.49-17.57-9.47-27.62-11.5V96.58h-31zm183.24 30.72l-17.36 17.36a186.337 186.337 0 0 1 34.67 83.67h24.62c-4.95-37.69-19.83-72.29-41.93-101.03zm-335.55.13c-22.06 28.72-36.91 63.26-41.85 100.91h24.65c4.6-30.96 16.76-59.45 34.59-83.52l-17.39-17.39zM38.34 283.67c4.92 37.64 19.75 72.18 41.8 100.9l17.36-17.39c-17.81-24.07-29.92-52.57-34.51-83.52H38.34zm394.7 0c-4.61 30.99-16.8 59.5-34.67 83.6l17.36 17.36c22.08-28.74 36.98-63.29 41.93-100.96h-24.62zM136.66 406.38l-17.36 17.36c28.73 22.09 63.3 36.98 100.96 41.93v-24.64c-30.99-4.63-59.53-16.79-83.6-34.65zm222.53.05c-24.09 17.84-52.58 30.08-83.57 34.67v24.57c37.67-4.92 72.21-19.79 100.96-41.85l-17.31-17.39h-.08z\"],\n    \"galactic-senate\": [512, 512, [], \"f50d\", \"M249.86 33.48v26.07C236.28 80.17 226 168.14 225.39 274.9c11.74-15.62 19.13-33.33 19.13-48.24v-16.88c-.03-5.32.75-10.53 2.19-15.65.65-2.14 1.39-4.08 2.62-5.82 1.23-1.75 3.43-3.79 6.68-3.79 3.24 0 5.45 2.05 6.68 3.79 1.23 1.75 1.97 3.68 2.62 5.82 1.44 5.12 2.22 10.33 2.19 15.65v16.88c0 14.91 7.39 32.62 19.13 48.24-.63-106.76-10.91-194.73-24.49-215.35V33.48h-12.28zm-26.34 147.77c-9.52 2.15-18.7 5.19-27.46 9.08 8.9 16.12 9.76 32.64 1.71 37.29-8 4.62-21.85-4.23-31.36-19.82-11.58 8.79-21.88 19.32-30.56 31.09 14.73 9.62 22.89 22.92 18.32 30.66-4.54 7.7-20.03 7.14-35.47-.96-5.78 13.25-9.75 27.51-11.65 42.42 9.68.18 18.67 2.38 26.18 6.04 17.78-.3 32.77-1.96 40.49-4.22 5.55-26.35 23.02-48.23 46.32-59.51.73-25.55 1.88-49.67 3.48-72.07zm64.96 0c1.59 22.4 2.75 46.52 3.47 72.07 23.29 11.28 40.77 33.16 46.32 59.51 7.72 2.26 22.71 3.92 40.49 4.22 7.51-3.66 16.5-5.85 26.18-6.04-1.9-14.91-5.86-29.17-11.65-42.42-15.44 8.1-30.93 8.66-35.47.96-4.57-7.74 3.6-21.05 18.32-30.66-8.68-11.77-18.98-22.3-30.56-31.09-9.51 15.59-23.36 24.44-31.36 19.82-8.05-4.65-7.19-21.16 1.71-37.29a147.49 147.49 0 0 0-27.45-9.08zm-32.48 8.6c-3.23 0-5.86 8.81-6.09 19.93h-.05v16.88c0 41.42-49.01 95.04-93.49 95.04-52 0-122.75-1.45-156.37 29.17v2.51c9.42 17.12 20.58 33.17 33.18 47.97C45.7 380.26 84.77 360.4 141.2 360c45.68 1.02 79.03 20.33 90.76 40.87.01.01-.01.04 0 .05 7.67 2.14 15.85 3.23 24.04 3.21 8.19.02 16.37-1.07 24.04-3.21.01-.01-.01-.04 0-.05 11.74-20.54 45.08-39.85 90.76-40.87 56.43.39 95.49 20.26 108.02 41.35 12.6-14.8 23.76-30.86 33.18-47.97v-2.51c-33.61-30.62-104.37-29.17-156.37-29.17-44.48 0-93.49-53.62-93.49-95.04v-16.88h-.05c-.23-11.12-2.86-19.93-6.09-19.93zm0 96.59c22.42 0 40.6 18.18 40.6 40.6s-18.18 40.65-40.6 40.65-40.6-18.23-40.6-40.65c0-22.42 18.18-40.6 40.6-40.6zm0 7.64c-18.19 0-32.96 14.77-32.96 32.96S237.81 360 256 360s32.96-14.77 32.96-32.96-14.77-32.96-32.96-32.96zm0 6.14c14.81 0 26.82 12.01 26.82 26.82s-12.01 26.82-26.82 26.82-26.82-12.01-26.82-26.82 12.01-26.82 26.82-26.82zm-114.8 66.67c-10.19.07-21.6.36-30.5 1.66.43 4.42 1.51 18.63 7.11 29.76 9.11-2.56 18.36-3.9 27.62-3.9 41.28.94 71.48 34.35 78.26 74.47l.11 4.7c10.4 1.91 21.19 2.94 32.21 2.94 11.03 0 21.81-1.02 32.21-2.94l.11-4.7c6.78-40.12 36.98-73.53 78.26-74.47 9.26 0 18.51 1.34 27.62 3.9 5.6-11.13 6.68-25.34 7.11-29.76-8.9-1.3-20.32-1.58-30.5-1.66-18.76.42-35.19 4.17-48.61 9.67-12.54 16.03-29.16 30.03-49.58 33.07-.09.02-.17.04-.27.05-.05.01-.11.04-.16.05-5.24 1.07-10.63 1.6-16.19 1.6-5.55 0-10.95-.53-16.19-1.6-.05-.01-.11-.04-.16-.05-.1-.02-.17-.04-.27-.05-20.42-3.03-37.03-17.04-49.58-33.07-13.42-5.49-29.86-9.25-48.61-9.67z\"],\n    \"get-pocket\": [448, 512, [], \"f265\", \"M407.6 64h-367C18.5 64 0 82.5 0 104.6v135.2C0 364.5 99.7 464 224.2 464c124 0 223.8-99.5 223.8-224.2V104.6c0-22.4-17.7-40.6-40.4-40.6zm-162 268.5c-12.4 11.8-31.4 11.1-42.4 0C89.5 223.6 88.3 227.4 88.3 209.3c0-16.9 13.8-30.7 30.7-30.7 17 0 16.1 3.8 105.2 89.3 90.6-86.9 88.6-89.3 105.5-89.3 16.9 0 30.7 13.8 30.7 30.7 0 17.8-2.9 15.7-114.8 123.2z\"],\n    \"gg\": [512, 512, [], \"f260\", \"M179.2 230.4l102.4 102.4-102.4 102.4L0 256 179.2 76.8l44.8 44.8-25.6 25.6-19.2-19.2-128 128 128 128 51.5-51.5-77.1-76.5 25.6-25.6zM332.8 76.8L230.4 179.2l102.4 102.4 25.6-25.6-77.1-76.5 51.5-51.5 128 128-128 128-19.2-19.2-25.6 25.6 44.8 44.8L512 256 332.8 76.8z\"],\n    \"gg-circle\": [512, 512, [], \"f261\", \"M257 8C120 8 9 119 9 256s111 248 248 248 248-111 248-248S394 8 257 8zm-49.5 374.8L81.8 257.1l125.7-125.7 35.2 35.4-24.2 24.2-11.1-11.1-77.2 77.2 77.2 77.2 26.6-26.6-53.1-52.9 24.4-24.4 77.2 77.2-75 75.2zm99-2.2l-35.2-35.2 24.1-24.4 11.1 11.1 77.2-77.2-77.2-77.2-26.5 26.5 53.1 52.9-24.4 24.4-77.2-77.2 75-75L432.2 255 306.5 380.6z\"],\n    \"git\": [512, 512, [], \"f1d3\", \"M216.29 158.39H137C97 147.9 6.51 150.63 6.51 233.18c0 30.09 15 51.23 35 61-25.1 23-37 33.85-37 49.21 0 11 4.47 21.14 17.89 26.81C8.13 383.61 0 393.35 0 411.65c0 32.11 28.05 50.82 101.63 50.82 70.75 0 111.79-26.42 111.79-73.18 0-58.66-45.16-56.5-151.63-63l13.43-21.55c27.27 7.58 118.7 10 118.7-67.89 0-18.7-7.73-31.71-15-41.07l37.41-2.84zm-63.42 241.9c0 32.06-104.89 32.1-104.89 2.43 0-8.14 5.27-15 10.57-21.54 77.71 5.3 94.32 3.37 94.32 19.11zm-50.81-134.58c-52.8 0-50.46-71.16 1.2-71.16 49.54 0 50.82 71.16-1.2 71.16zm133.3 100.51v-32.1c26.75-3.66 27.24-2 27.24-11V203.61c0-8.5-2.05-7.38-27.24-16.26l4.47-32.92H324v168.71c0 6.51.4 7.32 6.51 8.14l20.73 2.84v32.1zm52.45-244.31c-23.17 0-36.59-13.43-36.59-36.61s13.42-35.77 36.59-35.77c23.58 0 37 12.62 37 35.77s-13.42 36.61-37 36.61zM512 350.46c-17.49 8.53-43.1 16.26-66.28 16.26-48.38 0-66.67-19.5-66.67-65.46V194.75c0-5.42 1.05-4.06-31.71-4.06V154.5c35.78-4.07 50-22 54.47-66.27h38.63c0 65.83-1.34 61.81 3.26 61.81H501v40.65h-60.56v97.15c0 6.92-4.92 51.41 60.57 26.84z\"],\n    \"git-alt\": [448, 512, [], \"f841\", \"M439.55 236.05L244 40.45a28.87 28.87 0 0 0-40.81 0l-40.66 40.63 51.52 51.52c27.06-9.14 52.68 16.77 43.39 43.68l49.66 49.66c34.23-11.8 61.18 31 35.47 56.69-26.49 26.49-70.21-2.87-56-37.34L240.22 199v121.85c25.3 12.54 22.26 41.85 9.08 55a34.34 34.34 0 0 1-48.55 0c-17.57-17.6-11.07-46.91 11.25-56v-123c-20.8-8.51-24.6-30.74-18.64-45L142.57 101 8.45 235.14a28.86 28.86 0 0 0 0 40.81l195.61 195.6a28.86 28.86 0 0 0 40.8 0l194.69-194.69a28.86 28.86 0 0 0 0-40.81z\"],\n    \"git-square\": [448, 512, [], \"f1d2\", \"M100.59 334.24c48.57 3.31 58.95 2.11 58.95 11.94 0 20-65.55 20.06-65.55 1.52.01-5.09 3.29-9.4 6.6-13.46zm27.95-116.64c-32.29 0-33.75 44.47-.75 44.47 32.51 0 31.71-44.47.75-44.47zM448 80v352a48 48 0 0 1-48 48H48a48 48 0 0 1-48-48V80a48 48 0 0 1 48-48h352a48 48 0 0 1 48 48zm-227 69.31c0 14.49 8.38 22.88 22.86 22.88 14.74 0 23.13-8.39 23.13-22.88S258.62 127 243.88 127c-14.48 0-22.88 7.84-22.88 22.31zM199.18 195h-49.55c-25-6.55-81.56-4.85-81.56 46.75 0 18.8 9.4 32 21.85 38.11C74.23 294.23 66.8 301 66.8 310.6c0 6.87 2.79 13.22 11.18 16.76-8.9 8.4-14 14.48-14 25.92C64 373.35 81.53 385 127.52 385c44.22 0 69.87-16.51 69.87-45.73 0-36.67-28.23-35.32-94.77-39.38l8.38-13.43c17 4.74 74.19 6.23 74.19-42.43 0-11.69-4.83-19.82-9.4-25.67l23.38-1.78zm84.34 109.84l-13-1.78c-3.82-.51-4.07-1-4.07-5.09V192.52h-52.6l-2.79 20.57c15.75 5.55 17 4.86 17 10.17V298c0 5.62-.31 4.58-17 6.87v20.06h72.42zM384 315l-6.87-22.37c-40.93 15.37-37.85-12.41-37.85-16.73v-60.72h37.85v-25.41h-35.82c-2.87 0-2 2.52-2-38.63h-24.18c-2.79 27.7-11.68 38.88-34 41.42v22.62c20.47 0 19.82-.85 19.82 2.54v66.57c0 28.72 11.43 40.91 41.67 40.91 14.45 0 30.45-4.83 41.38-10.2z\"],\n    \"github\": [496, 512, [], \"f09b\", \"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"],\n    \"github-alt\": [480, 512, [], \"f113\", \"M186.1 328.7c0 20.9-10.9 55.1-36.7 55.1s-36.7-34.2-36.7-55.1 10.9-55.1 36.7-55.1 36.7 34.2 36.7 55.1zM480 278.2c0 31.9-3.2 65.7-17.5 95-37.9 76.6-142.1 74.8-216.7 74.8-75.8 0-186.2 2.7-225.6-74.8-14.6-29-20.2-63.1-20.2-95 0-41.9 13.9-81.5 41.5-113.6-5.2-15.8-7.7-32.4-7.7-48.8 0-21.5 4.9-32.3 14.6-51.8 45.3 0 74.3 9 108.8 36 29-6.9 58.8-10 88.7-10 27 0 54.2 2.9 80.4 9.2 34-26.7 63-35.2 107.8-35.2 9.8 19.5 14.6 30.3 14.6 51.8 0 16.4-2.6 32.7-7.7 48.2 27.5 32.4 39 72.3 39 114.2zm-64.3 50.5c0-43.9-26.7-82.6-73.5-82.6-18.9 0-37 3.4-56 6-14.9 2.3-29.8 3.2-45.1 3.2-15.2 0-30.1-.9-45.1-3.2-18.7-2.6-37-6-56-6-46.8 0-73.5 38.7-73.5 82.6 0 87.8 80.4 101.3 150.4 101.3h48.2c70.3 0 150.6-13.4 150.6-101.3zm-82.6-55.1c-25.8 0-36.7 34.2-36.7 55.1s10.9 55.1 36.7 55.1 36.7-34.2 36.7-55.1-10.9-55.1-36.7-55.1z\"],\n    \"github-square\": [448, 512, [], \"f092\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM277.3 415.7c-8.4 1.5-11.5-3.7-11.5-8 0-5.4.2-33 .2-55.3 0-15.6-5.2-25.5-11.3-30.7 37-4.1 76-9.2 76-73.1 0-18.2-6.5-27.3-17.1-39 1.7-4.3 7.4-22-1.7-45-13.9-4.3-45.7 17.9-45.7 17.9-13.2-3.7-27.5-5.6-41.6-5.6-14.1 0-28.4 1.9-41.6 5.6 0 0-31.8-22.2-45.7-17.9-9.1 22.9-3.5 40.6-1.7 45-10.6 11.7-15.6 20.8-15.6 39 0 63.6 37.3 69 74.3 73.1-4.8 4.3-9.1 11.7-10.6 22.3-9.5 4.3-33.8 11.7-48.3-13.9-9.1-15.8-25.5-17.1-25.5-17.1-16.2-.2-1.1 10.2-1.1 10.2 10.8 5 18.4 24.2 18.4 24.2 9.7 29.7 56.1 19.7 56.1 19.7 0 13.9.2 36.5.2 40.6 0 4.3-3 9.5-11.5 8-66-22.1-112.2-84.9-112.2-158.3 0-91.8 70.2-161.5 162-161.5S388 165.6 388 257.4c.1 73.4-44.7 136.3-110.7 158.3zm-98.1-61.1c-1.9.4-3.7-.4-3.9-1.7-.2-1.5 1.1-2.8 3-3.2 1.9-.2 3.7.6 3.9 1.9.3 1.3-1 2.6-3 3zm-9.5-.9c0 1.3-1.5 2.4-3.5 2.4-2.2.2-3.7-.9-3.7-2.4 0-1.3 1.5-2.4 3.5-2.4 1.9-.2 3.7.9 3.7 2.4zm-13.7-1.1c-.4 1.3-2.4 1.9-4.1 1.3-1.9-.4-3.2-1.9-2.8-3.2.4-1.3 2.4-1.9 4.1-1.5 2 .6 3.3 2.1 2.8 3.4zm-12.3-5.4c-.9 1.1-2.8.9-4.3-.6-1.5-1.3-1.9-3.2-.9-4.1.9-1.1 2.8-.9 4.3.6 1.3 1.3 1.8 3.3.9 4.1zm-9.1-9.1c-.9.6-2.6 0-3.7-1.5s-1.1-3.2 0-3.9c1.1-.9 2.8-.2 3.7 1.3 1.1 1.5 1.1 3.3 0 4.1zm-6.5-9.7c-.9.9-2.4.4-3.5-.6-1.1-1.3-1.3-2.8-.4-3.5.9-.9 2.4-.4 3.5.6 1.1 1.3 1.3 2.8.4 3.5zm-6.7-7.4c-.4.9-1.7 1.1-2.8.4-1.3-.6-1.9-1.7-1.5-2.6.4-.6 1.5-.9 2.8-.4 1.3.7 1.9 1.8 1.5 2.6z\"],\n    \"gitkraken\": [592, 512, [], \"f3a6\", \"M565.7 118.1c-2.3-6.1-9.3-9.2-15.3-6.6-5.7 2.4-8.5 8.9-6.3 14.6 10.9 29 16.9 60.5 16.9 93.3 0 134.6-100.3 245.7-230.2 262.7V358.4c7.9-1.5 15.5-3.6 23-6.2v104c106.7-25.9 185.9-122.1 185.9-236.8 0-91.8-50.8-171.8-125.8-213.3-5.7-3.2-13-.9-15.9 5-2.7 5.5-.6 12.2 4.7 15.1 67.9 37.6 113.9 110 113.9 193.2 0 93.3-57.9 173.1-139.8 205.4v-92.2c14.2-4.5 24.9-17.7 24.9-33.5 0-13.1-6.8-24.4-17.3-30.5 8.3-79.5 44.5-58.6 44.5-83.9V170c0-38-87.9-161.8-129-164.7-2.5-.2-5-.2-7.6 0C251.1 8.3 163.2 132 163.2 170v14.8c0 25.3 36.3 4.3 44.5 83.9-10.6 6.1-17.3 17.4-17.3 30.5 0 15.8 10.6 29 24.8 33.5v92.2c-81.9-32.2-139.8-112-139.8-205.4 0-83.1 46-155.5 113.9-193.2 5.4-3 7.4-9.6 4.7-15.1-2.9-5.9-10.1-8.2-15.9-5-75 41.5-125.8 121.5-125.8 213.3 0 114.7 79.2 210.8 185.9 236.8v-104c7.6 2.5 15.1 4.6 23 6.2v123.7C131.4 465.2 31 354.1 31 219.5c0-32.8 6-64.3 16.9-93.3 2.2-5.8-.6-12.2-6.3-14.6-6-2.6-13 .4-15.3 6.6C14.5 149.7 8 183.8 8 219.5c0 155.1 122.6 281.6 276.3 287.8V361.4c6.8.4 15 .5 23.4 0v145.8C461.4 501.1 584 374.6 584 219.5c0-35.7-6.5-69.8-18.3-101.4zM365.9 275.5c13 0 23.7 10.5 23.7 23.7 0 13.1-10.6 23.7-23.7 23.7-13 0-23.7-10.5-23.7-23.7 0-13.1 10.6-23.7 23.7-23.7zm-139.8 47.3c-13.2 0-23.7-10.7-23.7-23.7s10.5-23.7 23.7-23.7c13.1 0 23.7 10.6 23.7 23.7 0 13-10.5 23.7-23.7 23.7z\"],\n    \"gitlab\": [512, 512, [], \"f296\", \"M105.2 24.9c-3.1-8.9-15.7-8.9-18.9 0L29.8 199.7h132c-.1 0-56.6-174.8-56.6-174.8zM.9 287.7c-2.6 8 .3 16.9 7.1 22l247.9 184-226.2-294zm160.8-88l94.3 294 94.3-294zm349.4 88l-28.8-88-226.3 294 247.9-184c6.9-5.1 9.7-14 7.2-22zM425.7 24.9c-3.1-8.9-15.7-8.9-18.9 0l-56.6 174.8h132z\"],\n    \"gitter\": [384, 512, [], \"f426\", \"M66.4 322.5H16V0h50.4v322.5zM166.9 76.1h-50.4V512h50.4V76.1zm100.6 0h-50.4V512h50.4V76.1zM368 76h-50.4v247H368V76z\"],\n    \"glide\": [448, 512, [], \"f2a5\", \"M252.8 148.6c0 8.8-1.6 17.7-3.4 26.4-5.8 27.8-11.6 55.8-17.3 83.6-1.4 6.3-8.3 4.9-13.7 4.9-23.8 0-30.5-26-30.5-45.5 0-29.3 11.2-68.1 38.5-83.1 4.3-2.5 9.2-4.2 14.1-4.2 11.4 0 12.3 8.3 12.3 17.9zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-64 187c0-5.1-20.8-37.7-25.5-39.5-2.2-.9-7.2-2.3-9.6-2.3-23.1 0-38.7 10.5-58.2 21.5l-.5-.5c4.3-29.4 14.6-57.2 14.6-87.4 0-44.6-23.8-62.7-67.5-62.7-71.7 0-108 70.8-108 123.5 0 54.7 32 85 86.3 85 7.5 0 6.9-.6 6.9 2.3-10.5 80.3-56.5 82.9-56.5 58.9 0-24.4 28-36.5 28.3-38-.2-7.6-29.3-17.2-36.7-17.2-21.1 0-32.7 33-32.7 50.6 0 32.3 20.4 54.7 53.3 54.7 48.2 0 83.4-49.7 94.3-91.7 9.4-37.7 7-39.4 12.3-42.1 20-10.1 35.8-16.8 58.4-16.8 11.1 0 19 2.3 36.7 5.2 1.8.1 4.1-1.7 4.1-3.5z\"],\n    \"glide-g\": [448, 512, [], \"f2a6\", \"M407.1 211.2c-3.5-1.4-11.6-3.8-15.4-3.8-37.1 0-62.2 16.8-93.5 34.5l-.9-.9c7-47.3 23.5-91.9 23.5-140.4C320.8 29.1 282.6 0 212.4 0 97.3 0 39 113.7 39 198.4 39 286.3 90.3 335 177.6 335c12 0 11-1 11 3.8-16.9 128.9-90.8 133.1-90.8 94.6 0-39.2 45-58.6 45.5-61-.3-12.2-47-27.6-58.9-27.6-33.9.1-52.4 51.2-52.4 79.3C32 476 64.8 512 117.5 512c77.4 0 134-77.8 151.4-145.4 15.1-60.5 11.2-63.3 19.7-67.6 32.2-16.2 57.5-27 93.8-27 17.8 0 30.5 3.7 58.9 8.4 2.9 0 6.7-2.9 6.7-5.8 0-8-33.4-60.5-40.9-63.4zm-175.3-84.4c-9.3 44.7-18.6 89.6-27.8 134.3-2.3 10.2-13.3 7.8-22 7.8-38.3 0-49-41.8-49-73.1 0-47 18-109.3 61.8-133.4 7-4.1 14.8-6.7 22.6-6.7 18.6 0 20 13.3 20 28.7-.1 14.3-2.7 28.5-5.6 42.4z\"],\n    \"gofore\": [400, 512, [], \"f3a7\", \"M324 319.8h-13.2v34.7c-24.5 23.1-56.3 35.8-89.9 35.8-73.2 0-132.4-60.2-132.4-134.4 0-74.1 59.2-134.4 132.4-134.4 35.3 0 68.6 14 93.6 39.4l62.3-63.3C335 55.3 279.7 32 220.7 32 98 32 0 132.6 0 256c0 122.5 97 224 220.7 224 63.2 0 124.5-26.2 171-82.5-2-27.6-13.4-77.7-67.7-77.7zm-12.1-112.5H205.6v89H324c33.5 0 60.5 15.1 76 41.8v-30.6c0-65.2-40.4-100.2-88.1-100.2z\"],\n    \"goodreads\": [448, 512, [], \"f3a8\", \"M299.9 191.2c5.1 37.3-4.7 79-35.9 100.7-22.3 15.5-52.8 14.1-70.8 5.7-37.1-17.3-49.5-58.6-46.8-97.2 4.3-60.9 40.9-87.9 75.3-87.5 46.9-.2 71.8 31.8 78.2 78.3zM448 88v336c0 30.9-25.1 56-56 56H56c-30.9 0-56-25.1-56-56V88c0-30.9 25.1-56 56-56h336c30.9 0 56 25.1 56 56zM330 313.2s-.1-34-.1-217.3h-29v40.3c-.8.3-1.2-.5-1.6-1.2-9.6-20.7-35.9-46.3-76-46-51.9.4-87.2 31.2-100.6 77.8-4.3 14.9-5.8 30.1-5.5 45.6 1.7 77.9 45.1 117.8 112.4 115.2 28.9-1.1 54.5-17 69-45.2.5-1 1.1-1.9 1.7-2.9.2.1.4.1.6.2.3 3.8.2 30.7.1 34.5-.2 14.8-2 29.5-7.2 43.5-7.8 21-22.3 34.7-44.5 39.5-17.8 3.9-35.6 3.8-53.2-1.2-21.5-6.1-36.5-19-41.1-41.8-.3-1.6-1.3-1.3-2.3-1.3h-26.8c.8 10.6 3.2 20.3 8.5 29.2 24.2 40.5 82.7 48.5 128.2 37.4 49.9-12.3 67.3-54.9 67.4-106.3z\"],\n    \"goodreads-g\": [384, 512, [], \"f3a9\", \"M42.6 403.3h2.8c12.7 0 25.5 0 38.2.1 1.6 0 3.1-.4 3.6 2.1 7.1 34.9 30 54.6 62.9 63.9 26.9 7.6 54.1 7.8 81.3 1.8 33.8-7.4 56-28.3 68-60.4 8-21.5 10.7-43.8 11-66.5.1-5.8.3-47-.2-52.8l-.9-.3c-.8 1.5-1.7 2.9-2.5 4.4-22.1 43.1-61.3 67.4-105.4 69.1-103 4-169.4-57-172-176.2-.5-23.7 1.8-46.9 8.3-69.7C58.3 47.7 112.3.6 191.6 0c61.3-.4 101.5 38.7 116.2 70.3.5 1.1 1.3 2.3 2.4 1.9V10.6h44.3c0 280.3.1 332.2.1 332.2-.1 78.5-26.7 143.7-103 162.2-69.5 16.9-159 4.8-196-57.2-8-13.5-11.8-28.3-13-44.5zM188.9 36.5c-52.5-.5-108.5 40.7-115 133.8-4.1 59 14.8 122.2 71.5 148.6 27.6 12.9 74.3 15 108.3-8.7 47.6-33.2 62.7-97 54.8-154-9.7-71.1-47.8-120-119.6-119.7z\"],\n    \"google\": [488, 512, [], \"f1a0\", \"M488 261.8C488 403.3 391.1 504 248 504 110.8 504 0 393.2 0 256S110.8 8 248 8c66.8 0 123 24.5 166.3 64.9l-67.5 64.9C258.5 52.6 94.3 116.6 94.3 256c0 86.5 69.1 156.6 153.7 156.6 98.2 0 135-70.4 140.8-106.9H248v-85.3h236.1c2.3 12.7 3.9 24.9 3.9 41.4z\"],\n    \"google-drive\": [512, 512, [], \"f3aa\", \"M339 314.9L175.4 32h161.2l163.6 282.9H339zm-137.5 23.6L120.9 480h310.5L512 338.5H201.5zM154.1 67.4L0 338.5 80.6 480 237 208.8 154.1 67.4z\"],\n    \"google-pay\": [640, 512, [], \"e079\", \"M105.72,215v41.25h57.1a49.66,49.66,0,0,1-21.14,32.6c-9.54,6.55-21.72,10.28-36,10.28-27.6,0-50.93-18.91-59.3-44.22a65.61,65.61,0,0,1,0-41l0,0c8.37-25.46,31.7-44.37,59.3-44.37a56.43,56.43,0,0,1,40.51,16.08L176.47,155a101.24,101.24,0,0,0-70.75-27.84,105.55,105.55,0,0,0-94.38,59.11,107.64,107.64,0,0,0,0,96.18v.15a105.41,105.41,0,0,0,94.38,59c28.47,0,52.55-9.53,70-25.91,20-18.61,31.41-46.15,31.41-78.91A133.76,133.76,0,0,0,205.38,215Zm389.41-4c-10.13-9.38-23.93-14.14-41.39-14.14-22.46,0-39.34,8.34-50.5,24.86l20.85,13.26q11.45-17,31.26-17a34.05,34.05,0,0,1,22.75,8.79A28.14,28.14,0,0,1,487.79,248v5.51c-9.1-5.07-20.55-7.75-34.64-7.75-16.44,0-29.65,3.88-39.49,11.77s-14.82,18.31-14.82,31.56a39.74,39.74,0,0,0,13.94,31.27c9.25,8.34,21,12.51,34.79,12.51,16.29,0,29.21-7.3,39-21.89h1v17.72h22.61V250C510.25,233.45,505.26,220.34,495.13,211ZM475.9,300.3a37.32,37.32,0,0,1-26.57,11.16A28.61,28.61,0,0,1,431,305.21a19.41,19.41,0,0,1-7.77-15.63c0-7,3.22-12.81,9.54-17.42s14.53-7,24.07-7C470,265,480.3,268,487.64,273.94,487.64,284.07,483.68,292.85,475.9,300.3Zm-93.65-142A55.71,55.71,0,0,0,341.74,142H279.07V328.74H302.7V253.1h39c16,0,29.5-5.36,40.51-15.93.88-.89,1.76-1.79,2.65-2.68A54.45,54.45,0,0,0,382.25,158.26Zm-16.58,62.23a30.65,30.65,0,0,1-23.34,9.68H302.7V165h39.63a32,32,0,0,1,22.6,9.23A33.18,33.18,0,0,1,365.67,220.49ZM614.31,201,577.77,292.7h-.45L539.9,201H514.21L566,320.55l-29.35,64.32H561L640,201Z\"],\n    \"google-play\": [512, 512, [], \"f3ab\", \"M325.3 234.3L104.6 13l280.8 161.2-60.1 60.1zM47 0C34 6.8 25.3 19.2 25.3 35.3v441.3c0 16.1 8.7 28.5 21.7 35.3l256.6-256L47 0zm425.2 225.6l-58.9-34.1-65.7 64.5 65.7 64.5 60.1-34.1c18-14.3 18-46.5-1.2-60.8zM104.6 499l280.8-161.2-60.1-60.1L104.6 499z\"],\n    \"google-plus\": [512, 512, [], \"f2b3\", \"M256,8C119.1,8,8,119.1,8,256S119.1,504,256,504,504,392.9,504,256,392.9,8,256,8ZM185.3,380a124,124,0,0,1,0-248c31.3,0,60.1,11,83,32.3l-33.6,32.6c-13.2-12.9-31.3-19.1-49.4-19.1-42.9,0-77.2,35.5-77.2,78.1S142.3,334,185.3,334c32.6,0,64.9-19.1,70.1-53.3H185.3V238.1H302.2a109.2,109.2,0,0,1,1.9,20.7c0,70.8-47.5,121.2-118.8,121.2ZM415.5,273.8v35.5H380V273.8H344.5V238.3H380V202.8h35.5v35.5h35.2v35.5Z\"],\n    \"google-plus-g\": [640, 512, [], \"f0d5\", \"M386.061 228.496c1.834 9.692 3.143 19.384 3.143 31.956C389.204 370.205 315.599 448 204.8 448c-106.084 0-192-85.915-192-192s85.916-192 192-192c51.864 0 95.083 18.859 128.611 50.292l-52.126 50.03c-14.145-13.621-39.028-29.599-76.485-29.599-65.484 0-118.92 54.221-118.92 121.277 0 67.056 53.436 121.277 118.92 121.277 75.961 0 104.513-54.745 108.965-82.773H204.8v-66.009h181.261zm185.406 6.437V179.2h-56.001v55.733h-55.733v56.001h55.733v55.733h56.001v-55.733H627.2v-56.001h-55.733z\"],\n    \"google-plus-square\": [448, 512, [], \"f0d4\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM164 356c-55.3 0-100-44.7-100-100s44.7-100 100-100c27 0 49.5 9.8 67 26.2l-27.1 26.1c-7.4-7.1-20.3-15.4-39.8-15.4-34.1 0-61.9 28.2-61.9 63.2 0 34.9 27.8 63.2 61.9 63.2 39.6 0 54.4-28.5 56.8-43.1H164v-34.4h94.4c1 5 1.6 10.1 1.6 16.6 0 57.1-38.3 97.6-96 97.6zm220-81.8h-29v29h-29.2v-29h-29V245h29v-29H355v29h29v29.2z\"],\n    \"google-wallet\": [448, 512, [], \"f1ee\", \"M156.8 126.8c37.6 60.6 64.2 113.1 84.3 162.5-8.3 33.8-18.8 66.5-31.3 98.3-13.2-52.3-26.5-101.3-56-148.5 6.5-36.4 2.3-73.6 3-112.3zM109.3 200H16.1c-6.5 0-10.5 7.5-6.5 12.7C51.8 267 81.3 330.5 101.3 400h103.5c-16.2-69.7-38.7-133.7-82.5-193.5-3-4-8-6.5-13-6.5zm47.8-88c68.5 108 130 234.5 138.2 368H409c-12-138-68.4-265-143.2-368H157.1zm251.8-68.5c-1.8-6.8-8.2-11.5-15.2-11.5h-88.3c-5.3 0-9 5-7.8 10.3 13.2 46.5 22.3 95.5 26.5 146 48.2 86.2 79.7 178.3 90.6 270.8 15.8-60.5 25.3-133.5 25.3-203 0-73.6-12.1-145.1-31.1-212.6z\"],\n    \"gratipay\": [496, 512, [], \"f184\", \"M248 8C111.1 8 0 119.1 0 256s111.1 248 248 248 248-111.1 248-248S384.9 8 248 8zm114.6 226.4l-113 152.7-112.7-152.7c-8.7-11.9-19.1-50.4 13.6-72 28.1-18.1 54.6-4.2 68.5 11.9 15.9 17.9 46.6 16.9 61.7 0 13.9-16.1 40.4-30 68.1-11.9 32.9 21.6 22.6 60 13.8 72z\"],\n    \"grav\": [512, 512, [], \"f2d6\", \"M301.1 212c4.4 4.4 4.4 11.9 0 16.3l-9.7 9.7c-4.4 4.7-11.9 4.7-16.6 0l-10.5-10.5c-4.4-4.7-4.4-11.9 0-16.6l9.7-9.7c4.4-4.4 11.9-4.4 16.6 0l10.5 10.8zm-30.2-19.7c3-3 3-7.8 0-10.5-2.8-3-7.5-3-10.5 0-2.8 2.8-2.8 7.5 0 10.5 3.1 2.8 7.8 2.8 10.5 0zm-26 5.3c-3 2.8-3 7.5 0 10.2 2.8 3 7.5 3 10.5 0 2.8-2.8 2.8-7.5 0-10.2-3-3-7.7-3-10.5 0zm72.5-13.3c-19.9-14.4-33.8-43.2-11.9-68.1 21.6-24.9 40.7-17.2 59.8.8 11.9 11.3 29.3 24.9 17.2 48.2-12.5 23.5-45.1 33.2-65.1 19.1zm47.7-44.5c-8.9-10-23.3 6.9-15.5 16.1 7.4 9 32.1 2.4 15.5-16.1zM504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-66.2 42.6c2.5-16.1-20.2-16.6-25.2-25.7-13.6-24.1-27.7-36.8-54.5-30.4 11.6-8 23.5-6.1 23.5-6.1.3-6.4 0-13-9.4-24.9 3.9-12.5.3-22.4.3-22.4 15.5-8.6 26.8-24.4 29.1-43.2 3.6-31-18.8-59.2-49.8-62.8-22.1-2.5-43.7 7.7-54.3 25.7-23.2 40.1 1.4 70.9 22.4 81.4-14.4-1.4-34.3-11.9-40.1-34.3-6.6-25.7 2.8-49.8 8.9-61.4 0 0-4.4-5.8-8-8.9 0 0-13.8 0-24.6 5.3 11.9-15.2 25.2-14.4 25.2-14.4 0-6.4-.6-14.9-3.6-21.6-5.4-11-23.8-12.9-31.7 2.8.1-.2.3-.4.4-.5-5 11.9-1.1 55.9 16.9 87.2-2.5 1.4-9.1 6.1-13 10-21.6 9.7-56.2 60.3-56.2 60.3-28.2 10.8-77.2 50.9-70.6 79.7.3 3 1.4 5.5 3 7.5-2.8 2.2-5.5 5-8.3 8.3-11.9 13.8-5.3 35.2 17.7 24.4 15.8-7.2 29.6-20.2 36.3-30.4 0 0-5.5-5-16.3-4.4 27.7-6.6 34.3-9.4 46.2-9.1 8 3.9 8-34.3 8-34.3 0-14.7-2.2-31-11.1-41.5 12.5 12.2 29.1 32.7 28 60.6-.8 18.3-15.2 23-15.2 23-9.1 16.6-43.2 65.9-30.4 106 0 0-9.7-14.9-10.2-22.1-17.4 19.4-46.5 52.3-24.6 64.5 26.6 14.7 108.8-88.6 126.2-142.3 34.6-20.8 55.4-47.3 63.9-65 22 43.5 95.3 94.5 101.1 59z\"],\n    \"gripfire\": [384, 512, [], \"f3ac\", \"M112.5 301.4c0-73.8 105.1-122.5 105.1-203 0-47.1-34-88-39.1-90.4.4 3.3.6 6.7.6 10C179.1 110.1 32 171.9 32 286.6c0 49.8 32.2 79.2 66.5 108.3 65.1 46.7 78.1 71.4 78.1 86.6 0 10.1-4.8 17-4.8 22.3 13.1-16.7 17.4-31.9 17.5-46.4 0-29.6-21.7-56.3-44.2-86.5-16-22.3-32.6-42.6-32.6-69.5zm205.3-39c-12.1-66.8-78-124.4-94.7-130.9l4 7.2c2.4 5.1 3.4 10.9 3.4 17.1 0 44.7-54.2 111.2-56.6 116.7-2.2 5.1-3.2 10.5-3.2 15.8 0 20.1 15.2 42.1 17.9 42.1 2.4 0 56.6-55.4 58.1-87.7 6.4 11.7 9.1 22.6 9.1 33.4 0 41.2-41.8 96.9-41.8 96.9 0 11.6 31.9 53.2 35.5 53.2 1 0 2.2-1.4 3.2-2.4 37.9-39.3 67.3-85 67.3-136.8 0-8-.7-16.2-2.2-24.6z\"],\n    \"grunt\": [384, 512, [], \"f3ad\", \"M61.3 189.3c-1.1 10 5.2 19.1 5.2 19.1.7-7.5 2.2-12.8 4-16.6.4 10.3 3.2 23.5 12.8 34.1 6.9 7.6 35.6 23.3 54.9 6.1 1 2.4 2.1 5.3 3 8.5 2.9 10.3-2.7 25.3-2.7 25.3s15.1-17.1 13.9-32.5c10.8-.5 21.4-8.4 21.1-19.5 0 0-18.9 10.4-35.5-8.8-9.7-11.2-40.9-42-83.1-31.8 4.3 1 8.9 2.4 13.5 4.1h-.1c-4.2 2-6.5 7.1-7 12zm28.3-1.8c19.5 11 37.4 25.7 44.9 37-5.7 3.3-21.7 10.4-38-1.7-10.3-7.6-9.8-26.2-6.9-35.3zm142.1 45.8c-1.2 15.5 13.9 32.5 13.9 32.5s-5.6-15-2.7-25.3c.9-3.2 2-6 3-8.5 19.3 17.3 48 1.5 54.8-6.1 9.6-10.6 12.3-23.8 12.8-34.1 1.8 3.8 3.4 9.1 4 16.6 0 0 6.4-9.1 5.2-19.1-.6-5-2.9-10-7-11.8h-.1c4.6-1.8 9.2-3.2 13.5-4.1-42.3-10.2-73.4 20.6-83.1 31.8-16.7 19.2-35.5 8.8-35.5 8.8-.2 10.9 10.4 18.9 21.2 19.3zm62.7-45.8c3 9.1 3.4 27.7-7 35.4-16.3 12.1-32.2 5-37.9 1.6 7.5-11.4 25.4-26 44.9-37zM160 418.5h-29.4c-5.5 0-8.2 1.6-9.5 2.9-1.9 2-2.2 4.7-.9 8.1 3.5 9.1 11.4 16.5 13.7 18.6 3.1 2.7 7.5 4.3 11.8 4.3 4.4 0 8.3-1.7 11-4.6 7.5-8.2 11.9-17.1 13-19.8.6-1.5 1.3-4.5-.9-6.8-1.8-1.8-4.7-2.7-8.8-2.7zm189.2-101.2c-2.4 17.9-13 33.8-24.6 43.7-3.1-22.7-3.7-55.5-3.7-62.4 0-14.7 9.5-24.5 12.2-26.1 2.5-1.5 5.4-3 8.3-4.6 18-9.6 40.4-21.6 40.4-43.7 0-16.2-9.3-23.2-15.4-27.8-.8-.6-1.5-1.1-2.2-1.7-2.1-1.7-3.7-3-4.3-4.4-4.4-9.8-3.6-34.2-1.7-37.6.6-.6 16.7-20.9 11.8-39.2-2-7.4-6.9-13.3-14.1-17-5.3-2.7-11.9-4.2-19.5-4.5-.1-2-.5-3.9-.9-5.9-.6-2.6-1.1-5.3-.9-8.1.4-4.7.8-9 2.2-11.3 8.4-13.3 28.8-17.6 29-17.6l12.3-2.4-8.1-9.5c-.1-.2-17.3-17.5-46.3-17.5-7.9 0-16 1.3-24.1 3.9-24.2 7.8-42.9 30.5-49.4 39.3-3.1-1-6.3-1.9-9.6-2.7-4.2-15.8 9-38.5 9-38.5s-13.6-3-33.7 15.2c-2.6-6.5-8.1-20.5-1.8-37.2C184.6 10.1 177.2 26 175 40.4c-7.6-5.4-6.7-23.1-7.2-27.6-7.5.9-29.2 21.9-28.2 48.3-2 .5-3.9 1.1-5.9 1.7-6.5-8.8-25.1-31.5-49.4-39.3-7.9-2.2-16-3.5-23.9-3.5-29 0-46.1 17.3-46.3 17.5L6 46.9l12.3 2.4c.2 0 20.6 4.3 29 17.6 1.4 2.2 1.8 6.6 2.2 11.3.2 2.8-.4 5.5-.9 8.1-.4 1.9-.8 3.9-.9 5.9-7.7.3-14.2 1.8-19.5 4.5-7.2 3.7-12.1 9.6-14.1 17-5 18.2 11.2 38.5 11.8 39.2 1.9 3.4 2.7 27.8-1.7 37.6-.6 1.4-2.2 2.7-4.3 4.4-.7.5-1.4 1.1-2.2 1.7-6.1 4.6-15.4 11.7-15.4 27.8 0 22.1 22.4 34.1 40.4 43.7 3 1.6 5.8 3.1 8.3 4.6 2.7 1.6 12.2 11.4 12.2 26.1 0 6.9-.6 39.7-3.7 62.4-11.6-9.9-22.2-25.9-24.6-43.8 0 0-29.2 22.6-20.6 70.8 5.2 29.5 23.2 46.1 47 54.7 8.8 19.1 29.4 45.7 67.3 49.6C143 504.3 163 512 192.2 512h.2c29.1 0 49.1-7.7 63.6-19.5 37.9-3.9 58.5-30.5 67.3-49.6 23.8-8.7 41.7-25.2 47-54.7 8.2-48.4-21.1-70.9-21.1-70.9zM305.7 37.7c5.6-1.8 11.6-2.7 17.7-2.7 11 0 19.9 3 24.7 5-3.1 1.4-6.4 3.2-9.7 5.3-2.4-.4-5.6-.8-9.2-.8-10.5 0-20.5 3.1-28.7 8.9-12.3 8.7-18 16.9-20.7 22.4-2.2-1.3-4.5-2.5-7.1-3.7-1.6-.8-3.1-1.5-4.7-2.2 6.1-9.1 19.9-26.5 37.7-32.2zm21 18.2c-.8 1-1.6 2.1-2.3 3.2-3.3 5.2-3.9 11.6-4.4 17.8-.5 6.4-1.1 12.5-4.4 17-4.2.8-8.1 1.7-11.5 2.7-2.3-3.1-5.6-7-10.5-11.2 1.4-4.8 5.5-16.1 13.5-22.5 5.6-4.3 12.2-6.7 19.6-7zM45.6 45.3c-3.3-2.2-6.6-4-9.7-5.3 4.8-2 13.7-5 24.7-5 6.1 0 12 .9 17.7 2.7 17.8 5.8 31.6 23.2 37.7 32.1-1.6.7-3.2 1.4-4.8 2.2-2.5 1.2-4.9 2.5-7.1 3.7-2.6-5.4-8.3-13.7-20.7-22.4-8.3-5.8-18.2-8.9-28.8-8.9-3.4.1-6.6.5-9 .9zm44.7 40.1c-4.9 4.2-8.3 8-10.5 11.2-3.4-.9-7.3-1.9-11.5-2.7C65 89.5 64.5 83.4 64 77c-.5-6.2-1.1-12.6-4.4-17.8-.7-1.1-1.5-2.2-2.3-3.2 7.4.3 14 2.6 19.5 7 8 6.3 12.1 17.6 13.5 22.4zM58.1 259.9c-2.7-1.6-5.6-3.1-8.4-4.6-14.9-8-30.2-16.3-30.2-30.5 0-11.1 4.3-14.6 8.9-18.2l.5-.4c.7-.6 1.4-1.2 2.2-1.8-.9 7.2-1.9 13.3-2.7 14.9 0 0 12.1-15 15.7-44.3 1.4-11.5-1.1-34.3-5.1-43 .2 4.9 0 9.8-.3 14.4-.4-.8-.8-1.6-1.3-2.2-3.2-4-11.8-17.5-9.4-26.6.9-3.5 3.1-6 6.7-7.8 3.8-1.9 8.8-2.9 15.1-2.9 12.3 0 25.9 3.7 32.9 6 25.1 8 55.4 30.9 64.1 37.7.2.2.4.3.4.3l5.6 3.9-3.5-5.8c-.2-.3-19.1-31.4-53.2-46.5 2-2.9 7.4-8.1 21.6-15.1 21.4-10.5 46.5-15.8 74.3-15.8 27.9 0 52.9 5.3 74.3 15.8 14.2 6.9 19.6 12.2 21.6 15.1-34 15.1-52.9 46.2-53.1 46.5l-3.5 5.8 5.6-3.9s.2-.1.4-.3c8.7-6.8 39-29.8 64.1-37.7 7-2.2 20.6-6 32.9-6 6.3 0 11.3 1 15.1 2.9 3.5 1.8 5.7 4.4 6.7 7.8 2.5 9.1-6.1 22.6-9.4 26.6-.5.6-.9 1.3-1.3 2.2-.3-4.6-.5-9.5-.3-14.4-4 8.8-6.5 31.5-5.1 43 3.6 29.3 15.7 44.3 15.7 44.3-.8-1.6-1.8-7.7-2.7-14.9.7.6 1.5 1.2 2.2 1.8l.5.4c4.6 3.7 8.9 7.1 8.9 18.2 0 14.2-15.4 22.5-30.2 30.5-2.9 1.5-5.7 3.1-8.4 4.6-8.7 5-18 16.7-19.1 34.2-.9 14.6.9 49.9 3.4 75.9-12.4 4.8-26.7 6.4-39.7 6.8-2-4.1-3.9-8.5-5.5-13.1-.7-2-19.6-51.1-26.4-62.2 5.5 39 17.5 73.7 23.5 89.6-3.5-.5-7.3-.7-11.7-.7h-117c-4.4 0-8.3.3-11.7.7 6-15.9 18.1-50.6 23.5-89.6-6.8 11.2-25.7 60.3-26.4 62.2-1.6 4.6-3.5 9-5.5 13.1-13-.4-27.2-2-39.7-6.8 2.5-26 4.3-61.2 3.4-75.9-.9-17.4-10.3-29.2-19-34.2zM34.8 404.6c-12.1-20-8.7-54.1-3.7-59.1 10.9 34.4 47.2 44.3 74.4 45.4-2.7 4.2-5.2 7.6-7 10l-1.4 1.4c-7.2 7.8-8.6 18.5-4.1 31.8-22.7-.1-46.3-9.8-58.2-29.5zm45.7 43.5c6 1.1 12.2 1.9 18.6 2.4 3.5 8 7.4 15.9 12.3 23.1-14.4-5.9-24.4-16-30.9-25.5zM192 498.2c-60.6-.1-78.3-45.8-84.9-64.7-3.7-10.5-3.4-18.2.9-23.1 2.9-3.3 9.5-7.2 24.6-7.2h118.8c15.1 0 21.8 3.9 24.6 7.2 4.2 4.8 4.5 12.6.9 23.1-6.6 18.8-24.3 64.6-84.9 64.7zm80.6-24.6c4.9-7.2 8.8-15.1 12.3-23.1 6.4-.5 12.6-1.3 18.6-2.4-6.5 9.5-16.5 19.6-30.9 25.5zm76.6-69c-12 19.7-35.6 29.3-58.1 29.7 4.5-13.3 3.1-24.1-4.1-31.8-.4-.5-.9-1-1.4-1.5-1.8-2.4-4.3-5.8-7-10 27.2-1.2 63.5-11 74.4-45.4 5 5 8.4 39.1-3.8 59zM191.9 187.7h.2c12.7-.1 27.2-17.8 27.2-17.8-9.9 6-18.8 8.1-27.3 8.3-8.5-.2-17.4-2.3-27.3-8.3 0 0 14.5 17.6 27.2 17.8zm61.7 230.7h-29.4c-4.2 0-7.2.9-8.9 2.7-2.2 2.3-1.5 5.2-.9 6.7 1 2.6 5.5 11.3 13 19.3 2.7 2.9 6.6 4.5 11 4.5s8.7-1.6 11.8-4.2c2.3-2 10.2-9.2 13.7-18.1 1.3-3.3 1-6-.9-7.9-1.3-1.3-4-2.9-9.4-3z\"],\n    \"guilded\": [448, 512, [], \"e07e\", \"M443.427,64H4.571c0,103.26,22.192,180.06,43.418,222.358C112.046,414.135,224,448,225.256,448a312.824,312.824,0,0,0,140.55-103.477c25.907-33.923,53.1-87.19,65.916-145.761H171.833c4.14,36.429,22.177,67.946,45.1,86.944h88.589c-17.012,28.213-48.186,54.4-80.456,69.482-31.232-13.259-69.09-46.544-96.548-98.362-26.726-53.833-27.092-105.883-27.092-105.883H437.573A625.91,625.91,0,0,0,443.427,64Z\"],\n    \"gulp\": [256, 512, [], \"f3ae\", \"M209.8 391.1l-14.1 24.6-4.6 80.2c0 8.9-28.3 16.1-63.1 16.1s-63.1-7.2-63.1-16.1l-5.8-79.4-14.9-25.4c41.2 17.3 126 16.7 165.6 0zm-196-253.3l13.6 125.5c5.9-20 20.8-47 40-55.2 6.3-2.7 12.7-2.7 18.7.9 5.2 3 9.6 9.3 10.1 11.8 1.2 6.5-2 9.1-4.5 9.1-3 0-5.3-4.6-6.8-7.3-4.1-7.3-10.3-7.6-16.9-2.8-6.9 5-12.9 13.4-17.1 20.7-5.1 8.8-9.4 18.5-12 28.2-1.5 5.6-2.9 14.6-.6 19.9 1 2.2 2.5 3.6 4.9 3.6 5 0 12.3-6.6 15.8-10.1 4.5-4.5 10.3-11.5 12.5-16l5.2-15.5c2.6-6.8 9.9-5.6 9.9 0 0 10.2-3.7 13.6-10 34.7-5.8 19.5-7.6 25.8-7.6 25.8-.7 2.8-3.4 7.5-6.3 7.5-1.2 0-2.1-.4-2.6-1.2-1-1.4-.9-5.3-.8-6.3.2-3.2 6.3-22.2 7.3-25.2-2 2.2-4.1 4.4-6.4 6.6-5.4 5.1-14.1 11.8-21.5 11.8-3.4 0-5.6-.9-7.7-2.4l7.6 79.6c2 5 39.2 17.1 88.2 17.1 49.1 0 86.3-12.2 88.2-17.1l10.9-94.6c-5.7 5.2-12.3 11.6-19.6 14.8-5.4 2.3-17.4 3.8-17.4-5.7 0-5.2 9.1-14.8 14.4-21.5 1.4-1.7 4.7-5.9 4.7-8.1 0-2.9-6-2.2-11.7 2.5-3.2 2.7-6.2 6.3-8.7 9.7-4.3 6-6.6 11.2-8.5 15.5-6.2 14.2-4.1 8.6-9.1 22-5 13.3-4.2 11.8-5.2 14-.9 1.9-2.2 3.5-4 4.5-1.9 1-4.5.9-6.1-.3-.9-.6-1.3-1.9-1.3-3.7 0-.9.1-1.8.3-2.7 1.5-6.1 7.8-18.1 15-34.3 1.6-3.7 1-2.6.8-2.3-6.2 6-10.9 8.9-14.4 10.5-5.8 2.6-13 2.6-14.5-4.1-.1-.4-.1-.8-.2-1.2-11.8 9.2-24.3 11.7-20-8.1-4.6 8.2-12.6 14.9-22.4 14.9-4.1 0-7.1-1.4-8.6-5.1-2.3-5.5 1.3-14.9 4.6-23.8 1.7-4.5 4-9.9 7.1-16.2 1.6-3.4 4.2-5.4 7.6-4.5.6.2 1.1.4 1.6.7 2.6 1.8 1.6 4.5.3 7.2-3.8 7.5-7.1 13-9.3 20.8-.9 3.3-2 9 1.5 9 2.4 0 4.7-.8 6.9-2.4 4.6-3.4 8.3-8.5 11.1-13.5 2-3.6 4.4-8.3 5.6-12.3.5-1.7 1.1-3.3 1.8-4.8 1.1-2.5 2.6-5.1 5.2-5.1 1.3 0 2.4.5 3.2 1.5 1.7 2.2 1.3 4.5.4 6.9-2 5.6-4.7 10.6-6.9 16.7-1.3 3.5-2.7 8-2.7 11.7 0 3.4 3.7 2.6 6.8 1.2 2.4-1.1 4.8-2.8 6.8-4.5 1.2-4.9.9-3.8 26.4-68.2 1.3-3.3 3.7-4.7 6.1-4.7 1.2 0 2.2.4 3.2 1.1 1.7 1.3 1.7 4.1 1 6.2-.7 1.9-.6 1.3-4.5 10.5-5.2 12.1-8.6 20.8-13.2 31.9-1.9 4.6-7.7 18.9-8.7 22.3-.6 2.2-1.3 5.8 1 5.8 5.4 0 19.3-13.1 23.1-17 .2-.3.5-.4.9-.6.6-1.9 1.2-3.7 1.7-5.5 1.4-3.8 2.7-8.2 5.3-11.3.8-1 1.7-1.6 2.7-1.6 2.8 0 4.2 1.2 4.2 4 0 1.1-.7 5.1-1.1 6.2 1.4-1.5 2.9-3 4.5-4.5 15-13.9 25.7-6.8 25.7.2 0 7.4-8.9 17.7-13.8 23.4-1.6 1.9-4.9 5.4-5 6.4 0 1.3.9 1.8 2.2 1.8 2 0 6.4-3.5 8-4.7 5-3.9 11.8-9.9 16.6-14.1l14.8-136.8c-30.5 17.1-197.6 17.2-228.3.2zm229.7-8.5c0 21-231.2 21-231.2 0 0-8.8 51.8-15.9 115.6-15.9 9 0 17.8.1 26.3.4l12.6-48.7L228.1.6c1.4-1.4 5.8-.2 9.9 3.5s6.6 7.9 5.3 9.3l-.1.1L185.9 74l-10 40.7c39.9 2.6 67.6 8.1 67.6 14.6zm-69.4 4.6c0-.8-.9-1.5-2.5-2.1l-.2.8c0 1.3-5 2.4-11.1 2.4s-11.1-1.1-11.1-2.4c0-.1 0-.2.1-.3l.2-.7c-1.8.6-3 1.4-3 2.3 0 2.1 6.2 3.7 13.7 3.7 7.7.1 13.9-1.6 13.9-3.7z\"],\n    \"hacker-news\": [448, 512, [], \"f1d4\", \"M0 32v448h448V32H0zm21.2 197.2H21c.1-.1.2-.3.3-.4 0 .1 0 .3-.1.4zm218 53.9V384h-31.4V281.3L128 128h37.3c52.5 98.3 49.2 101.2 59.3 125.6 12.3-27 5.8-24.4 60.6-125.6H320l-80.8 155.1z\"],\n    \"hacker-news-square\": [448, 512, [], \"f3af\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM21.2 229.2H21c.1-.1.2-.3.3-.4 0 .1 0 .3-.1.4zm218 53.9V384h-31.4V281.3L128 128h37.3c52.5 98.3 49.2 101.2 59.3 125.6 12.3-27 5.8-24.4 60.6-125.6H320l-80.8 155.1z\"],\n    \"hackerrank\": [512, 512, [], \"f5f7\", \"M477.5 128C463 103.05 285.13 0 256.16 0S49.25 102.79 34.84 128s-14.49 230.8 0 256 192.38 128 221.32 128S463 409.08 477.49 384s14.51-231 .01-256zM316.13 414.22c-4 0-40.91-35.77-38-38.69.87-.87 6.26-1.48 17.55-1.83 0-26.23.59-68.59.94-86.32 0-2-.44-3.43-.44-5.85h-79.93c0 7.1-.46 36.2 1.37 72.88.23 4.54-1.58 6-5.74 5.94-10.13 0-20.27-.11-30.41-.08-4.1 0-5.87-1.53-5.74-6.11.92-33.44 3-84-.15-212.67v-3.17c-9.67-.35-16.38-1-17.26-1.84-2.92-2.92 34.54-38.69 38.49-38.69s41.17 35.78 38.27 38.69c-.87.87-7.9 1.49-16.77 1.84v3.16c-2.42 25.75-2 79.59-2.63 105.39h80.26c0-4.55.39-34.74-1.2-83.64-.1-3.39.95-5.17 4.21-5.2 11.07-.08 22.15-.13 33.23-.06 3.46 0 4.57 1.72 4.5 5.38C333 354.64 336 341.29 336 373.69c8.87.35 16.82 1 17.69 1.84 2.88 2.91-33.62 38.69-37.58 38.69z\"],\n    \"hips\": [640, 512, [], \"f452\", \"M251.6 157.6c0-1.9-.9-2.8-2.8-2.8h-40.9c-1.6 0-2.7 1.4-2.7 2.8v201.8c0 1.4 1.1 2.8 2.7 2.8h40.9c1.9 0 2.8-.9 2.8-2.8zM156.5 168c-16.1-11.8-36.3-17.9-60.3-18-18.1-.1-34.6 3.7-49.8 11.4V80.2c0-1.8-.9-2.7-2.8-2.7H2.7c-1.8 0-2.7.9-2.7 2.7v279.2c0 1.9.9 2.8 2.7 2.8h41c1.9 0 2.8-.9 2.8-2.8V223.3c0-.8-2.8-27 45.8-27 48.5 0 45.8 26.1 45.8 27v122.6c0 9 7.3 16.3 16.4 16.3h27.3c1.8 0 2.7-.9 2.7-2.8V223.3c0-23.4-9.3-41.8-28-55.3zm478.4 110.1c-6.8-15.7-18.4-27-34.9-34.1l-57.6-25.3c-8.6-3.6-9.2-11.2-2.6-16.1 7.4-5.5 44.3-13.9 84 6.8 1.7 1 4-.3 4-2.4v-44.7c0-1.3-.6-2.1-1.9-2.6-17.7-6.6-36.1-9.9-55.1-9.9-26.5 0-45.3 5.8-58.5 15.4-.5.4-28.4 20-22.7 53.7 3.4 19.6 15.8 34.2 37.2 43.6l53.6 23.5c11.6 5.1 15.2 13.3 12.2 21.2-3.7 9.1-13.2 13.6-36.5 13.6-24.3 0-44.7-8.9-58.4-19.1-2.1-1.4-4.4.2-4.4 2.3v34.4c0 10.4 4.9 17.3 14.6 20.7 15.6 5.5 31.6 8.2 48.2 8.2 12.7 0 25.8-1.2 36.3-4.3.7-.3 36-8.9 45.6-45.8 3.5-13.5 2.4-26.5-3.1-39.1zM376.2 149.8c-31.7 0-104.2 20.1-104.2 103.5v183.5c0 .8.6 2.7 2.7 2.7h40.9c1.9 0 2.8-.9 2.8-2.7V348c16.5 12.7 35.8 19.1 57.7 19.1 60.5 0 108.7-48.5 108.7-108.7.1-60.3-48.2-108.6-108.6-108.6zm0 170.9c-17.2 0-31.9-6.1-44-18.2-12.2-12.2-18.2-26.8-18.2-44 0-34.5 27.6-62.2 62.2-62.2 34.5 0 62.2 27.6 62.2 62.2.1 34.3-27.3 62.2-62.2 62.2zM228.3 72.5c-15.9 0-28.8 12.9-28.9 28.9 0 15.6 12.7 28.9 28.9 28.9s28.9-13.1 28.9-28.9c0-16.2-13-28.9-28.9-28.9z\"],\n    \"hire-a-helper\": [512, 512, [], \"f3b0\", \"M443.1 0H71.9C67.9 37.3 37.4 67.8 0 71.7v371.5c37.4 4.9 66 32.4 71.9 68.8h372.2c3-36.4 32.5-65.8 67.9-69.8V71.7c-36.4-5.9-65-35.3-68.9-71.7zm-37 404.9c-36.3 0-18.8-2-55.1-2-35.8 0-21 2-56.1 2-5.9 0-4.9-8.2 0-9.8 22.8-7.6 22.9-10.2 24.6-12.8 10.4-15.6 5.9-83 5.9-113 0-5.3-6.4-12.8-13.8-12.8H200.4c-7.4 0-13.8 7.5-13.8 12.8 0 30-4.5 97.4 5.9 113 1.7 2.5 1.8 5.2 24.6 12.8 4.9 1.6 6 9.8 0 9.8-35.1 0-20.3-2-56.1-2-36.3 0-18.8 2-55.1 2-7.9 0-5.8-10.8 0-10.8 10.2-3.4 13.5-3.5 21.7-13.8 7.7-12.9 7.9-44.4 7.9-127.8V151.3c0-22.2-12.2-28.3-28.6-32.4-8.8-2.2-4-11.8 1-11.8 36.5 0 20.6 2 57.1 2 32.7 0 16.5-2 49.2-2 3.3 0 8.5 8.3 1 10.8-4.9 1.6-27.6 3.7-27.6 39.3 0 45.6-.2 55.8 1 68.8 0 1.3 2.3 12.8 12.8 12.8h109.2c10.5 0 12.8-11.5 12.8-12.8 1.2-13 1-23.2 1-68.8 0-35.6-22.7-37.7-27.6-39.3-7.5-2.5-2.3-10.8 1-10.8 32.7 0 16.5 2 49.2 2 36.5 0 20.6-2 57.1-2 4.9 0 9.9 9.6 1 11.8-16.4 4.1-28.6 10.3-28.6 32.4v101.2c0 83.4.1 114.9 7.9 127.8 8.2 10.2 11.4 10.4 21.7 13.8 5.8 0 7.8 10.8 0 10.8z\"],\n    \"hive\": [512, 512, [], \"e07f\", \"M260.353,254.878,131.538,33.1a2.208,2.208,0,0,0-3.829.009L.3,254.887A2.234,2.234,0,0,0,.3,257.122L129.116,478.9a2.208,2.208,0,0,0,3.83-.009L260.358,257.113A2.239,2.239,0,0,0,260.353,254.878Zm39.078-25.713a2.19,2.19,0,0,0,1.9,1.111h66.509a2.226,2.226,0,0,0,1.9-3.341L259.115,33.111a2.187,2.187,0,0,0-1.9-1.111H190.707a2.226,2.226,0,0,0-1.9,3.341ZM511.7,254.886,384.9,33.112A2.2,2.2,0,0,0,382.99,32h-66.6a2.226,2.226,0,0,0-1.906,3.34L440.652,256,314.481,476.66a2.226,2.226,0,0,0,1.906,3.34h66.6a2.2,2.2,0,0,0,1.906-1.112L511.7,257.114A2.243,2.243,0,0,0,511.7,254.886ZM366.016,284.917H299.508a2.187,2.187,0,0,0-1.9,1.111l-108.8,190.631a2.226,2.226,0,0,0,1.9,3.341h66.509a2.187,2.187,0,0,0,1.9-1.111l108.8-190.631A2.226,2.226,0,0,0,366.016,284.917Z\"],\n    \"hooli\": [640, 512, [], \"f427\", \"M144.5 352l38.3.8c-13.2-4.6-26-10.2-38.3-16.8zm57.7-5.3v5.3l-19.4.8c36.5 12.5 69.9 14.2 94.7 7.2-19.9.2-45.8-2.6-75.3-13.3zm408.9-115.2c15.9 0 28.9-12.9 28.9-28.9s-12.9-24.5-28.9-24.5c-15.9 0-28.9 8.6-28.9 24.5s12.9 28.9 28.9 28.9zm-29 120.5H640V241.5h-57.9zm-73.7 0h57.9V156.7L508.4 184zm-31-119.4c-18.2-18.2-50.4-17.1-50.4-17.1s-32.3-1.1-50.4 17.1c-18.2 18.2-16.8 33.9-16.8 52.6s-1.4 34.3 16.8 52.5 50.4 17.1 50.4 17.1 32.3 1.1 50.4-17.1c18.2-18.2 16.8-33.8 16.8-52.5-.1-18.8 1.3-34.5-16.8-52.6zm-39.8 71.9c0 3.6-1.8 12.5-10.7 12.5s-10.7-8.9-10.7-12.5v-40.4c0-8.7 7.3-10.9 10.7-10.9s10.7 2.1 10.7 10.9zm-106.2-71.9c-18.2-18.2-50.4-17.1-50.4-17.1s-32.2-1.1-50.4 17.1c-1.9 1.9-3.7 3.9-5.3 6-38.2-29.6-72.5-46.5-102.1-61.1v-20.7l-22.5 10.6c-54.4-22.1-89-18.2-97.3.1 0 0-24.9 32.8 61.8 110.8V352h57.9v-28.6c-6.5-4.2-13-8.7-19.4-13.6-14.8-11.2-27.4-21.6-38.4-31.4v-31c13.1 14.7 30.5 31.4 53.4 50.3l4.5 3.6v-29.8c0-6.9 1.7-18.2 10.8-18.2s10.6 6.9 10.6 15V317c18 12.2 37.3 22.1 57.7 29.6v-93.9c0-18.7-13.4-37.4-40.6-37.4-15.8-.1-30.5 8.2-38.5 21.9v-54.3c41.9 20.9 83.9 46.5 99.9 58.3-10.2 14.6-9.3 28.1-9.3 43.7 0 18.7-1.4 34.3 16.8 52.5s50.4 17.1 50.4 17.1 32.3 1.1 50.4-17.1c18.2-18.2 16.7-33.8 16.7-52.5 0-18.5 1.5-34.2-16.7-52.3zM65.2 184v63.3c-48.7-54.5-38.9-76-35.2-79.1 13.5-11.4 37.5-8 64.4 2.1zm226.5 120.5c0 3.6-1.8 12.5-10.7 12.5s-10.7-8.9-10.7-12.5v-40.4c0-8.7 7.3-10.9 10.7-10.9s10.7 2.1 10.7 10.9z\"],\n    \"hornbill\": [512, 512, [], \"f592\", \"M76.38 370.3a37.8 37.8 0 1 1-32.07-32.42c-78.28-111.35 52-190.53 52-190.53-5.86 43-8.24 91.16-8.24 91.16-67.31 41.49.93 64.06 39.81 72.87a140.38 140.38 0 0 0 131.66 91.94c1.92 0 3.77-.21 5.67-.28l.11 18.86c-99.22 1.39-158.7-29.14-188.94-51.6zm108-327.7A37.57 37.57 0 0 0 181 21.45a37.95 37.95 0 1 0-31.17 54.22c-22.55 29.91-53.83 89.57-52.42 190l21.84-.15c0-.9-.14-1.77-.14-2.68A140.42 140.42 0 0 1 207 132.71c8-37.71 30.7-114.3 73.8-44.29 0 0 48.14 2.38 91.18 8.24 0 0-77.84-128-187.59-54.06zm304.19 134.17a37.94 37.94 0 1 0-53.84-28.7C403 126.13 344.89 99 251.28 100.33l.14 22.5c2.7-.15 5.39-.41 8.14-.41a140.37 140.37 0 0 1 130.49 88.76c39.1 9 105.06 31.58 38.46 72.54 0 0-2.34 48.13-8.21 91.16 0 0 133.45-81.16 49-194.61a37.45 37.45 0 0 0 19.31-3.5zM374.06 436.24c21.43-32.46 46.42-89.69 45.14-179.66l-19.52.14c.08 2.06.3 4.07.3 6.15a140.34 140.34 0 0 1-91.39 131.45c-8.85 38.95-31.44 106.66-72.77 39.49 0 0-48.12-2.34-91.19-8.22 0 0 79.92 131.34 191.9 51a37.5 37.5 0 0 0 3.64 14 37.93 37.93 0 1 0 33.89-54.29z\"],\n    \"hotjar\": [448, 512, [], \"f3b1\", \"M414.9 161.5C340.2 29 121.1 0 121.1 0S222.2 110.4 93 197.7C11.3 252.8-21 324.4 14 402.6c26.8 59.9 83.5 84.3 144.6 93.4-29.2-55.1-6.6-122.4-4.1-129.6 57.1 86.4 165 0 110.8-93.9 71 15.4 81.6 138.6 27.1 215.5 80.5-25.3 134.1-88.9 148.8-145.6 15.5-59.3 3.7-127.9-26.3-180.9z\"],\n    \"houzz\": [448, 512, [], \"f27c\", \"M275.9 330.7H171.3V480H17V32h109.5v104.5l305.1 85.6V480H275.9z\"],\n    \"html5\": [384, 512, [], \"f13b\", \"M0 32l34.9 395.8L191.5 480l157.6-52.2L384 32H0zm308.2 127.9H124.4l4.1 49.4h175.6l-13.6 148.4-97.9 27v.3h-1.1l-98.7-27.3-6-75.8h47.7L138 320l53.5 14.5 53.7-14.5 6-62.2H84.3L71.5 112.2h241.1l-4.4 47.7z\"],\n    \"hubspot\": [512, 512, [], \"f3b2\", \"M267.4 211.6c-25.1 23.7-40.8 57.3-40.8 94.6 0 29.3 9.7 56.3 26 78L203.1 434c-4.4-1.6-9.1-2.5-14-2.5-10.8 0-20.9 4.2-28.5 11.8-7.6 7.6-11.8 17.8-11.8 28.6s4.2 20.9 11.8 28.5c7.6 7.6 17.8 11.6 28.5 11.6 10.8 0 20.9-3.9 28.6-11.6 7.6-7.6 11.8-17.8 11.8-28.5 0-4.2-.6-8.2-1.9-12.1l50-50.2c22 16.9 49.4 26.9 79.3 26.9 71.9 0 130-58.3 130-130.2 0-65.2-47.7-119.2-110.2-128.7V116c17.5-7.4 28.2-23.8 28.2-42.9 0-26.1-20.9-47.9-47-47.9S311.2 47 311.2 73.1c0 19.1 10.7 35.5 28.2 42.9v61.2c-15.2 2.1-29.6 6.7-42.7 13.6-27.6-20.9-117.5-85.7-168.9-124.8 1.2-4.4 2-9 2-13.8C129.8 23.4 106.3 0 77.4 0 48.6 0 25.2 23.4 25.2 52.2c0 28.9 23.4 52.3 52.2 52.3 9.8 0 18.9-2.9 26.8-7.6l163.2 114.7zm89.5 163.6c-38.1 0-69-30.9-69-69s30.9-69 69-69 69 30.9 69 69-30.9 69-69 69z\"],\n    \"ideal\": [576, 512, [], \"e013\", \"M125.61,165.48a49.07,49.07,0,1,0,49.06,49.06A49.08,49.08,0,0,0,125.61,165.48ZM86.15,425.84h78.94V285.32H86.15Zm151.46-211.6c0-20-10-22.53-18.74-22.53H204.82V237.5h14.05C228.62,237.5,237.61,234.69,237.61,214.24Zm201.69,46V168.93h22.75V237.5h33.69C486.5,113.08,388.61,86.19,299.67,86.19H204.84V169h14c25.6,0,41.5,17.35,41.5,45.26,0,28.81-15.52,46-41.5,46h-14V425.88h94.83c144.61,0,194.94-67.16,196.72-165.64Zm-109.75,0H273.3V169h54.43v22.73H296v10.58h30V225H296V237.5h33.51Zm74.66,0-5.16-17.67H369.31l-5.18,17.67H340.47L368,168.92h32.35l27.53,91.34ZM299.65,32H32V480H299.65c161.85,0,251-79.73,251-224.52C550.62,172,518,32,299.65,32Zm0,426.92H53.07V53.07H299.65c142.1,0,229.9,64.61,229.9,202.41C529.55,389.57,448.55,458.92,299.65,458.92Zm83.86-264.85L376,219.88H392.4l-7.52-25.81Z\"],\n    \"imdb\": [448, 512, [], \"f2d8\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM21.3 229.2H21c.1-.1.2-.3.3-.4zM97 319.8H64V192h33zm113.2 0h-28.7v-86.4l-11.6 86.4h-20.6l-12.2-84.5v84.5h-29V192h42.8c3.3 19.8 6 39.9 8.7 59.9l7.6-59.9h43zm11.4 0V192h24.6c17.6 0 44.7-1.6 49 20.9 1.7 7.6 1.4 16.3 1.4 24.4 0 88.5 11.1 82.6-75 82.5zm160.9-29.2c0 15.7-2.4 30.9-22.2 30.9-9 0-15.2-3-20.9-9.8l-1.9 8.1h-29.8V192h31.7v41.7c6-6.5 12-9.2 20.9-9.2 21.4 0 22.2 12.8 22.2 30.1zM265 229.9c0-9.7 1.6-16-10.3-16v83.7c12.2.3 10.3-8.7 10.3-18.4zm85.5 26.1c0-5.4 1.1-12.7-6.2-12.7-6 0-4.9 8.9-4.9 12.7 0 .6-1.1 39.6 1.1 44.7.8 1.6 2.2 2.4 3.8 2.4 7.8 0 6.2-9 6.2-14.4z\"],\n    \"innosoft\": [448, 512, [], \"e080\", \"M422.559,159.71a27.379,27.379,0,0,0-13.866-23.337,26.42,26.42,0,0,0-26.211.133L73.943,314.647V176.261a11.955,11.955,0,0,1,6.047-10.34L218.066,86.208a12.153,12.153,0,0,1,11.922.025l32.656,18.853L112.581,191.723v56L359.642,105.086,241.129,36.679c-10.992-6.129-22.3-6.255-33.8-.27l-164.6,95.026c-10.634,6.12-16.771,16.39-17.29,29.124l0,191.5c.17,10.135,5.08,18.672,13.474,23.428a27.037,27.037,0,0,0,26.736-.045L374.057,197.376V335.657a11.976,11.976,0,0,1-5.92,10.368L230.025,425.77a12.175,12.175,0,0,1-11.937.062l-32.723-18.9,150.051-86.627v-56L88.367,406.932l118.794,68.583a33.88,33.88,0,0,0,34.25-.327l164.527-94.995c10.746-6.631,16.649-17.118,16.624-29.528Z\"],\n    \"instagram\": [448, 512, [], \"f16d\", \"M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z\"],\n    \"instagram-square\": [448, 512, [], \"e055\", \"M224,202.66A53.34,53.34,0,1,0,277.36,256,53.38,53.38,0,0,0,224,202.66Zm124.71-41a54,54,0,0,0-30.41-30.41c-21-8.29-71-6.43-94.3-6.43s-73.25-1.93-94.31,6.43a54,54,0,0,0-30.41,30.41c-8.28,21-6.43,71.05-6.43,94.33S91,329.26,99.32,350.33a54,54,0,0,0,30.41,30.41c21,8.29,71,6.43,94.31,6.43s73.24,1.93,94.3-6.43a54,54,0,0,0,30.41-30.41c8.35-21,6.43-71.05,6.43-94.33S357.1,182.74,348.75,161.67ZM224,338a82,82,0,1,1,82-82A81.9,81.9,0,0,1,224,338Zm85.38-148.3a19.14,19.14,0,1,1,19.13-19.14A19.1,19.1,0,0,1,309.42,189.74ZM400,32H48A48,48,0,0,0,0,80V432a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V80A48,48,0,0,0,400,32ZM382.88,322c-1.29,25.63-7.14,48.34-25.85,67s-41.4,24.63-67,25.85c-26.41,1.49-105.59,1.49-132,0-25.63-1.29-48.26-7.15-67-25.85s-24.63-41.42-25.85-67c-1.49-26.42-1.49-105.61,0-132,1.29-25.63,7.07-48.34,25.85-67s41.47-24.56,67-25.78c26.41-1.49,105.59-1.49,132,0,25.63,1.29,48.33,7.15,67,25.85s24.63,41.42,25.85,67.05C384.37,216.44,384.37,295.56,382.88,322Z\"],\n    \"instalod\": [512, 512, [], \"e081\", \"M153.384,480H387.113L502.554,275.765,204.229,333.211ZM504.726,240.078,387.113,32H155.669L360.23,267.9ZM124.386,48.809,7.274,256,123.236,461.154,225.627,165.561Z\"],\n    \"intercom\": [448, 512, [], \"f7af\", \"M392 32H56C25.1 32 0 57.1 0 88v336c0 30.9 25.1 56 56 56h336c30.9 0 56-25.1 56-56V88c0-30.9-25.1-56-56-56zm-108.3 82.1c0-19.8 29.9-19.8 29.9 0v199.5c0 19.8-29.9 19.8-29.9 0V114.1zm-74.6-7.5c0-19.8 29.9-19.8 29.9 0v216.5c0 19.8-29.9 19.8-29.9 0V106.6zm-74.7 7.5c0-19.8 29.9-19.8 29.9 0v199.5c0 19.8-29.9 19.8-29.9 0V114.1zM59.7 144c0-19.8 29.9-19.8 29.9 0v134.3c0 19.8-29.9 19.8-29.9 0V144zm323.4 227.8c-72.8 63-241.7 65.4-318.1 0-15-12.8 4.4-35.5 19.4-22.7 65.9 55.3 216.1 53.9 279.3 0 14.9-12.9 34.3 9.8 19.4 22.7zm5.2-93.5c0 19.8-29.9 19.8-29.9 0V144c0-19.8 29.9-19.8 29.9 0v134.3z\"],\n    \"internet-explorer\": [512, 512, [], \"f26b\", \"M483.049 159.706c10.855-24.575 21.424-60.438 21.424-87.871 0-72.722-79.641-98.371-209.673-38.577-107.632-7.181-211.221 73.67-237.098 186.457 30.852-34.862 78.271-82.298 121.977-101.158C125.404 166.85 79.128 228.002 43.992 291.725 23.246 329.651 0 390.94 0 436.747c0 98.575 92.854 86.5 180.251 42.006 31.423 15.43 66.559 15.573 101.695 15.573 97.124 0 184.249-54.294 216.814-146.022H377.927c-52.509 88.593-196.819 52.996-196.819-47.436H509.9c6.407-43.581-1.655-95.715-26.851-141.162zM64.559 346.877c17.711 51.15 53.703 95.871 100.266 123.304-88.741 48.94-173.267 29.096-100.266-123.304zm115.977-108.873c2-55.151 50.276-94.871 103.98-94.871 53.418 0 101.981 39.72 103.981 94.871H180.536zm184.536-187.6c21.425-10.287 48.563-22.003 72.558-22.003 31.422 0 54.274 21.717 54.274 53.722 0 20.003-7.427 49.007-14.569 67.867-26.28-42.292-65.986-81.584-112.263-99.586z\"],\n    \"invision\": [448, 512, [], \"f7b0\", \"M407.4 32H40.6C18.2 32 0 50.2 0 72.6v366.8C0 461.8 18.2 480 40.6 480h366.8c22.4 0 40.6-18.2 40.6-40.6V72.6c0-22.4-18.2-40.6-40.6-40.6zM176.1 145.6c.4 23.4-22.4 27.3-26.6 27.4-14.9 0-27.1-12-27.1-27 .1-35.2 53.1-35.5 53.7-.4zM332.8 377c-65.6 0-34.1-74-25-106.6 14.1-46.4-45.2-59-59.9.7l-25.8 103.3H177l8.1-32.5c-31.5 51.8-94.6 44.4-94.6-4.3.1-14.3.9-14 23-104.1H81.7l9.7-35.6h76.4c-33.6 133.7-32.6 126.9-32.9 138.2 0 20.9 40.9 13.5 57.4-23.2l19.8-79.4h-32.3l9.7-35.6h68.8l-8.9 40.5c40.5-75.5 127.9-47.8 101.8 38-14.2 51.1-14.6 50.7-14.9 58.8 0 15.5 17.5 22.6 31.8-16.9L386 325c-10.5 36.7-29.4 52-53.2 52z\"],\n    \"ioxhost\": [640, 512, [], \"f208\", \"M616 160h-67.3C511.2 70.7 422.9 8 320 8 183 8 72 119 72 256c0 16.4 1.6 32.5 4.7 48H24c-13.3 0-24 10.8-24 24 0 13.3 10.7 24 24 24h67.3c37.5 89.3 125.8 152 228.7 152 137 0 248-111 248-248 0-16.4-1.6-32.5-4.7-48H616c13.3 0 24-10.8 24-24 0-13.3-10.7-24-24-24zm-96 96c0 110.5-89.5 200-200 200-75.7 0-141.6-42-175.5-104H424c13.3 0 24-10.8 24-24 0-13.3-10.7-24-24-24H125.8c-3.8-15.4-5.8-31.4-5.8-48 0-110.5 89.5-200 200-200 75.7 0 141.6 42 175.5 104H216c-13.3 0-24 10.8-24 24 0 13.3 10.7 24 24 24h298.2c3.8 15.4 5.8 31.4 5.8 48zm-304-24h208c13.3 0 24 10.7 24 24 0 13.2-10.7 24-24 24H216c-13.3 0-24-10.7-24-24 0-13.2 10.7-24 24-24z\"],\n    \"itch-io\": [512, 512, [], \"f83a\", \"M71.92 34.77C50.2 47.67 7.4 96.84 7 109.73v21.34c0 27.06 25.29 50.84 48.25 50.84 27.57 0 50.54-22.85 50.54-50 0 27.12 22.18 50 49.76 50s49-22.85 49-50c0 27.12 23.59 50 51.16 50h.5c27.57 0 51.16-22.85 51.16-50 0 27.12 21.47 50 49 50s49.76-22.85 49.76-50c0 27.12 23 50 50.54 50 23 0 48.25-23.78 48.25-50.84v-21.34c-.4-12.9-43.2-62.07-64.92-75C372.56 32.4 325.76 32 256 32S91.14 33.1 71.92 34.77zm132.32 134.39c-22 38.4-77.9 38.71-99.85.25-13.17 23.14-43.17 32.07-56 27.66-3.87 40.15-13.67 237.13 17.73 269.15 80 18.67 302.08 18.12 379.76 0 31.65-32.27 21.32-232 17.75-269.15-12.92 4.44-42.88-4.6-56-27.66-22 38.52-77.85 38.1-99.85-.24-7.1 12.49-23.05 28.94-51.76 28.94a57.54 57.54 0 0 1-51.75-28.94zm-41.58 53.77c16.47 0 31.09 0 49.22 19.78a436.91 436.91 0 0 1 88.18 0C318.22 223 332.85 223 349.31 223c52.33 0 65.22 77.53 83.87 144.45 17.26 62.15-5.52 63.67-33.95 63.73-42.15-1.57-65.49-32.18-65.49-62.79-39.25 6.43-101.93 8.79-155.55 0 0 30.61-23.34 61.22-65.49 62.79-28.42-.06-51.2-1.58-33.94-63.73 18.67-67 31.56-144.45 83.88-144.45zM256 270.79s-44.38 40.77-52.35 55.21l29-1.17v25.32c0 1.55 21.34.16 23.33.16 11.65.54 23.31 1 23.31-.16v-25.28l29 1.17c-8-14.48-52.35-55.24-52.35-55.24z\"],\n    \"itunes\": [448, 512, [], \"f3b4\", \"M223.6 80.3C129 80.3 52.5 157 52.5 251.5S129 422.8 223.6 422.8s171.2-76.7 171.2-171.2c0-94.6-76.7-171.3-171.2-171.3zm79.4 240c-3.2 13.6-13.5 21.2-27.3 23.8-12.1 2.2-22.2 2.8-31.9-5-11.8-10-12-26.4-1.4-36.8 8.4-8 20.3-9.6 38-12.8 3-.5 5.6-1.2 7.7-3.7 3.2-3.6 2.2-2 2.2-80.8 0-5.6-2.7-7.1-8.4-6.1-4 .7-91.9 17.1-91.9 17.1-5 1.1-6.7 2.6-6.7 8.3 0 116.1.5 110.8-1.2 118.5-2.1 9-7.6 15.8-14.9 19.6-8.3 4.6-23.4 6.6-31.4 5.2-21.4-4-28.9-28.7-14.4-42.9 8.4-8 20.3-9.6 38-12.8 3-.5 5.6-1.2 7.7-3.7 5-5.7.9-127 2.6-133.7.4-2.6 1.5-4.8 3.5-6.4 2.1-1.7 5.8-2.7 6.7-2.7 101-19 113.3-21.4 115.1-21.4 5.7-.4 9 3 9 8.7-.1 170.6.4 161.4-1 167.6zM345.2 32H102.8C45.9 32 0 77.9 0 134.8v242.4C0 434.1 45.9 480 102.8 480h242.4c57 0 102.8-45.9 102.8-102.8V134.8C448 77.9 402.1 32 345.2 32zM223.6 444c-106.3 0-192.5-86.2-192.5-192.5S117.3 59 223.6 59s192.5 86.2 192.5 192.5S329.9 444 223.6 444z\"],\n    \"itunes-note\": [384, 512, [], \"f3b5\", \"M381.9 388.2c-6.4 27.4-27.2 42.8-55.1 48-24.5 4.5-44.9 5.6-64.5-10.2-23.9-20.1-24.2-53.4-2.7-74.4 17-16.2 40.9-19.5 76.8-25.8 6-1.1 11.2-2.5 15.6-7.4 6.4-7.2 4.4-4.1 4.4-163.2 0-11.2-5.5-14.3-17-12.3-8.2 1.4-185.7 34.6-185.7 34.6-10.2 2.2-13.4 5.2-13.4 16.7 0 234.7 1.1 223.9-2.5 239.5-4.2 18.2-15.4 31.9-30.2 39.5-16.8 9.3-47.2 13.4-63.4 10.4-43.2-8.1-58.4-58-29.1-86.6 17-16.2 40.9-19.5 76.8-25.8 6-1.1 11.2-2.5 15.6-7.4 10.1-11.5 1.8-256.6 5.2-270.2.8-5.2 3-9.6 7.1-12.9 4.2-3.5 11.8-5.5 13.4-5.5 204-38.2 228.9-43.1 232.4-43.1 11.5-.8 18.1 6 18.1 17.6.2 344.5 1.1 326-1.8 338.5z\"],\n    \"java\": [384, 512, [], \"f4e4\", \"M277.74 312.9c9.8-6.7 23.4-12.5 23.4-12.5s-38.7 7-77.2 10.2c-47.1 3.9-97.7 4.7-123.1 1.3-60.1-8 33-30.1 33-30.1s-36.1-2.4-80.6 19c-52.5 25.4 130 37 224.5 12.1zm-85.4-32.1c-19-42.7-83.1-80.2 0-145.8C296 53.2 242.84 0 242.84 0c21.5 84.5-75.6 110.1-110.7 162.6-23.9 35.9 11.7 74.4 60.2 118.2zm114.6-176.2c.1 0-175.2 43.8-91.5 140.2 24.7 28.4-6.5 54-6.5 54s62.7-32.4 33.9-72.9c-26.9-37.8-47.5-56.6 64.1-121.3zm-6.1 270.5a12.19 12.19 0 0 1-2 2.6c128.3-33.7 81.1-118.9 19.8-97.3a17.33 17.33 0 0 0-8.2 6.3 70.45 70.45 0 0 1 11-3c31-6.5 75.5 41.5-20.6 91.4zM348 437.4s14.5 11.9-15.9 21.2c-57.9 17.5-240.8 22.8-291.6.7-18.3-7.9 16-19 26.8-21.3 11.2-2.4 17.7-2 17.7-2-20.3-14.3-131.3 28.1-56.4 40.2C232.84 509.4 401 461.3 348 437.4zM124.44 396c-78.7 22 47.9 67.4 148.1 24.5a185.89 185.89 0 0 1-28.2-13.8c-44.7 8.5-65.4 9.1-106 4.5-33.5-3.8-13.9-15.2-13.9-15.2zm179.8 97.2c-78.7 14.8-175.8 13.1-233.3 3.6 0-.1 11.8 9.7 72.4 13.6 92.2 5.9 233.8-3.3 237.1-46.9 0 0-6.4 16.5-76.2 29.7zM260.64 353c-59.2 11.4-93.5 11.1-136.8 6.6-33.5-3.5-11.6-19.7-11.6-19.7-86.8 28.8 48.2 61.4 169.5 25.9a60.37 60.37 0 0 1-21.1-12.8z\"],\n    \"jedi-order\": [448, 512, [], \"f50e\", \"M398.5 373.6c95.9-122.1 17.2-233.1 17.2-233.1 45.4 85.8-41.4 170.5-41.4 170.5 105-171.5-60.5-271.5-60.5-271.5 96.9 72.7-10.1 190.7-10.1 190.7 85.8 158.4-68.6 230.1-68.6 230.1s-.4-16.9-2.2-85.7c4.3 4.5 34.5 36.2 34.5 36.2l-24.2-47.4 62.6-9.1-62.6-9.1 20.2-55.5-31.4 45.9c-2.2-87.7-7.8-305.1-7.9-306.9v-2.4 1-1 2.4c0 1-5.6 219-7.9 306.9l-31.4-45.9 20.2 55.5-62.6 9.1 62.6 9.1-24.2 47.4 34.5-36.2c-1.8 68.8-2.2 85.7-2.2 85.7s-154.4-71.7-68.6-230.1c0 0-107-118.1-10.1-190.7 0 0-165.5 99.9-60.5 271.5 0 0-86.8-84.8-41.4-170.5 0 0-78.7 111 17.2 233.1 0 0-26.2-16.1-49.4-77.7 0 0 16.9 183.3 222 185.7h4.1c205-2.4 222-185.7 222-185.7-23.6 61.5-49.9 77.7-49.9 77.7z\"],\n    \"jenkins\": [512, 512, [], \"f3b6\", \"M487.1 425c-1.4-11.2-19-23.1-28.2-31.9-5.1-5-29-23.1-30.4-29.9-1.4-6.6 9.7-21.5 13.3-28.9 5.1-10.7 8.8-23.7 11.3-32.6 18.8-66.1 20.7-156.9-6.2-211.2-10.2-20.6-38.6-49-56.4-62.5-42-31.7-119.6-35.3-170.1-16.6-14.1 5.2-27.8 9.8-40.1 17.1-33.1 19.4-68.3 32.5-78.1 71.6-24.2 10.8-31.5 41.8-30.3 77.8.2 7 4.1 15.8 2.7 22.4-.7 3.3-5.2 7.6-6.1 9.8-11.6 27.7-2.3 64 11.1 83.7 8.1 11.9 21.5 22.4 39.2 25.2.7 10.6 3.3 19.7 8.2 30.4 3.1 6.8 14.7 19 10.4 27.7-2.2 4.4-21 13.8-27.3 17.6C89 407.2 73.7 415 54.2 429c-12.6 9-32.3 10.2-29.2 31.1 2.1 14.1 10.1 31.6 14.7 45.8.7 2 1.4 4.1 2.1 6h422c4.9-15.3 9.7-30.9 14.6-47.2 3.4-11.4 10.2-27.8 8.7-39.7zM205.9 33.7c1.8-.5 3.4.7 4.9 2.4-.2 5.2-5.4 5.1-8.9 6.8-5.4 6.7-13.4 9.8-20 17.2-6.8 7.5-14.4 27.7-23.4 30-4.5 1.1-9.7-.8-13.6-.5-10.4.7-17.7 6-28.3 7.5 13.6-29.9 56.1-54 89.3-63.4zm-104.8 93.6c13.5-14.9 32.1-24.1 54.8-25.9 11.7 29.7-8.4 65-.9 97.6 2.3 9.9 10.2 25.4-2.4 25.7.3-28.3-34.8-46.3-61.3-29.6-1.8-21.5-4.9-51.7 9.8-67.8zm36.7 200.2c-1-4.1-2.7-12.9-2.3-15.1 1.6-8.7 17.1-12.5 11-24.7-11.3-.1-13.8 10.2-24.1 11.3-26.7 2.6-45.6-35.4-44.4-58.4 1-19.5 17.6-38.2 40.1-35.8 16 1.8 21.4 19.2 24.5 34.7 9.2.5 22.5-.4 26.9-7.6-.6-17.5-8.8-31.6-8.2-47.7 1-30.3 17.5-57.6 4.8-87.4 13.6-30.9 53.5-55.3 83.1-70 36.6-18.3 94.9-3.7 129.3 15.8 19.7 11.1 34.4 32.7 48.3 50.7-19.5-5.8-36.1 4.2-33.1 20.3 16.3-14.9 44.2-.2 52.5 16.4 7.9 15.8 7.8 39.3 9 62.8 2.9 57-10.4 115.9-39.1 157.1-7.7 11-14.1 23-24.9 30.6-26 18.2-65.4 34.7-99.2 23.4-44.7-15-65-44.8-89.5-78.8.7 18.7 13.8 34.1 26.8 48.4 11.3 12.5 25 26.6 39.7 32.4-12.3-2.9-31.1-3.8-36.2 7.2-28.6-1.9-55.1-4.8-68.7-24.2-10.6-15.4-21.4-41.4-26.3-61.4zm222 124.1c4.1-3 11.1-2.9 17.4-3.6-5.4-2.7-13-3.7-19.3-2.2-.1-4.2-2-6.8-3.2-10.2 10.6-3.8 35.5-28.5 49.6-20.3 6.7 3.9 9.5 26.2 10.1 37 .4 9-.8 18-4.5 22.8-18.8-.6-35.8-2.8-50.7-7 .9-6.1-1-12.1.6-16.5zm-17.2-20c-16.8.8-26-1.2-38.3-10.8.2-.8 1.4-.5 1.5-1.4 18 8 40.8-3.3 59-4.9-7.9 5.1-14.6 11.6-22.2 17.1zm-12.1 33.2c-1.6-9.4-3.5-12-2.8-20.2 25-16.6 29.7 28.6 2.8 20.2zM226 438.6c-11.6-.7-48.1-14-38.5-23.7 9.4 6.5 27.5 4.9 41.3 7.3.8 4.4-2.8 10.2-2.8 16.4zM57.7 497.1c-4.3-12.7-9.2-25.1-14.8-36.9 30.8-23.8 65.3-48.9 102.2-63.5 2.8-1.1 23.2 25.4 26.2 27.6 16.5 11.7 37 21 56.2 30.2 1.2 8.8 3.9 20.2 8.7 35.5.7 2.3 1.4 4.7 2.2 7.2H57.7zm240.6 5.7h-.8c.3-.2.5-.4.8-.5v.5zm7.5-5.7c2.1-1.4 4.3-2.8 6.4-4.3 1.1 1.4 2.2 2.8 3.2 4.3h-9.6zm15.1-24.7c-10.8 7.3-20.6 18.3-33.3 25.2-6 3.3-27 11.7-33.4 10.2-3.6-.8-3.9-5.3-5.4-9.5-3.1-9-10.1-23.4-10.8-37-.8-17.2-2.5-46 16-42.4 14.9 2.9 32.3 9.7 43.9 16.1 7.1 3.9 11.1 8.6 21.9 9.5-.1 1.4-.1 2.8-.2 4.3-5.9 3.9-15.3 3.8-21.8 7.1 9.5.4 17 2.7 23.5 5.9-.1 3.4-.3 7-.4 10.6zm53.4 24.7h-14c-.1-3.2-2.8-5.8-6.1-5.8s-5.9 2.6-6.1 5.8h-17.4c-2.8-4.4-5.7-8.6-8.9-12.5 2.1-2.2 4-4.7 6-6.9 9 3.7 14.8-4.9 21.7-4.2 7.9.8 14.2 11.7 25.4 11l-.6 12.6zm8.7 0c.2-4 .4-7.8.6-11.5 15.6-7.3 29 1.3 35.7 11.5H383zm83.4-37c-2.3 11.2-5.8 24-9.9 37.1-.2-.1-.4-.1-.6-.1H428c.6-1.1 1.2-2.2 1.9-3.3-2.6-6.1-9-8.7-10.9-15.5 12.1-22.7 6.5-93.4-24.2-78.5 4.3-6.3 15.6-11.5 20.8-19.3 13 10.4 20.8 20.3 33.2 31.4 6.8 6 20 13.3 21.4 23.1.8 5.5-2.6 18.9-3.8 25.1zM222.2 130.5c5.4-14.9 27.2-34.7 45-32 7.7 1.2 18 8.2 12.2 17.7-30.2-7-45.2 12.6-54.4 33.1-8.1-2-4.9-13.1-2.8-18.8zm184.1 63.1c8.2-3.6 22.4-.7 29.6-5.3-4.2-11.5-10.3-21.4-9.3-37.7.5 0 1 0 1.4.1 6.8 14.2 12.7 29.2 21.4 41.7-5.7 13.5-43.6 25.4-43.1 1.2zm20.4-43zm-117.2 45.7c-6.8-10.9-19-32.5-14.5-45.3 6.5 11.9 8.6 24.4 17.8 33.3 4.1 4 12.2 9 8.2 20.2-.9 2.7-7.8 8.6-11.7 9.7-14.4 4.3-47.9.9-36.6-17.1 11.9.7 27.9 7.8 36.8-.8zm27.3 70c3.8 6.6 1.4 18.7 12.1 20.6 20.2 3.4 43.6-12.3 58.1-17.8 9-15.2-.8-20.7-8.9-30.5-16.6-20-38.8-44.8-38-74.7 6.7-4.9 7.3 7.4 8.2 9.7 8.7 20.3 30.4 46.2 46.3 63.5 3.9 4.3 10.3 8.4 11 11.2 2.1 8.2-5.4 18-4.5 23.5-21.7 13.9-45.8 29.1-81.4 25.6-7.4-6.7-10.3-21.4-2.9-31.1zm-201.3-9.2c-6.8-3.9-8.4-21-16.4-21.4-11.4-.7-9.3 22.2-9.3 35.5-7.8-7.1-9.2-29.1-3.5-40.3-6.6-3.2-9.5 3.6-13.1 5.9 4.7-34.1 49.8-15.8 42.3 20.3zm299.6 28.8c-10.1 19.2-24.4 40.4-54 41-.6-6.2-1.1-15.6 0-19.4 22.7-2.2 36.6-13.7 54-21.6zm-141.9 12.4c18.9 9.9 53.6 11 79.3 10.2 1.4 5.6 1.3 12.6 1.4 19.4-33 1.8-72-6.4-80.7-29.6zm92.2 46.7c-1.7 4.3-5.3 9.3-9.8 11.1-12.1 4.9-45.6 8.7-62.4-.3-10.7-5.7-17.5-18.5-23.4-26-2.8-3.6-16.9-12.9-.2-12.9 13.1 32.7 58 29 95.8 28.1z\"],\n    \"jira\": [496, 512, [], \"f7b1\", \"M490 241.7C417.1 169 320.6 71.8 248.5 0 83 164.9 6 241.7 6 241.7c-7.9 7.9-7.9 20.7 0 28.7C138.8 402.7 67.8 331.9 248.5 512c379.4-378 15.7-16.7 241.5-241.7 8-7.9 8-20.7 0-28.6zm-241.5 90l-76-75.7 76-75.7 76 75.7-76 75.7z\"],\n    \"joget\": [496, 512, [], \"f3b7\", \"M378.1 45C337.6 19.9 292.6 8 248.2 8 165 8 83.8 49.9 36.9 125.9c-71.9 116.6-35.6 269.3 81 341.2s269.3 35.6 341.2-80.9c71.9-116.6 35.6-269.4-81-341.2zm51.8 323.2c-40.4 65.5-110.4 101.5-182 101.5-6.8 0-13.6-.4-20.4-1-9-13.6-19.9-33.3-23.7-42.4-5.7-13.7-27.2-45.6 31.2-67.1 51.7-19.1 176.7-16.5 208.8-17.6-4 9-8.6 17.9-13.9 26.6zm-200.8-86.3c-55.5-1.4-81.7-20.8-58.5-48.2s51.1-40.7 68.9-51.2c17.9-10.5 27.3-33.7-23.6-29.7C87.3 161.5 48.6 252.1 37.6 293c-8.8-49.7-.1-102.7 28.5-149.1C128 43.4 259.6 12.2 360.1 74.1c74.8 46.1 111.2 130.9 99.3 212.7-24.9-.5-179.3-3.6-230.3-4.9zm183.8-54.8c-22.7-6-57 11.3-86.7 27.2-29.7 15.8-31.1 8.2-31.1 8.2s40.2-28.1 50.7-34.5 31.9-14 13.4-24.6c-3.2-1.8-6.7-2.7-10.4-2.7-17.8 0-41.5 18.7-67.5 35.6-31.5 20.5-65.3 31.3-65.3 31.3l169.5-1.6 46.5-23.4s3.6-9.5-19.1-15.5z\"],\n    \"joomla\": [448, 512, [], \"f1aa\", \"M.6 92.1C.6 58.8 27.4 32 60.4 32c30 0 54.5 21.9 59.2 50.2 32.6-7.6 67.1.6 96.5 30l-44.3 44.3c-20.5-20.5-42.6-16.3-55.4-3.5-14.3 14.3-14.3 37.9 0 52.2l99.5 99.5-44 44.3c-87.7-87.2-49.7-49.7-99.8-99.7-26.8-26.5-35-64.8-24.8-98.9C20.4 144.6.6 120.7.6 92.1zm129.5 116.4l44.3 44.3c10-10 89.7-89.7 99.7-99.8 14.3-14.3 37.6-14.3 51.9 0 12.8 12.8 17 35-3.5 55.4l44 44.3c31.2-31.2 38.5-67.6 28.9-101.2 29.2-4.1 51.9-29.2 51.9-59.5 0-33.2-26.8-60.1-59.8-60.1-30.3 0-55.4 22.5-59.5 51.6-33.8-9.9-71.7-1.5-98.3 25.1-18.3 19.1-71.1 71.5-99.6 99.9zm266.3 152.2c8.2-32.7-.9-68.5-26.3-93.9-11.8-12.2 5 4.7-99.5-99.7l-44.3 44.3 99.7 99.7c14.3 14.3 14.3 37.6 0 51.9-12.8 12.8-35 17-55.4-3.5l-44 44.3c27.6 30.2 68 38.8 102.7 28 5.5 27.4 29.7 48.1 58.9 48.1 33 0 59.8-26.8 59.8-60.1 0-30.2-22.5-55-51.6-59.1zm-84.3-53.1l-44-44.3c-87 86.4-50.4 50.4-99.7 99.8-14.3 14.3-37.6 14.3-51.9 0-13.1-13.4-16.9-35.3 3.2-55.4l-44-44.3c-30.2 30.2-38 65.2-29.5 98.3-26.7 6-46.2 29.9-46.2 58.2C0 453.2 26.8 480 59.8 480c28.6 0 52.5-19.8 58.6-46.7 32.7 8.2 68.5-.6 94.2-26 32.1-32 12.2-12.4 99.5-99.7z\"],\n    \"js\": [448, 512, [], \"f3b8\", \"M0 32v448h448V32H0zm243.8 349.4c0 43.6-25.6 63.5-62.9 63.5-33.7 0-53.2-17.4-63.2-38.5l34.3-20.7c6.6 11.7 12.6 21.6 27.1 21.6 13.8 0 22.6-5.4 22.6-26.5V237.7h42.1v143.7zm99.6 63.5c-39.1 0-64.4-18.6-76.7-43l34.3-19.8c9 14.7 20.8 25.6 41.5 25.6 17.4 0 28.6-8.7 28.6-20.8 0-14.4-11.4-19.5-30.7-28l-10.5-4.5c-30.4-12.9-50.5-29.2-50.5-63.5 0-31.6 24.1-55.6 61.6-55.6 26.8 0 46 9.3 59.8 33.7L368 290c-7.2-12.9-15-18-27.1-18-12.3 0-20.1 7.8-20.1 18 0 12.6 7.8 17.7 25.9 25.6l10.5 4.5c35.8 15.3 55.9 31 55.9 66.2 0 37.8-29.8 58.6-69.7 58.6z\"],\n    \"js-square\": [448, 512, [], \"f3b9\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM243.8 381.4c0 43.6-25.6 63.5-62.9 63.5-33.7 0-53.2-17.4-63.2-38.5l34.3-20.7c6.6 11.7 12.6 21.6 27.1 21.6 13.8 0 22.6-5.4 22.6-26.5V237.7h42.1v143.7zm99.6 63.5c-39.1 0-64.4-18.6-76.7-43l34.3-19.8c9 14.7 20.8 25.6 41.5 25.6 17.4 0 28.6-8.7 28.6-20.8 0-14.4-11.4-19.5-30.7-28l-10.5-4.5c-30.4-12.9-50.5-29.2-50.5-63.5 0-31.6 24.1-55.6 61.6-55.6 26.8 0 46 9.3 59.8 33.7L368 290c-7.2-12.9-15-18-27.1-18-12.3 0-20.1 7.8-20.1 18 0 12.6 7.8 17.7 25.9 25.6l10.5 4.5c35.8 15.3 55.9 31 55.9 66.2 0 37.8-29.8 58.6-69.7 58.6z\"],\n    \"jsfiddle\": [576, 512, [], \"f1cc\", \"M510.634 237.462c-4.727-2.621-5.664-5.748-6.381-10.776-2.352-16.488-3.539-33.619-9.097-49.095-35.895-99.957-153.99-143.386-246.849-91.646-27.37 15.25-48.971 36.369-65.493 63.903-3.184-1.508-5.458-2.71-7.824-3.686-30.102-12.421-59.049-10.121-85.331 9.167-25.531 18.737-36.422 44.548-32.676 76.408.355 3.025-1.967 7.621-4.514 9.545-39.712 29.992-56.031 78.065-41.902 124.615 13.831 45.569 57.514 79.796 105.608 81.433 30.291 1.031 60.637.546 90.959.539 84.041-.021 168.09.531 252.12-.48 52.664-.634 96.108-36.873 108.212-87.293 11.54-48.074-11.144-97.3-56.832-122.634zm21.107 156.88c-18.23 22.432-42.343 35.253-71.28 35.65-56.874.781-113.767.23-170.652.23 0 .7-163.028.159-163.728.154-43.861-.332-76.739-19.766-95.175-59.995-18.902-41.245-4.004-90.848 34.186-116.106 9.182-6.073 12.505-11.566 10.096-23.136-5.49-26.361 4.453-47.956 26.42-62.981 22.987-15.723 47.422-16.146 72.034-3.083 10.269 5.45 14.607 11.564 22.198-2.527 14.222-26.399 34.557-46.727 60.671-61.294 97.46-54.366 228.37 7.568 230.24 132.697.122 8.15 2.412 12.428 9.848 15.894 57.56 26.829 74.456 96.122 35.142 144.497zm-87.789-80.499c-5.848 31.157-34.622 55.096-66.666 55.095-16.953-.001-32.058-6.545-44.079-17.705-27.697-25.713-71.141-74.98-95.937-93.387-20.056-14.888-41.99-12.333-60.272 3.782-49.996 44.071 15.859 121.775 67.063 77.188 4.548-3.96 7.84-9.543 12.744-12.844 8.184-5.509 20.766-.884 13.168 10.622-17.358 26.284-49.33 38.197-78.863 29.301-28.897-8.704-48.84-35.968-48.626-70.179 1.225-22.485 12.364-43.06 35.414-55.965 22.575-12.638 46.369-13.146 66.991 2.474C295.68 280.7 320.467 323.97 352.185 343.47c24.558 15.099 54.254 7.363 68.823-17.506 28.83-49.209-34.592-105.016-78.868-63.46-3.989 3.744-6.917 8.932-11.41 11.72-10.975 6.811-17.333-4.113-12.809-10.353 20.703-28.554 50.464-40.44 83.271-28.214 31.429 11.714 49.108 44.366 42.76 78.186z\"],\n    \"kaggle\": [320, 512, [], \"f5fa\", \"M304.2 501.5L158.4 320.3 298.2 185c2.6-2.7 1.7-10.5-5.3-10.5h-69.2c-3.5 0-7 1.8-10.5 5.3L80.9 313.5V7.5q0-7.5-7.5-7.5H21.5Q14 0 14 7.5v497q0 7.5 7.5 7.5h51.9q7.5 0 7.5-7.5v-109l30.8-29.3 110.5 140.6c3 3.5 6.5 5.3 10.5 5.3h66.9q5.25 0 6-3z\"],\n    \"keybase\": [448, 512, [], \"f4f5\", \"M286.17 419a18 18 0 1 0 18 18 18 18 0 0 0-18-18zm111.92-147.6c-9.5-14.62-39.37-52.45-87.26-73.71q-9.1-4.06-18.38-7.27a78.43 78.43 0 0 0-47.88-104.13c-12.41-4.1-23.33-6-32.41-5.77-.6-2-1.89-11 9.4-35L198.66 32l-5.48 7.56c-8.69 12.06-16.92 23.55-24.34 34.89a51 51 0 0 0-8.29-1.25c-41.53-2.45-39-2.33-41.06-2.33-50.61 0-50.75 52.12-50.75 45.88l-2.36 36.68c-1.61 27 19.75 50.21 47.63 51.85l8.93.54a214 214 0 0 0-46.29 35.54C14 304.66 14 374 14 429.77v33.64l23.32-29.8a148.6 148.6 0 0 0 14.56 37.56c5.78 10.13 14.87 9.45 19.64 7.33 4.21-1.87 10-6.92 3.75-20.11a178.29 178.29 0 0 1-15.76-53.13l46.82-59.83-24.66 74.11c58.23-42.4 157.38-61.76 236.25-38.59 34.2 10.05 67.45.69 84.74-23.84.72-1 1.2-2.16 1.85-3.22a156.09 156.09 0 0 1 2.8 28.43c0 23.3-3.69 52.93-14.88 81.64-2.52 6.46 1.76 14.5 8.6 15.74 7.42 1.57 15.33-3.1 18.37-11.15C429 443 434 414 434 382.32c0-38.58-13-77.46-35.91-110.92zM142.37 128.58l-15.7-.93-1.39 21.79 13.13.78a93 93 0 0 0 .32 19.57l-22.38-1.34a12.28 12.28 0 0 1-11.76-12.79L107 119c1-12.17 13.87-11.27 13.26-11.32l29.11 1.73a144.35 144.35 0 0 0-7 19.17zm148.42 172.18a10.51 10.51 0 0 1-14.35-1.39l-9.68-11.49-34.42 27a8.09 8.09 0 0 1-11.13-1.08l-15.78-18.64a7.38 7.38 0 0 1 1.34-10.34l34.57-27.18-14.14-16.74-17.09 13.45a7.75 7.75 0 0 1-10.59-1s-3.72-4.42-3.8-4.53a7.38 7.38 0 0 1 1.37-10.34L214 225.19s-18.51-22-18.6-22.14a9.56 9.56 0 0 1 1.74-13.42 10.38 10.38 0 0 1 14.3 1.37l81.09 96.32a9.58 9.58 0 0 1-1.74 13.44zM187.44 419a18 18 0 1 0 18 18 18 18 0 0 0-18-18z\"],\n    \"keycdn\": [512, 512, [], \"f3ba\", \"M63.8 409.3l60.5-59c32.1 42.8 71.1 66 126.6 67.4 30.5.7 60.3-7 86.4-22.4 5.1 5.3 18.5 19.5 20.9 22-32.2 20.7-69.6 31.1-108.1 30.2-43.3-1.1-84.6-16.7-117.7-44.4.3-.6-38.2 37.5-38.6 37.9 9.5 29.8-13.1 62.4-46.3 62.4C20.7 503.3 0 481.7 0 454.9c0-34.3 33.1-56.6 63.8-45.6zm354.9-252.4c19.1 31.3 29.6 67.4 28.7 104-1.1 44.8-19 87.5-48.6 121 .3.3 23.8 25.2 24.1 25.5 9.6-1.3 19.2 2 25.9 9.1 11.3 12 10.9 30.9-1.1 42.4-12 11.3-30.9 10.9-42.4-1.1-6.7-7-9.4-16.8-7.6-26.3-24.9-26.6-44.4-47.2-44.4-47.2 42.7-34.1 63.3-79.6 64.4-124.2.7-28.9-7.2-57.2-21.1-82.2l22.1-21zM104 53.1c6.7 7 9.4 16.8 7.6 26.3l45.9 48.1c-4.7 3.8-13.3 10.4-22.8 21.3-25.4 28.5-39.6 64.8-40.7 102.9-.7 28.9 6.1 57.2 20 82.4l-22 21.5C72.7 324 63.1 287.9 64.2 250.9c1-44.6 18.3-87.6 47.5-121.1l-25.3-26.4c-9.6 1.3-19.2-2-25.9-9.1-11.3-12-10.9-30.9 1.1-42.4C73.5 40.7 92.2 41 104 53.1zM464.9 8c26 0 47.1 22.4 47.1 48.3S490.9 104 464.9 104c-6.3.1-14-1.1-15.9-1.8l-62.9 59.7c-32.7-43.6-76.7-65.9-126.9-67.2-30.5-.7-60.3 6.8-86.2 22.4l-21.1-22C184.1 74.3 221.5 64 260 64.9c43.3 1.1 84.6 16.7 117.7 44.6l41.1-38.6c-1.5-4.7-2.2-9.6-2.2-14.5C416.5 29.7 438.9 8 464.9 8zM256.7 113.4c5.5 0 10.9.4 16.4 1.1 78.1 9.8 133.4 81.1 123.8 159.1-9.8 78.1-81.1 133.4-159.1 123.8-78.1-9.8-133.4-81.1-123.8-159.2 9.3-72.4 70.1-124.6 142.7-124.8zm-59 119.4c.6 22.7 12.2 41.8 32.4 52.2l-11 51.7h73.7l-11-51.7c20.1-10.9 32.1-29 32.4-52.2-.4-32.8-25.8-57.5-58.3-58.3-32.1.8-57.3 24.8-58.2 58.3zM256 160\"],\n    \"kickstarter\": [448, 512, [], \"f3bb\", \"M400 480H48c-26.4 0-48-21.6-48-48V80c0-26.4 21.6-48 48-48h352c26.4 0 48 21.6 48 48v352c0 26.4-21.6 48-48 48zM199.6 178.5c0-30.7-17.6-45.1-39.7-45.1-25.8 0-40 19.8-40 44.5v154.8c0 25.8 13.7 45.6 40.5 45.6 21.5 0 39.2-14 39.2-45.6v-41.8l60.6 75.7c12.3 14.9 39 16.8 55.8 0 14.6-15.1 14.8-36.8 4-50.4l-49.1-62.8 40.5-58.7c9.4-13.5 9.5-34.5-5.6-49.1-16.4-15.9-44.6-17.3-61.4 7l-44.8 64.7v-38.8z\"],\n    \"kickstarter-k\": [384, 512, [], \"f3bc\", \"M147.3 114.4c0-56.2-32.5-82.4-73.4-82.4C26.2 32 0 68.2 0 113.4v283c0 47.3 25.3 83.4 74.9 83.4 39.8 0 72.4-25.6 72.4-83.4v-76.5l112.1 138.3c22.7 27.2 72.1 30.7 103.2 0 27-27.6 27.3-67.4 7.4-92.2l-90.8-114.8 74.9-107.4c17.4-24.7 17.5-63.1-10.4-89.8-30.3-29-82.4-31.6-113.6 12.8L147.3 185v-70.6z\"],\n    \"korvue\": [446, 512, [], \"f42f\", \"M386.5 34h-327C26.8 34 0 60.8 0 93.5v327.1C0 453.2 26.8 480 59.5 480h327.1c33 0 59.5-26.8 59.5-59.5v-327C446 60.8 419.2 34 386.5 34zM87.1 120.8h96v116l61.8-116h110.9l-81.2 132H87.1v-132zm161.8 272.1l-65.7-113.6v113.6h-96V262.1h191.5l88.6 130.8H248.9z\"],\n    \"laravel\": [512, 512, [], \"f3bd\", \"M504.4,115.83a5.72,5.72,0,0,0-.28-.68,8.52,8.52,0,0,0-.53-1.25,6,6,0,0,0-.54-.71,9.36,9.36,0,0,0-.72-.94c-.23-.22-.52-.4-.77-.6a8.84,8.84,0,0,0-.9-.68L404.4,55.55a8,8,0,0,0-8,0L300.12,111h0a8.07,8.07,0,0,0-.88.69,7.68,7.68,0,0,0-.78.6,8.23,8.23,0,0,0-.72.93c-.17.24-.39.45-.54.71a9.7,9.7,0,0,0-.52,1.25c-.08.23-.21.44-.28.68a8.08,8.08,0,0,0-.28,2.08V223.18l-80.22,46.19V63.44a7.8,7.8,0,0,0-.28-2.09c-.06-.24-.2-.45-.28-.68a8.35,8.35,0,0,0-.52-1.24c-.14-.26-.37-.47-.54-.72a9.36,9.36,0,0,0-.72-.94,9.46,9.46,0,0,0-.78-.6,9.8,9.8,0,0,0-.88-.68h0L115.61,1.07a8,8,0,0,0-8,0L11.34,56.49h0a6.52,6.52,0,0,0-.88.69,7.81,7.81,0,0,0-.79.6,8.15,8.15,0,0,0-.71.93c-.18.25-.4.46-.55.72a7.88,7.88,0,0,0-.51,1.24,6.46,6.46,0,0,0-.29.67,8.18,8.18,0,0,0-.28,2.1v329.7a8,8,0,0,0,4,6.95l192.5,110.84a8.83,8.83,0,0,0,1.33.54c.21.08.41.2.63.26a7.92,7.92,0,0,0,4.1,0c.2-.05.37-.16.55-.22a8.6,8.6,0,0,0,1.4-.58L404.4,400.09a8,8,0,0,0,4-6.95V287.88l92.24-53.11a8,8,0,0,0,4-7V117.92A8.63,8.63,0,0,0,504.4,115.83ZM111.6,17.28h0l80.19,46.15-80.2,46.18L31.41,63.44Zm88.25,60V278.6l-46.53,26.79-33.69,19.4V123.5l46.53-26.79Zm0,412.78L23.37,388.5V77.32L57.06,96.7l46.52,26.8V338.68a6.94,6.94,0,0,0,.12.9,8,8,0,0,0,.16,1.18h0a5.92,5.92,0,0,0,.38.9,6.38,6.38,0,0,0,.42,1v0a8.54,8.54,0,0,0,.6.78,7.62,7.62,0,0,0,.66.84l0,0c.23.22.52.38.77.58a8.93,8.93,0,0,0,.86.66l0,0,0,0,92.19,52.18Zm8-106.17-80.06-45.32,84.09-48.41,92.26-53.11,80.13,46.13-58.8,33.56Zm184.52,4.57L215.88,490.11V397.8L346.6,323.2l45.77-26.15Zm0-119.13L358.68,250l-46.53-26.79V131.79l33.69,19.4L392.37,178Zm8-105.28-80.2-46.17,80.2-46.16,80.18,46.15Zm8,105.28V178L455,151.19l33.68-19.4v91.39h0Z\"],\n    \"lastfm\": [512, 512, [], \"f202\", \"M225.8 367.1l-18.8-51s-30.5 34-76.2 34c-40.5 0-69.2-35.2-69.2-91.5 0-72.1 36.4-97.9 72.1-97.9 66.5 0 74.8 53.3 100.9 134.9 18.8 56.9 54 102.6 155.4 102.6 72.7 0 122-22.3 122-80.9 0-72.9-62.7-80.6-115-92.1-25.8-5.9-33.4-16.4-33.4-34 0-19.9 15.8-31.7 41.6-31.7 28.2 0 43.4 10.6 45.7 35.8l58.6-7c-4.7-52.8-41.1-74.5-100.9-74.5-52.8 0-104.4 19.9-104.4 83.9 0 39.9 19.4 65.1 68 76.8 44.9 10.6 79.8 13.8 79.8 45.7 0 21.7-21.1 30.5-61 30.5-59.2 0-83.9-31.1-97.9-73.9-32-96.8-43.6-163-161.3-163C45.7 113.8 0 168.3 0 261c0 89.1 45.7 137.2 127.9 137.2 66.2 0 97.9-31.1 97.9-31.1z\"],\n    \"lastfm-square\": [448, 512, [], \"f203\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-92.2 312.9c-63.4 0-85.4-28.6-97.1-64.1-16.3-51-21.5-84.3-63-84.3-22.4 0-45.1 16.1-45.1 61.2 0 35.2 18 57.2 43.3 57.2 28.6 0 47.6-21.3 47.6-21.3l11.7 31.9s-19.8 19.4-61.2 19.4c-51.3 0-79.9-30.1-79.9-85.8 0-57.9 28.6-92 82.5-92 73.5 0 80.8 41.4 100.8 101.9 8.8 26.8 24.2 46.2 61.2 46.2 24.9 0 38.1-5.5 38.1-19.1 0-19.9-21.8-22-49.9-28.6-30.4-7.3-42.5-23.1-42.5-48 0-40 32.3-52.4 65.2-52.4 37.4 0 60.1 13.6 63 46.6l-36.7 4.4c-1.5-15.8-11-22.4-28.6-22.4-16.1 0-26 7.3-26 19.8 0 11 4.8 17.6 20.9 21.3 32.7 7.1 71.8 12 71.8 57.5.1 36.7-30.7 50.6-76.1 50.6z\"],\n    \"leanpub\": [576, 512, [], \"f212\", \"M386.539 111.485l15.096 248.955-10.979-.275c-36.232-.824-71.64 8.783-102.657 27.997-31.016-19.214-66.424-27.997-102.657-27.997-45.564 0-82.07 10.705-123.516 27.723L93.117 129.6c28.546-11.803 61.484-18.115 92.226-18.115 41.173 0 73.836 13.175 102.657 42.544 27.723-28.271 59.013-41.721 98.539-42.544zM569.07 448c-25.526 0-47.485-5.215-70.542-15.645-34.31-15.645-69.993-24.978-107.871-24.978-38.977 0-74.934 12.901-102.657 40.623-27.723-27.723-63.68-40.623-102.657-40.623-37.878 0-73.561 9.333-107.871 24.978C55.239 442.236 32.731 448 8.303 448H6.93L49.475 98.859C88.726 76.626 136.486 64 181.775 64 218.83 64 256.984 71.685 288 93.095 319.016 71.685 357.17 64 394.225 64c45.289 0 93.049 12.626 132.3 34.859L569.07 448zm-43.368-44.741l-34.036-280.246c-30.742-13.999-67.248-21.41-101.009-21.41-38.428 0-74.385 12.077-102.657 38.702-28.272-26.625-64.228-38.702-102.657-38.702-33.761 0-70.267 7.411-101.009 21.41L50.298 403.259c47.211-19.487 82.894-33.486 135.045-33.486 37.604 0 70.817 9.606 102.657 29.644 31.84-20.038 65.052-29.644 102.657-29.644 52.151 0 87.834 13.999 135.045 33.486z\"],\n    \"less\": [640, 512, [], \"f41d\", \"M612.7 219c0-20.5 3.2-32.6 3.2-54.6 0-34.2-12.6-45.2-40.5-45.2h-20.5v24.2h6.3c14.2 0 17.3 4.7 17.3 22.1 0 16.3-1.6 32.6-1.6 51.5 0 24.2 7.9 33.6 23.6 37.3v1.6c-15.8 3.7-23.6 13.1-23.6 37.3 0 18.9 1.6 34.2 1.6 51.5 0 17.9-3.7 22.6-17.3 22.6v.5h-6.3V393h20.5c27.8 0 40.5-11 40.5-45.2 0-22.6-3.2-34.2-3.2-54.6 0-11 6.8-22.6 27.3-23.6v-27.3c-20.5-.7-27.3-12.3-27.3-23.3zm-105.6 32c-15.8-6.3-30.5-10-30.5-20.5 0-7.9 6.3-12.6 17.9-12.6s22.1 4.7 33.6 13.1l21-27.8c-13.1-10-31-20.5-55.2-20.5-35.7 0-59.9 20.5-59.9 49.4 0 25.7 22.6 38.9 41.5 46.2 16.3 6.3 32.1 11.6 32.1 22.1 0 7.9-6.3 13.1-20.5 13.1-13.1 0-26.3-5.3-40.5-16.3l-21 30.5c15.8 13.1 39.9 22.1 59.9 22.1 42 0 64.6-22.1 64.6-51s-22.5-41-43-47.8zm-358.9 59.4c-3.7 0-8.4-3.2-8.4-13.1V119.1H65.2c-28.4 0-41 11-41 45.2 0 22.6 3.2 35.2 3.2 54.6 0 11-6.8 22.6-27.3 23.6v27.3c20.5.5 27.3 12.1 27.3 23.1 0 19.4-3.2 31-3.2 53.6 0 34.2 12.6 45.2 40.5 45.2h20.5v-24.2h-6.3c-13.1 0-17.3-5.3-17.3-22.6s1.6-32.1 1.6-51.5c0-24.2-7.9-33.6-23.6-37.3v-1.6c15.8-3.7 23.6-13.1 23.6-37.3 0-18.9-1.6-34.2-1.6-51.5s3.7-22.1 17.3-22.1H93v150.8c0 32.1 11 53.1 43.1 53.1 10 0 17.9-1.6 23.6-3.7l-5.3-34.2c-3.1.8-4.6.8-6.2.8zM379.9 251c-16.3-6.3-31-10-31-20.5 0-7.9 6.3-12.6 17.9-12.6 11.6 0 22.1 4.7 33.6 13.1l21-27.8c-13.1-10-31-20.5-55.2-20.5-35.7 0-59.9 20.5-59.9 49.4 0 25.7 22.6 38.9 41.5 46.2 16.3 6.3 32.1 11.6 32.1 22.1 0 7.9-6.3 13.1-20.5 13.1-13.1 0-26.3-5.3-40.5-16.3l-20.5 30.5c15.8 13.1 39.9 22.1 59.9 22.1 42 0 64.6-22.1 64.6-51 .1-28.9-22.5-41-43-47.8zm-155-68.8c-38.4 0-75.1 32.1-74.1 82.5 0 52 34.2 82.5 79.3 82.5 18.9 0 39.9-6.8 56.2-17.9l-15.8-27.8c-11.6 6.8-22.6 10-34.2 10-21 0-37.3-10-41.5-34.2H290c.5-3.7 1.6-11 1.6-19.4.6-42.6-22.6-75.7-66.7-75.7zm-30 66.2c3.2-21 15.8-31 30.5-31 18.9 0 26.3 13.1 26.3 31h-56.8z\"],\n    \"line\": [448, 512, [], \"f3c0\", \"M272.1 204.2v71.1c0 1.8-1.4 3.2-3.2 3.2h-11.4c-1.1 0-2.1-.6-2.6-1.3l-32.6-44v42.2c0 1.8-1.4 3.2-3.2 3.2h-11.4c-1.8 0-3.2-1.4-3.2-3.2v-71.1c0-1.8 1.4-3.2 3.2-3.2H219c1 0 2.1.5 2.6 1.4l32.6 44v-42.2c0-1.8 1.4-3.2 3.2-3.2h11.4c1.8-.1 3.3 1.4 3.3 3.1zm-82-3.2h-11.4c-1.8 0-3.2 1.4-3.2 3.2v71.1c0 1.8 1.4 3.2 3.2 3.2h11.4c1.8 0 3.2-1.4 3.2-3.2v-71.1c0-1.7-1.4-3.2-3.2-3.2zm-27.5 59.6h-31.1v-56.4c0-1.8-1.4-3.2-3.2-3.2h-11.4c-1.8 0-3.2 1.4-3.2 3.2v71.1c0 .9.3 1.6.9 2.2.6.5 1.3.9 2.2.9h45.7c1.8 0 3.2-1.4 3.2-3.2v-11.4c0-1.7-1.4-3.2-3.1-3.2zM332.1 201h-45.7c-1.7 0-3.2 1.4-3.2 3.2v71.1c0 1.7 1.4 3.2 3.2 3.2h45.7c1.8 0 3.2-1.4 3.2-3.2v-11.4c0-1.8-1.4-3.2-3.2-3.2H301v-12h31.1c1.8 0 3.2-1.4 3.2-3.2V234c0-1.8-1.4-3.2-3.2-3.2H301v-12h31.1c1.8 0 3.2-1.4 3.2-3.2v-11.4c-.1-1.7-1.5-3.2-3.2-3.2zM448 113.7V399c-.1 44.8-36.8 81.1-81.7 81H81c-44.8-.1-81.1-36.9-81-81.7V113c.1-44.8 36.9-81.1 81.7-81H367c44.8.1 81.1 36.8 81 81.7zm-61.6 122.6c0-73-73.2-132.4-163.1-132.4-89.9 0-163.1 59.4-163.1 132.4 0 65.4 58 120.2 136.4 130.6 19.1 4.1 16.9 11.1 12.6 36.8-.7 4.1-3.3 16.1 14.1 8.8 17.4-7.3 93.9-55.3 128.2-94.7 23.6-26 34.9-52.3 34.9-81.5z\"],\n    \"linkedin\": [448, 512, [], \"f08c\", \"M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z\"],\n    \"linkedin-in\": [448, 512, [], \"f0e1\", \"M100.28 448H7.4V148.9h92.88zM53.79 108.1C24.09 108.1 0 83.5 0 53.8a53.79 53.79 0 0 1 107.58 0c0 29.7-24.1 54.3-53.79 54.3zM447.9 448h-92.68V302.4c0-34.7-.7-79.2-48.29-79.2-48.29 0-55.69 37.7-55.69 76.7V448h-92.78V148.9h89.08v40.8h1.3c12.4-23.5 42.69-48.3 87.88-48.3 94 0 111.28 61.9 111.28 142.3V448z\"],\n    \"linode\": [448, 512, [], \"f2b8\", \"M437.4 226.3c-.3-.9-.9-1.4-1.4-2l-70-38.6c-.9-.6-2-.6-3.1 0l-58.9 36c-.9.6-1.4 1.7-1.4 2.6l-.9 31.4-24-16c-.9-.6-2.3-.6-3.1 0L240 260.9l-1.4-35.1c0-.9-.6-2-1.4-2.3l-36-24.3 33.7-17.4c1.1-.6 1.7-1.7 1.7-2.9l-5.7-132.3c0-.9-.9-2-1.7-2.6L138.6.3c-.9-.3-1.7-.3-2.3-.3L12.6 38.6c-1.4.6-2.3 2-2 3.7L38 175.4c.9 3.4 34 27.4 38.6 30.9l-26.9 12.9c-1.4.9-2 2.3-1.7 3.4l20.6 100.3c.6 2.9 23.7 23.1 27.1 26.3l-17.4 10.6c-.9.6-1.7 2-1.4 3.1 1.4 7.1 15.4 77.7 16.9 79.1l65.1 69.1c.6.6 1.4.6 2.3.9.6 0 1.1-.3 1.7-.6l83.7-66.9c.9-.6 1.1-1.4 1.1-2.3l-2-46 28 23.7c1.1.9 2.9.9 4 0l66.9-53.4c.9-.6 1.1-1.4 1.1-2.3l2.3-33.4 20.3 14c1.1.9 2.6.9 3.7 0l54.6-43.7c.6-.3 1.1-1.1 1.1-2 .9-6.5 10.3-70.8 9.7-72.8zm-204.8 4.8l4 92.6-90.6 61.2-14-96.6 100.6-57.2zm-7.7-180l5.4 126-106.6 55.4L104 97.7l120.9-46.6zM44 173.1L18 48l79.7 49.4 19.4 132.9L44 173.1zm30.6 147.8L55.7 230l70 58.3 13.7 93.4-64.8-60.8zm24.3 117.7l-13.7-67.1 61.7 60.9 9.7 67.4-57.7-61.2zm64.5 64.5l-10.6-70.9 85.7-61.4 3.1 70-78.2 62.3zm82-115.1c0-3.4.9-22.9-2-25.1l-24.3-20 22.3-14.9c2.3-1.7 1.1-5.7 1.1-8l29.4 22.6.6 68.3-27.1-22.9zm94.3-25.4l-60.9 48.6-.6-68.6 65.7-46.9-4.2 66.9zm27.7-25.7l-19.1-13.4 2-34c.3-.9-.3-2-1.1-2.6L308 259.7l.6-30 64.6 40.6-5.8 66.6zm54.6-39.8l-48.3 38.3 5.7-65.1 51.1-36.6-8.5 63.4z\"],\n    \"linux\": [448, 512, [], \"f17c\", \"M220.8 123.3c1 .5 1.8 1.7 3 1.7 1.1 0 2.8-.4 2.9-1.5.2-1.4-1.9-2.3-3.2-2.9-1.7-.7-3.9-1-5.5-.1-.4.2-.8.7-.6 1.1.3 1.3 2.3 1.1 3.4 1.7zm-21.9 1.7c1.2 0 2-1.2 3-1.7 1.1-.6 3.1-.4 3.5-1.6.2-.4-.2-.9-.6-1.1-1.6-.9-3.8-.6-5.5.1-1.3.6-3.4 1.5-3.2 2.9.1 1 1.8 1.5 2.8 1.4zM420 403.8c-3.6-4-5.3-11.6-7.2-19.7-1.8-8.1-3.9-16.8-10.5-22.4-1.3-1.1-2.6-2.1-4-2.9-1.3-.8-2.7-1.5-4.1-2 9.2-27.3 5.6-54.5-3.7-79.1-11.4-30.1-31.3-56.4-46.5-74.4-17.1-21.5-33.7-41.9-33.4-72C311.1 85.4 315.7.1 234.8 0 132.4-.2 158 103.4 156.9 135.2c-1.7 23.4-6.4 41.8-22.5 64.7-18.9 22.5-45.5 58.8-58.1 96.7-6 17.9-8.8 36.1-6.2 53.3-6.5 5.8-11.4 14.7-16.6 20.2-4.2 4.3-10.3 5.9-17 8.3s-14 6-18.5 14.5c-2.1 3.9-2.8 8.1-2.8 12.4 0 3.9.6 7.9 1.2 11.8 1.2 8.1 2.5 15.7.8 20.8-5.2 14.4-5.9 24.4-2.2 31.7 3.8 7.3 11.4 10.5 20.1 12.3 17.3 3.6 40.8 2.7 59.3 12.5 19.8 10.4 39.9 14.1 55.9 10.4 11.6-2.6 21.1-9.6 25.9-20.2 12.5-.1 26.3-5.4 48.3-6.6 14.9-1.2 33.6 5.3 55.1 4.1.6 2.3 1.4 4.6 2.5 6.7v.1c8.3 16.7 23.8 24.3 40.3 23 16.6-1.3 34.1-11 48.3-27.9 13.6-16.4 36-23.2 50.9-32.2 7.4-4.5 13.4-10.1 13.9-18.3.4-8.2-4.4-17.3-15.5-29.7zM223.7 87.3c9.8-22.2 34.2-21.8 44-.4 6.5 14.2 3.6 30.9-4.3 40.4-1.6-.8-5.9-2.6-12.6-4.9 1.1-1.2 3.1-2.7 3.9-4.6 4.8-11.8-.2-27-9.1-27.3-7.3-.5-13.9 10.8-11.8 23-4.1-2-9.4-3.5-13-4.4-1-6.9-.3-14.6 2.9-21.8zM183 75.8c10.1 0 20.8 14.2 19.1 33.5-3.5 1-7.1 2.5-10.2 4.6 1.2-8.9-3.3-20.1-9.6-19.6-8.4.7-9.8 21.2-1.8 28.1 1 .8 1.9-.2-5.9 5.5-15.6-14.6-10.5-52.1 8.4-52.1zm-13.6 60.7c6.2-4.6 13.6-10 14.1-10.5 4.7-4.4 13.5-14.2 27.9-14.2 7.1 0 15.6 2.3 25.9 8.9 6.3 4.1 11.3 4.4 22.6 9.3 8.4 3.5 13.7 9.7 10.5 18.2-2.6 7.1-11 14.4-22.7 18.1-11.1 3.6-19.8 16-38.2 14.9-3.9-.2-7-1-9.6-2.1-8-3.5-12.2-10.4-20-15-8.6-4.8-13.2-10.4-14.7-15.3-1.4-4.9 0-9 4.2-12.3zm3.3 334c-2.7 35.1-43.9 34.4-75.3 18-29.9-15.8-68.6-6.5-76.5-21.9-2.4-4.7-2.4-12.7 2.6-26.4v-.2c2.4-7.6.6-16-.6-23.9-1.2-7.8-1.8-15 .9-20 3.5-6.7 8.5-9.1 14.8-11.3 10.3-3.7 11.8-3.4 19.6-9.9 5.5-5.7 9.5-12.9 14.3-18 5.1-5.5 10-8.1 17.7-6.9 8.1 1.2 15.1 6.8 21.9 16l19.6 35.6c9.5 19.9 43.1 48.4 41 68.9zm-1.4-25.9c-4.1-6.6-9.6-13.6-14.4-19.6 7.1 0 14.2-2.2 16.7-8.9 2.3-6.2 0-14.9-7.4-24.9-13.5-18.2-38.3-32.5-38.3-32.5-13.5-8.4-21.1-18.7-24.6-29.9s-3-23.3-.3-35.2c5.2-22.9 18.6-45.2 27.2-59.2 2.3-1.7.8 3.2-8.7 20.8-8.5 16.1-24.4 53.3-2.6 82.4.6-20.7 5.5-41.8 13.8-61.5 12-27.4 37.3-74.9 39.3-112.7 1.1.8 4.6 3.2 6.2 4.1 4.6 2.7 8.1 6.7 12.6 10.3 12.4 10 28.5 9.2 42.4 1.2 6.2-3.5 11.2-7.5 15.9-9 9.9-3.1 17.8-8.6 22.3-15 7.7 30.4 25.7 74.3 37.2 95.7 6.1 11.4 18.3 35.5 23.6 64.6 3.3-.1 7 .4 10.9 1.4 13.8-35.7-11.7-74.2-23.3-84.9-4.7-4.6-4.9-6.6-2.6-6.5 12.6 11.2 29.2 33.7 35.2 59 2.8 11.6 3.3 23.7.4 35.7 16.4 6.8 35.9 17.9 30.7 34.8-2.2-.1-3.2 0-4.2 0 3.2-10.1-3.9-17.6-22.8-26.1-19.6-8.6-36-8.6-38.3 12.5-12.1 4.2-18.3 14.7-21.4 27.3-2.8 11.2-3.6 24.7-4.4 39.9-.5 7.7-3.6 18-6.8 29-32.1 22.9-76.7 32.9-114.3 7.2zm257.4-11.5c-.9 16.8-41.2 19.9-63.2 46.5-13.2 15.7-29.4 24.4-43.6 25.5s-26.5-4.8-33.7-19.3c-4.7-11.1-2.4-23.1 1.1-36.3 3.7-14.2 9.2-28.8 9.9-40.6.8-15.2 1.7-28.5 4.2-38.7 2.6-10.3 6.6-17.2 13.7-21.1.3-.2.7-.3 1-.5.8 13.2 7.3 26.6 18.8 29.5 12.6 3.3 30.7-7.5 38.4-16.3 9-.3 15.7-.9 22.6 5.1 9.9 8.5 7.1 30.3 17.1 41.6 10.6 11.6 14 19.5 13.7 24.6zM173.3 148.7c2 1.9 4.7 4.5 8 7.1 6.6 5.2 15.8 10.6 27.3 10.6 11.6 0 22.5-5.9 31.8-10.8 4.9-2.6 10.9-7 14.8-10.4s5.9-6.3 3.1-6.6-2.6 2.6-6 5.1c-4.4 3.2-9.7 7.4-13.9 9.8-7.4 4.2-19.5 10.2-29.9 10.2s-18.7-4.8-24.9-9.7c-3.1-2.5-5.7-5-7.7-6.9-1.5-1.4-1.9-4.6-4.3-4.9-1.4-.1-1.8 3.7 1.7 6.5z\"],\n    \"lyft\": [512, 512, [], \"f3c3\", \"M0 81.1h77.8v208.7c0 33.1 15 52.8 27.2 61-12.7 11.1-51.2 20.9-80.2-2.8C7.8 334 0 310.7 0 289V81.1zm485.9 173.5v-22h23.8v-76.8h-26.1c-10.1-46.3-51.2-80.7-100.3-80.7-56.6 0-102.7 46-102.7 102.7V357c16 2.3 35.4-.3 51.7-14 17.1-14 24.8-37.2 24.8-59v-6.7h38.8v-76.8h-38.8v-23.3c0-34.6 52.2-34.6 52.2 0v77.1c0 56.6 46 102.7 102.7 102.7v-76.5c-14.5 0-26.1-11.7-26.1-25.9zm-294.3-99v113c0 15.4-23.8 15.4-23.8 0v-113H91v132.7c0 23.8 8 54 45 63.9 37 9.8 58.2-10.6 58.2-10.6-2.1 13.4-14.5 23.3-34.9 25.3-15.5 1.6-35.2-3.6-45-7.8v70.3c25.1 7.5 51.5 9.8 77.6 4.7 47.1-9.1 76.8-48.4 76.8-100.8V155.1h-77.1v.5z\"],\n    \"magento\": [448, 512, [], \"f3c4\", \"M445.7 127.9V384l-63.4 36.5V164.7L223.8 73.1 65.2 164.7l.4 255.9L2.3 384V128.1L224.2 0l221.5 127.9zM255.6 420.5L224 438.9l-31.8-18.2v-256l-63.3 36.6.1 255.9 94.9 54.9 95.1-54.9v-256l-63.4-36.6v255.9z\"],\n    \"mailchimp\": [448, 512, [], \"f59e\", \"M330.61 243.52a36.15 36.15 0 0 1 9.3 0c1.66-3.83 1.95-10.43.45-17.61-2.23-10.67-5.25-17.14-11.48-16.13s-6.47 8.74-4.24 19.42c1.26 6 3.49 11.14 6 14.32zM277.05 252c4.47 2 7.2 3.26 8.28 2.13 1.89-1.94-3.48-9.39-12.12-13.09a31.44 31.44 0 0 0-30.61 3.68c-3 2.18-5.81 5.22-5.41 7.06.85 3.74 10-2.71 22.6-3.48 7-.44 12.8 1.75 17.26 3.71zm-9 5.13c-9.07 1.42-15 6.53-13.47 10.1.9.34 1.17.81 5.21-.81a37 37 0 0 1 18.72-1.95c2.92.34 4.31.52 4.94-.49 1.46-2.22-5.71-8-15.39-6.85zm54.17 17.1c3.38-6.87-10.9-13.93-14.3-7s10.92 13.88 14.32 6.97zm15.66-20.47c-7.66-.13-7.95 15.8-.26 15.93s7.98-15.81.28-15.96zm-218.79 78.9c-1.32.31-6 1.45-8.47-2.35-5.2-8 11.11-20.38 3-35.77-9.1-17.47-27.82-13.54-35.05-5.54-8.71 9.6-8.72 23.54-5 24.08 4.27.57 4.08-6.47 7.38-11.63a12.83 12.83 0 0 1 17.85-3.72c11.59 7.59 1.37 17.76 2.28 28.62 1.39 16.68 18.42 16.37 21.58 9a2.08 2.08 0 0 0-.2-2.33c.03.89.68-1.3-3.35-.39zm299.72-17.07c-3.35-11.73-2.57-9.22-6.78-20.52 2.45-3.67 15.29-24-3.07-43.25-10.4-10.92-33.9-16.54-41.1-18.54-1.5-11.39 4.65-58.7-21.52-83 20.79-21.55 33.76-45.29 33.73-65.65-.06-39.16-48.15-51-107.42-26.47l-12.55 5.33c-.06-.05-22.71-22.27-23.05-22.57C169.5-18-41.77 216.81 25.78 273.85l14.76 12.51a72.49 72.49 0 0 0-4.1 33.5c3.36 33.4 36 60.42 67.53 60.38 57.73 133.06 267.9 133.28 322.29 3 1.74-4.47 9.11-24.61 9.11-42.38s-10.09-25.27-16.53-25.27zm-316 48.16c-22.82-.61-47.46-21.15-49.91-45.51-6.17-61.31 74.26-75.27 84-12.33 4.54 29.64-4.67 58.49-34.12 57.81zM84.3 249.55C69.14 252.5 55.78 261.09 47.6 273c-4.88-4.07-14-12-15.59-15-13.01-24.85 14.24-73 33.3-100.21C112.42 90.56 186.19 39.68 220.36 48.91c5.55 1.57 23.94 22.89 23.94 22.89s-34.15 18.94-65.8 45.35c-42.66 32.85-74.89 80.59-94.2 132.4zM323.18 350.7s-35.74 5.3-69.51-7.07c6.21-20.16 27 6.1 96.4-13.81 15.29-4.38 35.37-13 51-25.35a102.85 102.85 0 0 1 7.12 24.28c3.66-.66 14.25-.52 11.44 18.1-3.29 19.87-11.73 36-25.93 50.84A106.86 106.86 0 0 1 362.55 421a132.45 132.45 0 0 1-20.34 8.58c-53.51 17.48-108.3-1.74-126-43a66.33 66.33 0 0 1-3.55-9.74c-7.53-27.2-1.14-59.83 18.84-80.37 1.23-1.31 2.48-2.85 2.48-4.79a8.45 8.45 0 0 0-1.92-4.54c-7-10.13-31.19-27.4-26.33-60.83 3.5-24 24.49-40.91 44.07-39.91l5 .29c8.48.5 15.89 1.59 22.88 1.88 11.69.5 22.2-1.19 34.64-11.56 4.2-3.5 7.57-6.54 13.26-7.51a17.45 17.45 0 0 1 13.6 2.24c10 6.64 11.4 22.73 11.92 34.49.29 6.72 1.1 23 1.38 27.63.63 10.67 3.43 12.17 9.11 14 3.19 1.05 6.15 1.83 10.51 3.06 13.21 3.71 21 7.48 26 12.31a16.38 16.38 0 0 1 4.74 9.29c1.56 11.37-8.82 25.4-36.31 38.16-46.71 21.68-93.68 14.45-100.48 13.68-20.15-2.71-31.63 23.32-19.55 41.15 22.64 33.41 122.4 20 151.37-21.35.69-1 .12-1.59-.73-1-41.77 28.58-97.06 38.21-128.46 26-4.77-1.85-14.73-6.44-15.94-16.67 43.6 13.49 71 .74 71 .74s2.03-2.79-.56-2.53zm-68.47-5.7zm-83.4-187.5c16.74-19.35 37.36-36.18 55.83-45.63a.73.73 0 0 1 1 1c-1.46 2.66-4.29 8.34-5.19 12.65a.75.75 0 0 0 1.16.79c11.49-7.83 31.48-16.22 49-17.3a.77.77 0 0 1 .52 1.38 41.86 41.86 0 0 0-7.71 7.74.75.75 0 0 0 .59 1.19c12.31.09 29.66 4.4 41 10.74.76.43.22 1.91-.64 1.72-69.55-15.94-123.08 18.53-134.5 26.83a.76.76 0 0 1-1-1.12z\"],\n    \"mandalorian\": [448, 512, [], \"f50f\", \"M232.27 511.89c-1-3.26-1.69-15.83-1.39-24.58.55-15.89 1-24.72 1.4-28.76.64-6.2 2.87-20.72 3.28-21.38.6-1 .4-27.87-.24-33.13-.31-2.58-.63-11.9-.69-20.73-.13-16.47-.53-20.12-2.73-24.76-1.1-2.32-1.23-3.84-1-11.43a92.38 92.38 0 0 0-.34-12.71c-2-13-3.46-27.7-3.25-33.9s.43-7.15 2.06-9.67c3.05-4.71 6.51-14 8.62-23.27 2.26-9.86 3.88-17.18 4.59-20.74a109.54 109.54 0 0 1 4.42-15.05c2.27-6.25 2.49-15.39.37-15.39-.3 0-1.38 1.22-2.41 2.71s-4.76 4.8-8.29 7.36c-8.37 6.08-11.7 9.39-12.66 12.58s-1 7.23-.16 7.76c.34.21 1.29 2.4 2.11 4.88a28.83 28.83 0 0 1 .72 15.36c-.39 1.77-1 5.47-1.46 8.23s-1 6.46-1.25 8.22a9.85 9.85 0 0 1-1.55 4.26c-1 1-1.14.91-2.05-.53a14.87 14.87 0 0 1-1.44-4.75c-.25-1.74-1.63-7.11-3.08-11.93-3.28-10.9-3.52-16.15-1-21a14.24 14.24 0 0 0 1.67-4.61c0-2.39-2.2-5.32-7.41-9.89-7-6.18-8.63-7.92-10.23-11.3-1.71-3.6-3.06-4.06-4.54-1.54-1.78 3-2.6 9.11-3 22l-.34 12.19 2 2.25c3.21 3.7 12.07 16.45 13.78 19.83 3.41 6.74 4.34 11.69 4.41 23.56s.95 22.75 2 24.71c.36.66.51 1.35.34 1.52s.41 2.09 1.29 4.27a38.14 38.14 0 0 1 2.06 9 91 91 0 0 0 1.71 10.37c2.23 9.56 2.77 14.08 2.39 20.14-.2 3.27-.53 11.07-.73 17.32-1.31 41.76-1.85 58-2 61.21-.12 2-.39 11.51-.6 21.07-.36 16.3-1.3 27.37-2.42 28.65-.64.73-8.07-4.91-12.52-9.49-3.75-3.87-4-4.79-2.83-9.95.7-3 2.26-18.29 3.33-32.62.36-4.78.81-10.5 1-12.71.83-9.37 1.66-20.35 2.61-34.78.56-8.46 1.33-16.44 1.72-17.73s.89-9.89 1.13-19.11l.43-16.77-2.26-4.3c-1.72-3.28-4.87-6.94-13.22-15.34-6-6.07-11.84-12.3-12.91-13.85l-1.95-2.81.75-10.9c1.09-15.71 1.1-48.57 0-59.06l-.89-8.7-3.28-4.52c-5.86-8.08-5.8-7.75-6.22-33.27-.1-6.07-.38-11.5-.63-12.06-.83-1.87-3.05-2.66-8.54-3.05-8.86-.62-11-1.9-23.85-14.55-6.15-6-12.34-12-13.75-13.19-2.81-2.42-2.79-2-.56-9.63l1.35-4.65-1.69-3a32.22 32.22 0 0 0-2.59-4.07c-1.33-1.51-5.5-10.89-6-13.49a4.24 4.24 0 0 1 .87-3.9c2.23-2.86 3.4-5.68 4.45-10.73 2.33-11.19 7.74-26.09 10.6-29.22 3.18-3.47 7.7-1 9.41 5 1.34 4.79 1.37 9.79.1 18.55a101.2 101.2 0 0 0-1 11.11c0 4 .19 4.69 2.25 7.39 3.33 4.37 7.73 7.41 15.2 10.52a18.67 18.67 0 0 1 4.72 2.85c11.17 10.72 18.62 16.18 22.95 16.85 5.18.8 8 4.54 10 13.39 1.31 5.65 4 11.14 5.46 11.14a9.38 9.38 0 0 0 3.33-1.39c2-1.22 2.25-1.73 2.25-4.18a132.88 132.88 0 0 0-2-17.84c-.37-1.66-.78-4.06-.93-5.35s-.61-3.85-1-5.69c-2.55-11.16-3.65-15.46-4.1-16-1.55-2-4.08-10.2-4.93-15.92-1.64-11.11-4-14.23-12.91-17.39A43.15 43.15 0 0 1 165.24 78c-1.15-1-4-3.22-6.35-5.06s-4.41-3.53-4.6-3.76a22.7 22.7 0 0 0-2.69-2c-6.24-4.22-8.84-7-11.26-12l-2.44-5-.22-13-.22-13 6.91-6.55c3.95-3.75 8.48-7.35 10.59-8.43 3.31-1.69 4.45-1.89 11.37-2 8.53-.19 10.12 0 11.66 1.56s1.36 6.4-.29 8.5a6.66 6.66 0 0 0-1.34 2.32c0 .58-2.61 4.91-5.42 9a30.39 30.39 0 0 0-2.37 6.82c20.44 13.39 21.55 3.77 14.07 29L194 66.92c3.11-8.66 6.47-17.26 8.61-26.22.29-7.63-12-4.19-15.4-8.68-2.33-5.93 3.13-14.18 6.06-19.2 1.6-2.34 6.62-4.7 8.82-4.15.88.22 4.16-.35 7.37-1.28a45.3 45.3 0 0 1 7.55-1.68 29.57 29.57 0 0 0 6-1.29c3.65-1.11 4.5-1.17 6.35-.4a29.54 29.54 0 0 0 5.82 1.36 18.18 18.18 0 0 1 6 1.91 22.67 22.67 0 0 0 5 2.17c2.51.68 3 .57 7.05-1.67l4.35-2.4L268.32 5c10.44-.4 10.81-.47 15.26-2.68L288.16 0l2.46 1.43c1.76 1 3.14 2.73 4.85 6 2.36 4.51 2.38 4.58 1.37 7.37-.88 2.44-.89 3.3-.1 6.39a35.76 35.76 0 0 0 2.1 5.91 13.55 13.55 0 0 1 1.31 4c.31 4.33 0 5.3-2.41 6.92-2.17 1.47-7 7.91-7 9.34a14.77 14.77 0 0 1-1.07 3c-5 11.51-6.76 13.56-14.26 17-9.2 4.2-12.3 5.19-16.21 5.19-3.1 0-4 .25-4.54 1.26a18.33 18.33 0 0 1-4.09 3.71 13.62 13.62 0 0 0-4.38 4.78 5.89 5.89 0 0 1-2.49 2.91 6.88 6.88 0 0 0-2.45 1.71 67.62 67.62 0 0 1-7 5.38c-3.33 2.34-6.87 5-7.87 6A7.27 7.27 0 0 1 224 100a5.76 5.76 0 0 0-2.13 1.65c-1.31 1.39-1.49 2.11-1.14 4.6a36.45 36.45 0 0 0 1.42 5.88c1.32 3.8 1.31 7.86 0 10.57s-.89 6.65 1.35 9.59c2 2.63 2.16 4.56.71 8.84a33.45 33.45 0 0 0-1.06 8.91c0 4.88.22 6.28 1.46 8.38s1.82 2.48 3.24 2.32c2-.23 2.3-1.05 4.71-12.12 2.18-10 3.71-11.92 13.76-17.08 2.94-1.51 7.46-4 10-5.44s6.79-3.69 9.37-4.91a40.09 40.09 0 0 0 15.22-11.67c7.11-8.79 10-16.22 12.85-33.3a18.37 18.37 0 0 1 2.86-7.73 20.39 20.39 0 0 0 2.89-7.31c1-5.3 2.85-9.08 5.58-11.51 4.7-4.18 6-1.09 4.59 10.87-.46 3.86-1.1 10.33-1.44 14.38l-.61 7.36 4.45 4.09 4.45 4.09.11 8.42c.06 4.63.47 9.53.92 10.89l.82 2.47-6.43 6.28c-8.54 8.33-12.88 13.93-16.76 21.61-1.77 3.49-3.74 7.11-4.38 8-2.18 3.11-6.46 13-8.76 20.26l-2.29 7.22-7 6.49c-3.83 3.57-8 7.25-9.17 8.17-3.05 2.32-4.26 5.15-4.26 10a14.62 14.62 0 0 0 1.59 7.26 42 42 0 0 1 2.09 4.83 9.28 9.28 0 0 0 1.57 2.89c1.4 1.59 1.92 16.12.83 23.22-.68 4.48-3.63 12-4.7 12-1.79 0-4.06 9.27-5.07 20.74-.18 2-.62 5.94-1 8.7s-1 10-1.35 16.05c-.77 12.22-.19 18.77 2 23.15 3.41 6.69.52 12.69-11 22.84l-4 3.49.07 5.19a40.81 40.81 0 0 0 1.14 8.87c4.61 16 4.73 16.92 4.38 37.13-.46 26.4-.26 40.27.63 44.15a61.31 61.31 0 0 1 1.08 7c.17 2 .66 5.33 1.08 7.36.47 2.26.78 11 .79 22.74v19.06l-1.81 2.63c-2.71 3.91-15.11 13.54-15.49 12.29zm29.53-45.11c-.18-.3-.33-6.87-.33-14.59 0-14.06-.89-27.54-2.26-34.45-.4-2-.81-9.7-.9-17.06-.15-11.93-1.4-24.37-2.64-26.38-.66-1.07-3-17.66-3-21.3 0-4.23 1-6 5.28-9.13s4.86-3.14 5.48-.72c.28 1.1 1.45 5.62 2.6 10 3.93 15.12 4.14 16.27 4.05 21.74-.1 5.78-.13 6.13-1.74 17.73-1 7.07-1.17 12.39-1 28.43.17 19.4-.64 35.73-2 41.27-.71 2.78-2.8 5.48-3.43 4.43zm-71-37.58a101 101 0 0 1-1.73-10.79 100.5 100.5 0 0 0-1.73-10.79 37.53 37.53 0 0 1-1-6.49c-.31-3.19-.91-7.46-1.33-9.48-1-4.79-3.35-19.35-3.42-21.07 0-.74-.34-4.05-.7-7.36-.67-6.21-.84-27.67-.22-28.29 1-1 6.63 2.76 11.33 7.43l5.28 5.25-.45 6.47c-.25 3.56-.6 10.23-.78 14.83s-.49 9.87-.67 11.71-.61 9.36-.94 16.72c-.79 17.41-1.94 31.29-2.65 32a.62.62 0 0 1-1-.14zm-87.18-266.59c21.07 12.79 17.84 14.15 28.49 17.66 13 4.29 18.87 7.13 23.15 16.87C111.6 233.28 86.25 255 78.55 268c-31 52-6 101.59 62.75 87.21-14.18 29.23-78 28.63-98.68-4.9-24.68-39.95-22.09-118.3 61-187.66zm210.79 179c56.66 6.88 82.32-37.74 46.54-89.23 0 0-26.87-29.34-64.28-68 3-15.45 9.49-32.12 30.57-53.82 89.2 63.51 92 141.61 92.46 149.36 4.3 70.64-78.7 91.18-105.29 61.71z\"],\n    \"markdown\": [640, 512, [], \"f60f\", \"M593.8 59.1H46.2C20.7 59.1 0 79.8 0 105.2v301.5c0 25.5 20.7 46.2 46.2 46.2h547.7c25.5 0 46.2-20.7 46.1-46.1V105.2c0-25.4-20.7-46.1-46.2-46.1zM338.5 360.6H277v-120l-61.5 76.9-61.5-76.9v120H92.3V151.4h61.5l61.5 76.9 61.5-76.9h61.5v209.2zm135.3 3.1L381.5 256H443V151.4h61.5V256H566z\"],\n    \"mastodon\": [448, 512, [], \"f4f6\", \"M433 179.11c0-97.2-63.71-125.7-63.71-125.7-62.52-28.7-228.56-28.4-290.48 0 0 0-63.72 28.5-63.72 125.7 0 115.7-6.6 259.4 105.63 289.1 40.51 10.7 75.32 13 103.33 11.4 50.81-2.8 79.32-18.1 79.32-18.1l-1.7-36.9s-36.31 11.4-77.12 10.1c-40.41-1.4-83-4.4-89.63-54a102.54 102.54 0 0 1-.9-13.9c85.63 20.9 158.65 9.1 178.75 6.7 56.12-6.7 105-41.3 111.23-72.9 9.8-49.8 9-121.5 9-121.5zm-75.12 125.2h-46.63v-114.2c0-49.7-64-51.6-64 6.9v62.5h-46.33V197c0-58.5-64-56.6-64-6.9v114.2H90.19c0-122.1-5.2-147.9 18.41-175 25.9-28.9 79.82-30.8 103.83 6.1l11.6 19.5 11.6-19.5c24.11-37.1 78.12-34.8 103.83-6.1 23.71 27.3 18.4 53 18.4 175z\"],\n    \"maxcdn\": [512, 512, [], \"f136\", \"M461.1 442.7h-97.4L415.6 200c2.3-10.2.9-19.5-4.4-25.7-5-6.1-13.7-9.6-24.2-9.6h-49.3l-59.5 278h-97.4l59.5-278h-83.4l-59.5 278H0l59.5-278-44.6-95.4H387c39.4 0 75.3 16.3 98.3 44.9 23.3 28.6 31.8 67.4 23.6 105.9l-47.8 222.6z\"],\n    \"mdb\": [576, 512, [], \"f8ca\", \"M17.37 160.41L7 352h43.91l5.59-79.83L84.43 352h44.71l25.54-77.43 4.79 77.43H205l-12.79-191.59H146.7L106 277.74 63.67 160.41zm281 0h-47.9V352h47.9s95 .8 94.2-95.79c-.78-94.21-94.18-95.78-94.18-95.78zm-1.2 146.46V204.78s46 4.27 46.8 50.57-46.78 51.54-46.78 51.54zm238.29-74.24a56.16 56.16 0 0 0 8-38.31c-5.34-35.76-55.08-34.32-55.08-34.32h-51.9v191.58H482s87 4.79 87-63.85c0-43.14-33.52-55.08-33.52-55.08zm-51.9-31.94s13.57-1.59 16 9.59c1.43 6.66-4 12-4 12h-12v-21.57zm-.1 109.46l.1-24.92V267h.08s41.58-4.73 41.19 22.43c-.33 25.65-41.35 20.74-41.35 20.74z\"],\n    \"medapps\": [320, 512, [], \"f3c6\", \"M118.3 238.4c3.5-12.5 6.9-33.6 13.2-33.6 8.3 1.8 9.6 23.4 18.6 36.6 4.6-23.5 5.3-85.1 14.1-86.7 9-.7 19.7 66.5 22 77.5 9.9 4.1 48.9 6.6 48.9 6.6 1.9 7.3-24 7.6-40 7.8-4.6 14.8-5.4 27.7-11.4 28-4.7.2-8.2-28.8-17.5-49.6l-9.4 65.5c-4.4 13-15.5-22.5-21.9-39.3-3.3-.1-62.4-1.6-47.6-7.8l31-5zM228 448c21.2 0 21.2-32 0-32H92c-21.2 0-21.2 32 0 32h136zm-24 64c21.2 0 21.2-32 0-32h-88c-21.2 0-21.2 32 0 32h88zm34.2-141.5c3.2-18.9 5.2-36.4 11.9-48.8 7.9-14.7 16.1-28.1 24-41 24.6-40.4 45.9-75.2 45.9-125.5C320 69.6 248.2 0 160 0S0 69.6 0 155.2c0 50.2 21.3 85.1 45.9 125.5 7.9 12.9 16 26.3 24 41 6.7 12.5 8.7 29.8 11.9 48.9 3.5 21 36.1 15.7 32.6-5.1-3.6-21.7-5.6-40.7-15.3-58.6C66.5 246.5 33 211.3 33 155.2 33 87.3 90 32 160 32s127 55.3 127 123.2c0 56.1-33.5 91.3-66.1 151.6-9.7 18-11.7 37.4-15.3 58.6-3.4 20.6 29 26.4 32.6 5.1z\"],\n    \"medium\": [448, 512, [], \"f23a\", \"M0 32v448h448V32H0zm372.2 106.1l-24 23c-2.1 1.6-3.1 4.2-2.7 6.7v169.3c-.4 2.6.6 5.2 2.7 6.7l23.5 23v5.1h-118V367l24.3-23.6c2.4-2.4 2.4-3.1 2.4-6.7V199.8l-67.6 171.6h-9.1L125 199.8v115c-.7 4.8 1 9.7 4.4 13.2l31.6 38.3v5.1H71.2v-5.1l31.6-38.3c3.4-3.5 4.9-8.4 4.1-13.2v-133c.4-3.7-1-7.3-3.8-9.8L75 138.1V133h87.3l67.4 148L289 133.1h83.2v5z\"],\n    \"medium-m\": [512, 512, [], \"f3c7\", \"M71.5 142.3c.6-5.9-1.7-11.8-6.1-15.8L20.3 72.1V64h140.2l108.4 237.7L364.2 64h133.7v8.1l-38.6 37c-3.3 2.5-5 6.7-4.3 10.8v272c-.7 4.1 1 8.3 4.3 10.8l37.7 37v8.1H307.3v-8.1l39.1-37.9c3.8-3.8 3.8-5 3.8-10.8V171.2L241.5 447.1h-14.7L100.4 171.2v184.9c-1.1 7.8 1.5 15.6 7 21.2l50.8 61.6v8.1h-144v-8L65 377.3c5.4-5.6 7.9-13.5 6.5-21.2V142.3z\"],\n    \"medrt\": [544, 512, [], \"f3c8\", \"M113.7 256c0 121.8 83.9 222.8 193.5 241.1-18.7 4.5-38.2 6.9-58.2 6.9C111.4 504 0 393 0 256S111.4 8 248.9 8c20.1 0 39.6 2.4 58.2 6.9C197.5 33.2 113.7 134.2 113.7 256m297.4 100.3c-77.7 55.4-179.6 47.5-240.4-14.6 5.5 14.1 12.7 27.7 21.7 40.5 61.6 88.2 182.4 109.3 269.7 47 87.3-62.3 108.1-184.3 46.5-272.6-9-12.9-19.3-24.3-30.5-34.2 37.4 78.8 10.7 178.5-67 233.9m-218.8-244c-1.4 1-2.7 2.1-4 3.1 64.3-17.8 135.9 4 178.9 60.5 35.7 47 42.9 106.6 24.4 158 56.7-56.2 67.6-142.1 22.3-201.8-50-65.5-149.1-74.4-221.6-19.8M296 224c-4.4 0-8-3.6-8-8v-40c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v40c0 4.4-3.6 8-8 8h-40c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h40c4.4 0 8 3.6 8 8v40c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-40c0-4.4 3.6-8 8-8h40c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8h-40z\"],\n    \"meetup\": [512, 512, [], \"f2e0\", \"M99 414.3c1.1 5.7-2.3 11.1-8 12.3-5.4 1.1-10.9-2.3-12-8-1.1-5.4 2.3-11.1 7.7-12.3 5.4-1.2 11.1 2.3 12.3 8zm143.1 71.4c-6.3 4.6-8 13.4-3.7 20 4.6 6.6 13.4 8.3 20 3.7 6.3-4.6 8-13.4 3.4-20-4.2-6.5-13.1-8.3-19.7-3.7zm-86-462.3c6.3-1.4 10.3-7.7 8.9-14-1.1-6.6-7.4-10.6-13.7-9.1-6.3 1.4-10.3 7.7-9.1 14 1.4 6.6 7.6 10.6 13.9 9.1zM34.4 226.3c-10-6.9-23.7-4.3-30.6 6-6.9 10-4.3 24 5.7 30.9 10 7.1 23.7 4.6 30.6-5.7 6.9-10.4 4.3-24.1-5.7-31.2zm272-170.9c10.6-6.3 13.7-20 7.7-30.3-6.3-10.6-19.7-14-30-7.7s-13.7 20-7.4 30.6c6 10.3 19.4 13.7 29.7 7.4zm-191.1 58c7.7-5.4 9.4-16 4.3-23.7s-15.7-9.4-23.1-4.3c-7.7 5.4-9.4 16-4.3 23.7 5.1 7.8 15.6 9.5 23.1 4.3zm372.3 156c-7.4 1.7-12.3 9.1-10.6 16.9 1.4 7.4 8.9 12.3 16.3 10.6 7.4-1.4 12.3-8.9 10.6-16.6-1.5-7.4-8.9-12.3-16.3-10.9zm39.7-56.8c-1.1-5.7-6.6-9.1-12-8-5.7 1.1-9.1 6.9-8 12.6 1.1 5.4 6.6 9.1 12.3 8 5.4-1.5 9.1-6.9 7.7-12.6zM447 138.9c-8.6 6-10.6 17.7-4.9 26.3 5.7 8.6 17.4 10.6 26 4.9 8.3-6 10.3-17.7 4.6-26.3-5.7-8.7-17.4-10.9-25.7-4.9zm-6.3 139.4c26.3 43.1 15.1 100-26.3 129.1-17.4 12.3-37.1 17.7-56.9 17.1-12 47.1-69.4 64.6-105.1 32.6-1.1.9-2.6 1.7-3.7 2.9-39.1 27.1-92.3 17.4-119.4-22.3-9.7-14.3-14.6-30.6-15.1-46.9-65.4-10.9-90-94-41.1-139.7-28.3-46.9.6-107.4 53.4-114.9C151.6 70 234.1 38.6 290.1 82c67.4-22.3 136.3 29.4 130.9 101.1 41.1 12.6 52.8 66.9 19.7 95.2zm-70 74.3c-3.1-20.6-40.9-4.6-43.1-27.1-3.1-32 43.7-101.1 40-128-3.4-24-19.4-29.1-33.4-29.4-13.4-.3-16.9 2-21.4 4.6-2.9 1.7-6.6 4.9-11.7-.3-6.3-6-11.1-11.7-19.4-12.9-12.3-2-17.7 2-26.6 9.7-3.4 2.9-12 12.9-20 9.1-3.4-1.7-15.4-7.7-24-11.4-16.3-7.1-40 4.6-48.6 20-12.9 22.9-38 113.1-41.7 125.1-8.6 26.6 10.9 48.6 36.9 47.1 11.1-.6 18.3-4.6 25.4-17.4 4-7.4 41.7-107.7 44.6-112.6 2-3.4 8.9-8 14.6-5.1 5.7 3.1 6.9 9.4 6 15.1-1.1 9.7-28 70.9-28.9 77.7-3.4 22.9 26.9 26.6 38.6 4 3.7-7.1 45.7-92.6 49.4-98.3 4.3-6.3 7.4-8.3 11.7-8 3.1 0 8.3.9 7.1 10.9-1.4 9.4-35.1 72.3-38.9 87.7-4.6 20.6 6.6 41.4 24.9 50.6 11.4 5.7 62.5 15.7 58.5-11.1zm5.7 92.3c-10.3 7.4-12.9 22-5.7 32.6 7.1 10.6 21.4 13.1 32 6 10.6-7.4 13.1-22 6-32.6-7.4-10.6-21.7-13.5-32.3-6z\"],\n    \"megaport\": [496, 512, [], \"f5a3\", \"M214.5 209.6v66.2l33.5 33.5 33.3-33.3v-66.4l-33.4-33.4zM248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm145.1 414.4L367 441.6l-26-19.2v-65.5l-33.4-33.4-33.4 33.4v65.5L248 441.6l-26.1-19.2v-65.5l-33.4-33.4-33.5 33.4v65.5l-26.1 19.2-26.1-19.2v-87l59.5-59.5V188l59.5-59.5V52.9l26.1-19.2L274 52.9v75.6l59.5 59.5v87.6l59.7 59.7v87.1z\"],\n    \"mendeley\": [640, 512, [], \"f7b3\", \"M624.6 325.2c-12.3-12.4-29.7-19.2-48.4-17.2-43.3-1-49.7-34.9-37.5-98.8 22.8-57.5-14.9-131.5-87.4-130.8-77.4.7-81.7 82-130.9 82-48.1 0-54-81.3-130.9-82-72.9-.8-110.1 73.3-87.4 130.8 12.2 63.9 5.8 97.8-37.5 98.8-21.2-2.3-37 6.5-53 22.5-19.9 19.7-19.3 94.8 42.6 102.6 47.1 5.9 81.6-42.9 61.2-87.8-47.3-103.7 185.9-106.1 146.5-8.2-.1.1-.2.2-.3.4-26.8 42.8 6.8 97.4 58.8 95.2 52.1 2.1 85.4-52.6 58.8-95.2-.1-.2-.2-.3-.3-.4-39.4-97.9 193.8-95.5 146.5 8.2-4.6 10-6.7 21.3-5.7 33 4.9 53.4 68.7 74.1 104.9 35.2 17.8-14.8 23.1-65.6 0-88.3zm-303.9-19.1h-.6c-43.4 0-62.8-37.5-62.8-62.8 0-34.7 28.2-62.8 62.8-62.8h.6c34.7 0 62.8 28.1 62.8 62.8 0 25-19.2 62.8-62.8 62.8z\"],\n    \"microblog\": [448, 512, [], \"e01a\", \"M399.36,362.23c29.49-34.69,47.1-78.34,47.1-125.79C446.46,123.49,346.86,32,224,32S1.54,123.49,1.54,236.44,101.14,440.87,224,440.87a239.28,239.28,0,0,0,79.44-13.44,7.18,7.18,0,0,1,8.12,2.56c18.58,25.09,47.61,42.74,79.89,49.92a4.42,4.42,0,0,0,5.22-3.43,4.37,4.37,0,0,0-.85-3.62,87,87,0,0,1,3.69-110.69ZM329.52,212.4l-57.3,43.49L293,324.75a6.5,6.5,0,0,1-9.94,7.22L224,290.92,164.94,332a6.51,6.51,0,0,1-9.95-7.22l20.79-68.86-57.3-43.49a6.5,6.5,0,0,1,3.8-11.68l71.88-1.51,23.66-67.92a6.5,6.5,0,0,1,12.28,0l23.66,67.92,71.88,1.51a6.5,6.5,0,0,1,3.88,11.68Z\"],\n    \"microsoft\": [448, 512, [], \"f3ca\", \"M0 32h214.6v214.6H0V32zm233.4 0H448v214.6H233.4V32zM0 265.4h214.6V480H0V265.4zm233.4 0H448V480H233.4V265.4z\"],\n    \"mix\": [448, 512, [], \"f3cb\", \"M0 64v348.9c0 56.2 88 58.1 88 0V174.3c7.9-52.9 88-50.4 88 6.5v175.3c0 57.9 96 58 96 0V240c5.3-54.7 88-52.5 88 4.3v23.8c0 59.9 88 56.6 88 0V64H0z\"],\n    \"mixcloud\": [640, 512, [], \"f289\", \"M424.43 219.729C416.124 134.727 344.135 68 256.919 68c-72.266 0-136.224 46.516-159.205 114.074-54.545 8.029-96.63 54.822-96.63 111.582 0 62.298 50.668 112.966 113.243 112.966h289.614c52.329 0 94.969-42.362 94.969-94.693 0-45.131-32.118-83.063-74.48-92.2zm-20.489 144.53H114.327c-39.04 0-70.881-31.564-70.881-70.604s31.841-70.604 70.881-70.604c18.827 0 36.548 7.475 49.838 20.766 19.963 19.963 50.133-10.227 30.18-30.18-14.675-14.398-32.672-24.365-52.053-29.349 19.935-44.3 64.79-73.926 114.628-73.926 69.496 0 125.979 56.483 125.979 125.702 0 13.568-2.215 26.857-6.369 39.594-8.943 27.517 32.133 38.939 40.147 13.29 2.769-8.306 4.984-16.889 6.369-25.472 19.381 7.476 33.502 26.303 33.502 48.453 0 28.795-23.535 52.33-52.607 52.33zm235.069-52.33c0 44.024-12.737 86.386-37.102 122.657-4.153 6.092-10.798 9.414-17.72 9.414-16.317 0-27.127-18.826-17.443-32.949 19.381-29.349 29.903-63.682 29.903-99.122s-10.521-69.773-29.903-98.845c-15.655-22.831 19.361-47.24 35.163-23.534 24.366 35.993 37.102 78.356 37.102 122.379zm-70.88 0c0 31.565-9.137 62.021-26.857 88.325-4.153 6.091-10.798 9.136-17.72 9.136-17.201 0-27.022-18.979-17.443-32.948 13.013-19.104 19.658-41.255 19.658-64.513 0-22.981-6.645-45.408-19.658-64.512-15.761-22.986 19.008-47.095 35.163-23.535 17.719 26.026 26.857 56.483 26.857 88.047z\"],\n    \"mixer\": [512, 512, [], \"e056\", \"M114.57,76.07a45.71,45.71,0,0,0-67.51-6.41c-17.58,16.18-19,43.52-4.75,62.77l91.78,123L41.76,379.58c-14.23,19.25-13.11,46.59,4.74,62.77A45.71,45.71,0,0,0,114,435.94L242.89,262.7a12.14,12.14,0,0,0,0-14.23ZM470.24,379.58,377.91,255.45l91.78-123c14.22-19.25,12.83-46.59-4.75-62.77a45.71,45.71,0,0,0-67.51,6.41l-128,172.12a12.14,12.14,0,0,0,0,14.23L398,435.94a45.71,45.71,0,0,0,67.51,6.41C483.35,426.17,484.47,398.83,470.24,379.58Z\"],\n    \"mizuni\": [496, 512, [], \"f3cc\", \"M248 8C111 8 0 119.1 0 256c0 137 111 248 248 248s248-111 248-248C496 119.1 385 8 248 8zm-80 351.9c-31.4 10.6-58.8 27.3-80 48.2V136c0-22.1 17.9-40 40-40s40 17.9 40 40v223.9zm120-9.9c-12.9-2-26.2-3.1-39.8-3.1-13.8 0-27.2 1.1-40.2 3.1V136c0-22.1 17.9-40 40-40s40 17.9 40 40v214zm120 57.7c-21.2-20.8-48.6-37.4-80-48V136c0-22.1 17.9-40 40-40s40 17.9 40 40v271.7z\"],\n    \"modx\": [448, 512, [], \"f285\", \"M356 241.8l36.7 23.7V480l-133-83.8L356 241.8zM440 75H226.3l-23 37.8 153.5 96.5L440 75zm-89 142.8L55.2 32v214.5l46 29L351 217.8zM97 294.2L8 437h213.7l125-200.5L97 294.2z\"],\n    \"monero\": [496, 512, [], \"f3d0\", \"M352 384h108.4C417 455.9 338.1 504 248 504S79 455.9 35.6 384H144V256.2L248 361l104-105v128zM88 336V128l159.4 159.4L408 128v208h74.8c8.5-25.1 13.2-52 13.2-80C496 119 385 8 248 8S0 119 0 256c0 28 4.6 54.9 13.2 80H88z\"],\n    \"napster\": [496, 512, [], \"f3d2\", \"M298.3 373.6c-14.2 13.6-31.3 24.1-50.4 30.5-19-6.4-36.2-16.9-50.3-30.5h100.7zm44-199.6c20-16.9 43.6-29.2 69.6-36.2V299c0 219.4-328 217.6-328 .3V137.7c25.9 6.9 49.6 19.6 69.5 36.4 56.8-40 132.5-39.9 188.9-.1zm-208.8-58.5c64.4-60 164.3-60.1 228.9-.2-7.1 3.5-13.9 7.3-20.6 11.5-58.7-30.5-129.2-30.4-187.9.1-6.3-4-13.9-8.2-20.4-11.4zM43.8 93.2v69.3c-58.4 36.5-58.4 121.1.1 158.3 26.4 245.1 381.7 240.3 407.6 1.5l.3-1.7c58.7-36.3 58.9-121.7.2-158.2V93.2c-17.3.5-34 3-50.1 7.4-82-91.5-225.5-91.5-307.5.1-16.3-4.4-33.1-7-50.6-7.5zM259.2 352s36-.3 61.3-1.5c10.2-.5 21.1-4 25.5-6.5 26.3-15.1 25.4-39.2 26.2-47.4-79.5-.6-99.9-3.9-113 55.4zm-135.5-55.3c.8 8.2-.1 32.3 26.2 47.4 4.4 2.5 15.2 6 25.5 6.5 25.3 1.1 61.3 1.5 61.3 1.5-13.2-59.4-33.7-56.1-113-55.4zm169.1 123.4c-3.2-5.3-6.9-7.3-6.9-7.3-24.8 7.3-52.2 6.9-75.9 0 0 0-2.9 1.5-6.4 6.6-2.8 4.1-3.7 9.6-3.7 9.6 29.1 17.6 67.1 17.6 96.2 0-.1-.1-.3-4-3.3-8.9z\"],\n    \"neos\": [512, 512, [], \"f612\", \"M415.44 512h-95.11L212.12 357.46v91.1L125.69 512H28V29.82L68.47 0h108.05l123.74 176.13V63.45L386.69 0h97.69v461.5zM38.77 35.27V496l72-52.88V194l215.5 307.64h84.79l52.35-38.17h-78.27L69 13zm82.54 466.61l80-58.78v-101l-79.76-114.4v220.94L49 501.89h72.34zM80.63 10.77l310.6 442.57h82.37V10.77h-79.75v317.56L170.91 10.77zM311 191.65l72 102.81V15.93l-72 53v122.72z\"],\n    \"nimblr\": [384, 512, [], \"f5a8\", \"M246.6 299.29c15.57 0 27.15 11.46 27.15 27s-11.62 27-27.15 27c-15.7 0-27.15-11.57-27.15-27s11.55-27 27.15-27zM113 326.25c0-15.61 11.68-27 27.15-27s27.15 11.46 27.15 27-11.47 27-27.15 27c-15.44 0-27.15-11.31-27.15-27M191.76 159C157 159 89.45 178.77 59.25 227L14 0v335.48C14 433.13 93.61 512 191.76 512s177.76-78.95 177.76-176.52S290.13 159 191.76 159zm0 308.12c-73.27 0-132.51-58.9-132.51-131.59s59.24-131.59 132.51-131.59 132.51 58.86 132.51 131.54S265 467.07 191.76 467.07z\"],\n    \"node\": [640, 512, [], \"f419\", \"M316.3 452c-2.1 0-4.2-.6-6.1-1.6L291 439c-2.9-1.6-1.5-2.2-.5-2.5 3.8-1.3 4.6-1.6 8.7-4 .4-.2 1-.1 1.4.1l14.8 8.8c.5.3 1.3.3 1.8 0L375 408c.5-.3.9-.9.9-1.6v-66.7c0-.7-.3-1.3-.9-1.6l-57.8-33.3c-.5-.3-1.2-.3-1.8 0l-57.8 33.3c-.6.3-.9 1-.9 1.6v66.7c0 .6.4 1.2.9 1.5l15.8 9.1c8.6 4.3 13.9-.8 13.9-5.8v-65.9c0-.9.7-1.7 1.7-1.7h7.3c.9 0 1.7.7 1.7 1.7v65.9c0 11.5-6.2 18-17.1 18-3.3 0-6 0-13.3-3.6l-15.2-8.7c-3.7-2.2-6.1-6.2-6.1-10.5v-66.7c0-4.3 2.3-8.4 6.1-10.5l57.8-33.4c3.7-2.1 8.5-2.1 12.1 0l57.8 33.4c3.7 2.2 6.1 6.2 6.1 10.5v66.7c0 4.3-2.3 8.4-6.1 10.5l-57.8 33.4c-1.7 1.1-3.8 1.7-6 1.7zm46.7-65.8c0-12.5-8.4-15.8-26.2-18.2-18-2.4-19.8-3.6-19.8-7.8 0-3.5 1.5-8.1 14.8-8.1 11.9 0 16.3 2.6 18.1 10.6.2.8.8 1.3 1.6 1.3h7.5c.5 0 .9-.2 1.2-.5.3-.4.5-.8.4-1.3-1.2-13.8-10.3-20.2-28.8-20.2-16.5 0-26.3 7-26.3 18.6 0 12.7 9.8 16.1 25.6 17.7 18.9 1.9 20.4 4.6 20.4 8.3 0 6.5-5.2 9.2-17.4 9.2-15.3 0-18.7-3.8-19.8-11.4-.1-.8-.8-1.4-1.7-1.4h-7.5c-.9 0-1.7.7-1.7 1.7 0 9.7 5.3 21.3 30.6 21.3 18.5 0 29-7.2 29-19.8zm54.5-50.1c0 6.1-5 11.1-11.1 11.1s-11.1-5-11.1-11.1c0-6.3 5.2-11.1 11.1-11.1 6-.1 11.1 4.8 11.1 11.1zm-1.8 0c0-5.2-4.2-9.3-9.4-9.3-5.1 0-9.3 4.1-9.3 9.3 0 5.2 4.2 9.4 9.3 9.4 5.2-.1 9.4-4.3 9.4-9.4zm-4.5 6.2h-2.6c-.1-.6-.5-3.8-.5-3.9-.2-.7-.4-1.1-1.3-1.1h-2.2v5h-2.4v-12.5h4.3c1.5 0 4.4 0 4.4 3.3 0 2.3-1.5 2.8-2.4 3.1 1.7.1 1.8 1.2 2.1 2.8.1 1 .3 2.7.6 3.3zm-2.8-8.8c0-1.7-1.2-1.7-1.8-1.7h-2v3.5h1.9c1.6 0 1.9-1.1 1.9-1.8zM137.3 191c0-2.7-1.4-5.1-3.7-6.4l-61.3-35.3c-1-.6-2.2-.9-3.4-1h-.6c-1.2 0-2.3.4-3.4 1L3.7 184.6C1.4 185.9 0 188.4 0 191l.1 95c0 1.3.7 2.5 1.8 3.2 1.1.7 2.5.7 3.7 0L42 268.3c2.3-1.4 3.7-3.8 3.7-6.4v-44.4c0-2.6 1.4-5.1 3.7-6.4l15.5-8.9c1.2-.7 2.4-1 3.7-1 1.3 0 2.6.3 3.7 1l15.5 8.9c2.3 1.3 3.7 3.8 3.7 6.4v44.4c0 2.6 1.4 5.1 3.7 6.4l36.4 20.9c1.1.7 2.6.7 3.7 0 1.1-.6 1.8-1.9 1.8-3.2l.2-95zM472.5 87.3v176.4c0 2.6-1.4 5.1-3.7 6.4l-61.3 35.4c-2.3 1.3-5.1 1.3-7.4 0l-61.3-35.4c-2.3-1.3-3.7-3.8-3.7-6.4v-70.8c0-2.6 1.4-5.1 3.7-6.4l61.3-35.4c2.3-1.3 5.1-1.3 7.4 0l15.3 8.8c1.7 1 3.9-.3 3.9-2.2v-94c0-2.8 3-4.6 5.5-3.2l36.5 20.4c2.3 1.2 3.8 3.7 3.8 6.4zm-46 128.9c0-.7-.4-1.3-.9-1.6l-21-12.2c-.6-.3-1.3-.3-1.9 0l-21 12.2c-.6.3-.9.9-.9 1.6v24.3c0 .7.4 1.3.9 1.6l21 12.1c.6.3 1.3.3 1.8 0l21-12.1c.6-.3.9-.9.9-1.6v-24.3zm209.8-.7c2.3-1.3 3.7-3.8 3.7-6.4V192c0-2.6-1.4-5.1-3.7-6.4l-60.9-35.4c-2.3-1.3-5.1-1.3-7.4 0l-61.3 35.4c-2.3 1.3-3.7 3.8-3.7 6.4v70.8c0 2.7 1.4 5.1 3.7 6.4l60.9 34.7c2.2 1.3 5 1.3 7.3 0l36.8-20.5c2.5-1.4 2.5-5 0-6.4L550 241.6c-1.2-.7-1.9-1.9-1.9-3.2v-22.2c0-1.3.7-2.5 1.9-3.2l19.2-11.1c1.1-.7 2.6-.7 3.7 0l19.2 11.1c1.1.7 1.9 1.9 1.9 3.2v17.4c0 2.8 3.1 4.6 5.6 3.2l36.7-21.3zM559 219c-.4.3-.7.7-.7 1.2v13.6c0 .5.3 1 .7 1.2l11.8 6.8c.4.3 1 .3 1.4 0L584 235c.4-.3.7-.7.7-1.2v-13.6c0-.5-.3-1-.7-1.2l-11.8-6.8c-.4-.3-1-.3-1.4 0L559 219zm-254.2 43.5v-70.4c0-2.6-1.6-5.1-3.9-6.4l-61.1-35.2c-2.1-1.2-5-1.4-7.4 0l-61.1 35.2c-2.3 1.3-3.9 3.7-3.9 6.4v70.4c0 2.8 1.9 5.2 4 6.4l61.2 35.2c2.4 1.4 5.2 1.3 7.4 0l61-35.2c1.8-1 3.1-2.7 3.6-4.7.1-.5.2-1.1.2-1.7zm-74.3-124.9l-.8.5h1.1l-.3-.5zm76.2 130.2l-.4-.7v.9l.4-.2z\"],\n    \"node-js\": [448, 512, [], \"f3d3\", \"M224 508c-6.7 0-13.5-1.8-19.4-5.2l-61.7-36.5c-9.2-5.2-4.7-7-1.7-8 12.3-4.3 14.8-5.2 27.9-12.7 1.4-.8 3.2-.5 4.6.4l47.4 28.1c1.7 1 4.1 1 5.7 0l184.7-106.6c1.7-1 2.8-3 2.8-5V149.3c0-2.1-1.1-4-2.9-5.1L226.8 37.7c-1.7-1-4-1-5.7 0L36.6 144.3c-1.8 1-2.9 3-2.9 5.1v213.1c0 2 1.1 4 2.9 4.9l50.6 29.2c27.5 13.7 44.3-2.4 44.3-18.7V167.5c0-3 2.4-5.3 5.4-5.3h23.4c2.9 0 5.4 2.3 5.4 5.3V378c0 36.6-20 57.6-54.7 57.6-10.7 0-19.1 0-42.5-11.6l-48.4-27.9C8.1 389.2.7 376.3.7 362.4V149.3c0-13.8 7.4-26.8 19.4-33.7L204.6 9c11.7-6.6 27.2-6.6 38.8 0l184.7 106.7c12 6.9 19.4 19.8 19.4 33.7v213.1c0 13.8-7.4 26.7-19.4 33.7L243.4 502.8c-5.9 3.4-12.6 5.2-19.4 5.2zm149.1-210.1c0-39.9-27-50.5-83.7-58-57.4-7.6-63.2-11.5-63.2-24.9 0-11.1 4.9-25.9 47.4-25.9 37.9 0 51.9 8.2 57.7 33.8.5 2.4 2.7 4.2 5.2 4.2h24c1.5 0 2.9-.6 3.9-1.7s1.5-2.6 1.4-4.1c-3.7-44.1-33-64.6-92.2-64.6-52.7 0-84.1 22.2-84.1 59.5 0 40.4 31.3 51.6 81.8 56.6 60.5 5.9 65.2 14.8 65.2 26.7 0 20.6-16.6 29.4-55.5 29.4-48.9 0-59.6-12.3-63.2-36.6-.4-2.6-2.6-4.5-5.3-4.5h-23.9c-3 0-5.3 2.4-5.3 5.3 0 31.1 16.9 68.2 97.8 68.2 58.4-.1 92-23.2 92-63.4z\"],\n    \"npm\": [576, 512, [], \"f3d4\", \"M288 288h-32v-64h32v64zm288-128v192H288v32H160v-32H0V160h576zm-416 32H32v128h64v-96h32v96h32V192zm160 0H192v160h64v-32h64V192zm224 0H352v128h64v-96h32v96h32v-96h32v96h32V192z\"],\n    \"ns8\": [640, 512, [], \"f3d5\", \"M104.324,269.172h26.067V242.994H104.324Zm52.466-26.178-.055-26.178v-.941a39.325,39.325,0,0,0-78.644.941v.166h26.4v-.166a12.98,12.98,0,0,1,25.956,0v26.178Zm52.356,25.846a91.1,91.1,0,0,1-91.1,91.1h-.609a91.1,91.1,0,0,1-91.1-91.1H0v.166A117.33,117.33,0,0,0,117.44,386.28h.775A117.331,117.331,0,0,0,235.49,268.84V242.828H209.146Zm-157.233,0a65.362,65.362,0,0,0,130.723,0H156.292a39.023,39.023,0,0,1-78.035,0V242.883H51.968v-26.62A65.42,65.42,0,0,1,182.8,217.48v25.293h26.344V217.48a91.761,91.761,0,0,0-183.522,0v25.4H51.913Zm418.4-71.173c13.67,0,24.573,6.642,30.052,18.264l.719,1.549,23.245-11.511-.609-1.439c-8.025-19.26-28.5-31.27-53.407-31.27-23.134,0-43.611,11.4-50.972,28.447-.123,26.876-.158,23.9,0,24.85,4.7,11.013,14.555,19.37,28.668,24.241a102.033,102.033,0,0,0,19.813,3.984c5.479.72,10.626,1.384,15.829,3.1,6.364,2.1,10.46,5.257,12.84,9.851v9.851c-3.708,7.527-13.781,12.342-25.791,12.342-14.334,0-25.956-6.918-31.933-19.039l-.72-1.494L415.026,280.9l.553,1.439c7.915,19.426,29.609,32.044,55.289,32.044,23.632,0,44.608-11.4,52.3-28.447l.166-25.9-.166-.664c-4.87-11.014-15.219-19.647-28.944-24.241-7.693-2.712-14.335-3.6-20.7-4.427a83.777,83.777,0,0,1-14.832-2.878c-6.31-1.937-10.4-5.092-12.619-9.63v-8.412C449.45,202.427,458.969,197.667,470.315,197.667ZM287.568,311.344h26.067v-68.4H287.568Zm352.266-53.3c-2.933-6.254-8.3-12.01-15.441-16.714A37.99,37.99,0,0,0,637.4,226l.166-25.347-.166-.664C630.038,184,610.667,173.26,589.25,173.26S548.461,184,541.1,199.992l-.166,25.347.166.664a39.643,39.643,0,0,0,13.006,15.331c-7.2,4.7-12.508,10.46-15.441,16.714l-.166,28.889.166.72c7.582,15.994,27.893,26.731,50.585,26.731s43.057-10.737,50.584-26.731l.166-28.89Zm-73.22-50.806c3.6-6.31,12.563-10.516,22.58-10.516s19.038,4.206,22.636,10.516v13.725c-3.542,6.2-12.563,10.349-22.636,10.349s-19.094-4.15-22.58-10.349Zm47.319,72.169c-3.764,6.641-13.338,10.9-24.683,10.9-11.125,0-20.976-4.372-24.684-10.9V263.25c3.708-6.309,13.5-10.515,24.684-10.515,11.345,0,20.919,4.15,24.683,10.515ZM376.4,265.962l-59.827-89.713h-29v40.623h26.51v.387l62.539,94.085H402.3V176.249H376.4Z\"],\n    \"nutritionix\": [400, 512, [], \"f3d6\", \"M88 8.1S221.4-.1 209 112.5c0 0 19.1-74.9 103-40.6 0 0-17.7 74-88 56 0 0 14.6-54.6 66.1-56.6 0 0-39.9-10.3-82.1 48.8 0 0-19.8-94.5-93.6-99.7 0 0 75.2 19.4 77.6 107.5 0 .1-106.4 7-104-119.8zm312 315.6c0 48.5-9.7 95.3-32 132.3-42.2 30.9-105 48-168 48-62.9 0-125.8-17.1-168-48C9.7 419 0 372.2 0 323.7 0 275.3 17.7 229 40 192c42.2-30.9 97.1-48.6 160-48.6 63 0 117.8 17.6 160 48.6 22.3 37 40 83.3 40 131.7zM120 428c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zM192 428c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zM264 428c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zM336 428c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm0-66.2c0-15.5-12.5-28-28-28s-28 12.5-28 28 12.5 28 28 28 28-12.5 28-28zm24-39.6c-4.8-22.3-7.4-36.9-16-56-38.8-19.9-90.5-32-144-32S94.8 180.1 56 200c-8.8 19.5-11.2 33.9-16 56 42.2-7.9 98.7-14.8 160-14.8s117.8 6.9 160 14.8z\"],\n    \"octopus-deploy\": [512, 512, [], \"e082\", \"M455.6,349.2c-45.891-39.09-36.67-77.877-16.095-128.11C475.16,134.04,415.967,34.14,329.93,8.3,237.04-19.6,134.252,24.341,99.677,117.147a180.862,180.862,0,0,0-10.988,73.544c1.733,29.543,14.717,52.97,24.09,80.3,17.2,50.161-28.1,92.743-66.662,117.582-46.806,30.2-36.319,39.857-8.428,41.858,23.378,1.68,44.478-4.548,65.265-15.045,9.2-4.647,40.687-18.931,45.13-28.588C135.9,413.388,111.122,459.5,126.621,488.9c19.1,36.229,67.112-31.77,76.709-45.812,8.591-12.572,42.963-81.279,63.627-46.926,18.865,31.361,8.6,76.391,35.738,104.622,32.854,34.2,51.155-18.312,51.412-44.221.163-16.411-6.1-95.852,29.9-59.944C405.428,418,436.912,467.8,472.568,463.642c38.736-4.516-22.123-67.967-28.262-78.695,5.393,4.279,53.665,34.128,53.818,9.52C498.234,375.678,468.039,359.8,455.6,349.2Z\"],\n    \"odnoklassniki\": [320, 512, [], \"f263\", \"M275.1 334c-27.4 17.4-65.1 24.3-90 26.9l20.9 20.6 76.3 76.3c27.9 28.6-17.5 73.3-45.7 45.7-19.1-19.4-47.1-47.4-76.3-76.6L84 503.4c-28.2 27.5-73.6-17.6-45.4-45.7 19.4-19.4 47.1-47.4 76.3-76.3l20.6-20.6c-24.6-2.6-62.9-9.1-90.6-26.9-32.6-21-46.9-33.3-34.3-59 7.4-14.6 27.7-26.9 54.6-5.7 0 0 36.3 28.9 94.9 28.9s94.9-28.9 94.9-28.9c26.9-21.1 47.1-8.9 54.6 5.7 12.4 25.7-1.9 38-34.5 59.1zM30.3 129.7C30.3 58 88.6 0 160 0s129.7 58 129.7 129.7c0 71.4-58.3 129.4-129.7 129.4s-129.7-58-129.7-129.4zm66 0c0 35.1 28.6 63.7 63.7 63.7s63.7-28.6 63.7-63.7c0-35.4-28.6-64-63.7-64s-63.7 28.6-63.7 64z\"],\n    \"odnoklassniki-square\": [448, 512, [], \"f264\", \"M184.2 177.1c0-22.1 17.9-40 39.8-40s39.8 17.9 39.8 40c0 22-17.9 39.8-39.8 39.8s-39.8-17.9-39.8-39.8zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-305.1 97.1c0 44.6 36.4 80.9 81.1 80.9s81.1-36.2 81.1-80.9c0-44.8-36.4-81.1-81.1-81.1s-81.1 36.2-81.1 81.1zm174.5 90.7c-4.6-9.1-17.3-16.8-34.1-3.6 0 0-22.7 18-59.3 18s-59.3-18-59.3-18c-16.8-13.2-29.5-5.5-34.1 3.6-7.9 16.1 1.1 23.7 21.4 37 17.3 11.1 41.2 15.2 56.6 16.8l-12.9 12.9c-18.2 18-35.5 35.5-47.7 47.7-17.6 17.6 10.7 45.8 28.4 28.6l47.7-47.9c18.2 18.2 35.7 35.7 47.7 47.9 17.6 17.2 46-10.7 28.6-28.6l-47.7-47.7-13-12.9c15.5-1.6 39.1-5.9 56.2-16.8 20.4-13.3 29.3-21 21.5-37z\"],\n    \"old-republic\": [496, 512, [], \"f510\", \"M235.76 10.23c7.5-.31 15-.28 22.5-.09 3.61.14 7.2.4 10.79.73 4.92.27 9.79 1.03 14.67 1.62 2.93.43 5.83.98 8.75 1.46 7.9 1.33 15.67 3.28 23.39 5.4 12.24 3.47 24.19 7.92 35.76 13.21 26.56 12.24 50.94 29.21 71.63 49.88 20.03 20.09 36.72 43.55 48.89 69.19 1.13 2.59 2.44 5.1 3.47 7.74 2.81 6.43 5.39 12.97 7.58 19.63 4.14 12.33 7.34 24.99 9.42 37.83.57 3.14 1.04 6.3 1.4 9.47.55 3.83.94 7.69 1.18 11.56.83 8.34.84 16.73.77 25.1-.07 4.97-.26 9.94-.75 14.89-.24 3.38-.51 6.76-.98 10.12-.39 2.72-.63 5.46-1.11 8.17-.9 5.15-1.7 10.31-2.87 15.41-4.1 18.5-10.3 36.55-18.51 53.63-15.77 32.83-38.83 62.17-67.12 85.12a246.503 246.503 0 0 1-56.91 34.86c-6.21 2.68-12.46 5.25-18.87 7.41-3.51 1.16-7.01 2.38-10.57 3.39-6.62 1.88-13.29 3.64-20.04 5-4.66.91-9.34 1.73-14.03 2.48-5.25.66-10.5 1.44-15.79 1.74-6.69.66-13.41.84-20.12.81-6.82.03-13.65-.12-20.45-.79-3.29-.23-6.57-.5-9.83-.95-2.72-.39-5.46-.63-8.17-1.11-4.12-.72-8.25-1.37-12.35-2.22-4.25-.94-8.49-1.89-12.69-3.02-8.63-2.17-17.08-5.01-25.41-8.13-10.49-4.12-20.79-8.75-30.64-14.25-2.14-1.15-4.28-2.29-6.35-3.57-11.22-6.58-21.86-14.1-31.92-22.34-34.68-28.41-61.41-66.43-76.35-108.7-3.09-8.74-5.71-17.65-7.8-26.68-1.48-6.16-2.52-12.42-3.58-18.66-.4-2.35-.61-4.73-.95-7.09-.6-3.96-.75-7.96-1.17-11.94-.8-9.47-.71-18.99-.51-28.49.14-3.51.34-7.01.7-10.51.31-3.17.46-6.37.92-9.52.41-2.81.65-5.65 1.16-8.44.7-3.94 1.3-7.9 2.12-11.82 3.43-16.52 8.47-32.73 15.26-48.18 1.15-2.92 2.59-5.72 3.86-8.59 8.05-16.71 17.9-32.56 29.49-47.06 20-25.38 45.1-46.68 73.27-62.47 7.5-4.15 15.16-8.05 23.07-11.37 15.82-6.88 32.41-11.95 49.31-15.38 3.51-.67 7.04-1.24 10.56-1.85 2.62-.47 5.28-.7 7.91-1.08 3.53-.53 7.1-.68 10.65-1.04 2.46-.24 4.91-.36 7.36-.51m8.64 24.41c-9.23.1-18.43.99-27.57 2.23-7.3 1.08-14.53 2.6-21.71 4.3-13.91 3.5-27.48 8.34-40.46 14.42-10.46 4.99-20.59 10.7-30.18 17.22-4.18 2.92-8.4 5.8-12.34 9.03-5.08 3.97-9.98 8.17-14.68 12.59-2.51 2.24-4.81 4.7-7.22 7.06-28.22 28.79-48.44 65.39-57.5 104.69-2.04 8.44-3.54 17.02-4.44 25.65-1.1 8.89-1.44 17.85-1.41 26.8.11 7.14.38 14.28 1.22 21.37.62 7.12 1.87 14.16 3.2 21.18 1.07 4.65 2.03 9.32 3.33 13.91 6.29 23.38 16.5 45.7 30.07 65.75 8.64 12.98 18.78 24.93 29.98 35.77 16.28 15.82 35.05 29.04 55.34 39.22 7.28 3.52 14.66 6.87 22.27 9.63 5.04 1.76 10.06 3.57 15.22 4.98 11.26 3.23 22.77 5.6 34.39 7.06 2.91.29 5.81.61 8.72.9 13.82 1.08 27.74 1 41.54-.43 4.45-.6 8.92-.99 13.35-1.78 3.63-.67 7.28-1.25 10.87-2.1 4.13-.98 8.28-1.91 12.36-3.07 26.5-7.34 51.58-19.71 73.58-36.2 15.78-11.82 29.96-25.76 42.12-41.28 3.26-4.02 6.17-8.31 9.13-12.55 3.39-5.06 6.58-10.25 9.6-15.54 2.4-4.44 4.74-8.91 6.95-13.45 5.69-12.05 10.28-24.62 13.75-37.49 2.59-10.01 4.75-20.16 5.9-30.45 1.77-13.47 1.94-27.1 1.29-40.65-.29-3.89-.67-7.77-1-11.66-2.23-19.08-6.79-37.91-13.82-55.8-5.95-15.13-13.53-29.63-22.61-43.13-12.69-18.8-28.24-35.68-45.97-49.83-25.05-20-54.47-34.55-85.65-42.08-7.78-1.93-15.69-3.34-23.63-4.45-3.91-.59-7.85-.82-11.77-1.24-7.39-.57-14.81-.72-22.22-.58zM139.26 83.53c13.3-8.89 28.08-15.38 43.3-20.18-3.17 1.77-6.44 3.38-9.53 5.29-11.21 6.68-21.52 14.9-30.38 24.49-6.8 7.43-12.76 15.73-17.01 24.89-3.29 6.86-5.64 14.19-6.86 21.71-.93 4.85-1.3 9.81-1.17 14.75.13 13.66 4.44 27.08 11.29 38.82 5.92 10.22 13.63 19.33 22.36 27.26 4.85 4.36 10.24 8.09 14.95 12.6 2.26 2.19 4.49 4.42 6.43 6.91 2.62 3.31 4.89 6.99 5.99 11.1.9 3.02.66 6.2.69 9.31.02 4.1-.04 8.2.03 12.3.14 3.54-.02 7.09.11 10.63.08 2.38.02 4.76.05 7.14.16 5.77.06 11.53.15 17.3.11 2.91.02 5.82.13 8.74.03 1.63.13 3.28-.03 4.91-.91.12-1.82.18-2.73.16-10.99 0-21.88-2.63-31.95-6.93-6-2.7-11.81-5.89-17.09-9.83-5.75-4.19-11.09-8.96-15.79-14.31-6.53-7.24-11.98-15.39-16.62-23.95-1.07-2.03-2.24-4.02-3.18-6.12-1.16-2.64-2.62-5.14-3.67-7.82-4.05-9.68-6.57-19.94-8.08-30.31-.49-4.44-1.09-8.88-1.2-13.35-.7-15.73.84-31.55 4.67-46.82 2.12-8.15 4.77-16.18 8.31-23.83 6.32-14.2 15.34-27.18 26.3-38.19 6.28-6.2 13.13-11.84 20.53-16.67zm175.37-20.12c2.74.74 5.41 1.74 8.09 2.68 6.36 2.33 12.68 4.84 18.71 7.96 13.11 6.44 25.31 14.81 35.82 24.97 10.2 9.95 18.74 21.6 25.14 34.34 1.28 2.75 2.64 5.46 3.81 8.26 6.31 15.1 10 31.26 11.23 47.57.41 4.54.44 9.09.45 13.64.07 11.64-1.49 23.25-4.3 34.53-1.97 7.27-4.35 14.49-7.86 21.18-3.18 6.64-6.68 13.16-10.84 19.24-6.94 10.47-15.6 19.87-25.82 27.22-10.48 7.64-22.64 13.02-35.4 15.38-3.51.69-7.08 1.08-10.66 1.21-1.85.06-3.72.16-5.56-.1-.28-2.15 0-4.31-.01-6.46-.03-3.73.14-7.45.1-11.17.19-7.02.02-14.05.21-21.07.03-2.38-.03-4.76.03-7.14.17-5.07-.04-10.14.14-15.21.1-2.99-.24-6.04.51-8.96.66-2.5 1.78-4.86 3.09-7.08 4.46-7.31 11.06-12.96 17.68-18.26 5.38-4.18 10.47-8.77 15.02-13.84 7.68-8.37 14.17-17.88 18.78-28.27 2.5-5.93 4.52-12.1 5.55-18.46.86-4.37 1.06-8.83 1.01-13.27-.02-7.85-1.4-15.65-3.64-23.17-1.75-5.73-4.27-11.18-7.09-16.45-3.87-6.93-8.65-13.31-13.96-19.2-9.94-10.85-21.75-19.94-34.6-27.1-1.85-1.02-3.84-1.82-5.63-2.97zm-100.8 58.45c.98-1.18 1.99-2.33 3.12-3.38-.61.93-1.27 1.81-1.95 2.68-3.1 3.88-5.54 8.31-7.03 13.06-.87 3.27-1.68 6.6-1.73 10-.07 2.52-.08 5.07.32 7.57 1.13 7.63 4.33 14.85 8.77 21.12 2 2.7 4.25 5.27 6.92 7.33 1.62 1.27 3.53 2.09 5.34 3.05 3.11 1.68 6.32 3.23 9.07 5.48 2.67 2.09 4.55 5.33 4.4 8.79-.01 73.67 0 147.34-.01 221.02 0 1.35-.08 2.7.04 4.04.13 1.48.82 2.83 1.47 4.15.86 1.66 1.78 3.34 3.18 4.62.85.77 1.97 1.4 3.15 1.24 1.5-.2 2.66-1.35 3.45-2.57.96-1.51 1.68-3.16 2.28-4.85.76-2.13.44-4.42.54-6.63.14-4.03-.02-8.06.14-12.09.03-5.89.03-11.77.06-17.66.14-3.62.03-7.24.11-10.86.15-4.03-.02-8.06.14-12.09.03-5.99.03-11.98.07-17.97.14-3.62.02-7.24.11-10.86.14-3.93-.02-7.86.14-11.78.03-5.99.03-11.98.06-17.97.16-3.94-.01-7.88.19-11.82.29 1.44.13 2.92.22 4.38.19 3.61.42 7.23.76 10.84.32 3.44.44 6.89.86 10.32.37 3.1.51 6.22.95 9.31.57 4.09.87 8.21 1.54 12.29 1.46 9.04 2.83 18.11 5.09 26.99 1.13 4.82 2.4 9.61 4 14.3 2.54 7.9 5.72 15.67 10.31 22.62 1.73 2.64 3.87 4.98 6.1 7.21.27.25.55.51.88.71.6.25 1.31-.07 1.7-.57.71-.88 1.17-1.94 1.7-2.93 4.05-7.8 8.18-15.56 12.34-23.31.7-1.31 1.44-2.62 2.56-3.61 1.75-1.57 3.84-2.69 5.98-3.63 2.88-1.22 5.9-2.19 9.03-2.42 6.58-.62 13.11.75 19.56 1.85 3.69.58 7.4 1.17 11.13 1.41 3.74.1 7.48.05 11.21-.28 8.55-.92 16.99-2.96 24.94-6.25 5.3-2.24 10.46-4.83 15.31-7.93 11.46-7.21 21.46-16.57 30.04-27.01 1.17-1.42 2.25-2.9 3.46-4.28-1.2 3.24-2.67 6.37-4.16 9.48-1.25 2.9-2.84 5.61-4.27 8.42-5.16 9.63-11.02 18.91-17.75 27.52-4.03 5.21-8.53 10.05-13.33 14.57-6.64 6.05-14.07 11.37-22.43 14.76-8.21 3.37-17.31 4.63-26.09 3.29-3.56-.58-7.01-1.69-10.41-2.88-2.79-.97-5.39-2.38-8.03-3.69-3.43-1.71-6.64-3.81-9.71-6.08 2.71 3.06 5.69 5.86 8.7 8.61 4.27 3.76 8.74 7.31 13.63 10.23 3.98 2.45 8.29 4.4 12.84 5.51 1.46.37 2.96.46 4.45.6-1.25 1.1-2.63 2.04-3.99 2.98-9.61 6.54-20.01 11.86-30.69 16.43-20.86 8.7-43.17 13.97-65.74 15.34-4.66.24-9.32.36-13.98.36-4.98-.11-9.97-.13-14.92-.65-11.2-.76-22.29-2.73-33.17-5.43-10.35-2.71-20.55-6.12-30.3-10.55-8.71-3.86-17.12-8.42-24.99-13.79-1.83-1.31-3.74-2.53-5.37-4.08 6.6-1.19 13.03-3.39 18.99-6.48 5.74-2.86 10.99-6.66 15.63-11.07 2.24-2.19 4.29-4.59 6.19-7.09-3.43 2.13-6.93 4.15-10.62 5.78-4.41 2.16-9.07 3.77-13.81 5.02-5.73 1.52-11.74 1.73-17.61 1.14-8.13-.95-15.86-4.27-22.51-8.98-4.32-2.94-8.22-6.43-11.96-10.06-9.93-10.16-18.2-21.81-25.66-33.86-3.94-6.27-7.53-12.75-11.12-19.22-1.05-2.04-2.15-4.05-3.18-6.1 2.85 2.92 5.57 5.97 8.43 8.88 8.99 8.97 18.56 17.44 29.16 24.48 7.55 4.9 15.67 9.23 24.56 11.03 3.11.73 6.32.47 9.47.81 2.77.28 5.56.2 8.34.3 5.05.06 10.11.04 15.16-.16 3.65-.16 7.27-.66 10.89-1.09 2.07-.25 4.11-.71 6.14-1.2 3.88-.95 8.11-.96 11.83.61 4.76 1.85 8.44 5.64 11.38 9.71 2.16 3.02 4.06 6.22 5.66 9.58 1.16 2.43 2.46 4.79 3.55 7.26 1 2.24 2.15 4.42 3.42 6.52.67 1.02 1.4 2.15 2.62 2.55 1.06-.75 1.71-1.91 2.28-3.03 2.1-4.16 3.42-8.65 4.89-13.05 2.02-6.59 3.78-13.27 5.19-20.02 2.21-9.25 3.25-18.72 4.54-28.13.56-3.98.83-7.99 1.31-11.97.87-10.64 1.9-21.27 2.24-31.94.08-1.86.24-3.71.25-5.57.01-4.35.25-8.69.22-13.03-.01-2.38-.01-4.76 0-7.13.05-5.07-.2-10.14-.22-15.21-.2-6.61-.71-13.2-1.29-19.78-.73-5.88-1.55-11.78-3.12-17.51-2.05-7.75-5.59-15.03-9.8-21.82-3.16-5.07-6.79-9.88-11.09-14.03-3.88-3.86-8.58-7.08-13.94-8.45-1.5-.41-3.06-.45-4.59-.64.07-2.99.7-5.93 1.26-8.85 1.59-7.71 3.8-15.3 6.76-22.6 1.52-4.03 3.41-7.9 5.39-11.72 3.45-6.56 7.62-12.79 12.46-18.46zm31.27 1.7c.35-.06.71-.12 1.07-.19.19 1.79.09 3.58.1 5.37v38.13c-.01 1.74.13 3.49-.15 5.22-.36-.03-.71-.05-1.06-.05-.95-3.75-1.72-7.55-2.62-11.31-.38-1.53-.58-3.09-1.07-4.59-1.7-.24-3.43-.17-5.15-.2-5.06-.01-10.13 0-15.19-.01-1.66-.01-3.32.09-4.98-.03-.03-.39-.26-.91.16-1.18 1.28-.65 2.72-.88 4.06-1.35 3.43-1.14 6.88-2.16 10.31-3.31 1.39-.48 2.9-.72 4.16-1.54.04-.56.02-1.13-.05-1.68-1.23-.55-2.53-.87-3.81-1.28-3.13-1.03-6.29-1.96-9.41-3.02-1.79-.62-3.67-1-5.41-1.79-.03-.37-.07-.73-.11-1.09 5.09-.19 10.2.06 15.3-.12 3.36-.13 6.73.08 10.09-.07.12-.39.26-.77.37-1.16 1.08-4.94 2.33-9.83 3.39-14.75zm5.97-.2c.36.05.72.12 1.08.2.98 3.85 1.73 7.76 2.71 11.61.36 1.42.56 2.88 1.03 4.27 2.53.18 5.07-.01 7.61.05 5.16.12 10.33.12 15.49.07.76-.01 1.52.03 2.28.08-.04.36-.07.72-.1 1.08-1.82.83-3.78 1.25-5.67 1.89-3.73 1.23-7.48 2.39-11.22 3.57-.57.17-1.12.42-1.67.64-.15.55-.18 1.12-.12 1.69.87.48 1.82.81 2.77 1.09 4.88 1.52 9.73 3.14 14.63 4.6.38.13.78.27 1.13.49.4.27.23.79.15 1.18-1.66.13-3.31.03-4.97.04-5.17.01-10.33-.01-15.5.01-1.61.03-3.22-.02-4.82.21-.52 1.67-.72 3.42-1.17 5.11-.94 3.57-1.52 7.24-2.54 10.78-.36.01-.71.02-1.06.06-.29-1.73-.15-3.48-.15-5.22v-38.13c.02-1.78-.08-3.58.11-5.37zM65.05 168.33c1.12-2.15 2.08-4.4 3.37-6.46-1.82 7.56-2.91 15.27-3.62 23-.8 7.71-.85 15.49-.54 23.23 1.05 19.94 5.54 39.83 14.23 57.88 2.99 5.99 6.35 11.83 10.5 17.11 6.12 7.47 12.53 14.76 19.84 21.09 4.8 4.1 9.99 7.78 15.54 10.8 3.27 1.65 6.51 3.39 9.94 4.68 5.01 2.03 10.19 3.61 15.42 4.94 3.83.96 7.78 1.41 11.52 2.71 5 1.57 9.47 4.61 13.03 8.43 4.93 5.23 8.09 11.87 10.2 18.67.99 2.9 1.59 5.91 2.17 8.92.15.75.22 1.52.16 2.29-6.5 2.78-13.26 5.06-20.26 6.18-4.11.78-8.29.99-12.46 1.08-10.25.24-20.47-1.76-30.12-5.12-3.74-1.42-7.49-2.85-11.03-4.72-8.06-3.84-15.64-8.7-22.46-14.46-2.92-2.55-5.83-5.13-8.4-8.03-9.16-9.83-16.3-21.41-21.79-33.65-2.39-5.55-4.61-11.18-6.37-16.96-1.17-3.94-2.36-7.89-3.26-11.91-.75-2.94-1.22-5.95-1.87-8.92-.46-2.14-.69-4.32-1.03-6.48-.85-5.43-1.28-10.93-1.33-16.43.11-6.18.25-12.37 1.07-18.5.4-2.86.67-5.74 1.15-8.6.98-5.7 2.14-11.37 3.71-16.93 3.09-11.65 7.48-22.95 12.69-33.84zm363.73-6.44c1.1 1.66 1.91 3.48 2.78 5.26 2.1 4.45 4.24 8.9 6.02 13.49 7.61 18.76 12.3 38.79 13.04 59.05.02 1.76.07 3.52.11 5.29.13 9.57-1.27 19.09-3.18 28.45-.73 3.59-1.54 7.17-2.58 10.69-4.04 14.72-10 29-18.41 41.78-8.21 12.57-19.01 23.55-31.84 31.41-5.73 3.59-11.79 6.64-18.05 9.19-5.78 2.19-11.71 4.03-17.8 5.11-6.4 1.05-12.91 1.52-19.4 1.23-7.92-.48-15.78-2.07-23.21-4.85-1.94-.8-3.94-1.46-5.84-2.33-.21-1.51.25-2.99.53-4.46 1.16-5.74 3.03-11.36 5.7-16.58 2.37-4.51 5.52-8.65 9.46-11.9 2.43-2.05 5.24-3.61 8.16-4.83 3.58-1.5 7.47-1.97 11.24-2.83 7.23-1.71 14.37-3.93 21.15-7 10.35-4.65 19.71-11.38 27.65-19.46 1.59-1.61 3.23-3.18 4.74-4.87 3.37-3.76 6.71-7.57 9.85-11.53 7.48-10.07 12.82-21.59 16.71-33.48 1.58-5.3 3.21-10.6 4.21-16.05.63-2.87 1.04-5.78 1.52-8.68.87-6.09 1.59-12.22 1.68-18.38.12-6.65.14-13.32-.53-19.94-.73-7.99-1.87-15.96-3.71-23.78z\"],\n    \"opencart\": [640, 512, [], \"f23d\", \"M423.3 440.7c0 25.3-20.3 45.6-45.6 45.6s-45.8-20.3-45.8-45.6 20.6-45.8 45.8-45.8c25.4 0 45.6 20.5 45.6 45.8zm-253.9-45.8c-25.3 0-45.6 20.6-45.6 45.8s20.3 45.6 45.6 45.6 45.8-20.3 45.8-45.6-20.5-45.8-45.8-45.8zm291.7-270C158.9 124.9 81.9 112.1 0 25.7c34.4 51.7 53.3 148.9 373.1 144.2 333.3-5 130 86.1 70.8 188.9 186.7-166.7 319.4-233.9 17.2-233.9z\"],\n    \"openid\": [448, 512, [], \"f19b\", \"M271.5 432l-68 32C88.5 453.7 0 392.5 0 318.2c0-71.5 82.5-131 191.7-144.3v43c-71.5 12.5-124 53-124 101.3 0 51 58.5 93.3 135.7 103v-340l68-33.2v384zM448 291l-131.3-28.5 36.8-20.7c-19.5-11.5-43.5-20-70-24.8v-43c46.2 5.5 87.7 19.5 120.3 39.3l35-19.8L448 291z\"],\n    \"opera\": [496, 512, [], \"f26a\", \"M313.9 32.7c-170.2 0-252.6 223.8-147.5 355.1 36.5 45.4 88.6 75.6 147.5 75.6 36.3 0 70.3-11.1 99.4-30.4-43.8 39.2-101.9 63-165.3 63-3.9 0-8 0-11.9-.3C104.6 489.6 0 381.1 0 248 0 111 111 0 248 0h.8c63.1.3 120.7 24.1 164.4 63.1-29-19.4-63.1-30.4-99.3-30.4zm101.8 397.7c-40.9 24.7-90.7 23.6-132-5.8 56.2-20.5 97.7-91.6 97.7-176.6 0-84.7-41.2-155.8-97.4-176.6 41.8-29.2 91.2-30.3 132.9-5 105.9 98.7 105.5 265.7-1.2 364z\"],\n    \"optin-monster\": [576, 512, [], \"f23c\", \"M572.6 421.4c5.6-9.5 4.7-15.2-5.4-11.6-3-4.9-7-9.5-11.1-13.8 2.9-9.7-.7-14.2-10.8-9.2-4.6-3.2-10.3-6.5-15.9-9.2 0-15.1-11.6-11.6-17.6-5.7-10.4-1.5-18.7-.3-26.8 5.7.3-6.5.3-13 .3-19.7 12.6 0 40.2-11 45.9-36.2 1.4-6.8 1.6-13.8-.3-21.9-3-13.5-14.3-21.3-25.1-25.7-.8-5.9-7.6-14.3-14.9-15.9s-12.4 4.9-14.1 10.3c-8.5 0-19.2 2.8-21.1 8.4-5.4-.5-11.1-1.4-16.8-1.9 2.7-1.9 5.4-3.5 8.4-4.6 5.4-9.2 14.6-11.4 25.7-11.6V256c19.5-.5 43-5.9 53.8-18.1 12.7-13.8 14.6-37.3 12.4-55.1-2.4-17.3-9.7-37.6-24.6-48.1-8.4-5.9-21.6-.8-22.7 9.5-2.2 19.6 1.2 30-38.6 25.1-10.3-23.8-24.6-44.6-42.7-60C341 49.6 242.9 55.5 166.4 71.7c19.7 4.6 41.1 8.6 59.7 16.5-26.2 2.4-52.7 11.3-76.2 23.2-32.8 17-44 29.9-56.7 42.4 14.9-2.2 28.9-5.1 43.8-3.8-9.7 5.4-18.4 12.2-26.5 20-25.8.9-23.8-5.3-26.2-25.9-1.1-10.5-14.3-15.4-22.7-9.7-28.1 19.9-33.5 79.9-12.2 103.5 10.8 12.2 35.1 17.3 54.9 17.8-.3 1.1-.3 1.9-.3 2.7 10.8.5 19.5 2.7 24.6 11.6 3 1.1 5.7 2.7 8.1 4.6-5.4.5-11.1 1.4-16.5 1.9-3.3-6.6-13.7-8.1-21.1-8.1-1.6-5.7-6.5-12.2-14.1-10.3-6.8 1.9-14.1 10-14.9 15.9-22.5 9.5-30.1 26.8-25.1 47.6 5.3 24.8 33 36.2 45.9 36.2v19.7c-6.6-5-14.3-7.5-26.8-5.7-5.5-5.5-17.3-10.1-17.3 5.7-5.9 2.7-11.4 5.9-15.9 9.2-9.8-4.9-13.6-1.7-11.1 9.2-4.1 4.3-7.8 8.6-11.1 13.8-10.2-3.7-11 2.2-5.4 11.6-1.1 3.5-1.6 7-1.9 10.8-.5 31.6 44.6 64 73.5 65.1 17.3.5 34.6-8.4 43-23.5 113.2 4.9 226.7 4.1 340.2 0 8.1 15.1 25.4 24.3 42.7 23.5 29.2-1.1 74.3-33.5 73.5-65.1.2-3.7-.7-7.2-1.7-10.7zm-73.8-254c1.1-3 2.4-8.4 2.4-14.6 0-5.9 6.8-8.1 14.1-.8 11.1 11.6 14.9 40.5 13.8 51.1-4.1-13.6-13-29-30.3-35.7zm-4.6 6.7c19.5 6.2 28.6 27.6 29.7 48.9-1.1 2.7-3 5.4-4.9 7.6-5.7 5.9-15.4 10-26.2 12.2 4.3-21.3.3-47.3-12.7-63 4.9-.8 10.9-2.4 14.1-5.7zm-24.1 6.8c13.8 11.9 20 39.2 14.1 63.5-4.1.5-8.1.8-11.6.8-1.9-21.9-6.8-44-14.3-64.6 3.7.3 8.1.3 11.8.3zM47.5 203c-1.1-10.5 2.4-39.5 13.8-51.1 7-7.3 14.1-5.1 14.1.8 0 6.2 1.4 11.6 2.4 14.6-17.3 6.8-26.2 22.2-30.3 35.7zm9.7 27.6c-1.9-2.2-3.5-4.9-4.9-7.6 1.4-21.3 10.3-42.7 29.7-48.9 3.2 3.2 9.2 4.9 14.1 5.7-13 15.7-17 41.6-12.7 63-10.8-2.2-20.5-6-26.2-12.2zm47.9 14.6c-4.1 0-8.1-.3-12.7-.8-4.6-18.6-1.9-38.9 5.4-53v.3l12.2-5.1c4.9-1.9 9.7-3.8 14.9-4.9-10.7 19.7-17.4 41.3-19.8 63.5zm184-162.7c41.9 0 76.2 34 76.2 75.9 0 42.2-34.3 76.2-76.2 76.2s-76.2-34-76.2-76.2c0-41.8 34.3-75.9 76.2-75.9zm115.6 174.3c-.3 17.8-7 48.9-23 57-13.2 6.6-6.5-7.5-16.5-58.1 13.3.3 26.6.3 39.5 1.1zm-54-1.6c.8 4.9 3.8 40.3-1.6 41.9-11.6 3.5-40 4.3-51.1-1.1-4.1-3-4.6-35.9-4.3-41.1v.3c18.9-.3 38.1-.3 57 0zM278.3 309c-13 3.5-41.6 4.1-54.6-1.6-6.5-2.7-3.8-42.4-1.9-51.6 19.2-.5 38.4-.5 57.8-.8v.3c1.1 8.3 3.3 51.2-1.3 53.7zm-106.5-51.1c12.2-.8 24.6-1.4 36.8-1.6-2.4 15.4-3 43.5-4.9 52.2-1.1 6.8-4.3 6.8-9.7 4.3-21.9-9.8-27.6-35.2-22.2-54.9zm-35.4 31.3c7.8-1.1 15.7-1.9 23.5-2.7 1.6 6.2 3.8 11.9 7 17.6 10 17 44 35.7 45.1 7 6.2 14.9 40.8 12.2 54.9 10.8 15.7-1.4 23.8-1.4 26.8-14.3 12.4 4.3 30.8 4.1 44 3 11.3-.8 20.8-.5 24.6-8.9 1.1 5.1 1.9 11.6 4.6 16.8 10.8 21.3 37.3 1.4 46.8-31.6 8.6.8 17.6 1.9 26.5 2.7-.4 1.3-3.8 7.3 7.3 11.6-47.6 47-95.7 87.8-163.2 107-63.2-20.8-112.1-59.5-155.9-106.5 9.6-3.4 10.4-8.8 8-12.5zm-21.6 172.5c-3.8 17.8-21.9 29.7-39.7 28.9-19.2-.8-46.5-17-59.2-36.5-2.7-31.1 43.8-61.3 66.2-54.6 14.9 4.3 27.8 30.8 33.5 54 0 3-.3 5.7-.8 8.2zm-8.7-66c-.5-13.5-.5-27-.3-40.5h.3c2.7-1.6 5.7-3.8 7.8-6.5 6.5-1.6 13-5.1 15.1-9.2 3.3-7.1-7-7.5-5.4-12.4 2.7-1.1 5.7-2.2 7.8-3.5 29.2 29.2 58.6 56.5 97.3 77-36.8 11.3-72.4 27.6-105.9 47-1.2-18.6-7.7-35.9-16.7-51.9zm337.6 64.6c-103 3.5-206.2 4.1-309.4 0 0 .3 0 .3-.3.3v-.3h.3c35.1-21.6 72.2-39.2 112.4-50.8 11.6 5.1 23 9.5 34.9 13.2 2.2.8 2.2.8 4.3 0 14.3-4.1 28.4-9.2 42.2-15.4 41.5 11.7 78.8 31.7 115.6 53zm10.5-12.4c-35.9-19.5-73-35.9-111.9-47.6 38.1-20 71.9-47.3 103.5-76.7 2.2 1.4 4.6 2.4 7.6 3.2 0 .8.3 1.9.5 2.4-4.6 2.7-7.8 6.2-5.9 10.3 2.2 3.8 8.6 7.6 15.1 8.9 2.4 2.7 5.1 5.1 8.1 6.8 0 13.8-.3 27.6-.8 41.3l.3-.3c-9.3 15.9-15.5 37-16.5 51.7zm105.9 6.2c-12.7 19.5-40 35.7-59.2 36.5-19.3.9-40.5-13.2-40.5-37 5.7-23.2 18.9-49.7 33.5-54 22.7-6.9 69.2 23.4 66.2 54.5zM372.9 75.2c-3.8-72.1-100.8-79.7-126-23.5 44.6-24.3 90.3-15.7 126 23.5zM74.8 407.1c-15.7 1.6-49.5 25.4-49.5 43.2 0 11.6 15.7 19.5 32.2 14.9 12.2-3.2 31.1-17.6 35.9-27.3 6-11.6-3.7-32.7-18.6-30.8zm215.9-176.2c28.6 0 51.9-21.6 51.9-48.4 0-36.1-40.5-58.1-72.2-44.3 9.5 3 16.5 11.6 16.5 21.6 0 23.3-33.3 32-46.5 11.3-7.3 34.1 19.4 59.8 50.3 59.8zM68 474.1c.5 6.5 12.2 12.7 21.6 9.5 6.8-2.7 14.6-10.5 17.3-16.2 3-7-1.1-20-9.7-18.4-8.9 1.6-29.7 16.7-29.2 25.1zm433.2-67c-14.9-1.9-24.6 19.2-18.9 30.8 4.9 9.7 24.1 24.1 36.2 27.3 16.5 4.6 32.2-3.2 32.2-14.9 0-17.8-33.8-41.6-49.5-43.2zM478.8 449c-8.4-1.6-12.4 11.3-9.5 18.4 2.4 5.7 10.3 13.5 17.3 16.2 9.2 3.2 21.1-3 21.3-9.5.9-8.4-20.2-23.5-29.1-25.1z\"],\n    \"orcid\": [512, 512, [], \"f8d2\", \"M294.75 188.19h-45.92V342h47.47c67.62 0 83.12-51.34 83.12-76.91 0-41.64-26.54-76.9-84.67-76.9zM256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm-80.79 360.76h-29.84v-207.5h29.84zm-14.92-231.14a19.57 19.57 0 1 1 19.57-19.57 19.64 19.64 0 0 1-19.57 19.57zM300 369h-81V161.26h80.6c76.73 0 110.44 54.83 110.44 103.85C410 318.39 368.38 369 300 369z\"],\n    \"osi\": [512, 512, [], \"f41a\", \"M8 266.44C10.3 130.64 105.4 34 221.8 18.34c138.8-18.6 255.6 75.8 278 201.1 21.3 118.8-44 230-151.6 274-9.3 3.8-14.4 1.7-18-7.7q-26.7-69.45-53.4-139c-3.1-8.1-1-13.2 7-16.8 24.2-11 39.3-29.4 43.3-55.8a71.47 71.47 0 0 0-64.5-82.2c-39-3.4-71.8 23.7-77.5 59.7-5.2 33 11.1 63.7 41.9 77.7 9.6 4.4 11.5 8.6 7.8 18.4q-26.85 69.9-53.7 139.9c-2.6 6.9-8.3 9.3-15.5 6.5-52.6-20.3-101.4-61-130.8-119-24.9-49.2-25.2-87.7-26.8-108.7zm20.9-1.9c.4 6.6.6 14.3 1.3 22.1 6.3 71.9 49.6 143.5 131 183.1 3.2 1.5 4.4.8 5.6-2.3q22.35-58.65 45-117.3c1.3-3.3.6-4.8-2.4-6.7-31.6-19.9-47.3-48.5-45.6-86 1-21.6 9.3-40.5 23.8-56.3 30-32.7 77-39.8 115.5-17.6a91.64 91.64 0 0 1 45.2 90.4c-3.6 30.6-19.3 53.9-45.7 69.8-2.7 1.6-3.5 2.9-2.3 6q22.8 58.8 45.2 117.7c1.2 3.1 2.4 3.8 5.6 2.3 35.5-16.6 65.2-40.3 88.1-72 34.8-48.2 49.1-101.9 42.3-161-13.7-117.5-119.4-214.8-255.5-198-106.1 13-195.3 102.5-197.1 225.8z\"],\n    \"page4\": [496, 512, [], \"f3d7\", \"M248 504C111 504 0 393 0 256S111 8 248 8c20.9 0 41.3 2.6 60.7 7.5L42.3 392H248v112zm0-143.6V146.8L98.6 360.4H248zm96 31.6v92.7c45.7-19.2 84.5-51.7 111.4-92.7H344zm57.4-138.2l-21.2 8.4 21.2 8.3v-16.7zm-20.3 54.5c-6.7 0-8 6.3-8 12.9v7.7h16.2v-10c0-5.9-2.3-10.6-8.2-10.6zM496 256c0 37.3-8.2 72.7-23 104.4H344V27.3C433.3 64.8 496 153.1 496 256zM360.4 143.6h68.2V96h-13.9v32.6h-13.9V99h-13.9v29.6h-12.7V96h-13.9v47.6zm68.1 185.3H402v-11c0-15.4-5.6-25.2-20.9-25.2-15.4 0-20.7 10.6-20.7 25.9v25.3h68.2v-15zm0-103l-68.2 29.7V268l68.2 29.5v-16.6l-14.4-5.7v-26.5l14.4-5.9v-16.9zm-4.8-68.5h-35.6V184H402v-12.2h11c8.6 15.8 1.3 35.3-18.6 35.3-22.5 0-28.3-25.3-15.5-37.7l-11.6-10.6c-16.2 17.5-12.2 63.9 27.1 63.9 34 0 44.7-35.9 29.3-65.3z\"],\n    \"pagelines\": [384, 512, [], \"f18c\", \"M384 312.7c-55.1 136.7-187.1 54-187.1 54-40.5 81.8-107.4 134.4-184.6 134.7-16.1 0-16.6-24.4 0-24.4 64.4-.3 120.5-42.7 157.2-110.1-41.1 15.9-118.6 27.9-161.6-82.2 109-44.9 159.1 11.2 178.3 45.5 9.9-24.4 17-50.9 21.6-79.7 0 0-139.7 21.9-149.5-98.1 119.1-47.9 152.6 76.7 152.6 76.7 1.6-16.7 3.3-52.6 3.3-53.4 0 0-106.3-73.7-38.1-165.2 124.6 43 61.4 162.4 61.4 162.4.5 1.6.5 23.8 0 33.4 0 0 45.2-89 136.4-57.5-4.2 134-141.9 106.4-141.9 106.4-4.4 27.4-11.2 53.4-20 77.5 0 0 83-91.8 172-20z\"],\n    \"palfed\": [576, 512, [], \"f3d8\", \"M384.9 193.9c0-47.4-55.2-44.2-95.4-29.8-1.3 39.4-2.5 80.7-3 119.8.7 2.8 2.6 6.2 15.1 6.2 36.8 0 83.4-42.8 83.3-96.2zm-194.5 72.2c.2 0 6.5-2.7 11.2-2.7 26.6 0 20.7 44.1-14.4 44.1-21.5 0-37.1-18.1-37.1-43 0-42 42.9-95.6 100.7-126.5 1-12.4 3-22 10.5-28.2 11.2-9 26.6-3.5 29.5 11.1 72.2-22.2 135.2 1 135.2 72 0 77.9-79.3 152.6-140.1 138.2-.1 39.4.9 74.4 2.7 100v.2c.2 3.4.6 12.5-5.3 19.1-9.6 10.6-33.4 10-36.4-22.3-4.1-44.4.2-206.1 1.4-242.5-21.5 15-58.5 50.3-58.5 75.9.2 2.5.4 4 .6 4.6zM8 181.1s-.1 37.4 38.4 37.4h30l22.4 217.2s0 44.3 44.7 44.3h288.9s44.7-.4 44.7-44.3l22.4-217.2h30s38.4 1.2 38.4-37.4c0 0 .1-37.4-38.4-37.4h-30.1c-7.3-25.6-30.2-74.3-119.4-74.3h-28V50.3s-2.7-18.4-21.1-18.4h-85.8s-21.1 0-21.1 18.4v19.1h-28.1s-105 4.2-120.5 74.3h-29S8 142.5 8 181.1z\"],\n    \"patreon\": [512, 512, [], \"f3d9\", \"M512 194.8c0 101.3-82.4 183.8-183.8 183.8-101.7 0-184.4-82.4-184.4-183.8 0-101.6 82.7-184.3 184.4-184.3C429.6 10.5 512 93.2 512 194.8zM0 501.5h90v-491H0v491z\"],\n    \"paypal\": [384, 512, [], \"f1ed\", \"M111.4 295.9c-3.5 19.2-17.4 108.7-21.5 134-.3 1.8-1 2.5-3 2.5H12.3c-7.6 0-13.1-6.6-12.1-13.9L58.8 46.6c1.5-9.6 10.1-16.9 20-16.9 152.3 0 165.1-3.7 204 11.4 60.1 23.3 65.6 79.5 44 140.3-21.5 62.6-72.5 89.5-140.1 90.3-43.4.7-69.5-7-75.3 24.2zM357.1 152c-1.8-1.3-2.5-1.8-3 1.3-2 11.4-5.1 22.5-8.8 33.6-39.9 113.8-150.5 103.9-204.5 103.9-6.1 0-10.1 3.3-10.9 9.4-22.6 140.4-27.1 169.7-27.1 169.7-1 7.1 3.5 12.9 10.6 12.9h63.5c8.6 0 15.7-6.3 17.4-14.9.7-5.4-1.1 6.1 14.4-91.3 4.6-22 14.3-19.7 29.3-19.7 71 0 126.4-28.8 142.9-112.3 6.5-34.8 4.6-71.4-23.8-92.6z\"],\n    \"penny-arcade\": [640, 512, [], \"f704\", \"M421.91 164.27c-4.49 19.45-1.4 6.06-15.1 65.29l39.73-10.61c-22.34-49.61-17.29-38.41-24.63-54.68zm-206.09 51.11c-20.19 5.4-11.31 3.03-39.63 10.58l4.46 46.19c28.17-7.59 20.62-5.57 34.82-9.34 42.3-9.79 32.85-56.42.35-47.43zm326.16-26.19l-45.47-99.2c-5.69-12.37-19.46-18.84-32.62-15.33-70.27 18.75-38.72 10.32-135.59 36.23a27.618 27.618 0 0 0-18.89 17.41C144.26 113.27 0 153.75 0 226.67c0 33.5 30.67 67.11 80.9 95.37l1.74 17.88a27.891 27.891 0 0 0-17.77 28.67l4.3 44.48c1.39 14.31 13.43 25.21 27.8 25.2 5.18-.01-3.01 1.78 122.53-31.76 12.57-3.37 21.12-15.02 20.58-28.02 216.59 45.5 401.99-5.98 399.89-84.83.01-28.15-22.19-66.56-97.99-104.47zM255.14 298.3l-21.91 5.88-48.44 12.91 2.46 23.55 20.53-5.51 4.51 44.51-115.31 30.78-4.3-44.52 20.02-5.35-11.11-114.64-20.12 5.39-4.35-44.5c178.15-47.54 170.18-46.42 186.22-46.65 56.66-1.13 64.15 71.84 42.55 104.43a86.7 86.7 0 0 1-50.75 33.72zm199.18 16.62l-3.89-39.49 14.9-3.98-6.61-14.68-57.76 15.42-4.1 17.54 19.2-5.12 4.05 39.54-112.85 30.07-4.46-44.43 20.99-5.59 33.08-126.47-17.15 4.56-4.2-44.48c93.36-24.99 65.01-17.41 135.59-36.24l66.67 145.47 20.79-5.56 4.3 44.48-108.55 28.96z\"],\n    \"perbyte\": [448, 512, [], \"e083\", \"M305.314,284.578H246.6V383.3h58.711q24.423,0,38.193-13.77t13.77-36.11q0-21.826-14.032-35.335T305.314,284.578ZM149.435,128.7H90.724v98.723h58.711q24.42,0,38.19-13.773t13.77-36.107q0-21.826-14.029-35.338T149.435,128.7ZM366.647,32H81.353A81.445,81.445,0,0,0,0,113.352V398.647A81.445,81.445,0,0,0,81.353,480H366.647A81.445,81.445,0,0,0,448,398.647V113.352A81.445,81.445,0,0,0,366.647,32Zm63.635,366.647a63.706,63.706,0,0,1-63.635,63.635H81.353a63.706,63.706,0,0,1-63.635-63.635V113.352A63.706,63.706,0,0,1,81.353,49.718H366.647a63.706,63.706,0,0,1,63.635,63.634ZM305.314,128.7H246.6v98.723h58.711q24.423,0,38.193-13.773t13.77-36.107q0-21.826-14.032-35.338T305.314,128.7Z\"],\n    \"periscope\": [448, 512, [], \"f3da\", \"M370 63.6C331.4 22.6 280.5 0 226.6 0 111.9 0 18.5 96.2 18.5 214.4c0 75.1 57.8 159.8 82.7 192.7C137.8 455.5 192.6 512 226.6 512c41.6 0 112.9-94.2 120.9-105 24.6-33.1 82-118.3 82-192.6 0-56.5-21.1-110.1-59.5-150.8zM226.6 493.9c-42.5 0-190-167.3-190-279.4 0-107.4 83.9-196.3 190-196.3 100.8 0 184.7 89 184.7 196.3.1 112.1-147.4 279.4-184.7 279.4zM338 206.8c0 59.1-51.1 109.7-110.8 109.7-100.6 0-150.7-108.2-92.9-181.8v.4c0 24.5 20.1 44.4 44.8 44.4 24.7 0 44.8-19.9 44.8-44.4 0-18.2-11.1-33.8-26.9-40.7 76.6-19.2 141 39.3 141 112.4z\"],\n    \"phabricator\": [496, 512, [], \"f3db\", \"M323 262.1l-.1-13s21.7-19.8 21.1-21.2l-9.5-20c-.6-1.4-29.5-.5-29.5-.5l-9.4-9.3s.2-28.5-1.2-29.1l-20.1-9.2c-1.4-.6-20.7 21-20.7 21l-13.1-.2s-20.5-21.4-21.9-20.8l-20 8.3c-1.4.5.2 28.9.2 28.9l-9.1 9.1s-29.2-.9-29.7.4l-8.1 19.8c-.6 1.4 21 21 21 21l.1 12.9s-21.7 19.8-21.1 21.2l9.5 20c.6 1.4 29.5.5 29.5.5l9.4 9.3s-.2 31.8 1.2 32.3l20.1 8.3c1.4.6 20.7-23.5 20.7-23.5l13.1.2s20.5 23.8 21.8 23.3l20-7.5c1.4-.6-.2-32.1-.2-32.1l9.1-9.1s29.2.9 29.7-.5l8.1-19.8c.7-1.1-20.9-20.7-20.9-20.7zm-44.9-8.7c.7 17.1-12.8 31.6-30.1 32.4-17.3.8-32.1-12.5-32.8-29.6-.7-17.1 12.8-31.6 30.1-32.3 17.3-.8 32.1 12.5 32.8 29.5zm201.2-37.9l-97-97-.1.1c-75.1-73.3-195.4-72.8-269.8 1.6-50.9 51-27.8 27.9-95.7 95.3-22.3 22.3-22.3 58.7 0 81 69.9 69.4 46.4 46 97.4 97l.1-.1c75.1 73.3 195.4 72.9 269.8-1.6 51-50.9 27.9-27.9 95.3-95.3 22.3-22.3 22.3-58.7 0-81zM140.4 363.8c-59.6-59.5-59.6-156 0-215.5 59.5-59.6 156-59.5 215.6 0 59.5 59.5 59.6 156 0 215.6-59.6 59.5-156 59.4-215.6-.1z\"],\n    \"phoenix-framework\": [640, 512, [], \"f3dc\", \"M212.9 344.3c3.8-.1 22.8-1.4 25.6-2.2-2.4-2.6-43.6-1-68-49.6-4.3-8.6-7.5-17.6-6.4-27.6 2.9-25.5 32.9-30 52-18.5 36 21.6 63.3 91.3 113.7 97.5 37 4.5 84.6-17 108.2-45.4-.6-.1-.8-.2-1-.1-.4.1-.8.2-1.1.3-33.3 12.1-94.3 9.7-134.7-14.8-37.6-22.8-53.1-58.7-51.8-74.6 1.8-21.3 22.9-23.2 35.9-19.6 14.4 3.9 24.4 17.6 38.9 27.4 15.6 10.4 32.9 13.7 51.3 10.3 14.9-2.7 34.4-12.3 36.5-14.5-1.1-.1-1.8-.1-2.5-.2-6.2-.6-12.4-.8-18.5-1.7C279.8 194.5 262.1 47.4 138.5 37.9 94.2 34.5 39.1 46 2.2 72.9c-.8.6-1.5 1.2-2.2 1.8.1.2.1.3.2.5.8 0 1.6-.1 2.4-.2 6.3-1 12.5-.8 18.7.3 23.8 4.3 47.7 23.1 55.9 76.5 5.3 34.3-.7 50.8 8 86.1 19 77.1 91 107.6 127.7 106.4zM75.3 64.9c-.9-1-.9-1.2-1.3-2 12.1-2.6 24.2-4.1 36.6-4.8-1.1 14.7-22.2 21.3-35.3 6.8zm196.9 350.5c-42.8 1.2-92-26.7-123.5-61.4-4.6-5-16.8-20.2-18.6-23.4l.4-.4c6.6 4.1 25.7 18.6 54.8 27 24.2 7 48.1 6.3 71.6-3.3 22.7-9.3 41-.5 43.1 2.9-18.5 3.8-20.1 4.4-24 7.9-5.1 4.4-4.6 11.7 7 17.2 26.2 12.4 63-2.8 97.2 25.4 2.4 2 8.1 7.8 10.1 10.7-.1.2-.3.3-.4.5-4.8-1.5-16.4-7.5-40.2-9.3-24.7-2-46.3 5.3-77.5 6.2zm174.8-252c16.4-5.2 41.3-13.4 66.5-3.3 16.1 6.5 26.2 18.7 32.1 34.6 3.5 9.4 5.1 19.7 5.1 28.7-.2 0-.4 0-.6.1-.2-.4-.4-.9-.5-1.3-5-22-29.9-43.8-67.6-29.9-50.2 18.6-130.4 9.7-176.9-48-.7-.9-2.4-1.7-1.3-3.2.1-.2 2.1.6 3 1.3 18.1 13.4 38.3 21.9 60.3 26.2 30.5 6.1 54.6 2.9 79.9-5.2zm102.7 117.5c-32.4.2-33.8 50.1-103.6 64.4-18.2 3.7-38.7 4.6-44.9 4.2v-.4c2.8-1.5 14.7-2.6 29.7-16.6 7.9-7.3 15.3-15.1 22.8-22.9 19.5-20.2 41.4-42.2 81.9-39 23.1 1.8 29.3 8.2 36.1 12.7.3.2.4.5.7.9-.5 0-.7.1-.9 0-7-2.7-14.3-3.3-21.8-3.3zm-12.3-24.1c-.1.2-.1.4-.2.6-28.9-4.4-48-7.9-68.5 4-17 9.9-31.4 20.5-62 24.4-27.1 3.4-45.1 2.4-66.1-8-.3-.2-.6-.4-1-.6 0-.2.1-.3.1-.5 24.9 3.8 36.4 5.1 55.5-5.8 22.3-12.9 40.1-26.6 71.3-31 29.6-4.1 51.3 2.5 70.9 16.9zM268.6 97.3c-.6-.6-1.1-1.2-2.1-2.3 7.6 0 29.7-1.2 53.4 8.4 19.7 8 32.2 21 50.2 32.9 11.1 7.3 23.4 9.3 36.4 8.1 4.3-.4 8.5-1.2 12.8-1.7.4-.1.9 0 1.5.3-.6.4-1.2.9-1.8 1.2-8.1 4-16.7 6.3-25.6 7.1-26.1 2.6-50.3-3.7-73.4-15.4-19.3-9.9-36.4-22.9-51.4-38.6zM640 335.7c-3.5 3.1-22.7 11.6-42.7 5.3-12.3-3.9-19.5-14.9-31.6-24.1-10-7.6-20.9-7.9-28.1-8.4.6-.8.9-1.2 1.2-1.4 14.8-9.2 30.5-12.2 47.3-6.5 12.5 4.2 19.2 13.5 30.4 24.2 10.8 10.4 21 9.9 23.1 10.5.1-.1.2 0 .4.4zm-212.5 137c2.2 1.2 1.6 1.5 1.5 2-18.5-1.4-33.9-7.6-46.8-22.2-21.8-24.7-41.7-27.9-48.6-29.7.5-.2.8-.4 1.1-.4 13.1.1 26.1.7 38.9 3.9 25.3 6.4 35 25.4 41.6 35.3 3.2 4.8 7.3 8.3 12.3 11.1z\"],\n    \"phoenix-squadron\": [512, 512, [], \"f511\", \"M96 63.38C142.49 27.25 201.55 7.31 260.51 8.81c29.58-.38 59.11 5.37 86.91 15.33-24.13-4.63-49-6.34-73.38-2.45C231.17 27 191 48.84 162.21 80.87c5.67-1 10.78-3.67 16-5.86 18.14-7.87 37.49-13.26 57.23-14.83 19.74-2.13 39.64-.43 59.28 1.92-14.42 2.79-29.12 4.57-43 9.59-34.43 11.07-65.27 33.16-86.3 62.63-13.8 19.71-23.63 42.86-24.67 67.13-.35 16.49 5.22 34.81 19.83 44a53.27 53.27 0 0 0 37.52 6.74c15.45-2.46 30.07-8.64 43.6-16.33 11.52-6.82 22.67-14.55 32-24.25 3.79-3.22 2.53-8.45 2.62-12.79-2.12-.34-4.38-1.11-6.3.3a203 203 0 0 1-35.82 15.37c-20 6.17-42.16 8.46-62.1.78 12.79 1.73 26.06.31 37.74-5.44 20.23-9.72 36.81-25.2 54.44-38.77a526.57 526.57 0 0 1 88.9-55.31c25.71-12 52.94-22.78 81.57-24.12-15.63 13.72-32.15 26.52-46.78 41.38-14.51 14-27.46 29.5-40.11 45.18-3.52 4.6-8.95 6.94-13.58 10.16a150.7 150.7 0 0 0-51.89 60.1c-9.33 19.68-14.5 41.85-11.77 63.65 1.94 13.69 8.71 27.59 20.9 34.91 12.9 8 29.05 8.07 43.48 5.1 32.8-7.45 61.43-28.89 81-55.84 20.44-27.52 30.52-62.2 29.16-96.35-.52-7.5-1.57-15-1.66-22.49 8 19.48 14.82 39.71 16.65 60.83 2 14.28.75 28.76-1.62 42.9-1.91 11-5.67 21.51-7.78 32.43a165 165 0 0 0 39.34-81.07 183.64 183.64 0 0 0-14.21-104.64c20.78 32 32.34 69.58 35.71 107.48.49 12.73.49 25.51 0 38.23A243.21 243.21 0 0 1 482 371.34c-26.12 47.34-68 85.63-117.19 108-78.29 36.23-174.68 31.32-248-14.68A248.34 248.34 0 0 1 25.36 366 238.34 238.34 0 0 1 0 273.08v-31.34C3.93 172 40.87 105.82 96 63.38m222 80.33a79.13 79.13 0 0 0 16-4.48c5-1.77 9.24-5.94 10.32-11.22-8.96 4.99-17.98 9.92-26.32 15.7z\"],\n    \"php\": [640, 512, [], \"f457\", \"M320 104.5c171.4 0 303.2 72.2 303.2 151.5S491.3 407.5 320 407.5c-171.4 0-303.2-72.2-303.2-151.5S148.7 104.5 320 104.5m0-16.8C143.3 87.7 0 163 0 256s143.3 168.3 320 168.3S640 349 640 256 496.7 87.7 320 87.7zM218.2 242.5c-7.9 40.5-35.8 36.3-70.1 36.3l13.7-70.6c38 0 63.8-4.1 56.4 34.3zM97.4 350.3h36.7l8.7-44.8c41.1 0 66.6 3 90.2-19.1 26.1-24 32.9-66.7 14.3-88.1-9.7-11.2-25.3-16.7-46.5-16.7h-70.7L97.4 350.3zm185.7-213.6h36.5l-8.7 44.8c31.5 0 60.7-2.3 74.8 10.7 14.8 13.6 7.7 31-8.3 113.1h-37c15.4-79.4 18.3-86 12.7-92-5.4-5.8-17.7-4.6-47.4-4.6l-18.8 96.6h-36.5l32.7-168.6zM505 242.5c-8 41.1-36.7 36.3-70.1 36.3l13.7-70.6c38.2 0 63.8-4.1 56.4 34.3zM384.2 350.3H421l8.7-44.8c43.2 0 67.1 2.5 90.2-19.1 26.1-24 32.9-66.7 14.3-88.1-9.7-11.2-25.3-16.7-46.5-16.7H417l-32.8 168.7z\"],\n    \"pied-piper\": [480, 512, [], \"f2ae\", \"M455.93,23.2C429.23,30,387.79,51.69,341.35,90.66A206,206,0,0,0,240,64C125.13,64,32,157.12,32,272s93.13,208,208,208,208-93.13,208-208a207.25,207.25,0,0,0-58.75-144.81,155.35,155.35,0,0,0-17,27.4A176.16,176.16,0,0,1,417.1,272c0,97.66-79.44,177.11-177.09,177.11a175.81,175.81,0,0,1-87.63-23.4c82.94-107.33,150.79-37.77,184.31-226.65,5.79-32.62,28-94.26,126.23-160.18C471,33.45,465.35,20.8,455.93,23.2ZM125,406.4A176.66,176.66,0,0,1,62.9,272C62.9,174.34,142.35,94.9,240,94.9a174,174,0,0,1,76.63,17.75C250.64,174.76,189.77,265.52,125,406.4Z\"],\n    \"pied-piper-alt\": [576, 512, [], \"f1a8\", \"M244 246c-3.2-2-6.3-2.9-10.1-2.9-6.6 0-12.6 3.2-19.3 3.7l1.7 4.9zm135.9 197.9c-19 0-64.1 9.5-79.9 19.8l6.9 45.1c35.7 6.1 70.1 3.6 106-9.8-4.8-10-23.5-55.1-33-55.1zM340.8 177c6.6 2.8 11.5 9.2 22.7 22.1 2-1.4 7.5-5.2 7.5-8.6 0-4.9-11.8-13.2-13.2-23 11.2-5.7 25.2-6 37.6-8.9 68.1-16.4 116.3-52.9 146.8-116.7C548.3 29.3 554 16.1 554.6 2l-2 2.6c-28.4 50-33 63.2-81.3 100-31.9 24.4-69.2 40.2-106.6 54.6l-6.3-.3v-21.8c-19.6 1.6-19.7-14.6-31.6-23-18.7 20.6-31.6 40.8-58.9 51.1-12.7 4.8-19.6 10-25.9 21.8 34.9-16.4 91.2-13.5 98.8-10zM555.5 0l-.6 1.1-.3.9.6-.6zm-59.2 382.1c-33.9-56.9-75.3-118.4-150-115.5l-.3-6c-1.1-13.5 32.8 3.2 35.1-31l-14.4 7.2c-19.8-45.7-8.6-54.3-65.5-54.3-14.7 0-26.7 1.7-41.4 4.6 2.9 18.6 2.2 36.7-10.9 50.3l19.5 5.5c-1.7 3.2-2.9 6.3-2.9 9.8 0 21 42.8 2.9 42.8 33.6 0 18.4-36.8 60.1-54.9 60.1-8 0-53.7-50-53.4-60.1l.3-4.6 52.3-11.5c13-2.6 12.3-22.7-2.9-22.7-3.7 0-43.1 9.2-49.4 10.6-2-5.2-7.5-14.1-13.8-14.1-3.2 0-6.3 3.2-9.5 4-9.2 2.6-31 2.9-21.5 20.1L15.9 298.5c-5.5 1.1-8.9 6.3-8.9 11.8 0 6 5.5 10.9 11.5 10.9 8 0 131.3-28.4 147.4-32.2 2.6 3.2 4.6 6.3 7.8 8.6 20.1 14.4 59.8 85.9 76.4 85.9 24.1 0 58-22.4 71.3-41.9 3.2-4.3 6.9-7.5 12.4-6.9.6 13.8-31.6 34.2-33 43.7-1.4 10.2-1 35.2-.3 41.1 26.7 8.1 52-3.6 77.9-2.9 4.3-21 10.6-41.9 9.8-63.5l-.3-9.5c-1.4-34.2-10.9-38.5-34.8-58.6-1.1-1.1-2.6-2.6-3.7-4 2.2-1.4 1.1-1 4.6-1.7 88.5 0 56.3 183.6 111.5 229.9 33.1-15 72.5-27.9 103.5-47.2-29-25.6-52.6-45.7-72.7-79.9zm-196.2 46.1v27.2l11.8-3.4-2.9-23.8zm-68.7-150.4l24.1 61.2 21-13.8-31.3-50.9zm84.4 154.9l2 12.4c9-1.5 58.4-6.6 58.4-14.1 0-1.4-.6-3.2-.9-4.6-26.8 0-36.9 3.8-59.5 6.3z\"],\n    \"pied-piper-hat\": [640, 512, [], \"f4e5\", \"M640 24.9c-80.8 53.6-89.4 92.5-96.4 104.4-6.7 12.2-11.7 60.3-23.3 83.6-11.7 23.6-54.2 42.2-66.1 50-11.7 7.8-28.3 38.1-41.9 64.2-108.1-4.4-167.4 38.8-259.2 93.6 29.4-9.7 43.3-16.7 43.3-16.7 94.2-36 139.3-68.3 281.1-49.2 1.1 0 1.9.6 2.8.8 3.9 2.2 5.3 6.9 3.1 10.8l-53.9 95.8c-2.5 4.7-7.8 7.2-13.1 6.1-126.8-23.8-226.9 17.3-318.9 18.6C24.1 488 0 453.4 0 451.8c0-1.1.6-1.7 1.7-1.7 0 0 38.3 0 103.1-15.3C178.4 294.5 244 245.4 315.4 245.4c0 0 71.7 0 90.6 61.9 22.8-39.7 28.3-49.2 28.3-49.2 5.3-9.4 35-77.2 86.4-141.4 51.5-64 90.4-79.9 119.3-91.8z\"],\n    \"pied-piper-pp\": [448, 512, [], \"f1a7\", \"M205.3 174.6c0 21.1-14.2 38.1-31.7 38.1-7.1 0-12.8-1.2-17.2-3.7v-68c4.4-2.7 10.1-4.2 17.2-4.2 17.5 0 31.7 16.9 31.7 37.8zm52.6 67c-7.1 0-12.8 1.5-17.2 4.2v68c4.4 2.5 10.1 3.7 17.2 3.7 17.4 0 31.7-16.9 31.7-37.8 0-21.1-14.3-38.1-31.7-38.1zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zM185 255.1c41 0 74.2-35.6 74.2-79.6 0-44-33.2-79.6-74.2-79.6-12 0-24.1 3.2-34.6 8.8h-45.7V311l51.8-10.1v-50.6c8.6 3.1 18.1 4.8 28.5 4.8zm158.4 25.3c0-44-33.2-79.6-73.9-79.6-3.2 0-6.4.2-9.6.7-3.7 12.5-10.1 23.8-19.2 33.4-13.8 15-32.2 23.8-51.8 24.8V416l51.8-10.1v-50.6c8.6 3.2 18.2 4.7 28.7 4.7 40.8 0 74-35.6 74-79.6z\"],\n    \"pied-piper-square\": [448, 512, [], \"e01e\", \"M32 419L0 479.2l.8-328C.8 85.3 54 32 120 32h327.2c-93 28.9-189.9 94.2-253.9 168.6C122.7 282 82.6 338 32 419M448 32S305.2 98.8 261.6 199.1c-23.2 53.6-28.9 118.1-71 158.6-28.9 27.8-69.8 38.2-105.3 56.3-23.2 12-66.4 40.5-84.9 66h328.4c66 0 119.3-53.3 119.3-119.2-.1 0-.1-328.8-.1-328.8z\"],\n    \"pinterest\": [496, 512, [], \"f0d2\", \"M496 256c0 137-111 248-248 248-25.6 0-50.2-3.9-73.4-11.1 10.1-16.5 25.2-43.5 30.8-65 3-11.6 15.4-59 15.4-59 8.1 15.4 31.7 28.5 56.8 28.5 74.8 0 128.7-68.8 128.7-154.3 0-81.9-66.9-143.2-152.9-143.2-107 0-163.9 71.8-163.9 150.1 0 36.4 19.4 81.7 50.3 96.1 4.7 2.2 7.2 1.2 8.3-3.3.8-3.4 5-20.3 6.9-28.1.6-2.5.3-4.7-1.7-7.1-10.1-12.5-18.3-35.3-18.3-56.6 0-54.7 41.4-107.6 112-107.6 60.9 0 103.6 41.5 103.6 100.9 0 67.1-33.9 113.6-78 113.6-24.3 0-42.6-20.1-36.7-44.8 7-29.5 20.5-61.3 20.5-82.6 0-19-10.2-34.9-31.4-34.9-24.9 0-44.9 25.7-44.9 60.2 0 22 7.4 36.8 7.4 36.8s-24.5 103.8-29 123.2c-5 21.4-3 51.6-.9 71.2C65.4 450.9 0 361.1 0 256 0 119 111 8 248 8s248 111 248 248z\"],\n    \"pinterest-p\": [384, 512, [], \"f231\", \"M204 6.5C101.4 6.5 0 74.9 0 185.6 0 256 39.6 296 63.6 296c9.9 0 15.6-27.6 15.6-35.4 0-9.3-23.7-29.1-23.7-67.8 0-80.4 61.2-137.4 140.4-137.4 68.1 0 118.5 38.7 118.5 109.8 0 53.1-21.3 152.7-90.3 152.7-24.9 0-46.2-18-46.2-43.8 0-37.8 26.4-74.4 26.4-113.4 0-66.2-93.9-54.2-93.9 25.8 0 16.8 2.1 35.4 9.6 50.7-13.8 59.4-42 147.9-42 209.1 0 18.9 2.7 37.5 4.5 56.4 3.4 3.8 1.7 3.4 6.9 1.5 50.4-69 48.6-82.5 71.4-172.8 12.3 23.4 44.1 36 69.3 36 106.2 0 153.9-103.5 153.9-196.8C384 71.3 298.2 6.5 204 6.5z\"],\n    \"pinterest-square\": [448, 512, [], \"f0d3\", \"M448 80v352c0 26.5-21.5 48-48 48H154.4c9.8-16.4 22.4-40 27.4-59.3 3-11.5 15.3-58.4 15.3-58.4 8 15.3 31.4 28.2 56.3 28.2 74.1 0 127.4-68.1 127.4-152.7 0-81.1-66.2-141.8-151.4-141.8-106 0-162.2 71.1-162.2 148.6 0 36 19.2 80.8 49.8 95.1 4.7 2.2 7.1 1.2 8.2-3.3.8-3.4 5-20.1 6.8-27.8.6-2.5.3-4.6-1.7-7-10.1-12.3-18.3-34.9-18.3-56 0-54.2 41-106.6 110.9-106.6 60.3 0 102.6 41.1 102.6 99.9 0 66.4-33.5 112.4-77.2 112.4-24.1 0-42.1-19.9-36.4-44.4 6.9-29.2 20.3-60.7 20.3-81.8 0-53-75.5-45.7-75.5 25 0 21.7 7.3 36.5 7.3 36.5-31.4 132.8-36.1 134.5-29.6 192.6l2.2.8H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48z\"],\n    \"playstation\": [576, 512, [], \"f3df\", \"M570.9 372.3c-11.3 14.2-38.8 24.3-38.8 24.3L327 470.2v-54.3l150.9-53.8c17.1-6.1 19.8-14.8 5.8-19.4-13.9-4.6-39.1-3.3-56.2 2.9L327 381.1v-56.4c23.2-7.8 47.1-13.6 75.7-16.8 40.9-4.5 90.9.6 130.2 15.5 44.2 14 49.2 34.7 38 48.9zm-224.4-92.5v-139c0-16.3-3-31.3-18.3-35.6-11.7-3.8-19 7.1-19 23.4v347.9l-93.8-29.8V32c39.9 7.4 98 24.9 129.2 35.4C424.1 94.7 451 128.7 451 205.2c0 74.5-46 102.8-104.5 74.6zM43.2 410.2c-45.4-12.8-53-39.5-32.3-54.8 19.1-14.2 51.7-24.9 51.7-24.9l134.5-47.8v54.5l-96.8 34.6c-17.1 6.1-19.7 14.8-5.8 19.4 13.9 4.6 39.1 3.3 56.2-2.9l46.4-16.9v48.8c-51.6 9.3-101.4 7.3-153.9-10z\"],\n    \"product-hunt\": [512, 512, [], \"f288\", \"M326.3 218.8c0 20.5-16.7 37.2-37.2 37.2h-70.3v-74.4h70.3c20.5 0 37.2 16.7 37.2 37.2zM504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-128.1-37.2c0-47.9-38.9-86.8-86.8-86.8H169.2v248h49.6v-74.4h70.3c47.9 0 86.8-38.9 86.8-86.8z\"],\n    \"pushed\": [432, 512, [], \"f3e1\", \"M407 111.9l-98.5-9 14-33.4c10.4-23.5-10.8-40.4-28.7-37L22.5 76.9c-15.1 2.7-26 18.3-21.4 36.6l105.1 348.3c6.5 21.3 36.7 24.2 47.7 7l35.3-80.8 235.2-231.3c16.4-16.8 4.3-42.9-17.4-44.8zM297.6 53.6c5.1-.7 7.5 2.5 5.2 7.4L286 100.9 108.6 84.6l189-31zM22.7 107.9c-3.1-5.1 1-10 6.1-9.1l248.7 22.7-96.9 230.7L22.7 107.9zM136 456.4c-2.6 4-7.9 3.1-9.4-1.2L43.5 179.7l127.7 197.6c-7 15-35.2 79.1-35.2 79.1zm272.8-314.5L210.1 337.3l89.7-213.7 106.4 9.7c4 1.1 5.7 5.3 2.6 8.6z\"],\n    \"python\": [448, 512, [], \"f3e2\", \"M439.8 200.5c-7.7-30.9-22.3-54.2-53.4-54.2h-40.1v47.4c0 36.8-31.2 67.8-66.8 67.8H172.7c-29.2 0-53.4 25-53.4 54.3v101.8c0 29 25.2 46 53.4 54.3 33.8 9.9 66.3 11.7 106.8 0 26.9-7.8 53.4-23.5 53.4-54.3v-40.7H226.2v-13.6h160.2c31.1 0 42.6-21.7 53.4-54.2 11.2-33.5 10.7-65.7 0-108.6zM286.2 404c11.1 0 20.1 9.1 20.1 20.3 0 11.3-9 20.4-20.1 20.4-11 0-20.1-9.2-20.1-20.4.1-11.3 9.1-20.3 20.1-20.3zM167.8 248.1h106.8c29.7 0 53.4-24.5 53.4-54.3V91.9c0-29-24.4-50.7-53.4-55.6-35.8-5.9-74.7-5.6-106.8.1-45.2 8-53.4 24.7-53.4 55.6v40.7h106.9v13.6h-147c-31.1 0-58.3 18.7-66.8 54.2-9.8 40.7-10.2 66.1 0 108.6 7.6 31.6 25.7 54.2 56.8 54.2H101v-48.8c0-35.3 30.5-66.4 66.8-66.4zm-6.7-142.6c-11.1 0-20.1-9.1-20.1-20.3.1-11.3 9-20.4 20.1-20.4 11 0 20.1 9.2 20.1 20.4s-9 20.3-20.1 20.3z\"],\n    \"qq\": [448, 512, [], \"f1d6\", \"M433.754 420.445c-11.526 1.393-44.86-52.741-44.86-52.741 0 31.345-16.136 72.247-51.051 101.786 16.842 5.192 54.843 19.167 45.803 34.421-7.316 12.343-125.51 7.881-159.632 4.037-34.122 3.844-152.316 8.306-159.632-4.037-9.045-15.25 28.918-29.214 45.783-34.415-34.92-29.539-51.059-70.445-51.059-101.792 0 0-33.334 54.134-44.859 52.741-5.37-.65-12.424-29.644 9.347-99.704 10.261-33.024 21.995-60.478 40.144-105.779C60.683 98.063 108.982.006 224 0c113.737.006 163.156 96.133 160.264 214.963 18.118 45.223 29.912 72.85 40.144 105.778 21.768 70.06 14.716 99.053 9.346 99.704z\"],\n    \"quinscape\": [512, 512, [], \"f459\", \"M313.6 474.6h-1a158.1 158.1 0 0 1 0-316.2c94.9 0 168.2 83.1 157 176.6 4 5.1 8.2 9.6 11.2 15.3 13.4-30.3 20.3-62.4 20.3-97.7C501.1 117.5 391.6 8 256.5 8S12 117.5 12 252.6s109.5 244.6 244.5 244.6a237.36 237.36 0 0 0 70.4-10.1c-5.2-3.5-8.9-8.1-13.3-12.5zm-.1-.1l.4.1zm78.4-168.9a99.2 99.2 0 1 0 99.2 99.2 99.18 99.18 0 0 0-99.2-99.2z\"],\n    \"quora\": [448, 512, [], \"f2c4\", \"M440.5 386.7h-29.3c-1.5 13.5-10.5 30.8-33 30.8-20.5 0-35.3-14.2-49.5-35.8 44.2-34.2 74.7-87.5 74.7-153C403.5 111.2 306.8 32 205 32 105.3 32 7.3 111.7 7.3 228.7c0 134.1 131.3 221.6 249 189C276 451.3 302 480 351.5 480c81.8 0 90.8-75.3 89-93.3zM297 329.2C277.5 300 253.3 277 205.5 277c-30.5 0-54.3 10-69 22.8l12.2 24.3c6.2-3 13-4 19.8-4 35.5 0 53.7 30.8 69.2 61.3-10 3-20.7 4.2-32.7 4.2-75 0-107.5-53-107.5-156.7C97.5 124.5 130 71 205 71c76.2 0 108.7 53.5 108.7 157.7.1 41.8-5.4 75.6-16.7 100.5z\"],\n    \"r-project\": [581, 512, [], \"f4f7\", \"M581 226.6C581 119.1 450.9 32 290.5 32S0 119.1 0 226.6C0 322.4 103.3 402 239.4 418.1V480h99.1v-61.5c24.3-2.7 47.6-7.4 69.4-13.9L448 480h112l-67.4-113.7c54.5-35.4 88.4-84.9 88.4-139.7zm-466.8 14.5c0-73.5 98.9-133 220.8-133s211.9 40.7 211.9 133c0 50.1-26.5 85-70.3 106.4-2.4-1.6-4.7-2.9-6.4-3.7-10.2-5.2-27.8-10.5-27.8-10.5s86.6-6.4 86.6-92.7-90.6-87.9-90.6-87.9h-199V361c-74.1-21.5-125.2-67.1-125.2-119.9zm225.1 38.3v-55.6c57.8 0 87.8-6.8 87.8 27.3 0 36.5-38.2 28.3-87.8 28.3zm-.9 72.5H365c10.8 0 18.9 11.7 24 19.2-16.1 1.9-33 2.8-50.6 2.9v-22.1z\"],\n    \"raspberry-pi\": [407, 512, [], \"f7bb\", \"M372 232.5l-3.7-6.5c.1-46.4-21.4-65.3-46.5-79.7 7.6-2 15.4-3.6 17.6-13.2 13.1-3.3 15.8-9.4 17.1-15.8 3.4-2.3 14.8-8.7 13.6-19.7 6.4-4.4 10-10.1 8.1-18.1 6.9-7.5 8.7-13.7 5.8-19.4 8.3-10.3 4.6-15.6 1.1-20.9 6.2-11.2.7-23.2-16.6-21.2-6.9-10.1-21.9-7.8-24.2-7.8-2.6-3.2-6-6-16.5-4.7-6.8-6.1-14.4-5-22.3-2.1-9.3-7.3-15.5-1.4-22.6.8C271.6.6 269 5.5 263.5 7.6c-12.3-2.6-16.1 3-22 8.9l-6.9-.1c-18.6 10.8-27.8 32.8-31.1 44.1-3.3-11.3-12.5-33.3-31.1-44.1l-6.9.1c-5.9-5.9-9.7-11.5-22-8.9-5.6-2-8.1-7-19.4-3.4-4.6-1.4-8.9-4.4-13.9-4.3-2.6.1-5.5 1-8.7 3.5-7.9-3-15.5-4-22.3 2.1-10.5-1.3-14 1.4-16.5 4.7-2.3 0-17.3-2.3-24.2 7.8C21.2 16 15.8 28 22 39.2c-3.5 5.4-7.2 10.7 1.1 20.9-2.9 5.7-1.1 11.9 5.8 19.4-1.8 8 1.8 13.7 8.1 18.1-1.2 11 10.2 17.4 13.6 19.7 1.3 6.4 4 12.4 17.1 15.8 2.2 9.5 10 11.2 17.6 13.2-25.1 14.4-46.6 33.3-46.5 79.7l-3.7 6.5c-28.8 17.2-54.7 72.7-14.2 117.7 2.6 14.1 7.1 24.2 11 35.4 5.9 45.2 44.5 66.3 54.6 68.8 14.9 11.2 30.8 21.8 52.2 29.2C159 504.2 181 512 203 512h1c22.1 0 44-7.8 64.2-28.4 21.5-7.4 37.3-18 52.2-29.2 10.2-2.5 48.7-23.6 54.6-68.8 3.9-11.2 8.4-21.3 11-35.4 40.6-45.1 14.7-100.5-14-117.7zm-22.2-8c-1.5 18.7-98.9-65.1-82.1-67.9 45.7-7.5 83.6 19.2 82.1 67.9zm-43 93.1c-24.5 15.8-59.8 5.6-78.8-22.8s-14.6-64.2 9.9-80c24.5-15.8 59.8-5.6 78.8 22.8s14.6 64.2-9.9 80zM238.9 29.3c.8 4.2 1.8 6.8 2.9 7.6 5.4-5.8 9.8-11.7 16.8-17.3 0 3.3-1.7 6.8 2.5 9.4 3.7-5 8.8-9.5 15.5-13.3-3.2 5.6-.6 7.3 1.2 9.6 5.1-4.4 10-8.8 19.4-12.3-2.6 3.1-6.2 6.2-2.4 9.8 5.3-3.3 10.6-6.6 23.1-8.9-2.8 3.1-8.7 6.3-5.1 9.4 6.6-2.5 14-4.4 22.1-5.4-3.9 3.2-7.1 6.3-3.9 8.8 7.1-2.2 16.9-5.1 26.4-2.6l-6 6.1c-.7.8 14.1.6 23.9.8-3.6 5-7.2 9.7-9.3 18.2 1 1 5.8.4 10.4 0-4.7 9.9-12.8 12.3-14.7 16.6 2.9 2.2 6.8 1.6 11.2.1-3.4 6.9-10.4 11.7-16 17.3 1.4 1 3.9 1.6 9.7.9-5.2 5.5-11.4 10.5-18.8 15 1.3 1.5 5.8 1.5 10 1.6-6.7 6.5-15.3 9.9-23.4 14.2 4 2.7 6.9 2.1 10 2.1-5.7 4.7-15.4 7.1-24.4 10 1.7 2.7 3.4 3.4 7.1 4.1-9.5 5.3-23.2 2.9-27 5.6.9 2.7 3.6 4.4 6.7 5.8-15.4.9-57.3-.6-65.4-32.3 15.7-17.3 44.4-37.5 93.7-62.6-38.4 12.8-73 30-102 53.5-34.3-15.9-10.8-55.9 5.8-71.8zm-34.4 114.6c24.2-.3 54.1 17.8 54 34.7-.1 15-21 27.1-53.8 26.9-32.1-.4-53.7-15.2-53.6-29.8 0-11.9 26.2-32.5 53.4-31.8zm-123-12.8c3.7-.7 5.4-1.5 7.1-4.1-9-2.8-18.7-5.3-24.4-10 3.1 0 6 .7 10-2.1-8.1-4.3-16.7-7.7-23.4-14.2 4.2-.1 8.7 0 10-1.6-7.4-4.5-13.6-9.5-18.8-15 5.8.7 8.3.1 9.7-.9-5.6-5.6-12.7-10.4-16-17.3 4.3 1.5 8.3 2 11.2-.1-1.9-4.2-10-6.7-14.7-16.6 4.6.4 9.4 1 10.4 0-2.1-8.5-5.8-13.3-9.3-18.2 9.8-.1 24.6 0 23.9-.8l-6-6.1c9.5-2.5 19.3.4 26.4 2.6 3.2-2.5-.1-5.6-3.9-8.8 8.1 1.1 15.4 2.9 22.1 5.4 3.5-3.1-2.3-6.3-5.1-9.4 12.5 2.3 17.8 5.6 23.1 8.9 3.8-3.6.2-6.7-2.4-9.8 9.4 3.4 14.3 7.9 19.4 12.3 1.7-2.3 4.4-4 1.2-9.6 6.7 3.8 11.8 8.3 15.5 13.3 4.1-2.6 2.5-6.2 2.5-9.4 7 5.6 11.4 11.5 16.8 17.3 1.1-.8 2-3.4 2.9-7.6 16.6 15.9 40.1 55.9 6 71.8-29-23.5-63.6-40.7-102-53.5 49.3 25 78 45.3 93.7 62.6-8 31.8-50 33.2-65.4 32.3 3.1-1.4 5.8-3.2 6.7-5.8-4-2.8-17.6-.4-27.2-5.6zm60.1 24.1c16.8 2.8-80.6 86.5-82.1 67.9-1.5-48.7 36.5-75.5 82.1-67.9zM38.2 342c-23.7-18.8-31.3-73.7 12.6-98.3 26.5-7 9 107.8-12.6 98.3zm91 98.2c-13.3 7.9-45.8 4.7-68.8-27.9-15.5-27.4-13.5-55.2-2.6-63.4 16.3-9.8 41.5 3.4 60.9 25.6 16.9 20 24.6 55.3 10.5 65.7zm-26.4-119.7c-24.5-15.8-28.9-51.6-9.9-80s54.3-38.6 78.8-22.8 28.9 51.6 9.9 80c-19.1 28.4-54.4 38.6-78.8 22.8zM205 496c-29.4 1.2-58.2-23.7-57.8-32.3-.4-12.7 35.8-22.6 59.3-22 23.7-1 55.6 7.5 55.7 18.9.5 11-28.8 35.9-57.2 35.4zm58.9-124.9c.2 29.7-26.2 53.8-58.8 54-32.6.2-59.2-23.8-59.4-53.4v-.6c-.2-29.7 26.2-53.8 58.8-54 32.6-.2 59.2 23.8 59.4 53.4v.6zm82.2 42.7c-25.3 34.6-59.6 35.9-72.3 26.3-13.3-12.4-3.2-50.9 15.1-72 20.9-23.3 43.3-38.5 58.9-26.6 10.5 10.3 16.7 49.1-1.7 72.3zm22.9-73.2c-21.5 9.4-39-105.3-12.6-98.3 43.9 24.7 36.3 79.6 12.6 98.3z\"],\n    \"ravelry\": [512, 512, [], \"f2d9\", \"M498.252,234.223c-1.208-10.34-1.7-20.826-3.746-31a310.306,310.306,0,0,0-9.622-36.6,184.068,184.068,0,0,0-30.874-57.5,251.154,251.154,0,0,0-18.818-21.689,237.362,237.362,0,0,0-47.113-36.116A240.8,240.8,0,0,0,331.356,26.65c-11.018-3.1-22.272-5.431-33.515-7.615-6.78-1.314-13.749-1.667-20.627-2.482-.316-.036-.6-.358-.9-.553q-16.143.009-32.288.006c-2.41.389-4.808.925-7.236,1.15a179.331,179.331,0,0,0-34.256,7.1,221.5,221.5,0,0,0-39.768,16.355,281.385,281.385,0,0,0-38.08,24.158c-6.167,4.61-12.268,9.36-17.974,14.518C96.539,88.494,86.34,97.72,76.785,107.555a243.878,243.878,0,0,0-33.648,43.95,206.488,206.488,0,0,0-20.494,44.6,198.2,198.2,0,0,0-7.691,34.759A201.13,201.13,0,0,0,13.4,266.385a299.716,299.716,0,0,0,4.425,40.24,226.865,226.865,0,0,0,16.73,53.3,210.543,210.543,0,0,0,24,39.528,213.589,213.589,0,0,0,26.358,28.416A251.313,251.313,0,0,0,126.7,458.455a287.831,287.831,0,0,0,55.9,25.277,269.5,269.5,0,0,0,40.641,9.835c6.071,1.01,12.275,1.253,18.412,1.873a4.149,4.149,0,0,1,1.19.56h32.289c2.507-.389,5-.937,7.527-1.143,16.336-1.332,32.107-5.335,47.489-10.717A219.992,219.992,0,0,0,379.1,460.322c9.749-6.447,19.395-13.077,28.737-20.1,5.785-4.348,10.988-9.5,16.3-14.457,3.964-3.7,7.764-7.578,11.51-11.5a232.162,232.162,0,0,0,31.427-41.639c9.542-16.045,17.355-32.905,22.3-50.926,2.859-10.413,4.947-21.045,7.017-31.652,1.032-5.279,1.251-10.723,1.87-16.087.036-.317.358-.6.552-.9V236.005A9.757,9.757,0,0,1,498.252,234.223Zm-161.117-1.15s-16.572-2.98-28.47-2.98c-27.2,0-33.57,14.9-33.57,37.04V360.8H201.582V170.062H275.1v31.931c8.924-26.822,26.771-36.189,62.04-36.189Z\"],\n    \"react\": [512, 512, [], \"f41b\", \"M418.2 177.2c-5.4-1.8-10.8-3.5-16.2-5.1.9-3.7 1.7-7.4 2.5-11.1 12.3-59.6 4.2-107.5-23.1-123.3-26.3-15.1-69.2.6-112.6 38.4-4.3 3.7-8.5 7.6-12.5 11.5-2.7-2.6-5.5-5.2-8.3-7.7-45.5-40.4-91.1-57.4-118.4-41.5-26.2 15.2-34 60.3-23 116.7 1.1 5.6 2.3 11.1 3.7 16.7-6.4 1.8-12.7 3.8-18.6 5.9C38.3 196.2 0 225.4 0 255.6c0 31.2 40.8 62.5 96.3 81.5 4.5 1.5 9 3 13.6 4.3-1.5 6-2.8 11.9-4 18-10.5 55.5-2.3 99.5 23.9 114.6 27 15.6 72.4-.4 116.6-39.1 3.5-3.1 7-6.3 10.5-9.7 4.4 4.3 9 8.4 13.6 12.4 42.8 36.8 85.1 51.7 111.2 36.6 27-15.6 35.8-62.9 24.4-120.5-.9-4.4-1.9-8.9-3-13.5 3.2-.9 6.3-1.9 9.4-2.9 57.7-19.1 99.5-50 99.5-81.7 0-30.3-39.4-59.7-93.8-78.4zM282.9 92.3c37.2-32.4 71.9-45.1 87.7-36 16.9 9.7 23.4 48.9 12.8 100.4-.7 3.4-1.4 6.7-2.3 10-22.2-5-44.7-8.6-67.3-10.6-13-18.6-27.2-36.4-42.6-53.1 3.9-3.7 7.7-7.2 11.7-10.7zM167.2 307.5c5.1 8.7 10.3 17.4 15.8 25.9-15.6-1.7-31.1-4.2-46.4-7.5 4.4-14.4 9.9-29.3 16.3-44.5 4.6 8.8 9.3 17.5 14.3 26.1zm-30.3-120.3c14.4-3.2 29.7-5.8 45.6-7.8-5.3 8.3-10.5 16.8-15.4 25.4-4.9 8.5-9.7 17.2-14.2 26-6.3-14.9-11.6-29.5-16-43.6zm27.4 68.9c6.6-13.8 13.8-27.3 21.4-40.6s15.8-26.2 24.4-38.9c15-1.1 30.3-1.7 45.9-1.7s31 .6 45.9 1.7c8.5 12.6 16.6 25.5 24.3 38.7s14.9 26.7 21.7 40.4c-6.7 13.8-13.9 27.4-21.6 40.8-7.6 13.3-15.7 26.2-24.2 39-14.9 1.1-30.4 1.6-46.1 1.6s-30.9-.5-45.6-1.4c-8.7-12.7-16.9-25.7-24.6-39s-14.8-26.8-21.5-40.6zm180.6 51.2c5.1-8.8 9.9-17.7 14.6-26.7 6.4 14.5 12 29.2 16.9 44.3-15.5 3.5-31.2 6.2-47 8 5.4-8.4 10.5-17 15.5-25.6zm14.4-76.5c-4.7-8.8-9.5-17.6-14.5-26.2-4.9-8.5-10-16.9-15.3-25.2 16.1 2 31.5 4.7 45.9 8-4.6 14.8-10 29.2-16.1 43.4zM256.2 118.3c10.5 11.4 20.4 23.4 29.6 35.8-19.8-.9-39.7-.9-59.5 0 9.8-12.9 19.9-24.9 29.9-35.8zM140.2 57c16.8-9.8 54.1 4.2 93.4 39 2.5 2.2 5 4.6 7.6 7-15.5 16.7-29.8 34.5-42.9 53.1-22.6 2-45 5.5-67.2 10.4-1.3-5.1-2.4-10.3-3.5-15.5-9.4-48.4-3.2-84.9 12.6-94zm-24.5 263.6c-4.2-1.2-8.3-2.5-12.4-3.9-21.3-6.7-45.5-17.3-63-31.2-10.1-7-16.9-17.8-18.8-29.9 0-18.3 31.6-41.7 77.2-57.6 5.7-2 11.5-3.8 17.3-5.5 6.8 21.7 15 43 24.5 63.6-9.6 20.9-17.9 42.5-24.8 64.5zm116.6 98c-16.5 15.1-35.6 27.1-56.4 35.3-11.1 5.3-23.9 5.8-35.3 1.3-15.9-9.2-22.5-44.5-13.5-92 1.1-5.6 2.3-11.2 3.7-16.7 22.4 4.8 45 8.1 67.9 9.8 13.2 18.7 27.7 36.6 43.2 53.4-3.2 3.1-6.4 6.1-9.6 8.9zm24.5-24.3c-10.2-11-20.4-23.2-30.3-36.3 9.6.4 19.5.6 29.5.6 10.3 0 20.4-.2 30.4-.7-9.2 12.7-19.1 24.8-29.6 36.4zm130.7 30c-.9 12.2-6.9 23.6-16.5 31.3-15.9 9.2-49.8-2.8-86.4-34.2-4.2-3.6-8.4-7.5-12.7-11.5 15.3-16.9 29.4-34.8 42.2-53.6 22.9-1.9 45.7-5.4 68.2-10.5 1 4.1 1.9 8.2 2.7 12.2 4.9 21.6 5.7 44.1 2.5 66.3zm18.2-107.5c-2.8.9-5.6 1.8-8.5 2.6-7-21.8-15.6-43.1-25.5-63.8 9.6-20.4 17.7-41.4 24.5-62.9 5.2 1.5 10.2 3.1 15 4.7 46.6 16 79.3 39.8 79.3 58 0 19.6-34.9 44.9-84.8 61.4zm-149.7-15c25.3 0 45.8-20.5 45.8-45.8s-20.5-45.8-45.8-45.8c-25.3 0-45.8 20.5-45.8 45.8s20.5 45.8 45.8 45.8z\"],\n    \"reacteurope\": [576, 512, [], \"f75d\", \"M250.6 211.74l5.8-4.1 5.8 4.1-2.1-6.8 5.7-4.3-7.1-.1-2.3-6.8-2.3 6.8-7.2.1 5.7 4.3zm63.7 0l5.8-4.1 5.8 4.1-2.1-6.8 5.7-4.3-7.2-.1-2.3-6.8-2.3 6.8-7.2.1 5.7 4.3zm-91.3 50.5h-3.4c-4.8 0-3.8 4-3.8 12.1 0 4.7-2.3 6.1-5.8 6.1s-5.8-1.4-5.8-6.1v-36.6c0-4.7 2.3-6.1 5.8-6.1s5.8 1.4 5.8 6.1c0 7.2-.7 10.5 3.8 10.5h3.4c4.7-.1 3.8-3.9 3.8-12.3 0-9.9-6.7-14.1-16.8-14.1h-.2c-10.1 0-16.8 4.2-16.8 14.1V276c0 10.4 6.7 14.1 16.8 14.1h.2c10.1 0 16.8-3.8 16.8-14.1 0-9.86 1.1-13.76-3.8-13.76zm-80.7 17.4h-14.7v-19.3H139c2.5 0 3.8-1.3 3.8-3.8v-2.1c0-2.5-1.3-3.8-3.8-3.8h-11.4v-18.3H142c2.5 0 3.8-1.3 3.8-3.8v-2.1c0-2.5-1.3-3.8-3.8-3.8h-21.7c-2.4-.1-3.7 1.3-3.7 3.8v59.1c0 2.5 1.3 3.8 3.8 3.8h21.9c2.5 0 3.8-1.3 3.8-3.8v-2.1c0-2.5-1.3-3.8-3.8-3.8zm-42-18.5c4.6-2 7.3-6 7.3-12.4v-11.9c0-10.1-6.7-14.1-16.8-14.1H77.4c-2.5 0-3.8 1.3-3.8 3.8v59.1c0 2.5 1.3 3.8 3.8 3.8h3.4c2.5 0 3.8-1.3 3.8-3.8v-22.9h5.6l7.4 23.5a4.1 4.1 0 0 0 4.3 3.2h3.3c2.8 0 4-1.8 3.2-4.4zm-3.8-14c0 4.8-2.5 6.1-6.1 6.1h-5.8v-20.9h5.8c3.6 0 6.1 1.3 6.1 6.1zM176 226a3.82 3.82 0 0 0-4.2-3.4h-6.9a3.68 3.68 0 0 0-4 3.4l-11 59.2c-.5 2.7.9 4.1 3.4 4.1h3a3.74 3.74 0 0 0 4.1-3.5l1.8-11.3h12.2l1.8 11.3a3.74 3.74 0 0 0 4.1 3.5h3.5c2.6 0 3.9-1.4 3.4-4.1zm-12.3 39.3l4.7-29.7 4.7 29.7zm89.3 20.2v-53.2h7.5c2.5 0 3.8-1.3 3.8-3.8v-2.1c0-2.5-1.3-3.8-3.8-3.8h-25.8c-2.5 0-3.8 1.3-3.8 3.8v2.1c0 2.5 1.3 3.8 3.8 3.8h7.3v53.2c0 2.5 1.3 3.8 3.8 3.8h3.4c2.5.04 3.8-1.3 3.8-3.76zm248-.8h-19.4V258h16.1a1.89 1.89 0 0 0 2-2v-.8a1.89 1.89 0 0 0-2-2h-16.1v-25.8h19.1a1.89 1.89 0 0 0 2-2v-.8a1.77 1.77 0 0 0-2-1.9h-22.2a1.62 1.62 0 0 0-2 1.8v63a1.81 1.81 0 0 0 2 1.9H501a1.81 1.81 0 0 0 2-1.9v-.8a1.84 1.84 0 0 0-2-1.96zm-93.1-62.9h-.8c-10.1 0-15.3 4.7-15.3 14.1V276c0 9.3 5.2 14.1 15.3 14.1h.8c10.1 0 15.3-4.8 15.3-14.1v-40.1c0-9.36-5.2-14.06-15.3-14.06zm10.2 52.4c-.1 8-3 11.1-10.5 11.1s-10.5-3.1-10.5-11.1v-36.6c0-7.9 3-11.1 10.5-11.1s10.5 3.2 10.5 11.1zm-46.5-14.5c6.1-1.6 9.2-6.1 9.2-13.3v-9.7c0-9.4-5.2-14.1-15.3-14.1h-13.7a1.81 1.81 0 0 0-2 1.9v63a1.81 1.81 0 0 0 2 1.9h1.2a1.74 1.74 0 0 0 1.9-1.9v-26.9h11.6l10.4 27.2a2.32 2.32 0 0 0 2.3 1.5h1.5c1.4 0 2-1 1.5-2.3zm-6.4-3.9H355v-28.5h10.2c7.5 0 10.5 3.1 10.5 11.1v6.4c0 7.84-3 11.04-10.5 11.04zm85.9-33.1h-13.7a1.62 1.62 0 0 0-2 1.8v63a1.81 1.81 0 0 0 2 1.9h1.2a1.74 1.74 0 0 0 1.9-1.9v-26.1h10.6c10.1 0 15.3-4.8 15.3-14.1v-10.5c0-9.4-5.2-14.1-15.3-14.1zm10.2 22.8c0 7.9-3 11.1-10.5 11.1h-10.2v-29.2h10.2c7.5-.1 10.5 3.1 10.5 11zM259.5 308l-2.3-6.8-2.3 6.8-7.1.1 5.7 4.3-2.1 6.8 5.8-4.1 5.8 4.1-2.1-6.8 5.7-4.3zm227.6-136.1a364.42 364.42 0 0 0-35.6-11.3c19.6-78 11.6-134.7-22.3-153.9C394.7-12.66 343.3 11 291 61.94q5.1 4.95 10.2 10.2c82.5-80 119.6-53.5 120.9-52.8 22.4 12.7 36 55.8 15.5 137.8a587.83 587.83 0 0 0-84.6-13C281.1 43.64 212.4 2 170.8 2 140 2 127 23 123.2 29.74c-18.1 32-13.3 84.2.1 133.8-70.5 20.3-120.7 54.1-120.3 95 .5 59.6 103.2 87.8 122.1 92.8-20.5 81.9-10.1 135.6 22.3 153.9 28 15.8 75.1 6 138.2-55.2q-5.1-4.95-10.2-10.2c-82.5 80-119.7 53.5-120.9 52.8-22.3-12.6-36-55.6-15.5-137.9 12.4 2.9 41.8 9.5 84.6 13 71.9 100.4 140.6 142 182.1 142 30.8 0 43.8-21 47.6-27.7 18-31.9 13.3-84.1-.1-133.8 152.3-43.8 156.2-130.2 33.9-176.3zM135.9 36.84c2.9-5.1 11.9-20.3 34.9-20.3 36.8 0 98.8 39.6 163.3 126.2a714 714 0 0 0-93.9.9 547.76 547.76 0 0 1 42.2-52.4Q277.3 86 272.2 81a598.25 598.25 0 0 0-50.7 64.2 569.69 569.69 0 0 0-84.4 14.6c-.2-1.4-24.3-82.2-1.2-123zm304.8 438.3c-2.9 5.1-11.8 20.3-34.9 20.3-36.7 0-98.7-39.4-163.3-126.2a695.38 695.38 0 0 0 93.9-.9 547.76 547.76 0 0 1-42.2 52.4q5.1 5.25 10.2 10.2a588.47 588.47 0 0 0 50.7-64.2c47.3-4.7 80.3-13.5 84.4-14.6 22.7 84.4 4.5 117 1.2 123zm9.1-138.6c-3.6-11.9-7.7-24.1-12.4-36.4a12.67 12.67 0 0 1-10.7-5.7l-.1.1a19.61 19.61 0 0 1-5.4 3.6c5.7 14.3 10.6 28.4 14.7 42.2a535.3 535.3 0 0 1-72 13c3.5-5.3 17.2-26.2 32.2-54.2a24.6 24.6 0 0 1-6-3.2c-1.1 1.2-3.6 4.2-10.9 4.2-6.2 11.2-17.4 30.9-33.9 55.2a711.91 711.91 0 0 1-112.4 1c-7.9-11.2-21.5-31.1-36.8-57.8a21 21 0 0 1-3-1.5c-1.9 1.6-3.9 3.2-12.6 3.2 6.3 11.2 17.5 30.7 33.8 54.6a548.81 548.81 0 0 1-72.2-11.7q5.85-21 14.1-42.9c-3.2 0-5.4.2-8.4-1a17.58 17.58 0 0 1-6.9 1c-4.9 13.4-9.1 26.5-12.7 39.4C-31.7 297-12.1 216 126.7 175.64c3.6 11.9 7.7 24.1 12.4 36.4 10.4 0 12.9 3.4 14.4 5.3a12 12 0 0 1 2.3-2.2c-5.8-14.7-10.9-29.2-15.2-43.3 7-1.8 32.4-8.4 72-13-15.9 24.3-26.7 43.9-32.8 55.3a14.22 14.22 0 0 1 6.4 8 23.42 23.42 0 0 1 10.2-8.4c6.5-11.7 17.9-31.9 34.8-56.9a711.72 711.72 0 0 1 112.4-1c31.5 44.6 28.9 48.1 42.5 64.5a21.42 21.42 0 0 1 10.4-7.4c-6.4-11.4-17.6-31-34.3-55.5 40.4 4.1 65 10 72.2 11.7-4 14.4-8.9 29.2-14.6 44.2a20.74 20.74 0 0 1 6.8 4.3l.1.1a12.72 12.72 0 0 1 8.9-5.6c4.9-13.4 9.2-26.6 12.8-39.5a359.71 359.71 0 0 1 34.5 11c106.1 39.9 74 87.9 72.6 90.4-19.8 35.1-80.1 55.2-105.7 62.5zm-114.4-114h-1.2a1.74 1.74 0 0 0-1.9 1.9v49.8c0 7.9-2.6 11.1-10.1 11.1s-10.1-3.1-10.1-11.1v-49.8a1.69 1.69 0 0 0-1.9-1.9H309a1.81 1.81 0 0 0-2 1.9v51.5c0 9.6 5 14.1 15.1 14.1h.4c10.1 0 15.1-4.6 15.1-14.1v-51.5a2 2 0 0 0-2.2-1.9zM321.7 308l-2.3-6.8-2.3 6.8-7.1.1 5.7 4.3-2.1 6.8 5.8-4.1 5.8 4.1-2.1-6.8 5.7-4.3zm-31.1 7.4l-2.3-6.8-2.3 6.8-7.1.1 5.7 4.3-2.1 6.8 5.8-4.1 5.8 4.1-2.1-6.8 5.7-4.3zm5.1-30.8h-19.4v-26.7h16.1a1.89 1.89 0 0 0 2-2v-.8a1.89 1.89 0 0 0-2-2h-16.1v-25.8h19.1a1.89 1.89 0 0 0 2-2v-.8a1.77 1.77 0 0 0-2-1.9h-22.2a1.81 1.81 0 0 0-2 1.9v63a1.81 1.81 0 0 0 2 1.9h22.5a1.77 1.77 0 0 0 2-1.9v-.8a1.83 1.83 0 0 0-2-2.06zm-7.4-99.4L286 192l-7.1.1 5.7 4.3-2.1 6.8 5.8-4.1 5.8 4.1-2.1-6.8 5.7-4.3-7.1-.1z\"],\n    \"readme\": [576, 512, [], \"f4d5\", \"M528.3 46.5H388.5c-48.1 0-89.9 33.3-100.4 80.3-10.6-47-52.3-80.3-100.4-80.3H48c-26.5 0-48 21.5-48 48v245.8c0 26.5 21.5 48 48 48h89.7c102.2 0 132.7 24.4 147.3 75 .7 2.8 5.2 2.8 6 0 14.7-50.6 45.2-75 147.3-75H528c26.5 0 48-21.5 48-48V94.6c0-26.4-21.3-47.9-47.7-48.1zM242 311.9c0 1.9-1.5 3.5-3.5 3.5H78.2c-1.9 0-3.5-1.5-3.5-3.5V289c0-1.9 1.5-3.5 3.5-3.5h160.4c1.9 0 3.5 1.5 3.5 3.5v22.9zm0-60.9c0 1.9-1.5 3.5-3.5 3.5H78.2c-1.9 0-3.5-1.5-3.5-3.5v-22.9c0-1.9 1.5-3.5 3.5-3.5h160.4c1.9 0 3.5 1.5 3.5 3.5V251zm0-60.9c0 1.9-1.5 3.5-3.5 3.5H78.2c-1.9 0-3.5-1.5-3.5-3.5v-22.9c0-1.9 1.5-3.5 3.5-3.5h160.4c1.9 0 3.5 1.5 3.5 3.5v22.9zm259.3 121.7c0 1.9-1.5 3.5-3.5 3.5H337.5c-1.9 0-3.5-1.5-3.5-3.5v-22.9c0-1.9 1.5-3.5 3.5-3.5h160.4c1.9 0 3.5 1.5 3.5 3.5v22.9zm0-60.9c0 1.9-1.5 3.5-3.5 3.5H337.5c-1.9 0-3.5-1.5-3.5-3.5V228c0-1.9 1.5-3.5 3.5-3.5h160.4c1.9 0 3.5 1.5 3.5 3.5v22.9zm0-60.9c0 1.9-1.5 3.5-3.5 3.5H337.5c-1.9 0-3.5-1.5-3.5-3.5v-22.8c0-1.9 1.5-3.5 3.5-3.5h160.4c1.9 0 3.5 1.5 3.5 3.5V190z\"],\n    \"rebel\": [512, 512, [], \"f1d0\", \"M256.5 504C117.2 504 9 387.8 13.2 249.9 16 170.7 56.4 97.7 129.7 49.5c.3 0 1.9-.6 1.1.8-5.8 5.5-111.3 129.8-14.1 226.4 49.8 49.5 90 2.5 90 2.5 38.5-50.1-.6-125.9-.6-125.9-10-24.9-45.7-40.1-45.7-40.1l28.8-31.8c24.4 10.5 43.2 38.7 43.2 38.7.8-29.6-21.9-61.4-21.9-61.4L255.1 8l44.3 50.1c-20.5 28.8-21.9 62.6-21.9 62.6 13.8-23 43.5-39.3 43.5-39.3l28.5 31.8c-27.4 8.9-45.4 39.9-45.4 39.9-15.8 28.5-27.1 89.4.6 127.3 32.4 44.6 87.7-2.8 87.7-2.8 102.7-91.9-10.5-225-10.5-225-6.1-5.5.8-2.8.8-2.8 50.1 36.5 114.6 84.4 116.2 204.8C500.9 400.2 399 504 256.5 504z\"],\n    \"red-river\": [448, 512, [], \"f3e3\", \"M353.2 32H94.8C42.4 32 0 74.4 0 126.8v258.4C0 437.6 42.4 480 94.8 480h258.4c52.4 0 94.8-42.4 94.8-94.8V126.8c0-52.4-42.4-94.8-94.8-94.8zM144.9 200.9v56.3c0 27-21.9 48.9-48.9 48.9V151.9c0-13.2 10.7-23.9 23.9-23.9h154.2c0 27-21.9 48.9-48.9 48.9h-56.3c-12.3-.6-24.6 11.6-24 24zm176.3 72h-56.3c-12.3-.6-24.6 11.6-24 24v56.3c0 27-21.9 48.9-48.9 48.9V247.9c0-13.2 10.7-23.9 23.9-23.9h154.2c0 27-21.9 48.9-48.9 48.9z\"],\n    \"reddit\": [512, 512, [], \"f1a1\", \"M201.5 305.5c-13.8 0-24.9-11.1-24.9-24.6 0-13.8 11.1-24.9 24.9-24.9 13.6 0 24.6 11.1 24.6 24.9 0 13.6-11.1 24.6-24.6 24.6zM504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-132.3-41.2c-9.4 0-17.7 3.9-23.8 10-22.4-15.5-52.6-25.5-86.1-26.6l17.4-78.3 55.4 12.5c0 13.6 11.1 24.6 24.6 24.6 13.8 0 24.9-11.3 24.9-24.9s-11.1-24.9-24.9-24.9c-9.7 0-18 5.8-22.1 13.8l-61.2-13.6c-3-.8-6.1 1.4-6.9 4.4l-19.1 86.4c-33.2 1.4-63.1 11.3-85.5 26.8-6.1-6.4-14.7-10.2-24.1-10.2-34.9 0-46.3 46.9-14.4 62.8-1.1 5-1.7 10.2-1.7 15.5 0 52.6 59.2 95.2 132 95.2 73.1 0 132.3-42.6 132.3-95.2 0-5.3-.6-10.8-1.9-15.8 31.3-16 19.8-62.5-14.9-62.5zM302.8 331c-18.2 18.2-76.1 17.9-93.6 0-2.2-2.2-6.1-2.2-8.3 0-2.5 2.5-2.5 6.4 0 8.6 22.8 22.8 87.3 22.8 110.2 0 2.5-2.2 2.5-6.1 0-8.6-2.2-2.2-6.1-2.2-8.3 0zm7.7-75c-13.6 0-24.6 11.1-24.6 24.9 0 13.6 11.1 24.6 24.6 24.6 13.8 0 24.9-11.1 24.9-24.6 0-13.8-11-24.9-24.9-24.9z\"],\n    \"reddit-alien\": [512, 512, [], \"f281\", \"M440.3 203.5c-15 0-28.2 6.2-37.9 15.9-35.7-24.7-83.8-40.6-137.1-42.3L293 52.3l88.2 19.8c0 21.6 17.6 39.2 39.2 39.2 22 0 39.7-18.1 39.7-39.7s-17.6-39.7-39.7-39.7c-15.4 0-28.7 9.3-35.3 22l-97.4-21.6c-4.9-1.3-9.7 2.2-11 7.1L246.3 177c-52.9 2.2-100.5 18.1-136.3 42.8-9.7-10.1-23.4-16.3-38.4-16.3-55.6 0-73.8 74.6-22.9 100.1-1.8 7.9-2.6 16.3-2.6 24.7 0 83.8 94.4 151.7 210.3 151.7 116.4 0 210.8-67.9 210.8-151.7 0-8.4-.9-17.2-3.1-25.1 49.9-25.6 31.5-99.7-23.8-99.7zM129.4 308.9c0-22 17.6-39.7 39.7-39.7 21.6 0 39.2 17.6 39.2 39.7 0 21.6-17.6 39.2-39.2 39.2-22 .1-39.7-17.6-39.7-39.2zm214.3 93.5c-36.4 36.4-139.1 36.4-175.5 0-4-3.5-4-9.7 0-13.7 3.5-3.5 9.7-3.5 13.2 0 27.8 28.5 120 29 149 0 3.5-3.5 9.7-3.5 13.2 0 4.1 4 4.1 10.2.1 13.7zm-.8-54.2c-21.6 0-39.2-17.6-39.2-39.2 0-22 17.6-39.7 39.2-39.7 22 0 39.7 17.6 39.7 39.7-.1 21.5-17.7 39.2-39.7 39.2z\"],\n    \"reddit-square\": [448, 512, [], \"f1a2\", \"M283.2 345.5c2.7 2.7 2.7 6.8 0 9.2-24.5 24.5-93.8 24.6-118.4 0-2.7-2.4-2.7-6.5 0-9.2 2.4-2.4 6.5-2.4 8.9 0 18.7 19.2 81 19.6 100.5 0 2.4-2.3 6.6-2.3 9 0zm-91.3-53.8c0-14.9-11.9-26.8-26.5-26.8-14.9 0-26.8 11.9-26.8 26.8 0 14.6 11.9 26.5 26.8 26.5 14.6 0 26.5-11.9 26.5-26.5zm90.7-26.8c-14.6 0-26.5 11.9-26.5 26.8 0 14.6 11.9 26.5 26.5 26.5 14.9 0 26.8-11.9 26.8-26.5 0-14.9-11.9-26.8-26.8-26.8zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-99.7 140.6c-10.1 0-19 4.2-25.6 10.7-24.1-16.7-56.5-27.4-92.5-28.6l18.7-84.2 59.5 13.4c0 14.6 11.9 26.5 26.5 26.5 14.9 0 26.8-12.2 26.8-26.8 0-14.6-11.9-26.8-26.8-26.8-10.4 0-19.3 6.2-23.8 14.9l-65.7-14.6c-3.3-.9-6.5 1.5-7.4 4.8l-20.5 92.8c-35.7 1.5-67.8 12.2-91.9 28.9-6.5-6.8-15.8-11-25.9-11-37.5 0-49.8 50.4-15.5 67.5-1.2 5.4-1.8 11-1.8 16.7 0 56.5 63.7 102.3 141.9 102.3 78.5 0 142.2-45.8 142.2-102.3 0-5.7-.6-11.6-2.1-17 33.6-17.2 21.2-67.2-16.1-67.2z\"],\n    \"redhat\": [512, 512, [], \"f7bc\", \"M341.52 285.56c33.65 0 82.34-6.94 82.34-47 .22-6.74.86-1.82-20.88-96.24-4.62-19.15-8.68-27.84-42.31-44.65-26.09-13.34-82.92-35.37-99.73-35.37-15.66 0-20.2 20.17-38.87 20.17-18 0-31.31-15.06-48.12-15.06-16.14 0-26.66 11-34.78 33.62-27.5 77.55-26.28 74.27-26.12 78.27 0 24.8 97.64 106.11 228.47 106.11M429 254.84c4.65 22 4.65 24.35 4.65 27.25 0 37.66-42.33 58.56-98 58.56-125.74.08-235.91-73.65-235.91-122.33a49.55 49.55 0 0 1 4.06-19.72C58.56 200.86 0 208.93 0 260.63c0 84.67 200.63 189 359.49 189 121.79 0 152.51-55.08 152.51-98.58 0-34.21-29.59-73.05-82.93-96.24\"],\n    \"renren\": [512, 512, [], \"f18b\", \"M214 169.1c0 110.4-61 205.4-147.6 247.4C30 373.2 8 317.7 8 256.6 8 133.9 97.1 32.2 214 12.5v156.6zM255 504c-42.9 0-83.3-11-118.5-30.4C193.7 437.5 239.9 382.9 255 319c15.5 63.9 61.7 118.5 118.8 154.7C338.7 493 298.3 504 255 504zm190.6-87.5C359 374.5 298 279.6 298 169.1V12.5c116.9 19.7 206 121.4 206 244.1 0 61.1-22 116.6-58.4 159.9z\"],\n    \"replyd\": [448, 512, [], \"f3e6\", \"M320 480H128C57.6 480 0 422.4 0 352V160C0 89.6 57.6 32 128 32h192c70.4 0 128 57.6 128 128v192c0 70.4-57.6 128-128 128zM193.4 273.2c-6.1-2-11.6-3.1-16.4-3.1-7.2 0-13.5 1.9-18.9 5.6-5.4 3.7-9.6 9-12.8 15.8h-1.1l-4.2-18.3h-28v138.9h36.1v-89.7c1.5-5.4 4.4-9.8 8.7-13.2 4.3-3.4 9.8-5.1 16.2-5.1 4.6 0 9.8 1 15.6 3.1l4.8-34zm115.2 103.4c-3.2 2.4-7.7 4.8-13.7 7.1-6 2.3-12.8 3.5-20.4 3.5-12.2 0-21.1-3-26.5-8.9-5.5-5.9-8.5-14.7-9-26.4h83.3c.9-4.8 1.6-9.4 2.1-13.9.5-4.4.7-8.6.7-12.5 0-10.7-1.6-19.7-4.7-26.9-3.2-7.2-7.3-13-12.5-17.2-5.2-4.3-11.1-7.3-17.8-9.2-6.7-1.8-13.5-2.8-20.6-2.8-21.1 0-37.5 6.1-49.2 18.3s-17.5 30.5-17.5 55c0 22.8 5.2 40.7 15.6 53.7 10.4 13.1 26.8 19.6 49.2 19.6 10.7 0 20.9-1.5 30.4-4.6 9.5-3.1 17.1-6.8 22.6-11.2l-12-23.6zm-21.8-70.3c3.8 5.4 5.3 13.1 4.6 23.1h-51.7c.9-9.4 3.7-17 8.2-22.6 4.5-5.6 11.5-8.5 21-8.5 8.2-.1 14.1 2.6 17.9 8zm79.9 2.5c4.1 3.9 9.4 5.8 16.1 5.8 7 0 12.6-1.9 16.7-5.8s6.1-9.1 6.1-15.6-2-11.6-6.1-15.4c-4.1-3.8-9.6-5.7-16.7-5.7-6.7 0-12 1.9-16.1 5.7-4.1 3.8-6.1 8.9-6.1 15.4s2 11.7 6.1 15.6zm0 100.5c4.1 3.9 9.4 5.8 16.1 5.8 7 0 12.6-1.9 16.7-5.8s6.1-9.1 6.1-15.6-2-11.6-6.1-15.4c-4.1-3.8-9.6-5.7-16.7-5.7-6.7 0-12 1.9-16.1 5.7-4.1 3.8-6.1 8.9-6.1 15.4 0 6.6 2 11.7 6.1 15.6z\"],\n    \"researchgate\": [448, 512, [], \"f4f8\", \"M0 32v448h448V32H0zm262.2 334.4c-6.6 3-33.2 6-50-14.2-9.2-10.6-25.3-33.3-42.2-63.6-8.9 0-14.7 0-21.4-.6v46.4c0 23.5 6 21.2 25.8 23.9v8.1c-6.9-.3-23.1-.8-35.6-.8-13.1 0-26.1.6-33.6.8v-8.1c15.5-2.9 22-1.3 22-23.9V225c0-22.6-6.4-21-22-23.9V193c25.8 1 53.1-.6 70.9-.6 31.7 0 55.9 14.4 55.9 45.6 0 21.1-16.7 42.2-39.2 47.5 13.6 24.2 30 45.6 42.2 58.9 7.2 7.8 17.2 14.7 27.2 14.7v7.3zm22.9-135c-23.3 0-32.2-15.7-32.2-32.2V167c0-12.2 8.8-30.4 34-30.4s30.4 17.9 30.4 17.9l-10.7 7.2s-5.5-12.5-19.7-12.5c-7.9 0-19.7 7.3-19.7 19.7v26.8c0 13.4 6.6 23.3 17.9 23.3 14.1 0 21.5-10.9 21.5-26.8h-17.9v-10.7h30.4c0 20.5 4.7 49.9-34 49.9zm-116.5 44.7c-9.4 0-13.6-.3-20-.8v-69.7c6.4-.6 15-.6 22.5-.6 23.3 0 37.2 12.2 37.2 34.5 0 21.9-15 36.6-39.7 36.6z\"],\n    \"resolving\": [496, 512, [], \"f3e7\", \"M281.2 278.2c46-13.3 49.6-23.5 44-43.4L314 195.5c-6.1-20.9-18.4-28.1-71.1-12.8L54.7 236.8l28.6 98.6 197.9-57.2zM248.5 8C131.4 8 33.2 88.7 7.2 197.5l221.9-63.9c34.8-10.2 54.2-11.7 79.3-8.2 36.3 6.1 52.7 25 61.4 55.2l10.7 37.8c8.2 28.1 1 50.6-23.5 73.6-19.4 17.4-31.2 24.5-61.4 33.2L203 351.8l220.4 27.1 9.7 34.2-48.1 13.3-286.8-37.3 23 80.2c36.8 22 80.3 34.7 126.3 34.7 137 0 248.5-111.4 248.5-248.3C497 119.4 385.5 8 248.5 8zM38.3 388.6L0 256.8c0 48.5 14.3 93.4 38.3 131.8z\"],\n    \"rev\": [448, 512, [], \"f5b2\", \"M289.67 274.89a65.57 65.57 0 1 1-65.56-65.56 65.64 65.64 0 0 1 65.56 65.56zm139.55-5.05h-.13a204.69 204.69 0 0 0-74.32-153l-45.38 26.2a157.07 157.07 0 0 1 71.81 131.84C381.2 361.5 310.73 432 224.11 432S67 361.5 67 274.88c0-81.88 63-149.27 143-156.43v39.12l108.77-62.79L210 32v38.32c-106.7 7.25-191 96-191 204.57 0 111.59 89.12 202.29 200.06 205v.11h210.16V269.84z\"],\n    \"rocketchat\": [576, 512, [], \"f3e8\", \"M284.046,224.8a34.114,34.114,0,1,0,34.317,34.113A34.217,34.217,0,0,0,284.046,224.8Zm-110.45,0a34.114,34.114,0,1,0,34.317,34.113A34.217,34.217,0,0,0,173.6,224.8Zm220.923,0a34.114,34.114,0,1,0,34.317,34.113A34.215,34.215,0,0,0,394.519,224.8Zm153.807-55.319c-15.535-24.172-37.31-45.57-64.681-63.618-52.886-34.817-122.374-54-195.666-54a405.975,405.975,0,0,0-72.032,6.357,238.524,238.524,0,0,0-49.51-36.588C99.684-11.7,40.859.711,11.135,11.421A14.291,14.291,0,0,0,5.58,34.782C26.542,56.458,61.222,99.3,52.7,138.252c-33.142,33.9-51.112,74.776-51.112,117.337,0,43.372,17.97,84.248,51.112,118.148,8.526,38.956-26.154,81.816-47.116,103.491a14.284,14.284,0,0,0,5.555,23.34c29.724,10.709,88.549,23.147,155.324-10.2a238.679,238.679,0,0,0,49.51-36.589A405.972,405.972,0,0,0,288,460.14c73.313,0,142.8-19.159,195.667-53.975,27.371-18.049,49.145-39.426,64.679-63.619,17.309-26.923,26.07-55.916,26.07-86.125C574.394,225.4,565.634,196.43,548.326,169.485ZM284.987,409.9a345.65,345.65,0,0,1-89.446-11.5l-20.129,19.393a184.366,184.366,0,0,1-37.138,27.585,145.767,145.767,0,0,1-52.522,14.87c.983-1.771,1.881-3.563,2.842-5.356q30.258-55.68,16.325-100.078c-32.992-25.962-52.778-59.2-52.778-95.4,0-83.1,104.254-150.469,232.846-150.469s232.867,67.373,232.867,150.469C517.854,342.525,413.6,409.9,284.987,409.9Z\"],\n    \"rockrms\": [496, 512, [], \"f3e9\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm157.4 419.5h-90l-112-131.3c-17.9-20.4-3.9-56.1 26.6-56.1h75.3l-84.6-99.3-84.3 98.9h-90L193.5 67.2c14.4-18.4 41.3-17.3 54.5 0l157.7 185.1c19 22.8 2 57.2-27.6 56.1-.6 0-74.2.2-74.2.2l101.5 118.9z\"],\n    \"rust\": [512, 512, [], \"e07a\", \"M508.52,249.75,486.7,236.24c-.17-2-.34-3.93-.55-5.88l18.72-17.5a7.35,7.35,0,0,0-2.44-12.25l-24-9c-.54-1.88-1.08-3.78-1.67-5.64l15-20.83a7.35,7.35,0,0,0-4.79-11.54l-25.42-4.15c-.9-1.73-1.79-3.45-2.73-5.15l10.68-23.42a7.35,7.35,0,0,0-6.95-10.39l-25.82.91q-1.79-2.22-3.61-4.4L439,81.84A7.36,7.36,0,0,0,430.16,73L405,78.93q-2.17-1.83-4.4-3.61l.91-25.82a7.35,7.35,0,0,0-10.39-7L367.7,53.23c-1.7-.94-3.43-1.84-5.15-2.73L358.4,25.08a7.35,7.35,0,0,0-11.54-4.79L326,35.26c-1.86-.59-3.75-1.13-5.64-1.67l-9-24a7.35,7.35,0,0,0-12.25-2.44l-17.5,18.72c-1.95-.21-3.91-.38-5.88-.55L262.25,3.48a7.35,7.35,0,0,0-12.5,0L236.24,25.3c-2,.17-3.93.34-5.88.55L212.86,7.13a7.35,7.35,0,0,0-12.25,2.44l-9,24c-1.89.55-3.79,1.08-5.66,1.68l-20.82-15a7.35,7.35,0,0,0-11.54,4.79l-4.15,25.41c-1.73.9-3.45,1.79-5.16,2.73L120.88,42.55a7.35,7.35,0,0,0-10.39,7l.92,25.81c-1.49,1.19-3,2.39-4.42,3.61L81.84,73A7.36,7.36,0,0,0,73,81.84L78.93,107c-1.23,1.45-2.43,2.93-3.62,4.41l-25.81-.91a7.42,7.42,0,0,0-6.37,3.26,7.35,7.35,0,0,0-.57,7.13l10.66,23.41c-.94,1.7-1.83,3.43-2.73,5.16L25.08,153.6a7.35,7.35,0,0,0-4.79,11.54l15,20.82c-.59,1.87-1.13,3.77-1.68,5.66l-24,9a7.35,7.35,0,0,0-2.44,12.25l18.72,17.5c-.21,1.95-.38,3.91-.55,5.88L3.48,249.75a7.35,7.35,0,0,0,0,12.5L25.3,275.76c.17,2,.34,3.92.55,5.87L7.13,299.13a7.35,7.35,0,0,0,2.44,12.25l24,9c.55,1.89,1.08,3.78,1.68,5.65l-15,20.83a7.35,7.35,0,0,0,4.79,11.54l25.42,4.15c.9,1.72,1.79,3.45,2.73,5.14L42.56,391.12a7.35,7.35,0,0,0,.57,7.13,7.13,7.13,0,0,0,6.37,3.26l25.83-.91q1.77,2.22,3.6,4.4L73,430.16A7.36,7.36,0,0,0,81.84,439L107,433.07q2.18,1.83,4.41,3.61l-.92,25.82a7.35,7.35,0,0,0,10.39,6.95l23.43-10.68c1.69.94,3.42,1.83,5.14,2.73l4.15,25.42a7.34,7.34,0,0,0,11.54,4.78l20.83-15c1.86.6,3.76,1.13,5.65,1.68l9,24a7.36,7.36,0,0,0,12.25,2.44l17.5-18.72c1.95.21,3.92.38,5.88.55l13.51,21.82a7.35,7.35,0,0,0,12.5,0l13.51-21.82c2-.17,3.93-.34,5.88-.56l17.5,18.73a7.36,7.36,0,0,0,12.25-2.44l9-24c1.89-.55,3.78-1.08,5.65-1.68l20.82,15a7.34,7.34,0,0,0,11.54-4.78l4.15-25.42c1.72-.9,3.45-1.79,5.15-2.73l23.42,10.68a7.35,7.35,0,0,0,10.39-6.95l-.91-25.82q2.22-1.79,4.4-3.61L430.16,439a7.36,7.36,0,0,0,8.84-8.84L433.07,405q1.83-2.17,3.61-4.4l25.82.91a7.23,7.23,0,0,0,6.37-3.26,7.35,7.35,0,0,0,.58-7.13L458.77,367.7c.94-1.7,1.83-3.43,2.73-5.15l25.42-4.15a7.35,7.35,0,0,0,4.79-11.54l-15-20.83c.59-1.87,1.13-3.76,1.67-5.65l24-9a7.35,7.35,0,0,0,2.44-12.25l-18.72-17.5c.21-1.95.38-3.91.55-5.87l21.82-13.51a7.35,7.35,0,0,0,0-12.5Zm-151,129.08A13.91,13.91,0,0,0,341,389.51l-7.64,35.67A187.51,187.51,0,0,1,177,424.44l-7.64-35.66a13.87,13.87,0,0,0-16.46-10.68l-31.51,6.76a187.38,187.38,0,0,1-16.26-19.21H258.3c1.72,0,2.89-.29,2.89-1.91V309.55c0-1.57-1.17-1.91-2.89-1.91H213.47l.05-34.35H262c4.41,0,23.66,1.28,29.79,25.87,1.91,7.55,6.17,32.14,9.06,40,2.89,8.82,14.6,26.46,27.1,26.46H407a187.3,187.3,0,0,1-17.34,20.09Zm25.77,34.49A15.24,15.24,0,1,1,368,398.08h.44A15.23,15.23,0,0,1,383.24,413.32Zm-225.62-.68a15.24,15.24,0,1,1-15.25-15.25h.45A15.25,15.25,0,0,1,157.62,412.64ZM69.57,234.15l32.83-14.6a13.88,13.88,0,0,0,7.06-18.33L102.69,186h26.56V305.73H75.65A187.65,187.65,0,0,1,69.57,234.15ZM58.31,198.09a15.24,15.24,0,0,1,15.23-15.25H74a15.24,15.24,0,1,1-15.67,15.24Zm155.16,24.49.05-35.32h63.26c3.28,0,23.07,3.77,23.07,18.62,0,12.29-15.19,16.7-27.68,16.7ZM399,306.71c-9.8,1.13-20.63-4.12-22-10.09-5.78-32.49-15.39-39.4-30.57-51.4,18.86-11.95,38.46-29.64,38.46-53.26,0-25.52-17.49-41.59-29.4-49.48-16.76-11-35.28-13.23-40.27-13.23H116.32A187.49,187.49,0,0,1,221.21,70.06l23.47,24.6a13.82,13.82,0,0,0,19.6.44l26.26-25a187.51,187.51,0,0,1,128.37,91.43l-18,40.57A14,14,0,0,0,408,220.43l34.59,15.33a187.12,187.12,0,0,1,.4,32.54H423.71c-1.91,0-2.69,1.27-2.69,3.13v8.82C421,301,409.31,305.58,399,306.71ZM240,60.21A15.24,15.24,0,0,1,255.21,45h.45A15.24,15.24,0,1,1,240,60.21ZM436.84,214a15.24,15.24,0,1,1,0-30.48h.44a15.24,15.24,0,0,1-.44,30.48Z\"],\n    \"safari\": [512, 512, [], \"f267\", \"M274.69,274.69l-37.38-37.38L166,346ZM256,8C119,8,8,119,8,256S119,504,256,504,504,393,504,256,393,8,256,8ZM411.85,182.79l14.78-6.13A8,8,0,0,1,437.08,181h0a8,8,0,0,1-4.33,10.46L418,197.57a8,8,0,0,1-10.45-4.33h0A8,8,0,0,1,411.85,182.79ZM314.43,94l6.12-14.78A8,8,0,0,1,331,74.92h0a8,8,0,0,1,4.33,10.45l-6.13,14.78a8,8,0,0,1-10.45,4.33h0A8,8,0,0,1,314.43,94ZM256,60h0a8,8,0,0,1,8,8V84a8,8,0,0,1-8,8h0a8,8,0,0,1-8-8V68A8,8,0,0,1,256,60ZM181,74.92a8,8,0,0,1,10.46,4.33L197.57,94a8,8,0,1,1-14.78,6.12l-6.13-14.78A8,8,0,0,1,181,74.92Zm-63.58,42.49h0a8,8,0,0,1,11.31,0L140,128.72A8,8,0,0,1,140,140h0a8,8,0,0,1-11.31,0l-11.31-11.31A8,8,0,0,1,117.41,117.41ZM60,256h0a8,8,0,0,1,8-8H84a8,8,0,0,1,8,8h0a8,8,0,0,1-8,8H68A8,8,0,0,1,60,256Zm40.15,73.21-14.78,6.13A8,8,0,0,1,74.92,331h0a8,8,0,0,1,4.33-10.46L94,314.43a8,8,0,0,1,10.45,4.33h0A8,8,0,0,1,100.15,329.21Zm4.33-136h0A8,8,0,0,1,94,197.57l-14.78-6.12A8,8,0,0,1,74.92,181h0a8,8,0,0,1,10.45-4.33l14.78,6.13A8,8,0,0,1,104.48,193.24ZM197.57,418l-6.12,14.78a8,8,0,0,1-14.79-6.12l6.13-14.78A8,8,0,1,1,197.57,418ZM264,444a8,8,0,0,1-8,8h0a8,8,0,0,1-8-8V428a8,8,0,0,1,8-8h0a8,8,0,0,1,8,8Zm67-6.92h0a8,8,0,0,1-10.46-4.33L314.43,418a8,8,0,0,1,4.33-10.45h0a8,8,0,0,1,10.45,4.33l6.13,14.78A8,8,0,0,1,331,437.08Zm63.58-42.49h0a8,8,0,0,1-11.31,0L372,383.28A8,8,0,0,1,372,372h0a8,8,0,0,1,11.31,0l11.31,11.31A8,8,0,0,1,394.59,394.59ZM286.25,286.25,110.34,401.66,225.75,225.75,401.66,110.34ZM437.08,331h0a8,8,0,0,1-10.45,4.33l-14.78-6.13a8,8,0,0,1-4.33-10.45h0A8,8,0,0,1,418,314.43l14.78,6.12A8,8,0,0,1,437.08,331ZM444,264H428a8,8,0,0,1-8-8h0a8,8,0,0,1,8-8h16a8,8,0,0,1,8,8h0A8,8,0,0,1,444,264Z\"],\n    \"salesforce\": [640, 512, [], \"f83b\", \"M248.89 245.64h-26.35c.69-5.16 3.32-14.12 13.64-14.12 6.75 0 11.97 3.82 12.71 14.12zm136.66-13.88c-.47 0-14.11-1.77-14.11 20s13.63 20 14.11 20c13 0 14.11-13.54 14.11-20 0-21.76-13.66-20-14.11-20zm-243.22 23.76a8.63 8.63 0 0 0-3.29 7.29c0 4.78 2.08 6.05 3.29 7.05 4.7 3.7 15.07 2.12 20.93.95v-16.94c-5.32-1.07-16.73-1.96-20.93 1.65zM640 232c0 87.58-80 154.39-165.36 136.43-18.37 33-70.73 70.75-132.2 41.63-41.16 96.05-177.89 92.18-213.81-5.17C8.91 428.78-50.19 266.52 53.36 205.61 18.61 126.18 76 32 167.67 32a124.24 124.24 0 0 1 98.56 48.7c20.7-21.4 49.4-34.81 81.15-34.81 42.34 0 79 23.52 98.8 58.57C539 63.78 640 132.69 640 232zm-519.55 31.8c0-11.76-11.69-15.17-17.87-17.17-5.27-2.11-13.41-3.51-13.41-8.94 0-9.46 17-6.66 25.17-2.12 0 0 1.17.71 1.64-.47.24-.7 2.36-6.58 2.59-7.29a1.13 1.13 0 0 0-.7-1.41c-12.33-7.63-40.7-8.51-40.7 12.7 0 12.46 11.49 15.44 17.88 17.17 4.72 1.58 13.17 3 13.17 8.7 0 4-3.53 7.06-9.17 7.06a31.76 31.76 0 0 1-19-6.35c-.47-.23-1.42-.71-1.65.71l-2.4 7.47c-.47.94.23 1.18.23 1.41 1.75 1.4 10.3 6.59 22.82 6.59 13.17 0 21.4-7.06 21.4-18.11zm32-42.58c-10.13 0-18.66 3.17-21.4 5.18a1 1 0 0 0-.24 1.41l2.59 7.06a1 1 0 0 0 1.18.7c.65 0 6.8-4 16.93-4 4 0 7.06.71 9.18 2.36 3.6 2.8 3.06 8.29 3.06 10.58-4.79-.3-19.11-3.44-29.41 3.76a16.92 16.92 0 0 0-7.34 14.54c0 5.9 1.51 10.4 6.59 14.35 12.24 8.16 36.28 2 38.1 1.41 1.58-.32 3.53-.66 3.53-1.88v-33.88c.04-4.61.32-21.64-22.78-21.64zM199 200.24a1.11 1.11 0 0 0-1.18-1.18H188a1.11 1.11 0 0 0-1.17 1.18v79a1.11 1.11 0 0 0 1.17 1.18h9.88a1.11 1.11 0 0 0 1.18-1.18zm55.75 28.93c-2.1-2.31-6.79-7.53-17.65-7.53-3.51 0-14.16.23-20.7 8.94-6.35 7.63-6.58 18.11-6.58 21.41 0 3.12.15 14.26 7.06 21.17 2.64 2.91 9.06 8.23 22.81 8.23 10.82 0 16.47-2.35 18.58-3.76.47-.24.71-.71.24-1.88l-2.35-6.83a1.26 1.26 0 0 0-1.41-.7c-2.59.94-6.35 2.82-15.29 2.82-17.42 0-16.85-14.74-16.94-16.7h37.17a1.23 1.23 0 0 0 1.17-.94c-.29 0 2.07-14.7-6.09-24.23zm36.69 52.69c13.17 0 21.41-7.06 21.41-18.11 0-11.76-11.7-15.17-17.88-17.17-4.14-1.66-13.41-3.38-13.41-8.94 0-3.76 3.29-6.35 8.47-6.35a38.11 38.11 0 0 1 16.7 4.23s1.18.71 1.65-.47c.23-.7 2.35-6.58 2.58-7.29a1.13 1.13 0 0 0-.7-1.41c-7.91-4.9-16.74-4.94-20.23-4.94-12 0-20.46 7.29-20.46 17.64 0 12.46 11.48 15.44 17.87 17.17 6.11 2 13.17 3.26 13.17 8.7 0 4-3.52 7.06-9.17 7.06a31.8 31.8 0 0 1-19-6.35 1 1 0 0 0-1.65.71l-2.35 7.52c-.47.94.23 1.18.23 1.41 1.72 1.4 10.33 6.59 22.79 6.59zM357.09 224c0-.71-.24-1.18-1.18-1.18h-11.76c0-.14.94-8.94 4.47-12.47 4.16-4.15 11.76-1.64 12-1.64 1.17.47 1.41 0 1.64-.47l2.83-7.77c.7-.94 0-1.17-.24-1.41-5.09-2-17.35-2.87-24.46 4.24-5.48 5.48-7 13.92-8 19.52h-8.47a1.28 1.28 0 0 0-1.17 1.18l-1.42 7.76c0 .7.24 1.17 1.18 1.17h8.23c-8.51 47.9-8.75 50.21-10.35 55.52-1.08 3.62-3.29 6.9-5.88 7.76-.09 0-3.88 1.68-9.64-.24 0 0-.94-.47-1.41.71-.24.71-2.59 6.82-2.83 7.53s0 1.41.47 1.41c5.11 2 13 1.77 17.88 0 6.28-2.28 9.72-7.89 11.53-12.94 2.75-7.71 2.81-9.79 11.76-59.74h12.23a1.29 1.29 0 0 0 1.18-1.18zm53.39 16c-.56-1.68-5.1-18.11-25.17-18.11-15.25 0-23 10-25.16 18.11-1 3-3.18 14 0 23.52.09.3 4.41 18.12 25.16 18.12 14.95 0 22.9-9.61 25.17-18.12 3.21-9.61 1.01-20.52 0-23.52zm45.4-16.7c-5-1.65-16.62-1.9-22.11 5.41v-4.47a1.11 1.11 0 0 0-1.18-1.17h-9.4a1.11 1.11 0 0 0-1.18 1.17v55.28a1.12 1.12 0 0 0 1.18 1.18h9.64a1.12 1.12 0 0 0 1.18-1.18v-27.77c0-2.91.05-11.37 4.46-15.05 4.9-4.9 12-3.36 13.41-3.06a1.57 1.57 0 0 0 1.41-.94 74 74 0 0 0 3.06-8 1.16 1.16 0 0 0-.47-1.41zm46.81 54.1l-2.12-7.29c-.47-1.18-1.41-.71-1.41-.71-4.23 1.82-10.15 1.89-11.29 1.89-4.64 0-17.17-1.13-17.17-19.76 0-6.23 1.85-19.76 16.47-19.76a34.85 34.85 0 0 1 11.52 1.65s.94.47 1.18-.71c.94-2.59 1.64-4.47 2.59-7.53.23-.94-.47-1.17-.71-1.17-11.59-3.87-22.34-2.53-27.76 0-1.59.74-16.23 6.49-16.23 27.52 0 2.9-.58 30.11 28.94 30.11a44.45 44.45 0 0 0 15.52-2.83 1.3 1.3 0 0 0 .47-1.42zm53.87-39.52c-.8-3-5.37-16.23-22.35-16.23-16 0-23.52 10.11-25.64 18.59a38.58 38.58 0 0 0-1.65 11.76c0 25.87 18.84 29.4 29.88 29.4 10.82 0 16.46-2.35 18.58-3.76.47-.24.71-.71.24-1.88l-2.36-6.83a1.26 1.26 0 0 0-1.41-.7c-2.59.94-6.35 2.82-15.29 2.82-17.42 0-16.85-14.74-16.93-16.7h37.16a1.25 1.25 0 0 0 1.18-.94c-.24-.01.94-7.07-1.41-15.54zm-23.29-6.35c-10.33 0-13 9-13.64 14.12H546c-.88-11.92-7.62-14.13-12.73-14.13z\"],\n    \"sass\": [640, 512, [], \"f41e\", \"M301.84 378.92c-.3.6-.6 1.08 0 0zm249.13-87a131.16 131.16 0 0 0-58 13.5c-5.9-11.9-12-22.3-13-30.1-1.2-9.1-2.5-14.5-1.1-25.3s7.7-26.1 7.6-27.2-1.4-6.6-14.3-6.7-24 2.5-25.29 5.9a122.83 122.83 0 0 0-5.3 19.1c-2.3 11.7-25.79 53.5-39.09 75.3-4.4-8.5-8.1-16-8.9-22-1.2-9.1-2.5-14.5-1.1-25.3s7.7-26.1 7.6-27.2-1.4-6.6-14.29-6.7-24 2.5-25.3 5.9-2.7 11.4-5.3 19.1-33.89 77.3-42.08 95.4c-4.2 9.2-7.8 16.6-10.4 21.6-.4.8-.7 1.3-.9 1.7.3-.5.5-1 .5-.8-2.2 4.3-3.5 6.7-3.5 6.7v.1c-1.7 3.2-3.6 6.1-4.5 6.1-.6 0-1.9-8.4.3-19.9 4.7-24.2 15.8-61.8 15.7-63.1-.1-.7 2.1-7.2-7.3-10.7-9.1-3.3-12.4 2.2-13.2 2.2s-1.4 2-1.4 2 10.1-42.4-19.39-42.4c-18.4 0-44 20.2-56.58 38.5-7.9 4.3-25 13.6-43 23.5-6.9 3.8-14 7.7-20.7 11.4-.5-.5-.9-1-1.4-1.5-35.79-38.2-101.87-65.2-99.07-116.5 1-18.7 7.5-67.8 127.07-127.4 98-48.8 176.35-35.4 189.84-5.6 19.4 42.5-41.89 121.6-143.66 133-38.79 4.3-59.18-10.7-64.28-16.3-5.3-5.9-6.1-6.2-8.1-5.1-3.3 1.8-1.2 7 0 10.1 3 7.9 15.5 21.9 36.79 28.9 18.7 6.1 64.18 9.5 119.17-11.8 61.78-23.8 109.87-90.1 95.77-145.6C386.52 18.32 293-.18 204.57 31.22c-52.69 18.7-109.67 48.1-150.66 86.4-48.69 45.6-56.48 85.3-53.28 101.9 11.39 58.9 92.57 97.3 125.06 125.7-1.6.9-3.1 1.7-4.5 2.5-16.29 8.1-78.18 40.5-93.67 74.7-17.5 38.8 2.9 66.6 16.29 70.4 41.79 11.6 84.58-9.3 107.57-43.6s20.2-79.1 9.6-99.5c-.1-.3-.3-.5-.4-.8 4.2-2.5 8.5-5 12.8-7.5 8.29-4.9 16.39-9.4 23.49-13.3-4 10.8-6.9 23.8-8.4 42.6-1.8 22 7.3 50.5 19.1 61.7 5.2 4.9 11.49 5 15.39 5 13.8 0 20-11.4 26.89-25 8.5-16.6 16-35.9 16-35.9s-9.4 52.2 16.3 52.2c9.39 0 18.79-12.1 23-18.3v.1s.2-.4.7-1.2c1-1.5 1.5-2.4 1.5-2.4v-.3c3.8-6.5 12.1-21.4 24.59-46 16.2-31.8 31.69-71.5 31.69-71.5a201.24 201.24 0 0 0 6.2 25.8c2.8 9.5 8.7 19.9 13.4 30-3.8 5.2-6.1 8.2-6.1 8.2a.31.31 0 0 0 .1.2c-3 4-6.4 8.3-9.9 12.5-12.79 15.2-28 32.6-30 37.6-2.4 5.9-1.8 10.3 2.8 13.7 3.4 2.6 9.4 3 15.69 2.5 11.5-.8 19.6-3.6 23.5-5.4a82.2 82.2 0 0 0 20.19-10.6c12.5-9.2 20.1-22.4 19.4-39.8-.4-9.6-3.5-19.2-7.3-28.2 1.1-1.6 2.3-3.3 3.4-5C434.8 301.72 450.1 270 450.1 270a201.24 201.24 0 0 0 6.2 25.8c2.4 8.1 7.09 17 11.39 25.7-18.59 15.1-30.09 32.6-34.09 44.1-7.4 21.3-1.6 30.9 9.3 33.1 4.9 1 11.9-1.3 17.1-3.5a79.46 79.46 0 0 0 21.59-11.1c12.5-9.2 24.59-22.1 23.79-39.6-.3-7.9-2.5-15.8-5.4-23.4 15.7-6.6 36.09-10.2 62.09-7.2 55.68 6.5 66.58 41.3 64.48 55.8s-13.8 22.6-17.7 25-5.1 3.3-4.8 5.1c.5 2.6 2.3 2.5 5.6 1.9 4.6-.8 29.19-11.8 30.29-38.7 1.6-34-31.09-71.4-89-71.1zm-429.18 144.7c-18.39 20.1-44.19 27.7-55.28 21.3C54.61 451 59.31 421.42 82 400c13.8-13 31.59-25 43.39-32.4 2.7-1.6 6.6-4 11.4-6.9.8-.5 1.2-.7 1.2-.7.9-.6 1.9-1.1 2.9-1.7 8.29 30.4.3 57.2-19.1 78.3zm134.36-91.4c-6.4 15.7-19.89 55.7-28.09 53.6-7-1.8-11.3-32.3-1.4-62.3 5-15.1 15.6-33.1 21.9-40.1 10.09-11.3 21.19-14.9 23.79-10.4 3.5 5.9-12.2 49.4-16.2 59.2zm111 53c-2.7 1.4-5.2 2.3-6.4 1.6-.9-.5 1.1-2.4 1.1-2.4s13.9-14.9 19.4-21.7c3.2-4 6.9-8.7 10.89-13.9 0 .5.1 1 .1 1.6-.13 17.9-17.32 30-25.12 34.8zm85.58-19.5c-2-1.4-1.7-6.1 5-20.7 2.6-5.7 8.59-15.3 19-24.5a36.18 36.18 0 0 1 1.9 10.8c-.1 22.5-16.2 30.9-25.89 34.4z\"],\n    \"schlix\": [448, 512, [], \"f3ea\", \"M350.5 157.7l-54.2-46.1 73.4-39 78.3 44.2-97.5 40.9zM192 122.1l45.7-28.2 34.7 34.6-55.4 29-25-35.4zm-65.1 6.6l31.9-22.1L176 135l-36.7 22.5-12.4-28.8zm-23.3 88.2l-8.8-34.8 29.6-18.3 13.1 35.3-33.9 17.8zm-21.2-83.7l23.9-18.1 8.9 24-26.7 18.3-6.1-24.2zM59 206.5l-3.6-28.4 22.3-15.5 6.1 28.7L59 206.5zm-30.6 16.6l20.8-12.8 3.3 33.4-22.9 12-1.2-32.6zM1.4 268l19.2-10.2.4 38.2-21 8.8L1.4 268zm59.1 59.3l-28.3 8.3-1.6-46.8 25.1-10.7 4.8 49.2zM99 263.2l-31.1 13-5.2-40.8L90.1 221l8.9 42.2zM123.2 377l-41.6 5.9-8.1-63.5 35.2-10.8 14.5 68.4zm28.5-139.9l21.2 57.1-46.2 13.6-13.7-54.1 38.7-16.6zm85.7 230.5l-70.9-3.3-24.3-95.8 55.2-8.6 40 107.7zm-84.9-279.7l42.2-22.4 28 45.9-50.8 21.3-19.4-44.8zm41 94.9l61.3-18.7 52.8 86.6-79.8 11.3-34.3-79.2zm51.4-85.6l67.3-28.8 65.5 65.4-88.6 26.2-44.2-62.8z\"],\n    \"scribd\": [384, 512, [], \"f28a\", \"M42.3 252.7c-16.1-19-24.7-45.9-24.8-79.9 0-100.4 75.2-153.1 167.2-153.1 98.6-1.6 156.8 49 184.3 70.6l-50.5 72.1-37.3-24.6 26.9-38.6c-36.5-24-79.4-36.5-123-35.8-50.7-.8-111.7 27.2-111.7 76.2 0 18.7 11.2 20.7 28.6 15.6 23.3-5.3 41.9.6 55.8 14 26.4 24.3 23.2 67.6-.7 91.9-29.2 29.5-85.2 27.3-114.8-8.4zm317.7 5.9c-15.5-18.8-38.9-29.4-63.2-28.6-38.1-2-71.1 28-70.5 67.2-.7 16.8 6 33 18.4 44.3 14.1 13.9 33 19.7 56.3 14.4 17.4-5.1 28.6-3.1 28.6 15.6 0 4.3-.5 8.5-1.4 12.7-16.7 40.9-59.5 64.4-121.4 64.4-51.9.2-102.4-16.4-144.1-47.3l33.7-39.4-35.6-27.4L0 406.3l15.4 13.8c52.5 46.8 120.4 72.5 190.7 72.2 51.4 0 94.4-10.5 133.6-44.1 57.1-51.4 54.2-149.2 20.3-189.6z\"],\n    \"searchengin\": [460, 512, [], \"f3eb\", \"M220.6 130.3l-67.2 28.2V43.2L98.7 233.5l54.7-24.2v130.3l67.2-209.3zm-83.2-96.7l-1.3 4.7-15.2 52.9C80.6 106.7 52 145.8 52 191.5c0 52.3 34.3 95.9 83.4 105.5v53.6C57.5 340.1 0 272.4 0 191.6c0-80.5 59.8-147.2 137.4-158zm311.4 447.2c-11.2 11.2-23.1 12.3-28.6 10.5-5.4-1.8-27.1-19.9-60.4-44.4-33.3-24.6-33.6-35.7-43-56.7-9.4-20.9-30.4-42.6-57.5-52.4l-9.7-14.7c-24.7 16.9-53 26.9-81.3 28.7l2.1-6.6 15.9-49.5c46.5-11.9 80.9-54 80.9-104.2 0-54.5-38.4-102.1-96-107.1V32.3C254.4 37.4 320 106.8 320 191.6c0 33.6-11.2 64.7-29 90.4l14.6 9.6c9.8 27.1 31.5 48 52.4 57.4s32.2 9.7 56.8 43c24.6 33.2 42.7 54.9 44.5 60.3s.7 17.3-10.5 28.5zm-9.9-17.9c0-4.4-3.6-8-8-8s-8 3.6-8 8 3.6 8 8 8 8-3.6 8-8z\"],\n    \"sellcast\": [448, 512, [], \"f2da\", \"M353.4 32H94.7C42.6 32 0 74.6 0 126.6v258.7C0 437.4 42.6 480 94.7 480h258.7c52.1 0 94.7-42.6 94.7-94.6V126.6c0-52-42.6-94.6-94.7-94.6zm-50 316.4c-27.9 48.2-89.9 64.9-138.2 37.2-22.9 39.8-54.9 8.6-42.3-13.2l15.7-27.2c5.9-10.3 19.2-13.9 29.5-7.9 18.6 10.8-.1-.1 18.5 10.7 27.6 15.9 63.4 6.3 79.4-21.3 15.9-27.6 6.3-63.4-21.3-79.4-17.8-10.2-.6-.4-18.6-10.6-24.6-14.2-3.4-51.9 21.6-37.5 18.6 10.8-.1-.1 18.5 10.7 48.4 28 65.1 90.3 37.2 138.5zm21.8-208.8c-17 29.5-16.3 28.8-19 31.5-6.5 6.5-16.3 8.7-26.5 3.6-18.6-10.8.1.1-18.5-10.7-27.6-15.9-63.4-6.3-79.4 21.3s-6.3 63.4 21.3 79.4c0 0 18.5 10.6 18.6 10.6 24.6 14.2 3.4 51.9-21.6 37.5-18.6-10.8.1.1-18.5-10.7-48.2-27.8-64.9-90.1-37.1-138.4 27.9-48.2 89.9-64.9 138.2-37.2l4.8-8.4c14.3-24.9 52-3.3 37.7 21.5z\"],\n    \"sellsy\": [640, 512, [], \"f213\", \"M539.71 237.308c3.064-12.257 4.29-24.821 4.29-37.384C544 107.382 468.618 32 376.076 32c-77.22 0-144.634 53.012-163.02 127.781-15.322-13.176-34.934-20.53-55.157-20.53-46.271 0-83.962 37.69-83.962 83.961 0 7.354.92 15.015 3.065 22.369-42.9 20.225-70.785 63.738-70.785 111.234C6.216 424.843 61.68 480 129.401 480h381.198c67.72 0 123.184-55.157 123.184-123.184.001-56.384-38.916-106.025-94.073-119.508zM199.88 401.554c0 8.274-7.048 15.321-15.321 15.321H153.61c-8.274 0-15.321-7.048-15.321-15.321V290.626c0-8.273 7.048-15.321 15.321-15.321h30.949c8.274 0 15.321 7.048 15.321 15.321v110.928zm89.477 0c0 8.274-7.048 15.321-15.322 15.321h-30.949c-8.274 0-15.321-7.048-15.321-15.321V270.096c0-8.274 7.048-15.321 15.321-15.321h30.949c8.274 0 15.322 7.048 15.322 15.321v131.458zm89.477 0c0 8.274-7.047 15.321-15.321 15.321h-30.949c-8.274 0-15.322-7.048-15.322-15.321V238.84c0-8.274 7.048-15.321 15.322-15.321h30.949c8.274 0 15.321 7.048 15.321 15.321v162.714zm87.027 0c0 8.274-7.048 15.321-15.322 15.321h-28.497c-8.274 0-15.321-7.048-15.321-15.321V176.941c0-8.579 7.047-15.628 15.321-15.628h28.497c8.274 0 15.322 7.048 15.322 15.628v224.613z\"],\n    \"servicestack\": [496, 512, [], \"f3ec\", \"M88 216c81.7 10.2 273.7 102.3 304 232H0c99.5-8.1 184.5-137 88-232zm32-152c32.3 35.6 47.7 83.9 46.4 133.6C249.3 231.3 373.7 321.3 400 448h96C455.3 231.9 222.8 79.5 120 64z\"],\n    \"shirtsinbulk\": [448, 512, [], \"f214\", \"M100 410.3l30.6 13.4 4.4-9.9-30.6-13.4zm39.4 17.5l30.6 13.4 4.4-9.9-30.6-13.4zm172.1-14l4.4 9.9 30.6-13.4-4.4-9.9zM179.1 445l30.3 13.7 4.4-9.9-30.3-13.4zM60.4 392.8L91 406.2l4.4-9.6-30.6-13.7zm211.4 38.5l4.4 9.9 30.6-13.4-4.4-9.9zm-39.3 17.5l4.4 9.9 30.6-13.7-4.4-9.6zm118.4-52.2l4.4 9.6 30.6-13.4-4.4-9.9zM170 46.6h-33.5v10.5H170zm-47.2 0H89.2v10.5h33.5zm-47.3 0H42.3v10.5h33.3zm141.5 0h-33.2v10.5H217zm94.5 0H278v10.5h33.5zm47.3 0h-33.5v10.5h33.5zm-94.6 0H231v10.5h33.2zm141.5 0h-33.3v10.5h33.3zM52.8 351.1H42v33.5h10.8zm70-215.9H89.2v10.5h33.5zm-70 10.6h22.8v-10.5H42v33.5h10.8zm168.9 228.6c50.5 0 91.3-40.8 91.3-91.3 0-50.2-40.8-91.3-91.3-91.3-50.2 0-91.3 41.1-91.3 91.3 0 50.5 41.1 91.3 91.3 91.3zm-48.2-111.1c0-25.4 29.5-31.8 49.6-31.8 16.9 0 29.2 5.8 44.3 12l-8.8 16.9h-.9c-6.4-9.9-24.8-13.1-35.6-13.1-9 0-29.8 1.8-29.8 14.9 0 21.6 78.5-10.2 78.5 37.9 0 25.4-31.5 31.2-51 31.2-18.1 0-32.4-2.9-47.2-12.2l9-18.4h.9c6.1 12.2 23.6 14.9 35.9 14.9 8.7 0 32.7-1.2 32.7-14.3 0-26.1-77.6 6.3-77.6-38zM52.8 178.4H42V212h10.8zm342.4 206.2H406v-33.5h-10.8zM52.8 307.9H42v33.5h10.8zM0 3.7v406l221.7 98.6L448 409.7V3.7zm418.8 387.1L222 476.5 29.2 390.8V120.7h389.7v270.1zm0-299.3H29.2V32.9h389.7v58.6zm-366 130.1H42v33.5h10.8zm0 43.2H42v33.5h10.8zM170 135.2h-33.5v10.5H170zm225.2 163.1H406v-33.5h-10.8zm0-43.2H406v-33.5h-10.8zM217 135.2h-33.2v10.5H217zM395.2 212H406v-33.5h-10.8zm0 129.5H406V308h-10.8zm-131-206.3H231v10.5h33.2zm47.3 0H278v10.5h33.5zm83.7 33.6H406v-33.5h-33.5v10.5h22.8zm-36.4-33.6h-33.5v10.5h33.5z\"],\n    \"shopify\": [448, 512, [], \"e057\", \"M388.32,104.1a4.66,4.66,0,0,0-4.4-4c-2,0-37.23-.8-37.23-.8s-21.61-20.82-29.62-28.83V503.2L442.76,472S388.72,106.5,388.32,104.1ZM288.65,70.47a116.67,116.67,0,0,0-7.21-17.61C271,32.85,255.42,22,237,22a15,15,0,0,0-4,.4c-.4-.8-1.2-1.2-1.6-2C223.4,11.63,213,7.63,200.58,8c-24,.8-48,18-67.25,48.83-13.61,21.62-24,48.84-26.82,70.06-27.62,8.4-46.83,14.41-47.23,14.81-14,4.4-14.41,4.8-16,18-1.2,10-38,291.82-38,291.82L307.86,504V65.67a41.66,41.66,0,0,0-4.4.4S297.86,67.67,288.65,70.47ZM233.41,87.69c-16,4.8-33.63,10.4-50.84,15.61,4.8-18.82,14.41-37.63,25.62-50,4.4-4.4,10.41-9.61,17.21-12.81C232.21,54.86,233.81,74.48,233.41,87.69ZM200.58,24.44A27.49,27.49,0,0,1,215,28c-6.4,3.2-12.81,8.41-18.81,14.41-15.21,16.42-26.82,42-31.62,66.45-14.42,4.41-28.83,8.81-42,12.81C131.33,83.28,163.75,25.24,200.58,24.44ZM154.15,244.61c1.6,25.61,69.25,31.22,73.25,91.66,2.8,47.64-25.22,80.06-65.65,82.47-48.83,3.2-75.65-25.62-75.65-25.62l10.4-44s26.82,20.42,48.44,18.82c14-.8,19.22-12.41,18.81-20.42-2-33.62-57.24-31.62-60.84-86.86-3.2-46.44,27.22-93.27,94.47-97.68,26-1.6,39.23,4.81,39.23,4.81L221.4,225.39s-17.21-8-37.63-6.4C154.15,221,153.75,239.8,154.15,244.61ZM249.42,82.88c0-12-1.6-29.22-7.21-43.63,18.42,3.6,27.22,24,31.23,36.43Q262.63,78.68,249.42,82.88Z\"],\n    \"shopware\": [512, 512, [], \"f5b5\", \"M403.5 455.41A246.17 246.17 0 0 1 256 504C118.81 504 8 393 8 256 8 118.81 119 8 256 8a247.39 247.39 0 0 1 165.7 63.5 3.57 3.57 0 0 1-2.86 6.18A418.62 418.62 0 0 0 362.13 74c-129.36 0-222.4 53.47-222.4 155.35 0 109 92.13 145.88 176.83 178.73 33.64 13 65.4 25.36 87 41.59a3.58 3.58 0 0 1 0 5.72zM503 233.09a3.64 3.64 0 0 0-1.27-2.44c-51.76-43-93.62-60.48-144.48-60.48-84.13 0-80.25 52.17-80.25 53.63 0 42.6 52.06 62 112.34 84.49 31.07 11.59 63.19 23.57 92.68 39.93a3.57 3.57 0 0 0 5-1.82A249 249 0 0 0 503 233.09z\"],\n    \"simplybuilt\": [512, 512, [], \"f215\", \"M481.2 64h-106c-14.5 0-26.6 11.8-26.6 26.3v39.6H163.3V90.3c0-14.5-12-26.3-26.6-26.3h-106C16.1 64 4.3 75.8 4.3 90.3v331.4c0 14.5 11.8 26.3 26.6 26.3h450.4c14.8 0 26.6-11.8 26.6-26.3V90.3c-.2-14.5-12-26.3-26.7-26.3zM149.8 355.8c-36.6 0-66.4-29.7-66.4-66.4 0-36.9 29.7-66.6 66.4-66.6 36.9 0 66.6 29.7 66.6 66.6 0 36.7-29.7 66.4-66.6 66.4zm212.4 0c-36.9 0-66.6-29.7-66.6-66.6 0-36.6 29.7-66.4 66.6-66.4 36.6 0 66.4 29.7 66.4 66.4 0 36.9-29.8 66.6-66.4 66.6z\"],\n    \"sistrix\": [448, 512, [], \"f3ee\", \"M448 449L301.2 300.2c20-27.9 31.9-62.2 31.9-99.2 0-93.1-74.7-168.9-166.5-168.9C74.7 32 0 107.8 0 200.9s74.7 168.9 166.5 168.9c39.8 0 76.3-14.2 105-37.9l146 148.1 30.5-31zM166.5 330.8c-70.6 0-128.1-58.3-128.1-129.9S95.9 71 166.5 71s128.1 58.3 128.1 129.9-57.4 129.9-128.1 129.9z\"],\n    \"sith\": [448, 512, [], \"f512\", \"M0 32l69.71 118.75-58.86-11.52 69.84 91.03a146.741 146.741 0 0 0 0 51.45l-69.84 91.03 58.86-11.52L0 480l118.75-69.71-11.52 58.86 91.03-69.84c17.02 3.04 34.47 3.04 51.48 0l91.03 69.84-11.52-58.86L448 480l-69.71-118.78 58.86 11.52-69.84-91.03c3.03-17.01 3.04-34.44 0-51.45l69.84-91.03-58.86 11.52L448 32l-118.75 69.71 11.52-58.9-91.06 69.87c-8.5-1.52-17.1-2.29-25.71-2.29s-17.21.78-25.71 2.29l-91.06-69.87 11.52 58.9L0 32zm224 99.78c31.8 0 63.6 12.12 87.85 36.37 48.5 48.5 48.49 127.21 0 175.7s-127.2 48.46-175.7-.03c-48.5-48.5-48.49-127.21 0-175.7 24.24-24.25 56.05-36.34 87.85-36.34zm0 36.66c-22.42 0-44.83 8.52-61.92 25.61-34.18 34.18-34.19 89.68 0 123.87s89.65 34.18 123.84 0c34.18-34.18 34.19-89.68 0-123.87-17.09-17.09-39.5-25.61-61.92-25.61z\"],\n    \"sketch\": [512, 512, [], \"f7c6\", \"M27.5 162.2L9 187.1h90.5l6.9-130.7-78.9 105.8zM396.3 45.7L267.7 32l135.7 147.2-7.1-133.5zM112.2 218.3l-11.2-22H9.9L234.8 458zm2-31.2h284l-81.5-88.5L256.3 33zm297.3 9.1L277.6 458l224.8-261.7h-90.9zM415.4 69L406 56.4l.9 17.3 6.1 113.4h90.3zM113.5 93.5l-4.6 85.6L244.7 32 116.1 45.7zm287.7 102.7h-290l42.4 82.9L256.3 480l144.9-283.8z\"],\n    \"skyatlas\": [640, 512, [], \"f216\", \"M640 329.3c0 65.9-52.5 114.4-117.5 114.4-165.9 0-196.6-249.7-359.7-249.7-146.9 0-147.1 212.2 5.6 212.2 42.5 0 90.9-17.8 125.3-42.5 5.6-4.1 16.9-16.3 22.8-16.3s10.9 5 10.9 10.9c0 7.8-13.1 19.1-18.7 24.1-40.9 35.6-100.3 61.2-154.7 61.2-83.4.1-154-59-154-144.9s67.5-149.1 152.8-149.1c185.3 0 222.5 245.9 361.9 245.9 99.9 0 94.8-139.7 3.4-139.7-17.5 0-35 11.6-46.9 11.6-8.4 0-15.9-7.2-15.9-15.6 0-11.6 5.3-23.7 5.3-36.3 0-66.6-50.9-114.7-116.9-114.7-53.1 0-80 36.9-88.8 36.9-6.2 0-11.2-5-11.2-11.2 0-5.6 4.1-10.3 7.8-14.4 25.3-28.8 64.7-43.7 102.8-43.7 79.4 0 139.1 58.4 139.1 137.8 0 6.9-.3 13.7-1.2 20.6 11.9-3.1 24.1-4.7 35.9-4.7 60.7 0 111.9 45.3 111.9 107.2z\"],\n    \"skype\": [448, 512, [], \"f17e\", \"M424.7 299.8c2.9-14 4.7-28.9 4.7-43.8 0-113.5-91.9-205.3-205.3-205.3-14.9 0-29.7 1.7-43.8 4.7C161.3 40.7 137.7 32 112 32 50.2 32 0 82.2 0 144c0 25.7 8.7 49.3 23.3 68.2-2.9 14-4.7 28.9-4.7 43.8 0 113.5 91.9 205.3 205.3 205.3 14.9 0 29.7-1.7 43.8-4.7 19 14.6 42.6 23.3 68.2 23.3 61.8 0 112-50.2 112-112 .1-25.6-8.6-49.2-23.2-68.1zm-194.6 91.5c-65.6 0-120.5-29.2-120.5-65 0-16 9-30.6 29.5-30.6 31.2 0 34.1 44.9 88.1 44.9 25.7 0 42.3-11.4 42.3-26.3 0-18.7-16-21.6-42-28-62.5-15.4-117.8-22-117.8-87.2 0-59.2 58.6-81.1 109.1-81.1 55.1 0 110.8 21.9 110.8 55.4 0 16.9-11.4 31.8-30.3 31.8-28.3 0-29.2-33.5-75-33.5-25.7 0-42 7-42 22.5 0 19.8 20.8 21.8 69.1 33 41.4 9.3 90.7 26.8 90.7 77.6 0 59.1-57.1 86.5-112 86.5z\"],\n    \"slack\": [448, 512, [], \"f198\", \"M94.12 315.1c0 25.9-21.16 47.06-47.06 47.06S0 341 0 315.1c0-25.9 21.16-47.06 47.06-47.06h47.06v47.06zm23.72 0c0-25.9 21.16-47.06 47.06-47.06s47.06 21.16 47.06 47.06v117.84c0 25.9-21.16 47.06-47.06 47.06s-47.06-21.16-47.06-47.06V315.1zm47.06-188.98c-25.9 0-47.06-21.16-47.06-47.06S139 32 164.9 32s47.06 21.16 47.06 47.06v47.06H164.9zm0 23.72c25.9 0 47.06 21.16 47.06 47.06s-21.16 47.06-47.06 47.06H47.06C21.16 243.96 0 222.8 0 196.9s21.16-47.06 47.06-47.06H164.9zm188.98 47.06c0-25.9 21.16-47.06 47.06-47.06 25.9 0 47.06 21.16 47.06 47.06s-21.16 47.06-47.06 47.06h-47.06V196.9zm-23.72 0c0 25.9-21.16 47.06-47.06 47.06-25.9 0-47.06-21.16-47.06-47.06V79.06c0-25.9 21.16-47.06 47.06-47.06 25.9 0 47.06 21.16 47.06 47.06V196.9zM283.1 385.88c25.9 0 47.06 21.16 47.06 47.06 0 25.9-21.16 47.06-47.06 47.06-25.9 0-47.06-21.16-47.06-47.06v-47.06h47.06zm0-23.72c-25.9 0-47.06-21.16-47.06-47.06 0-25.9 21.16-47.06 47.06-47.06h117.84c25.9 0 47.06 21.16 47.06 47.06 0 25.9-21.16 47.06-47.06 47.06H283.1z\"],\n    \"slack-hash\": [448, 512, [], \"f3ef\", \"M446.2 270.4c-6.2-19-26.9-29.1-46-22.9l-45.4 15.1-30.3-90 45.4-15.1c19.1-6.2 29.1-26.8 23-45.9-6.2-19-26.9-29.1-46-22.9l-45.4 15.1-15.7-47c-6.2-19-26.9-29.1-46-22.9-19.1 6.2-29.1 26.8-23 45.9l15.7 47-93.4 31.2-15.7-47c-6.2-19-26.9-29.1-46-22.9-19.1 6.2-29.1 26.8-23 45.9l15.7 47-45.3 15c-19.1 6.2-29.1 26.8-23 45.9 5 14.5 19.1 24 33.6 24.6 6.8 1 12-1.6 57.7-16.8l30.3 90L78 354.8c-19 6.2-29.1 26.9-23 45.9 5 14.5 19.1 24 33.6 24.6 6.8 1 12-1.6 57.7-16.8l15.7 47c5.9 16.9 24.7 29 46 22.9 19.1-6.2 29.1-26.8 23-45.9l-15.7-47 93.6-31.3 15.7 47c5.9 16.9 24.7 29 46 22.9 19.1-6.2 29.1-26.8 23-45.9l-15.7-47 45.4-15.1c19-6 29.1-26.7 22.9-45.7zm-254.1 47.2l-30.3-90.2 93.5-31.3 30.3 90.2-93.5 31.3z\"],\n    \"slideshare\": [512, 512, [], \"f1e7\", \"M187.7 153.7c-34 0-61.7 25.7-61.7 57.7 0 31.7 27.7 57.7 61.7 57.7s61.7-26 61.7-57.7c0-32-27.7-57.7-61.7-57.7zm143.4 0c-34 0-61.7 25.7-61.7 57.7 0 31.7 27.7 57.7 61.7 57.7 34.3 0 61.7-26 61.7-57.7.1-32-27.4-57.7-61.7-57.7zm156.6 90l-6 4.3V49.7c0-27.4-20.6-49.7-46-49.7H76.6c-25.4 0-46 22.3-46 49.7V248c-2-1.4-4.3-2.9-6.3-4.3-15.1-10.6-25.1 4-16 17.7 18.3 22.6 53.1 50.3 106.3 72C58.3 525.1 252 555.7 248.9 457.5c0-.7.3-56.6.3-96.6 5.1 1.1 9.4 2.3 13.7 3.1 0 39.7.3 92.8.3 93.5-3.1 98.3 190.6 67.7 134.3-124 53.1-21.7 88-49.4 106.3-72 9.1-13.8-.9-28.3-16.1-17.8zm-30.5 19.2c-68.9 37.4-128.3 31.1-160.6 29.7-23.7-.9-32.6 9.1-33.7 24.9-10.3-7.7-18.6-15.5-20.3-17.1-5.1-5.4-13.7-8-27.1-7.7-31.7 1.1-89.7 7.4-157.4-28V72.3c0-34.9 8.9-45.7 40.6-45.7h317.7c30.3 0 40.9 12.9 40.9 45.7v190.6z\"],\n    \"snapchat\": [496, 512, [], \"f2ab\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm169.5 338.9c-3.5 8.1-18.1 14-44.8 18.2-1.4 1.9-2.5 9.8-4.3 15.9-1.1 3.7-3.7 5.9-8.1 5.9h-.2c-6.2 0-12.8-2.9-25.8-2.9-17.6 0-23.7 4-37.4 13.7-14.5 10.3-28.4 19.1-49.2 18.2-21 1.6-38.6-11.2-48.5-18.2-13.8-9.7-19.8-13.7-37.4-13.7-12.5 0-20.4 3.1-25.8 3.1-5.4 0-7.5-3.3-8.3-6-1.8-6.1-2.9-14.1-4.3-16-13.8-2.1-44.8-7.5-45.5-21.4-.2-3.6 2.3-6.8 5.9-7.4 46.3-7.6 67.1-55.1 68-57.1 0-.1.1-.2.2-.3 2.5-5 3-9.2 1.6-12.5-3.4-7.9-17.9-10.7-24-13.2-15.8-6.2-18-13.4-17-18.3 1.6-8.5 14.4-13.8 21.9-10.3 5.9 2.8 11.2 4.2 15.7 4.2 3.3 0 5.5-.8 6.6-1.4-1.4-23.9-4.7-58 3.8-77.1C183.1 100 230.7 96 244.7 96c.6 0 6.1-.1 6.7-.1 34.7 0 68 17.8 84.3 54.3 8.5 19.1 5.2 53.1 3.8 77.1 1.1.6 2.9 1.3 5.7 1.4 4.3-.2 9.2-1.6 14.7-4.2 4-1.9 9.6-1.6 13.6 0 6.3 2.3 10.3 6.8 10.4 11.9.1 6.5-5.7 12.1-17.2 16.6-1.4.6-3.1 1.1-4.9 1.7-6.5 2.1-16.4 5.2-19 11.5-1.4 3.3-.8 7.5 1.6 12.5.1.1.1.2.2.3.9 2 21.7 49.5 68 57.1 4 1 7.1 5.5 4.9 10.8z\"],\n    \"snapchat-ghost\": [512, 512, [], \"f2ac\", \"M510.846 392.673c-5.211 12.157-27.239 21.089-67.36 27.318-2.064 2.786-3.775 14.686-6.507 23.956-1.625 5.566-5.623 8.869-12.128 8.869l-.297-.005c-9.395 0-19.203-4.323-38.852-4.323-26.521 0-35.662 6.043-56.254 20.588-21.832 15.438-42.771 28.764-74.027 27.399-31.646 2.334-58.025-16.908-72.871-27.404-20.714-14.643-29.828-20.582-56.241-20.582-18.864 0-30.736 4.72-38.852 4.72-8.073 0-11.213-4.922-12.422-9.04-2.703-9.189-4.404-21.263-6.523-24.13-20.679-3.209-67.31-11.344-68.498-32.15a10.627 10.627 0 0 1 8.877-11.069c69.583-11.455 100.924-82.901 102.227-85.934.074-.176.155-.344.237-.515 3.713-7.537 4.544-13.849 2.463-18.753-5.05-11.896-26.872-16.164-36.053-19.796-23.715-9.366-27.015-20.128-25.612-27.504 2.437-12.836 21.725-20.735 33.002-15.453 8.919 4.181 16.843 6.297 23.547 6.297 5.022 0 8.212-1.204 9.96-2.171-2.043-35.936-7.101-87.29 5.687-115.969C158.122 21.304 229.705 15.42 250.826 15.42c.944 0 9.141-.089 10.11-.089 52.148 0 102.254 26.78 126.723 81.643 12.777 28.65 7.749 79.792 5.695 116.009 1.582.872 4.357 1.942 8.599 2.139 6.397-.286 13.815-2.389 22.069-6.257 6.085-2.846 14.406-2.461 20.48.058l.029.01c9.476 3.385 15.439 10.215 15.589 17.87.184 9.747-8.522 18.165-25.878 25.018-2.118.835-4.694 1.655-7.434 2.525-9.797 3.106-24.6 7.805-28.616 17.271-2.079 4.904-1.256 11.211 2.46 18.748.087.168.166.342.239.515 1.301 3.03 32.615 74.46 102.23 85.934 6.427 1.058 11.163 7.877 7.725 15.859z\"],\n    \"snapchat-square\": [448, 512, [], \"f2ad\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-6.5 314.9c-3.5 8.1-18.1 14-44.8 18.2-1.4 1.9-2.5 9.8-4.3 15.9-1.1 3.7-3.7 5.9-8.1 5.9h-.2c-6.2 0-12.8-2.9-25.8-2.9-17.6 0-23.7 4-37.4 13.7-14.5 10.3-28.4 19.1-49.2 18.2-21 1.6-38.6-11.2-48.5-18.2-13.8-9.7-19.8-13.7-37.4-13.7-12.5 0-20.4 3.1-25.8 3.1-5.4 0-7.5-3.3-8.3-6-1.8-6.1-2.9-14.1-4.3-16-13.8-2.1-44.8-7.5-45.5-21.4-.2-3.6 2.3-6.8 5.9-7.4 46.3-7.6 67.1-55.1 68-57.1 0-.1.1-.2.2-.3 2.5-5 3-9.2 1.6-12.5-3.4-7.9-17.9-10.7-24-13.2-15.8-6.2-18-13.4-17-18.3 1.6-8.5 14.4-13.8 21.9-10.3 5.9 2.8 11.2 4.2 15.7 4.2 3.3 0 5.5-.8 6.6-1.4-1.4-23.9-4.7-58 3.8-77.1C159.1 100 206.7 96 220.7 96c.6 0 6.1-.1 6.7-.1 34.7 0 68 17.8 84.3 54.3 8.5 19.1 5.2 53.1 3.8 77.1 1.1.6 2.9 1.3 5.7 1.4 4.3-.2 9.2-1.6 14.7-4.2 4-1.9 9.6-1.6 13.6 0 6.3 2.3 10.3 6.8 10.4 11.9.1 6.5-5.7 12.1-17.2 16.6-1.4.6-3.1 1.1-4.9 1.7-6.5 2.1-16.4 5.2-19 11.5-1.4 3.3-.8 7.5 1.6 12.5.1.1.1.2.2.3.9 2 21.7 49.5 68 57.1 4 1 7.1 5.5 4.9 10.8z\"],\n    \"soundcloud\": [640, 512, [], \"f1be\", \"M111.4 256.3l5.8 65-5.8 68.3c-.3 2.5-2.2 4.4-4.4 4.4s-4.2-1.9-4.2-4.4l-5.6-68.3 5.6-65c0-2.2 1.9-4.2 4.2-4.2 2.2 0 4.1 2 4.4 4.2zm21.4-45.6c-2.8 0-4.7 2.2-5 5l-5 105.6 5 68.3c.3 2.8 2.2 5 5 5 2.5 0 4.7-2.2 4.7-5l5.8-68.3-5.8-105.6c0-2.8-2.2-5-4.7-5zm25.5-24.1c-3.1 0-5.3 2.2-5.6 5.3l-4.4 130 4.4 67.8c.3 3.1 2.5 5.3 5.6 5.3 2.8 0 5.3-2.2 5.3-5.3l5.3-67.8-5.3-130c0-3.1-2.5-5.3-5.3-5.3zM7.2 283.2c-1.4 0-2.2 1.1-2.5 2.5L0 321.3l4.7 35c.3 1.4 1.1 2.5 2.5 2.5s2.2-1.1 2.5-2.5l5.6-35-5.6-35.6c-.3-1.4-1.1-2.5-2.5-2.5zm23.6-21.9c-1.4 0-2.5 1.1-2.5 2.5l-6.4 57.5 6.4 56.1c0 1.7 1.1 2.8 2.5 2.8s2.5-1.1 2.8-2.5l7.2-56.4-7.2-57.5c-.3-1.4-1.4-2.5-2.8-2.5zm25.3-11.4c-1.7 0-3.1 1.4-3.3 3.3L47 321.3l5.8 65.8c.3 1.7 1.7 3.1 3.3 3.1 1.7 0 3.1-1.4 3.1-3.1l6.9-65.8-6.9-68.1c0-1.9-1.4-3.3-3.1-3.3zm25.3-2.2c-1.9 0-3.6 1.4-3.6 3.6l-5.8 70 5.8 67.8c0 2.2 1.7 3.6 3.6 3.6s3.6-1.4 3.9-3.6l6.4-67.8-6.4-70c-.3-2.2-2-3.6-3.9-3.6zm241.4-110.9c-1.1-.8-2.8-1.4-4.2-1.4-2.2 0-4.2.8-5.6 1.9-1.9 1.7-3.1 4.2-3.3 6.7v.8l-3.3 176.7 1.7 32.5 1.7 31.7c.3 4.7 4.2 8.6 8.9 8.6s8.6-3.9 8.6-8.6l3.9-64.2-3.9-177.5c-.4-3-2-5.8-4.5-7.2zm-26.7 15.3c-1.4-.8-2.8-1.4-4.4-1.4s-3.1.6-4.4 1.4c-2.2 1.4-3.6 3.9-3.6 6.7l-.3 1.7-2.8 160.8s0 .3 3.1 65.6v.3c0 1.7.6 3.3 1.7 4.7 1.7 1.9 3.9 3.1 6.4 3.1 2.2 0 4.2-1.1 5.6-2.5 1.7-1.4 2.5-3.3 2.5-5.6l.3-6.7 3.1-58.6-3.3-162.8c-.3-2.8-1.7-5.3-3.9-6.7zm-111.4 22.5c-3.1 0-5.8 2.8-5.8 6.1l-4.4 140.6 4.4 67.2c.3 3.3 2.8 5.8 5.8 5.8 3.3 0 5.8-2.5 6.1-5.8l5-67.2-5-140.6c-.2-3.3-2.7-6.1-6.1-6.1zm376.7 62.8c-10.8 0-21.1 2.2-30.6 6.1-6.4-70.8-65.8-126.4-138.3-126.4-17.8 0-35 3.3-50.3 9.4-6.1 2.2-7.8 4.4-7.8 9.2v249.7c0 5 3.9 8.6 8.6 9.2h218.3c43.3 0 78.6-35 78.6-78.3.1-43.6-35.2-78.9-78.5-78.9zm-296.7-60.3c-4.2 0-7.5 3.3-7.8 7.8l-3.3 136.7 3.3 65.6c.3 4.2 3.6 7.5 7.8 7.5 4.2 0 7.5-3.3 7.5-7.5l3.9-65.6-3.9-136.7c-.3-4.5-3.3-7.8-7.5-7.8zm-53.6-7.8c-3.3 0-6.4 3.1-6.4 6.7l-3.9 145.3 3.9 66.9c.3 3.6 3.1 6.4 6.4 6.4 3.6 0 6.4-2.8 6.7-6.4l4.4-66.9-4.4-145.3c-.3-3.6-3.1-6.7-6.7-6.7zm26.7 3.4c-3.9 0-6.9 3.1-6.9 6.9L227 321.3l3.9 66.4c.3 3.9 3.1 6.9 6.9 6.9s6.9-3.1 6.9-6.9l4.2-66.4-4.2-141.7c0-3.9-3-6.9-6.9-6.9z\"],\n    \"sourcetree\": [448, 512, [], \"f7d3\", \"M427.2 203c0-112.1-90.9-203-203-203C112.1-.2 21.2 90.6 21 202.6A202.86 202.86 0 0 0 161.5 396v101.7a14.3 14.3 0 0 0 14.3 14.3h96.4a14.3 14.3 0 0 0 14.3-14.3V396.1A203.18 203.18 0 0 0 427.2 203zm-271.6 0c0-90.8 137.3-90.8 137.3 0-.1 89.9-137.3 91-137.3 0z\"],\n    \"speakap\": [448, 512, [], \"f3f3\", \"M64 391.78C-15.41 303.59-8 167.42 80.64 87.64s224.8-73 304.21 15.24 72 224.36-16.64 304.14c-18.74 16.87 64 43.09 42 52.26-82.06 34.21-253.91 35-346.23-67.5zm213.31-211.6l38.5-40.86c-9.61-8.89-32-26.83-76.17-27.6-52.33-.91-95.86 28.3-96.77 80-.2 11.33.29 36.72 29.42 54.83 34.46 21.42 86.52 21.51 86 52.26-.37 21.28-26.42 25.81-38.59 25.6-3-.05-30.23-.46-47.61-24.62l-40 42.61c28.16 27 59 32.62 83.49 33.05 10.23.18 96.42.33 97.84-81 .28-15.81-2.07-39.72-28.86-56.59-34.36-21.64-85-19.45-84.43-49.75.41-23.25 31-25.37 37.53-25.26.43 0 26.62.26 39.62 17.37z\"],\n    \"speaker-deck\": [512, 512, [], \"f83c\", \"M213.86 296H100a100 100 0 0 1 0-200h132.84a40 40 0 0 1 0 80H98c-26.47 0-26.45 40 0 40h113.82a100 100 0 0 1 0 200H40a40 40 0 0 1 0-80h173.86c26.48 0 26.46-40 0-40zM298 416a120.21 120.21 0 0 0 51.11-80h64.55a19.83 19.83 0 0 0 19.66-20V196a19.83 19.83 0 0 0-19.66-20H296.42a60.77 60.77 0 0 0 0-80h136.93c43.44 0 78.65 35.82 78.65 80v160c0 44.18-35.21 80-78.65 80z\"],\n    \"spotify\": [496, 512, [], \"f1bc\", \"M248 8C111.1 8 0 119.1 0 256s111.1 248 248 248 248-111.1 248-248S384.9 8 248 8zm100.7 364.9c-4.2 0-6.8-1.3-10.7-3.6-62.4-37.6-135-39.2-206.7-24.5-3.9 1-9 2.6-11.9 2.6-9.7 0-15.8-7.7-15.8-15.8 0-10.3 6.1-15.2 13.6-16.8 81.9-18.1 165.6-16.5 237 26.2 6.1 3.9 9.7 7.4 9.7 16.5s-7.1 15.4-15.2 15.4zm26.9-65.6c-5.2 0-8.7-2.3-12.3-4.2-62.5-37-155.7-51.9-238.6-29.4-4.8 1.3-7.4 2.6-11.9 2.6-10.7 0-19.4-8.7-19.4-19.4s5.2-17.8 15.5-20.7c27.8-7.8 56.2-13.6 97.8-13.6 64.9 0 127.6 16.1 177 45.5 8.1 4.8 11.3 11 11.3 19.7-.1 10.8-8.5 19.5-19.4 19.5zm31-76.2c-5.2 0-8.4-1.3-12.9-3.9-71.2-42.5-198.5-52.7-280.9-29.7-3.6 1-8.1 2.6-12.9 2.6-13.2 0-23.3-10.3-23.3-23.6 0-13.6 8.4-21.3 17.4-23.9 35.2-10.3 74.6-15.2 117.5-15.2 73 0 149.5 15.2 205.4 47.8 7.8 4.5 12.9 10.7 12.9 22.6 0 13.6-11 23.3-23.2 23.3z\"],\n    \"squarespace\": [512, 512, [], \"f5be\", \"M186.12 343.34c-9.65 9.65-9.65 25.29 0 34.94 9.65 9.65 25.29 9.65 34.94 0L378.24 221.1c19.29-19.29 50.57-19.29 69.86 0s19.29 50.57 0 69.86L293.95 445.1c19.27 19.29 50.53 19.31 69.82.04l.04-.04 119.25-119.24c38.59-38.59 38.59-101.14 0-139.72-38.59-38.59-101.15-38.59-139.72 0l-157.22 157.2zm244.53-104.8c-9.65-9.65-25.29-9.65-34.93 0l-157.2 157.18c-19.27 19.29-50.53 19.31-69.82.05l-.05-.05c-9.64-9.64-25.27-9.65-34.92-.01l-.01.01c-9.65 9.64-9.66 25.28-.02 34.93l.02.02c38.58 38.57 101.14 38.57 139.72 0l157.2-157.2c9.65-9.65 9.65-25.29.01-34.93zm-261.99 87.33l157.18-157.18c9.64-9.65 9.64-25.29 0-34.94-9.64-9.64-25.27-9.64-34.91 0L133.72 290.93c-19.28 19.29-50.56 19.3-69.85.01l-.01-.01c-19.29-19.28-19.31-50.54-.03-69.84l.03-.03L218.03 66.89c-19.28-19.29-50.55-19.3-69.85-.02l-.02.02L28.93 186.14c-38.58 38.59-38.58 101.14 0 139.72 38.6 38.59 101.13 38.59 139.73.01zm-87.33-52.4c9.64 9.64 25.27 9.64 34.91 0l157.21-157.19c19.28-19.29 50.55-19.3 69.84-.02l.02.02c9.65 9.65 25.29 9.65 34.93 0 9.65-9.65 9.65-25.29 0-34.93-38.59-38.59-101.13-38.59-139.72 0L81.33 238.54c-9.65 9.64-9.65 25.28-.01 34.93h.01z\"],\n    \"stack-exchange\": [448, 512, [], \"f18d\", \"M17.7 332.3h412.7v22c0 37.7-29.3 68-65.3 68h-19L259.3 512v-89.7H83c-36 0-65.3-30.3-65.3-68v-22zm0-23.6h412.7v-85H17.7v85zm0-109.4h412.7v-85H17.7v85zM365 0H83C47 0 17.7 30.3 17.7 67.7V90h412.7V67.7C430.3 30.3 401 0 365 0z\"],\n    \"stack-overflow\": [384, 512, [], \"f16c\", \"M290.7 311L95 269.7 86.8 309l195.7 41zm51-87L188.2 95.7l-25.5 30.8 153.5 128.3zm-31.2 39.7L129.2 179l-16.7 36.5L293.7 300zM262 32l-32 24 119.3 160.3 32-24zm20.5 328h-200v39.7h200zm39.7 80H42.7V320h-40v160h359.5V320h-40z\"],\n    \"stackpath\": [448, 512, [], \"f842\", \"M244.6 232.4c0 8.5-4.26 20.49-21.34 20.49h-19.61v-41.47h19.61c17.13 0 21.34 12.36 21.34 20.98zM448 32v448H0V32zM151.3 287.84c0-21.24-12.12-34.54-46.72-44.85-20.57-7.41-26-10.91-26-18.63s7-14.61 20.41-14.61c14.09 0 20.79 8.45 20.79 18.35h30.7l.19-.57c.5-19.57-15.06-41.65-51.12-41.65-23.37 0-52.55 10.75-52.55 38.29 0 19.4 9.25 31.29 50.74 44.37 17.26 6.15 21.91 10.4 21.91 19.48 0 15.2-19.13 14.23-19.47 14.23-20.4 0-25.65-9.1-25.65-21.9h-30.8l-.18.56c-.68 31.32 28.38 45.22 56.63 45.22 29.98 0 51.12-13.55 51.12-38.29zm125.38-55.63c0-25.3-18.43-45.46-53.42-45.46h-51.78v138.18h32.17v-47.36h19.61c30.25 0 53.42-15.95 53.42-45.36zM297.94 325L347 186.78h-31.09L268 325zm106.52-138.22h-31.09L325.46 325h29.94z\"],\n    \"staylinked\": [440, 512, [], \"f3f5\", \"M382.7 292.5l2.7 2.7-170-167.3c-3.5-3.5-9.7-3.7-13.8-.5L144.3 171c-4.2 3.2-4.6 8.7-1.1 12.2l68.1 64.3c3.6 3.5 9.9 3.7 14 .5l.1-.1c4.1-3.2 10.4-3 14 .5l84 81.3c3.6 3.5 3.2 9-.9 12.2l-93.2 74c-4.2 3.3-10.5 3.1-14.2-.4L63.2 268c-3.5-3.5-9.7-3.7-13.9-.5L3.5 302.4c-4.2 3.2-4.7 8.7-1.2 12.2L211 510.7s7.4 6.8 17.3-.8l198-163.9c4-3.2 4.4-8.7.7-12.2zm54.5-83.4L226.7 2.5c-1.5-1.2-8-5.5-16.3 1.1L3.6 165.7c-4.2 3.2-4.8 8.7-1.2 12.2l42.3 41.7 171.7 165.1c3.7 3.5 10.1 3.7 14.3.4l50.2-38.8-.3-.3 7.7-6c4.2-3.2 4.6-8.7.9-12.2l-57.1-54.4c-3.6-3.5-10-3.7-14.2-.5l-.1.1c-4.2 3.2-10.5 3.1-14.2-.4L109 180.8c-3.6-3.5-3.1-8.9 1.1-12.2l92.2-71.5c4.1-3.2 10.3-3 13.9.5l160.4 159c3.7 3.5 10 3.7 14.1.5l45.8-35.8c4.1-3.2 4.4-8.7.7-12.2z\"],\n    \"steam\": [496, 512, [], \"f1b6\", \"M496 256c0 137-111.2 248-248.4 248-113.8 0-209.6-76.3-239-180.4l95.2 39.3c6.4 32.1 34.9 56.4 68.9 56.4 39.2 0 71.9-32.4 70.2-73.5l84.5-60.2c52.1 1.3 95.8-40.9 95.8-93.5 0-51.6-42-93.5-93.7-93.5s-93.7 42-93.7 93.5v1.2L176.6 279c-15.5-.9-30.7 3.4-43.5 12.1L0 236.1C10.2 108.4 117.1 8 247.6 8 384.8 8 496 119 496 256zM155.7 384.3l-30.5-12.6a52.79 52.79 0 0 0 27.2 25.8c26.9 11.2 57.8-1.6 69-28.4 5.4-13 5.5-27.3.1-40.3-5.4-13-15.5-23.2-28.5-28.6-12.9-5.4-26.7-5.2-38.9-.6l31.5 13c19.8 8.2 29.2 30.9 20.9 50.7-8.3 19.9-31 29.2-50.8 21zm173.8-129.9c-34.4 0-62.4-28-62.4-62.3s28-62.3 62.4-62.3 62.4 28 62.4 62.3-27.9 62.3-62.4 62.3zm.1-15.6c25.9 0 46.9-21 46.9-46.8 0-25.9-21-46.8-46.9-46.8s-46.9 21-46.9 46.8c.1 25.8 21.1 46.8 46.9 46.8z\"],\n    \"steam-square\": [448, 512, [], \"f1b7\", \"M185.2 356.5c7.7-18.5-1-39.7-19.6-47.4l-29.5-12.2c11.4-4.3 24.3-4.5 36.4.5 12.2 5.1 21.6 14.6 26.7 26.7 5 12.2 5 25.6-.1 37.7-10.5 25.1-39.4 37-64.6 26.5-11.6-4.8-20.4-13.6-25.4-24.2l28.5 11.8c18.6 7.8 39.9-.9 47.6-19.4zM400 32H48C21.5 32 0 53.5 0 80v160.7l116.6 48.1c12-8.2 26.2-12.1 40.7-11.3l55.4-80.2v-1.1c0-48.2 39.3-87.5 87.6-87.5s87.6 39.3 87.6 87.5c0 49.2-40.9 88.7-89.6 87.5l-79 56.3c1.6 38.5-29.1 68.8-65.7 68.8-31.8 0-58.5-22.7-64.5-52.7L0 319.2V432c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-99.7 222.5c-32.2 0-58.4-26.1-58.4-58.3s26.2-58.3 58.4-58.3 58.4 26.2 58.4 58.3-26.2 58.3-58.4 58.3zm.1-14.6c24.2 0 43.9-19.6 43.9-43.8 0-24.2-19.6-43.8-43.9-43.8-24.2 0-43.9 19.6-43.9 43.8 0 24.2 19.7 43.8 43.9 43.8z\"],\n    \"steam-symbol\": [448, 512, [], \"f3f6\", \"M395.5 177.5c0 33.8-27.5 61-61 61-33.8 0-61-27.3-61-61s27.3-61 61-61c33.5 0 61 27.2 61 61zm52.5.2c0 63-51 113.8-113.7 113.8L225 371.3c-4 43-40.5 76.8-84.5 76.8-40.5 0-74.7-28.8-83-67L0 358V250.7L97.2 290c15.1-9.2 32.2-13.3 52-11.5l71-101.7c.5-62.3 51.5-112.8 114-112.8C397 64 448 115 448 177.7zM203 363c0-34.7-27.8-62.5-62.5-62.5-4.5 0-9 .5-13.5 1.5l26 10.5c25.5 10.2 38 39 27.7 64.5-10.2 25.5-39.2 38-64.7 27.5-10.2-4-20.5-8.3-30.7-12.2 10.5 19.7 31.2 33.2 55.2 33.2 34.7 0 62.5-27.8 62.5-62.5zm207.5-185.3c0-42-34.3-76.2-76.2-76.2-42.3 0-76.5 34.2-76.5 76.2 0 42.2 34.3 76.2 76.5 76.2 41.9.1 76.2-33.9 76.2-76.2z\"],\n    \"sticker-mule\": [576, 512, [], \"f3f7\", \"M561.7 199.6c-1.3.3.3 0 0 0zm-6.2-77.4c-7.7-22.3-5.1-7.2-13.4-36.9-1.6-6.5-3.6-14.5-6.2-20-4.4-8.7-4.6-7.5-4.6-9.5 0-5.3 30.7-45.3 19-46.9-5.7-.6-12.2 11.6-20.6 17-8.6 4.2-8 5-10.3 5-2.6 0-5.7-3-6.2-5-2-5.7 1.9-25.9-3.6-25.9-3.6 0-12.3 24.8-17 25.8-5.2 1.3-27.9-11.4-75.1 18-25.3 13.2-86.9 65.2-87 65.3-6.7 4.7-20 4.7-35.5 16-44.4 30.1-109.6 9.4-110.7 9-110.6-26.8-128-15.2-159 11.5-20.8 17.9-23.7 36.5-24.2 38.9-4.2 20.4 5.2 48.3 6.7 64.3 1.8 19.3-2.7 17.7 7.7 98.3.5 1 4.1 0 5.1 1.5 0 8.4-3.8 12.1-4.1 13-1.5 4.5-1.5 10.5 0 16 2.3 8.2 8.2 37.2 8.2 46.9 0 41.8.4 44 2.6 49.4 3.9 10 12.5 9.1 17 12 3.1 3.5-.5 8.5 1 12.5.5 2 3.6 4 6.2 5 9.2 3.6 27 .3 29.9-2.5 1.6-1.5.5-4.5 3.1-5 5.1 0 10.8-.5 14.4-2.5 5.1-2.5 4.1-6 1.5-10.5-.4-.8-7-13.3-9.8-16-2.1-2-5.1-3-7.2-4.5-5.8-4.9-10.3-19.4-10.3-19.5-4.6-19.4-10.3-46.3-4.1-66.8 4.6-17.2 39.5-87.7 39.6-87.8 4.1-6.5 17-11.5 27.3-7 6 1.9 19.3 22 65.4 30.9 47.9 8.7 97.4-2 112.2-2 2.8 2-1.9 13-.5 38.9 0 26.4-.4 13.7-4.1 29.9-2.2 9.7 3.4 23.2-1.5 46.9-1.4 9.8-9.9 32.7-8.2 43.4.5 1 1 2 1.5 3.5.5 4.5 1.5 8.5 4.6 10 7.3 3.6 12-3.5 9.8 11.5-.7 3.1-2.6 12 1.5 15 4.4 3.7 30.6 3.4 36.5.5 2.6-1.5 1.6-4.5 6.4-7.4 1.9-.9 11.3-.4 11.3-6.5.3-1.8-9.2-19.9-9.3-20-2.6-3.5-9.2-4.5-11.3-8-6.9-10.1-1.7-52.6.5-59.4 3-11 5.6-22.4 8.7-32.4 11-42.5 10.3-50.6 16.5-68.3.8-1.8 6.4-23.1 10.3-29.9 9.3-17 21.7-32.4 33.5-47.4 18-22.9 34-46.9 52-69.8 6.1-7 8.2-13.7 18-8 10.8 5.7 21.6 7 31.9 17 14.6 12.8 10.2 18.2 11.8 22.9 1.5 5 7.7 10.5 14.9 9.5 10.4-2 13-2.5 13.4-2.5 2.6-.5 5.7-5 7.2-8 3.1-5.5 7.2-9 7.2-16.5 0-7.7-.4-2.8-20.6-52.9z\"],\n    \"strava\": [384, 512, [], \"f428\", \"M158.4 0L7 292h89.2l62.2-116.1L220.1 292h88.5zm150.2 292l-43.9 88.2-44.6-88.2h-67.6l112.2 220 111.5-220z\"],\n    \"stripe\": [640, 512, [], \"f429\", \"M165 144.7l-43.3 9.2-.2 142.4c0 26.3 19.8 43.3 46.1 43.3 14.6 0 25.3-2.7 31.2-5.9v-33.8c-5.7 2.3-33.7 10.5-33.7-15.7V221h33.7v-37.8h-33.7zm89.1 51.6l-2.7-13.1H213v153.2h44.3V233.3c10.5-13.8 28.2-11.1 33.9-9.3v-40.8c-6-2.1-26.7-6-37.1 13.1zm92.3-72.3l-44.6 9.5v36.2l44.6-9.5zM44.9 228.3c0-6.9 5.8-9.6 15.1-9.7 13.5 0 30.7 4.1 44.2 11.4v-41.8c-14.7-5.8-29.4-8.1-44.1-8.1-36 0-60 18.8-60 50.2 0 49.2 67.5 41.2 67.5 62.4 0 8.2-7.1 10.9-17 10.9-14.7 0-33.7-6.1-48.6-14.2v40c16.5 7.1 33.2 10.1 48.5 10.1 36.9 0 62.3-15.8 62.3-47.8 0-52.9-67.9-43.4-67.9-63.4zM640 261.6c0-45.5-22-81.4-64.2-81.4s-67.9 35.9-67.9 81.1c0 53.5 30.3 78.2 73.5 78.2 21.2 0 37.1-4.8 49.2-11.5v-33.4c-12.1 6.1-26 9.8-43.6 9.8-17.3 0-32.5-6.1-34.5-26.9h86.9c.2-2.3.6-11.6.6-15.9zm-87.9-16.8c0-20 12.3-28.4 23.4-28.4 10.9 0 22.5 8.4 22.5 28.4zm-112.9-64.6c-17.4 0-28.6 8.2-34.8 13.9l-2.3-11H363v204.8l44.4-9.4.1-50.2c6.4 4.7 15.9 11.2 31.4 11.2 31.8 0 60.8-23.2 60.8-79.6.1-51.6-29.3-79.7-60.5-79.7zm-10.6 122.5c-10.4 0-16.6-3.8-20.9-8.4l-.3-66c4.6-5.1 11-8.8 21.2-8.8 16.2 0 27.4 18.2 27.4 41.4.1 23.9-10.9 41.8-27.4 41.8zm-126.7 33.7h44.6V183.2h-44.6z\"],\n    \"stripe-s\": [384, 512, [], \"f42a\", \"M155.3 154.6c0-22.3 18.6-30.9 48.4-30.9 43.4 0 98.5 13.3 141.9 36.7V26.1C298.3 7.2 251.1 0 203.8 0 88.1 0 11 60.4 11 161.4c0 157.9 216.8 132.3 216.8 200.4 0 26.4-22.9 34.9-54.7 34.9-47.2 0-108.2-19.5-156.1-45.5v128.5a396.09 396.09 0 0 0 156 32.4c118.6 0 200.3-51 200.3-153.6 0-170.2-218-139.7-218-203.9z\"],\n    \"studiovinari\": [512, 512, [], \"f3f8\", \"M480.3 187.7l4.2 28v28l-25.1 44.1-39.8 78.4-56.1 67.5-79.1 37.8-17.7 24.5-7.7 12-9.6 4s17.3-63.6 19.4-63.6c2.1 0 20.3.7 20.3.7l66.7-38.6-92.5 26.1-55.9 36.8-22.8 28-6.6 1.4 20.8-73.6 6.9-5.5 20.7 12.9 88.3-45.2 56.8-51.5 14.8-68.4-125.4 23.3 15.2-18.2-173.4-53.3 81.9-10.5-166-122.9L133.5 108 32.2 0l252.9 126.6-31.5-38L378 163 234.7 64l18.7 38.4-49.6-18.1L158.3 0l194.6 122L310 66.2l108 96.4 12-8.9-21-16.4 4.2-37.8L451 89.1l29.2 24.7 11.5 4.2-7 6.2 8.5 12-13.1 7.4-10.3 20.2 10.5 23.9z\"],\n    \"stumbleupon\": [512, 512, [], \"f1a4\", \"M502.9 266v69.7c0 62.1-50.3 112.4-112.4 112.4-61.8 0-112.4-49.8-112.4-111.3v-70.2l34.3 16 51.1-15.2V338c0 14.7 12 26.5 26.7 26.5S417 352.7 417 338v-72h85.9zm-224.7-58.2l34.3 16 51.1-15.2V173c0-60.5-51.1-109-112.1-109-60.8 0-112.1 48.2-112.1 108.2v162.4c0 14.9-12 26.7-26.7 26.7S86 349.5 86 334.6V266H0v69.7C0 397.7 50.3 448 112.4 448c61.6 0 112.4-49.5 112.4-110.8V176.9c0-14.7 12-26.7 26.7-26.7s26.7 12 26.7 26.7v30.9z\"],\n    \"stumbleupon-circle\": [496, 512, [], \"f1a3\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 177.5c-9.8 0-17.8 8-17.8 17.8v106.9c0 40.9-33.9 73.9-74.9 73.9-41.4 0-74.9-33.5-74.9-74.9v-46.5h57.3v45.8c0 10 8 17.8 17.8 17.8s17.8-7.9 17.8-17.8V200.1c0-40 34.2-72.1 74.7-72.1 40.7 0 74.7 32.3 74.7 72.6v23.7l-34.1 10.1-22.9-10.7v-20.6c.1-9.6-7.9-17.6-17.7-17.6zm167.6 123.6c0 41.4-33.5 74.9-74.9 74.9-41.2 0-74.9-33.2-74.9-74.2V263l22.9 10.7 34.1-10.1v47.1c0 9.8 8 17.6 17.8 17.6s17.8-7.9 17.8-17.6v-48h57.3c-.1 45.9-.1 46.4-.1 46.4z\"],\n    \"superpowers\": [448, 512, [], \"f2dd\", \"M448 32c-83.3 11-166.8 22-250 33-92 12.5-163.3 86.7-169 180-3.3 55.5 18 109.5 57.8 148.2L0 480c83.3-11 166.5-22 249.8-33 91.8-12.5 163.3-86.8 168.7-179.8 3.5-55.5-18-109.5-57.7-148.2L448 32zm-79.7 232.3c-4.2 79.5-74 139.2-152.8 134.5-79.5-4.7-140.7-71-136.3-151 4.5-79.2 74.3-139.3 153-134.5 79.3 4.7 140.5 71 136.1 151z\"],\n    \"supple\": [640, 512, [], \"f3f9\", \"M640 262.5c0 64.1-109 116.1-243.5 116.1-24.8 0-48.6-1.8-71.1-5 7.7.4 15.5.6 23.4.6 134.5 0 243.5-56.9 243.5-127.1 0-29.4-19.1-56.4-51.2-78 60 21.1 98.9 55.1 98.9 93.4zM47.7 227.9c-.1-70.2 108.8-127.3 243.3-127.6 7.9 0 15.6.2 23.3.5-22.5-3.2-46.3-4.9-71-4.9C108.8 96.3-.1 148.5 0 212.6c.1 38.3 39.1 72.3 99.3 93.3-32.3-21.5-51.5-48.6-51.6-78zm60.2 39.9s10.5 13.2 29.3 13.2c17.9 0 28.4-11.5 28.4-25.1 0-28-40.2-25.1-40.2-39.7 0-5.4 5.3-9.1 12.5-9.1 5.7 0 11.3 2.6 11.3 6.6v3.9h14.2v-7.9c0-12.1-15.4-16.8-25.4-16.8-16.5 0-28.5 10.2-28.5 24.1 0 26.6 40.2 25.4 40.2 39.9 0 6.6-5.8 10.1-12.3 10.1-11.9 0-20.7-10.1-20.7-10.1l-8.8 10.9zm120.8-73.6v54.4c0 11.3-7.1 17.8-17.8 17.8-10.7 0-17.8-6.5-17.8-17.7v-54.5h-15.8v55c0 18.9 13.4 31.9 33.7 31.9 20.1 0 33.4-13 33.4-31.9v-55h-15.7zm34.4 85.4h15.8v-29.5h15.5c16 0 27.2-11.5 27.2-28.1s-11.2-27.8-27.2-27.8h-39.1v13.4h7.8v72zm15.8-43v-29.1h12.9c8.7 0 13.7 5.7 13.7 14.4 0 8.9-5.1 14.7-14 14.7h-12.6zm57 43h15.8v-29.5h15.5c16 0 27.2-11.5 27.2-28.1s-11.2-27.8-27.2-27.8h-39.1v13.4h7.8v72zm15.7-43v-29.1h12.9c8.7 0 13.7 5.7 13.7 14.4 0 8.9-5 14.7-14 14.7h-12.6zm57.1 34.8c0 5.8 2.4 8.2 8.2 8.2h37.6c5.8 0 8.2-2.4 8.2-8.2v-13h-14.3v5.2c0 1.7-1 2.6-2.6 2.6h-18.6c-1.7 0-2.6-1-2.6-2.6v-61.2c0-5.7-2.4-8.2-8.2-8.2H401v13.4h5.2c1.7 0 2.6 1 2.6 2.6v61.2zm63.4 0c0 5.8 2.4 8.2 8.2 8.2H519c5.7 0 8.2-2.4 8.2-8.2v-13h-14.3v5.2c0 1.7-1 2.6-2.6 2.6h-19.7c-1.7 0-2.6-1-2.6-2.6v-20.3h27.7v-13.4H488v-22.4h19.2c1.7 0 2.6 1 2.6 2.6v5.2H524v-13c0-5.7-2.5-8.2-8.2-8.2h-51.6v13.4h7.8v63.9zm58.9-76v5.9h1.6v-5.9h2.7v-1.2h-7v1.2h2.7zm5.7-1.2v7.1h1.5v-5.7l2.3 5.7h1.3l2.3-5.7v5.7h1.5v-7.1h-2.3l-2.1 5.1-2.1-5.1h-2.4z\"],\n    \"suse\": [640, 512, [], \"f7d6\", \"M471.08 102.66s-.3 18.3-.3 20.3c-9.1-3-74.4-24.1-135.7-26.3-51.9-1.8-122.8-4.3-223 57.3-19.4 12.4-73.9 46.1-99.6 109.7C7 277-.12 307 7 335.06a111 111 0 0 0 16.5 35.7c17.4 25 46.6 41.6 78.1 44.4 44.4 3.9 78.1-16 90-53.3 8.2-25.8 0-63.6-31.5-82.9-25.6-15.7-53.3-12.1-69.2-1.6-13.9 9.2-21.8 23.5-21.6 39.2.3 27.8 24.3 42.6 41.5 42.6a49 49 0 0 0 15.8-2.7c6.5-1.8 13.3-6.5 13.3-14.9 0-12.1-11.6-14.8-16.8-13.9-2.9.5-4.5 2-11.8 2.4-2-.2-12-3.1-12-14V316c.2-12.3 13.2-18 25.5-16.9 32.3 2.8 47.7 40.7 28.5 65.7-18.3 23.7-76.6 23.2-99.7-20.4-26-49.2 12.7-111.2 87-98.4 33.2 5.7 83.6 35.5 102.4 104.3h45.9c-5.7-17.6-8.9-68.3 42.7-68.3 56.7 0 63.9 39.9 79.8 68.3H460c-12.8-18.3-21.7-38.7-18.9-55.8 5.6-33.8 39.7-18.4 82.4-17.4 66.5.4 102.1-27 103.1-28 3.7-3.1 6.5-15.8 7-17.7 1.3-5.1-3.2-2.4-3.2-2.4-8.7 5.2-30.5 15.2-50.9 15.6-25.3.5-76.2-25.4-81.6-28.2-.3-.4.1 1.2-11-25.5 88.4 58.3 118.3 40.5 145.2 21.7.8-.6 4.3-2.9 3.6-5.7-13.8-48.1-22.4-62.7-34.5-69.6-37-21.6-125-34.7-129.2-35.3.1-.1-.9-.3-.9.7zm60.4 72.8a37.54 37.54 0 0 1 38.9-36.3c33.4 1.2 48.8 42.3 24.4 65.2-24.2 22.7-64.4 4.6-63.3-28.9zm38.6-25.3a26.27 26.27 0 1 0 25.4 27.2 26.19 26.19 0 0 0-25.4-27.2zm4.3 28.8c-15.4 0-15.4-15.6 0-15.6s15.4 15.64 0 15.64z\"],\n    \"swift\": [448, 512, [], \"f8e1\", \"M448 156.09c0-4.51-.08-9-.2-13.52a196.31 196.31 0 0 0-2.58-29.42 99.62 99.62 0 0 0-9.22-28A94.08 94.08 0 0 0 394.84 44a99.17 99.17 0 0 0-28-9.22 195 195 0 0 0-29.43-2.59c-4.51-.12-9-.17-13.52-.2H124.14c-4.51 0-9 .08-13.52.2-2.45.07-4.91.15-7.37.27a171.68 171.68 0 0 0-22.06 2.32 103.06 103.06 0 0 0-21.21 6.1q-3.46 1.45-6.81 3.12a94.66 94.66 0 0 0-18.39 12.32c-1.88 1.61-3.69 3.28-5.43 5A93.86 93.86 0 0 0 12 85.17a99.45 99.45 0 0 0-9.22 28 196.31 196.31 0 0 0-2.54 29.4c-.13 4.51-.18 9-.21 13.52v199.83c0 4.51.08 9 .21 13.51a196.08 196.08 0 0 0 2.58 29.42 99.3 99.3 0 0 0 9.22 28A94.31 94.31 0 0 0 53.17 468a99.47 99.47 0 0 0 28 9.21 195 195 0 0 0 29.43 2.59c4.5.12 9 .17 13.52.2H323.91c4.51 0 9-.08 13.52-.2a196.59 196.59 0 0 0 29.44-2.59 99.57 99.57 0 0 0 28-9.21A94.22 94.22 0 0 0 436 426.84a99.3 99.3 0 0 0 9.22-28 194.79 194.79 0 0 0 2.59-29.42c.12-4.5.17-9 .2-13.51V172.14c-.01-5.35-.01-10.7-.01-16.05zm-69.88 241c-20-38.93-57.23-29.27-76.31-19.47-1.72 1-3.48 2-5.25 3l-.42.25c-39.5 21-92.53 22.54-145.85-.38A234.64 234.64 0 0 1 45 290.12a230.63 230.63 0 0 0 39.17 23.37c56.36 26.4 113 24.49 153 0-57-43.85-104.6-101-141.09-147.22a197.09 197.09 0 0 1-18.78-25.9c43.7 40 112.7 90.22 137.48 104.12-52.57-55.49-98.89-123.94-96.72-121.74 82.79 83.42 159.18 130.59 159.18 130.59 2.88 1.58 5 2.85 6.73 4a127.44 127.44 0 0 0 4.16-12.47c13.22-48.33-1.66-103.58-35.31-149.2C329.61 141.75 375 229.34 356.4 303.42c-.44 1.73-.95 3.4-1.44 5.09 38.52 47.4 28.04 98.17 23.13 88.59z\"],\n    \"symfony\": [512, 512, [], \"f83d\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm133.74 143.54c-11.47.41-19.4-6.45-19.77-16.87-.27-9.18 6.68-13.44 6.53-18.85-.23-6.55-10.16-6.82-12.87-6.67-39.78 1.29-48.59 57-58.89 113.85 21.43 3.15 36.65-.72 45.14-6.22 12-7.75-3.34-15.72-1.42-24.56 4-18.16 32.55-19 32 5.3-.36 17.86-25.92 41.81-77.6 35.7-10.76 59.52-18.35 115-58.2 161.72-29 34.46-58.4 39.82-71.58 40.26-24.65.85-41-12.31-41.58-29.84-.56-17 14.45-26.26 24.31-26.59 21.89-.75 30.12 25.67 14.88 34-12.09 9.71.11 12.61 2.05 12.55 10.42-.36 17.34-5.51 22.18-9 24-20 33.24-54.86 45.35-118.35 8.19-49.66 17-78 18.23-82-16.93-12.75-27.08-28.55-49.85-34.72-15.61-4.23-25.12-.63-31.81 7.83-7.92 10-5.29 23 2.37 30.7l12.63 14c15.51 17.93 24 31.87 20.8 50.62-5.06 29.93-40.72 52.9-82.88 39.94-36-11.11-42.7-36.56-38.38-50.62 7.51-24.15 42.36-11.72 34.62 13.6-2.79 8.6-4.92 8.68-6.28 13.07-4.56 14.77 41.85 28.4 51-1.39 4.47-14.52-5.3-21.71-22.25-39.85-28.47-31.75-16-65.49 2.95-79.67C204.23 140.13 251.94 197 262 205.29c37.17-109 100.53-105.46 102.43-105.53 25.16-.81 44.19 10.59 44.83 28.65.25 7.69-4.17 22.59-19.52 23.13z\"],\n    \"teamspeak\": [512, 512, [], \"f4f9\", \"M244.2 346.79c2.4-12.3-12-30-32.4-48.7-20.9-19.2-48.2-39.1-63.4-46.6-21.7-12-41.7-1.8-46.3 22.7-5 26.2 0 51.4 14.5 73.9 10.2 15.5 25.4 22.7 43.4 24 11.6.6 52.5 2.2 61.7-1 11.9-4.3 20.1-11.8 22.5-24.3zm205 20.8a5.22 5.22 0 0 0-8.3 2.4c-8 25.4-44.7 112.5-172.1 121.5-149.7 10.5 80.3 43.6 145.4-6.4 22.7-17.4 47.6-35 46.6-85.4-.4-10.1-4.9-26.69-11.6-32.1zm62-122.4c-.3-18.9-8.6-33.4-26-42.2-2.9-1.3-5-2.7-5.9-6.4A222.64 222.64 0 0 0 438.9 103c-1.1-1.5-3.5-3.2-2.2-5 8.5-11.5-.3-18-7-24.4Q321.4-31.11 177.4 13.09c-40.1 12.3-73.9 35.6-102 67.4-4 4.3-6.7 9.1-3 14.5 3 4 1.3 6.2-1 9.3C51.6 132 38.2 162.59 32.1 196c-.7 4.3-2.9 6-6.4 7.8-14.2 7-22.5 18.5-24.9 34L0 264.29v20.9c0 30.8 21 50.4 51.8 49 7.7-.3 11.7-4.3 12-11.5 2-77.5-2.4-95.4 3.7-125.8C92.1 72.39 234.3 5 345.3 65.39 411.4 102 445.7 159 447.6 234.79c.8 28.2 0 56.5 0 84.6 0 7 2.2 12.5 9.4 14.2 24.1 5 49.2-12 53.2-36.7 2.9-17.1 1-34.5 1-51.7zm-159.6 131.5c36.5 2.8 59.3-28.5 58.4-60.5-2.1-45.2-66.2-16.5-87.8-8-73.2 28.1-45 54.9-22.2 60.8z\"],\n    \"telegram\": [496, 512, [], \"f2c6\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm121.8 169.9l-40.7 191.8c-3 13.6-11.1 16.9-22.4 10.5l-62-45.7-29.9 28.8c-3.3 3.3-6.1 6.1-12.5 6.1l4.4-63.1 114.9-103.8c5-4.4-1.1-6.9-7.7-2.5l-142 89.4-61.2-19.1c-13.3-4.2-13.6-13.3 2.8-19.7l239.1-92.2c11.1-4 20.8 2.7 17.2 19.5z\"],\n    \"telegram-plane\": [448, 512, [], \"f3fe\", \"M446.7 98.6l-67.6 318.8c-5.1 22.5-18.4 28.1-37.3 17.5l-103-75.9-49.7 47.8c-5.5 5.5-10.1 10.1-20.7 10.1l7.4-104.9 190.9-172.5c8.3-7.4-1.8-11.5-12.9-4.1L117.8 284 16.2 252.2c-22.1-6.9-22.5-22.1 4.6-32.7L418.2 66.4c18.4-6.9 34.5 4.1 28.5 32.2z\"],\n    \"tencent-weibo\": [384, 512, [], \"f1d5\", \"M72.3 495.8c1.4 19.9-27.6 22.2-29.7 2.9C31 368.8 73.7 259.2 144 185.5c-15.6-34 9.2-77.1 50.6-77.1 30.3 0 55.1 24.6 55.1 55.1 0 44-49.5 70.8-86.9 45.1-65.7 71.3-101.4 169.8-90.5 287.2zM192 .1C66.1.1-12.3 134.3 43.7 242.4 52.4 259.8 79 246.9 70 229 23.7 136.4 91 29.8 192 29.8c75.4 0 136.9 61.4 136.9 136.9 0 90.8-86.9 153.9-167.7 133.1-19.1-4.1-25.6 24.4-6.6 29.1 110.7 23.2 204-60 204-162.3C358.6 74.7 284 .1 192 .1z\"],\n    \"the-red-yeti\": [512, 512, [], \"f69d\", \"M488.23 241.7l20.7 7.1c-9.6-23.9-23.9-37-31.7-44.8l7.1-18.2c.2 0 12.3-27.8-2.5-30.7-.6-11.3-6.6-27-18.4-27-7.6-10.6-17.7-12.3-30.7-5.9a122.2 122.2 0 0 0-25.3 16.5c-5.3-6.4-3 .4-3-29.8-37.1-24.3-45.4-11.7-74.8 3l.5.5a239.36 239.36 0 0 0-68.4-13.3c-5.5-8.7-18.6-19.1-25.1-25.1l24.8 7.1c-5.5-5.5-26.8-12.9-34.2-15.2 18.2-4.1 29.8-20.8 42.5-33-34.9-10.1-67.9-5.9-97.9 11.8l12-44.2L182 0c-31.6 24.2-33 41.9-33.7 45.5-.9-2.4-6.3-19.6-15.2-27a35.12 35.12 0 0 0-.5 25.3c3 8.4 5.9 14.8 8.4 18.9-16-3.3-28.3-4.9-49.2 0h-3.7l33 14.3a194.26 194.26 0 0 0-46.7 67.4l-1.7 8.4 1.7 1.7 7.6-4.7c-3.3 11.6-5.3 19.4-6.6 25.8a200.18 200.18 0 0 0-27.8 40.3c-15 1-31.8 10.8-40.3 14.3l3 3.4 28.8 1c-.5 1-.7 2.2-1.2 3.2-7.3 6.4-39.8 37.7-33 80.7l20.2-22.4c.5 1.7.7 3.4 1.2 5.2 0 25.5.4 89.6 64.9 150.5 43.6 40 96 60.2 157.5 60.2 121.7 0 223-87.3 223-211.5 6.8-9.7-1.2 3 16.7-25.1l13 14.3 2.5-.5A181.84 181.84 0 0 0 495 255a44.74 44.74 0 0 0-6.8-13.3zM398 111.2l-.5 21.9c5.5 18.1 16.9 17.2 22.4 17.2l-3.4-4.7 22.4-5.4a242.44 242.44 0 0 1-27 0c12.8-2.1 33.3-29 43-11.3 3.4 7.6 6.4 17.2 9.3 27.8l1.7-5.9a56.38 56.38 0 0 1-1.7-15.2c5.4.5 8.8 3.4 9.3 10.1.5 6.4 1.7 14.8 3.4 25.3l4.7-11.3c4.6 0 4.5-3.6-2.5 20.7-20.9-8.7-35.1-8.4-46.5-8.4l18.2-16c-25.3 8.2-33 10.8-54.8 20.9-1.1-5.4-5-13.5-16-19.9-3.2 3.8-2.8.9-.7 14.8h-2.5a62.32 62.32 0 0 0-8.4-23.1l4.2-3.4c8.4-7.1 11.8-14.3 10.6-21.9-.5-6.4-5.4-13.5-13.5-20.7 5.6-3.4 15.2-.4 28.3 8.5zm-39.6-10.1c2.7 1.9 11.4 5.4 18.9 17.2 4.2 8.4 4 9.8 3.4 11.1-.5 2.4-.5 4.3-3 7.1-1.7 2.5-5.4 4.7-11.8 7.6-7.6-13-16.5-23.6-27.8-31.2zM91 143.1l1.2-1.7c1.2-2.9 4.2-7.6 9.3-15.2l2.5-3.4-13 12.3 5.4-4.7-10.1 9.3-4.2 1.2c12.3-24.1 23.1-41.3 32.5-50.2 9.3-9.3 16-16 20.2-19.4l-6.4 1.2c-11.3-4.2-19.4-7.1-24.8-8.4 2.5-.5 3.7-.5 3.2-.5 10.3 0 17.5.5 20.9 1.2a52.35 52.35 0 0 0 16 2.5l.5-1.7-8.4-35.8 13.5 29a42.89 42.89 0 0 0 5.9-14.3c1.7-6.4 5.4-13 10.1-19.4s7.6-10.6 9.3-11.3a234.68 234.68 0 0 0-6.4 25.3l-1.7 7.1-.5 4.7 2.5 2.5C190.4 39.9 214 34 239.8 34.5l21.1.5c-11.8 13.5-27.8 21.9-48.5 24.8a201.26 201.26 0 0 1-23.4 2.9l-.2-.5-2.5-1.2a20.75 20.75 0 0 0-14 2c-2.5-.2-4.9-.5-7.1-.7l-2.5 1.7.5 1.2c2 .2 3.9.5 6.2.7l-2 3.4 3.4-.5-10.6 11.3c-4.2 3-5.4 6.4-4.2 9.3l5.4-3.4h1.2a39.4 39.4 0 0 1 25.3-15.2v-3c6.4.5 13 1 19.4 1.2 6.4 0 8.4.5 5.4 1.2a189.6 189.6 0 0 1 20.7 13.5c13.5 10.1 23.6 21.9 30 35.4 8.8 18.2 13.5 37.1 13.5 56.6a141.13 141.13 0 0 1-3 28.3 209.91 209.91 0 0 1-16 46l2.5.5c18.2-19.7 41.9-16 49.2-16l-6.4 5.9 22.4 17.7-1.7 30.7c-5.4-12.3-16.5-21.1-33-27.8 16.5 14.8 23.6 21.1 21.9 20.2-4.8-2.8-3.5-1.9-10.8-3.7 4.1 4.1 17.5 18.8 18.2 20.7l.2.2-.2.2c0 1.8 1.6-1.2-14 22.9-75.2-15.3-106.27-42.7-141.2-63.2l11.8 1.2c-11.8-18.5-15.6-17.7-38.4-26.1L149 225c-8.8-3-18.2-3-28.3.5l7.6-10.6-1.2-1.7c-14.9 4.3-19.8 9.2-22.6 11.3-1.1-5.5-2.8-12.4-12.3-28.8l-1.2 27-13.2-5c1.5-25.2 5.4-50.5 13.2-74.6zm276.5 330c-49.9 25-56.1 22.4-59 23.9-29.8-11.8-50.9-31.7-63.5-58.8l30 16.5c-9.8-9.3-18.3-16.5-38.4-44.3l11.8 23.1-17.7-7.6c14.2 21.1 23.5 51.7 66.6 73.5-120.8 24.2-199-72.1-200.9-74.3a262.57 262.57 0 0 0 35.4 24.8c3.4 1.7 7.1 2.5 10.1 1.2l-16-20.7c9.2 4.2 9.5 4.5 69.1 29-42.5-20.7-73.8-40.8-93.2-60.2-.5 6.4-1.2 10.1-1.2 10.1a80.25 80.25 0 0 1 20.7 26.6c-39-18.9-57.6-47.6-71.3-82.6 49.9 55.1 118.9 37.5 120.5 37.1 34.8 16.4 69.9 23.6 113.9 10.6 3.3 0 20.3 17 25.3 39.1l4.2-3-2.5-23.6c9 9 24.9 22.6 34.4 13-15.6-5.3-23.5-9.5-29.5-31.7 4.6 4.2 7.6 9 27.8 15l1.2-1.2-10.5-14.2c11.7-4.8-3.5 1 32-10.8 4.3 34.3 9 49.2.7 89.5zm115.3-214.4l-2.5.5 3 9.3c-3.5 5.9-23.7 44.3-71.6 79.7-39.5 29.8-76.6 39.1-80.9 40.3l-7.6-7.1-1.2 3 14.3 16-7.1-4.7 3.4 4.2h-1.2l-21.9-13.5 9.3 26.6-19-27.9-1.2 2.5 7.6 29c-6.1-8.2-21-32.6-56.8-39.6l32.5 21.2a214.82 214.82 0 0 1-93.2-6.4c-4.2-1.2-8.9-2.5-13.5-4.2l1.2-3-44.8-22.4 26.1 22.4c-57.7 9.1-113-25.4-126.4-83.4l-2.5-16.4-22.27 22.3c19.5-57.5 25.6-57.9 51.4-70.1-9.1-5.3-1.6-3.3-38.4-9.3 15.8-5.8 33-15.4 73 5.2a18.5 18.5 0 0 1 3.7-1.7c.6-3.2.4-.8 1-11.8 3.9 10 3.6 8.7 3 9.3l1.7.5c12.7-6.5 8.9-4.5 17-8.9l-5.4 13.5 22.3-5.8-8.4 8.4 2.5 2.5c4.5-1.8 30.3 3.4 40.8 16l-23.6-2.5c39.4 23 51.5 54 55.8 69.6l1.7-1.2c-2.8-22.3-12.4-33.9-16-40.1 4.2 5 39.2 34.6 110.4 46-11.3-.5-23.1 5.4-34.9 18.9l46.7-20.2-9.3 21.9c7.6-10.1 14.8-23.6 21.2-39.6v-.5l1.2-3-1.2 16c13.5-41.8 25.3-78.5 35.4-109.7l13.5-27.8v-2l-5.4-4.2h10.1l5.9 4.2 2.5-1.2-3.4-16 12.3 18.9 41.8-20.2-14.8 13 .5 2.9 17.7-.5a184 184 0 0 1 33 4.2l-23.6 2.5-1.2 3 26.6 23.1a254.21 254.21 0 0 1 27 32c-11.2-3.3-10.3-3.4-21.2-3.4l12.3 32.5zm-6.1-71.3l-3.9 13-14.3-11.8zm-254.8 7.1c1.7 10.6 4.7 17.7 8.8 21.9-9.3 6.6-27.5 13.9-46.5 16l.5 1.2a50.22 50.22 0 0 0 24.8-2.5l-7.1 13c4.2-1.7 10.1-7.1 17.7-14.8 11.9-5.5 12.7-5.1 20.2-16-12.7-6.4-15.7-13.7-18.4-18.8zm3.7-102.3c-6.4-3.4-10.6 3-12.3 18.9s2.5 29.5 11.8 39.6 18.2 10.6 26.1 3 3.4-23.6-11.3-47.7a39.57 39.57 0 0 0-14.27-13.8zm-4.7 46.3c5.4 2.2 10.5 1.9 12.3-10.6v-4.7l-1.2.5c-4.3-3.1-2.5-4.5-1.7-6.2l.5-.5c-.9-1.2-5-8.1-12.5 4.7-.5-13.5.5-21.9 3-24.8 1.2-2.5 4.7-1.2 11.3 4.2 6.4 5.4 11.3 16 15.2 32.5 6.5 28-19.8 26.2-26.9 4.9zm-45-5.5c1.6.3 9.3-1.1 9.3-14.8h-.5c-5.4-1.1-2.2-5.5-.7-5.9-1.7-3-3.4-4.2-5.4-4.7-8.1 0-11.6 12.7-8.1 21.2a7.51 7.51 0 0 0 5.43 4.2zM216 82.9l-2.5.5.5 3a48.94 48.94 0 0 1 26.1 5.9c-2.5-5.5-10-14.3-28.3-14.3l.5 2.5zm-71.8 49.4c21.7 16.8 16.5 21.4 46.5 23.6l-2.9-4.7a42.67 42.67 0 0 0 14.8-28.3c1.7-16-1.2-29.5-8.8-41.3l13-7.6a2.26 2.26 0 0 0-.5-1.7 14.21 14.21 0 0 0-13.5 1.7c-12.7 6.7-28 20.9-29 22.4-1.7 1.7-3.4 5.9-5.4 13.5a99.61 99.61 0 0 0-2.9 23.6c-4.7-8-10.5-6.4-19.9-5.9l7.1 7.6c-16.5 0-23.3 15.4-23.6 16 6.8 0 4.6-7.6 30-12.3-4.3-6.3-3.3-5-4.9-6.6zm18.7-18.7c1.2-7.6 3.4-13 6.4-17.2 5.4-6.4 10.6-10.1 16-11.8 4.2-1.7 7.1 1.2 10.1 9.3a72.14 72.14 0 0 1 3 25.3c-.5 9.3-3.4 17.2-8.4 23.1-2.9 3.4-5.4 5.9-6.4 7.6a39.21 39.21 0 0 1-11.3-.5l-7.1-3.4-5.4-6.4c.8-10 1.3-18.8 3.1-26zm42 56.1c-34.8 14.4-34.7 14-36.1 14.3-20.8 4.7-19-24.4-18.9-24.8l5.9-1.2-.5-2.5c-20.2-2.6-31 4.2-32.5 4.9.5.5 3 3.4 5.9 9.3 4.2-6.4 8.8-10.1 15.2-10.6a83.47 83.47 0 0 0 1.7 33.7c.1.5 2.6 17.4 27.5 24.1 11.3 3 27 1.2 48.9-5.4l-9.2.5c-4.2-14.8-6.4-24.8-5.9-29.5 11.3-8.8 21.9-11.3 30.7-7.6h2.5l-11.8-7.6-7.1.5c-5.9 1.2-12.3 4.2-19.4 8.4z\"],\n    \"themeco\": [448, 512, [], \"f5c6\", \"M202.9 8.43c9.9-5.73 26-5.82 35.95-.21L430 115.85c10 5.6 18 19.44 18 30.86V364c0 11.44-8.06 25.29-18 31L238.81 503.74c-9.93 5.66-26 5.57-35.85-.21L17.86 395.12C8 389.34 0 375.38 0 364V146.71c0-11.44 8-25.36 17.91-31.08zm-77.4 199.83c-15.94 0-31.89.14-47.83.14v101.45H96.8V280h28.7c49.71 0 49.56-71.74 0-71.74zm140.14 100.29l-30.73-34.64c37-7.51 34.8-65.23-10.87-65.51-16.09 0-32.17-.14-48.26-.14v101.59h19.13v-33.91h18.41l29.56 33.91h22.76zm-41.59-82.32c23.34 0 23.26 32.46 0 32.46h-29.13v-32.46zm-95.56-1.6c21.18 0 21.11 38.85 0 38.85H96.18v-38.84zm192.65-18.25c-68.46 0-71 105.8 0 105.8 69.48-.01 69.41-105.8 0-105.8zm0 17.39c44.12 0 44.8 70.86 0 70.86s-44.43-70.86 0-70.86z\"],\n    \"themeisle\": [512, 512, [], \"f2b2\", \"M208 88.286c0-10 6.286-21.714 17.715-21.714 11.142 0 17.714 11.714 17.714 21.714 0 10.285-6.572 21.714-17.714 21.714C214.286 110 208 98.571 208 88.286zm304 160c0 36.001-11.429 102.286-36.286 129.714-22.858 24.858-87.428 61.143-120.857 70.572l-1.143.286v32.571c0 16.286-12.572 30.571-29.143 30.571-10 0-19.429-5.714-24.572-14.286-5.427 8.572-14.856 14.286-24.856 14.286-10 0-19.429-5.714-24.858-14.286-5.142 8.572-14.571 14.286-24.57 14.286-10.286 0-19.429-5.714-24.858-14.286-5.143 8.572-14.571 14.286-24.571 14.286-18.857 0-29.429-15.714-29.429-32.857-16.286 12.285-35.715 19.428-56.571 19.428-22 0-43.429-8.285-60.286-22.857 10.285-.286 20.571-2.286 30.285-5.714-20.857-5.714-39.428-18.857-52-36.286 21.37 4.645 46.209 1.673 67.143-11.143-22-22-56.571-58.857-68.572-87.428C1.143 321.714 0 303.714 0 289.429c0-49.714 20.286-160 86.286-160 10.571 0 18.857 4.858 23.143 14.857a158.792 158.792 0 0 1 12-15.428c2-2.572 5.714-5.429 7.143-8.286 7.999-12.571 11.714-21.142 21.714-34C182.571 45.428 232 17.143 285.143 17.143c6 0 12 .285 17.714 1.143C313.714 6.571 328.857 0 344.572 0c14.571 0 29.714 6 40 16.286.857.858 1.428 2.286 1.428 3.428 0 3.714-10.285 13.429-12.857 16.286 4.286 1.429 15.714 6.858 15.714 12 0 2.857-2.857 5.143-4.571 7.143 31.429 27.714 49.429 67.143 56.286 108 4.286-5.143 10.285-8.572 17.143-8.572 10.571 0 20.857 7.144 28.571 14.001C507.143 187.143 512 221.714 512 248.286zM188 89.428c0 18.286 12.571 37.143 32.286 37.143 19.714 0 32.285-18.857 32.285-37.143 0-18-12.571-36.857-32.285-36.857-19.715 0-32.286 18.858-32.286 36.857zM237.714 194c0-19.714 3.714-39.143 8.571-58.286-52.039 79.534-13.531 184.571 68.858 184.571 21.428 0 42.571-7.714 60-20 2-7.429 3.714-14.857 3.714-22.572 0-14.286-6.286-21.428-20.572-21.428-4.571 0-9.143.857-13.429 1.714-63.343 12.668-107.142 3.669-107.142-63.999zm-41.142 254.858c0-11.143-8.858-20.857-20.286-20.857-11.429 0-20 9.715-20 20.857v32.571c0 11.143 8.571 21.142 20 21.142 11.428 0 20.286-9.715 20.286-21.142v-32.571zm49.143 0c0-11.143-8.572-20.857-20-20.857-11.429 0-20.286 9.715-20.286 20.857v32.571c0 11.143 8.857 21.142 20.286 21.142 11.428 0 20-10 20-21.142v-32.571zm49.713 0c0-11.143-8.857-20.857-20.285-20.857-11.429 0-20.286 9.715-20.286 20.857v32.571c0 11.143 8.857 21.142 20.286 21.142 11.428 0 20.285-9.715 20.285-21.142v-32.571zm49.715 0c0-11.143-8.857-20.857-20.286-20.857-11.428 0-20.286 9.715-20.286 20.857v32.571c0 11.143 8.858 21.142 20.286 21.142 11.429 0 20.286-10 20.286-21.142v-32.571zM421.714 286c-30.857 59.142-90.285 102.572-158.571 102.572-96.571 0-160.571-84.572-160.571-176.572 0-16.857 2-33.429 6-49.714-20 33.715-29.714 72.572-29.714 111.429 0 60.286 24.857 121.715 71.429 160.857 5.143-9.714 14.857-16.286 26-16.286 10 0 19.428 5.714 24.571 14.286 5.429-8.571 14.571-14.286 24.858-14.286 10 0 19.428 5.714 24.571 14.286 5.429-8.571 14.857-14.286 24.858-14.286 10 0 19.428 5.714 24.857 14.286 5.143-8.571 14.571-14.286 24.572-14.286 10.857 0 20.857 6.572 25.714 16 43.427-36.286 68.569-92 71.426-148.286zm10.572-99.714c0-53.714-34.571-105.714-92.572-105.714-30.285 0-58.571 15.143-78.857 36.857C240.862 183.812 233.41 254 302.286 254c28.805 0 97.357-28.538 84.286 36.857 28.857-26 45.714-65.714 45.714-104.571z\"],\n    \"think-peaks\": [576, 512, [], \"f731\", \"M465.4 409.4l87.1-150.2-32-.3-55.1 95L259.2 0 23 407.4l32 .3L259.2 55.6zm-355.3-44.1h32.1l117.4-202.5L463 511.9l32.5.1-235.8-404.6z\"],\n    \"tiktok\": [448, 512, [], \"e07b\", \"M448,209.91a210.06,210.06,0,0,1-122.77-39.25V349.38A162.55,162.55,0,1,1,185,188.31V278.2a74.62,74.62,0,1,0,52.23,71.18V0l88,0a121.18,121.18,0,0,0,1.86,22.17h0A122.18,122.18,0,0,0,381,102.39a121.43,121.43,0,0,0,67,20.14Z\"],\n    \"trade-federation\": [496, 512, [], \"f513\", \"M248 8.8c-137 0-248 111-248 248s111 248 248 248 248-111 248-248-111-248-248-248zm0 482.8c-129.7 0-234.8-105.1-234.8-234.8S118.3 22 248 22s234.8 105.1 234.8 234.8S377.7 491.6 248 491.6zm155.1-328.5v-46.8H209.3V198H54.2l36.7 46h117.7v196.8h48.8V245h83.3v-47h-83.3v-34.8h145.7zm-73.3 45.1v23.9h-82.9v197.4h-26.8V232.1H96.3l-20.1-23.9h143.9v-80.6h171.8V152h-145v56.2zm-161.3-69l-12.4-20.7 2.1 23.8-23.5 5.4 23.3 5.4-2.1 24 12.3-20.5 22.2 9.5-15.7-18.1 15.8-18.1zm-29.6-19.7l9.3-11.5-12.7 5.9-8-12.4 1.7 13.9-14.3 3.8 13.7 2.7-.8 14.7 6.8-12.2 13.8 5.3zm165.4 145.2l-13.1 5.6-7.3-12.2 1.3 14.2-13.9 3.2 13.9 3.2-1.2 14.2 7.3-12.2 13.1 5.5-9.4-10.7zm106.9-77.2l-20.9 9.1-12-19.6 2.2 22.7-22.3 5.4 22.2 4.9-1.8 22.9 11.5-19.6 21.2 8.8-15.1-17zM248 29.9c-125.3 0-226.9 101.6-226.9 226.9S122.7 483.7 248 483.7s226.9-101.6 226.9-226.9S373.3 29.9 248 29.9zM342.6 196v51h-83.3v195.7h-52.7V245.9H89.9l-40-49.9h157.4v-81.6h197.8v50.7H259.4V196zM248 43.2c60.3 0 114.8 25 153.6 65.2H202.5V190H45.1C73.1 104.8 153.4 43.2 248 43.2zm0 427.1c-117.9 0-213.6-95.6-213.6-213.5 0-21.2 3.1-41.8 8.9-61.1L87.1 252h114.7v196.8h64.6V253h83.3v-62.7h-83.2v-19.2h145.6v-50.8c30.8 37 49.3 84.6 49.3 136.5.1 117.9-95.5 213.5-213.4 213.5zM178.8 275l-11-21.4 1.7 24.5-23.7 3.9 23.8 5.9-3.7 23.8 13-20.9 21.5 10.8-15.8-18.8 16.9-17.1z\"],\n    \"trello\": [448, 512, [], \"f181\", \"M392.3 32H56.1C25.1 32 0 57.1 0 88c-.1 0 0-4 0 336 0 30.9 25.1 56 56 56h336.2c30.8-.2 55.7-25.2 55.7-56V88c.1-30.8-24.8-55.8-55.6-56zM197 371.3c-.2 14.7-12.1 26.6-26.9 26.6H87.4c-14.8.1-26.9-11.8-27-26.6V117.1c0-14.8 12-26.9 26.9-26.9h82.9c14.8 0 26.9 12 26.9 26.9v254.2zm193.1-112c0 14.8-12 26.9-26.9 26.9h-81c-14.8 0-26.9-12-26.9-26.9V117.2c0-14.8 12-26.9 26.8-26.9h81.1c14.8 0 26.9 12 26.9 26.9v142.1z\"],\n    \"tumblr\": [320, 512, [], \"f173\", \"M309.8 480.3c-13.6 14.5-50 31.7-97.4 31.7-120.8 0-147-88.8-147-140.6v-144H17.9c-5.5 0-10-4.5-10-10v-68c0-7.2 4.5-13.6 11.3-16 62-21.8 81.5-76 84.3-117.1.8-11 6.5-16.3 16.1-16.3h70.9c5.5 0 10 4.5 10 10v115.2h83c5.5 0 10 4.4 10 9.9v81.7c0 5.5-4.5 10-10 10h-83.4V360c0 34.2 23.7 53.6 68 35.8 4.8-1.9 9-3.2 12.7-2.2 3.5.9 5.8 3.4 7.4 7.9l22 64.3c1.8 5 3.3 10.6-.4 14.5z\"],\n    \"tumblr-square\": [448, 512, [], \"f174\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-82.3 364.2c-8.5 9.1-31.2 19.8-60.9 19.8-75.5 0-91.9-55.5-91.9-87.9v-90h-29.7c-3.4 0-6.2-2.8-6.2-6.2v-42.5c0-4.5 2.8-8.5 7.1-10 38.8-13.7 50.9-47.5 52.7-73.2.5-6.9 4.1-10.2 10-10.2h44.3c3.4 0 6.2 2.8 6.2 6.2v72h51.9c3.4 0 6.2 2.8 6.2 6.2v51.1c0 3.4-2.8 6.2-6.2 6.2h-52.1V321c0 21.4 14.8 33.5 42.5 22.4 3-1.2 5.6-2 8-1.4 2.2.5 3.6 2.1 4.6 4.9l13.8 40.2c1 3.2 2 6.7-.3 9.1z\"],\n    \"twitch\": [512, 512, [], \"f1e8\", \"M391.17,103.47H352.54v109.7h38.63ZM285,103H246.37V212.75H285ZM120.83,0,24.31,91.42V420.58H140.14V512l96.53-91.42h77.25L487.69,256V0ZM449.07,237.75l-77.22,73.12H294.61l-67.6,64v-64H140.14V36.58H449.07Z\"],\n    \"twitter\": [512, 512, [], \"f099\", \"M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z\"],\n    \"twitter-square\": [448, 512, [], \"f081\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-48.9 158.8c.2 2.8.2 5.7.2 8.5 0 86.7-66 186.6-186.6 186.6-37.2 0-71.7-10.8-100.7-29.4 5.3.6 10.4.8 15.8.8 30.7 0 58.9-10.4 81.4-28-28.8-.6-53-19.5-61.3-45.5 10.1 1.5 19.2 1.5 29.6-1.2-30-6.1-52.5-32.5-52.5-64.4v-.8c8.7 4.9 18.9 7.9 29.6 8.3a65.447 65.447 0 0 1-29.2-54.6c0-12.2 3.2-23.4 8.9-33.1 32.3 39.8 80.8 65.8 135.2 68.6-9.3-44.5 24-80.6 64-80.6 18.9 0 35.9 7.9 47.9 20.7 14.8-2.8 29-8.3 41.6-15.8-4.9 15.2-15.2 28-28.8 36.1 13.2-1.4 26-5.1 37.8-10.2-8.9 13.1-20.1 24.7-32.9 34z\"],\n    \"typo3\": [448, 512, [], \"f42b\", \"M178.7 78.4c0-24.7 5.4-32.4 13.9-39.4-69.5 8.5-149.3 34-176.3 66.4-5.4 7.7-9.3 20.8-9.3 37.1C7 246 113.8 480 191.1 480c36.3 0 97.3-59.5 146.7-139-7 2.3-11.6 2.3-18.5 2.3-57.2 0-140.6-198.5-140.6-264.9zM301.5 32c-30.1 0-41.7 5.4-41.7 36.3 0 66.4 53.8 198.5 101.7 198.5 26.3 0 78.8-99.7 78.8-182.3 0-40.9-67-52.5-138.8-52.5z\"],\n    \"uber\": [448, 512, [], \"f402\", \"M414.1 32H33.9C15.2 32 0 47.2 0 65.9V446c0 18.8 15.2 34 33.9 34H414c18.7 0 33.9-15.2 33.9-33.9V65.9C448 47.2 432.8 32 414.1 32zM237.6 391.1C163 398.6 96.4 344.2 88.9 269.6h94.4V290c0 3.7 3 6.8 6.8 6.8H258c3.7 0 6.8-3 6.8-6.8v-67.9c0-3.7-3-6.8-6.8-6.8h-67.9c-3.7 0-6.8 3-6.8 6.8v20.4H88.9c7-69.4 65.4-122.2 135.1-122.2 69.7 0 128.1 52.8 135.1 122.2 7.5 74.5-46.9 141.1-121.5 148.6z\"],\n    \"ubuntu\": [496, 512, [], \"f7df\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm52.7 93c8.8-15.2 28.3-20.5 43.5-11.7 15.3 8.8 20.5 28.3 11.7 43.6-8.8 15.2-28.3 20.5-43.5 11.7-15.3-8.9-20.5-28.4-11.7-43.6zM87.4 287.9c-17.6 0-31.9-14.3-31.9-31.9 0-17.6 14.3-31.9 31.9-31.9 17.6 0 31.9 14.3 31.9 31.9 0 17.6-14.3 31.9-31.9 31.9zm28.1 3.1c22.3-17.9 22.4-51.9 0-69.9 8.6-32.8 29.1-60.7 56.5-79.1l23.7 39.6c-51.5 36.3-51.5 112.5 0 148.8L172 370c-27.4-18.3-47.8-46.3-56.5-79zm228.7 131.7c-15.3 8.8-34.7 3.6-43.5-11.7-8.8-15.3-3.6-34.8 11.7-43.6 15.2-8.8 34.7-3.6 43.5 11.7 8.8 15.3 3.6 34.8-11.7 43.6zm.3-69.5c-26.7-10.3-56.1 6.6-60.5 35-5.2 1.4-48.9 14.3-96.7-9.4l22.5-40.3c57 26.5 123.4-11.7 128.9-74.4l46.1.7c-2.3 34.5-17.3 65.5-40.3 88.4zm-5.9-105.3c-5.4-62-71.3-101.2-128.9-74.4l-22.5-40.3c47.9-23.7 91.5-10.8 96.7-9.4 4.4 28.3 33.8 45.3 60.5 35 23.1 22.9 38 53.9 40.2 88.5l-46 .6z\"],\n    \"uikit\": [448, 512, [], \"f403\", \"M443.9 128v256L218 512 0 384V169.7l87.6 45.1v117l133.5 75.5 135.8-75.5v-151l-101.1-57.6 87.6-53.1L443.9 128zM308.6 49.1L223.8 0l-88.6 54.8 86 47.3 87.4-53z\"],\n    \"umbraco\": [510, 512, [], \"f8e8\", \"M255.35 8C118.36 7.83 7.14 118.72 7 255.68c-.07 137 111 248.2 248 248.27 136.85 0 247.82-110.7 248-247.67S392.34 8.17 255.35 8zm145 266q-1.14 40.68-14 65t-43.51 35q-30.61 10.7-85.45 10.47h-4.6q-54.78.22-85.44-10.47t-43.52-35q-12.85-24.36-14-65a224.81 224.81 0 0 1 0-30.71 418.37 418.37 0 0 1 3.6-43.88c1.88-13.39 3.57-22.58 5.4-32 1-4.88 1.28-6.42 1.82-8.45a5.09 5.09 0 0 1 4.9-3.89h.69l32 5a5.07 5.07 0 0 1 4.16 5 5 5 0 0 1 0 .77l-1.7 8.78q-2.41 13.25-4.84 33.68a380.62 380.62 0 0 0-2.64 42.15q-.28 40.43 8.13 59.83a43.87 43.87 0 0 0 31.31 25.18A243 243 0 0 0 250 340.6h10.25a242.64 242.64 0 0 0 57.27-5.16 43.86 43.86 0 0 0 31.15-25.23q8.53-19.42 8.13-59.78a388 388 0 0 0-2.6-42.15q-2.48-20.38-4.89-33.68l-1.69-8.78a5 5 0 0 1 0-.77 5 5 0 0 1 4.2-5l32-5h.82a5 5 0 0 1 4.9 3.89c.55 2.05.81 3.57 1.83 8.45 1.82 9.62 3.52 18.78 5.39 32a415.71 415.71 0 0 1 3.61 43.88 228.06 228.06 0 0 1-.04 30.73z\"],\n    \"uncharted\": [448, 512, [], \"e084\", \"M171.73,232.813A5.381,5.381,0,0,0,176.7,229.5,48.081,48.081,0,0,1,191.6,204.244c1.243-.828,1.657-2.484,1.657-4.141a4.22,4.22,0,0,0-2.071-3.312L74.429,128.473,148.958,85a9.941,9.941,0,0,0,4.968-8.281,9.108,9.108,0,0,0-4.968-8.281L126.6,55.6a9.748,9.748,0,0,0-9.523,0l-100.2,57.966a9.943,9.943,0,0,0-4.969,8.281V236.954a9.109,9.109,0,0,0,4.969,8.281L39.235,258.07a8.829,8.829,0,0,0,4.968,1.242,9.4,9.4,0,0,0,6.625-2.484,10.8,10.8,0,0,0,2.9-7.039V164.5L169.66,232.4A4.5,4.5,0,0,0,171.73,232.813ZM323.272,377.73a12.478,12.478,0,0,0-4.969,1.242l-74.528,43.062V287.882c0-2.9-2.9-5.8-6.211-4.555a53.036,53.036,0,0,1-28.984.414,4.86,4.86,0,0,0-6.21,4.555V421.619l-74.529-43.061a8.83,8.83,0,0,0-4.969-1.242,9.631,9.631,0,0,0-9.523,9.523v26.085a9.107,9.107,0,0,0,4.969,8.281l100.2,57.553A8.829,8.829,0,0,0,223.486,480a11.027,11.027,0,0,0,4.969-1.242l100.2-57.553a9.941,9.941,0,0,0,4.968-8.281V386.839C332.8,382.285,328.24,377.73,323.272,377.73ZM286.007,78a23,23,0,1,0-23-23A23,23,0,0,0,286.007,78Zm63.627-10.086a23,23,0,1,0,23,23A23,23,0,0,0,349.634,67.914ZM412.816,151.6a23,23,0,1,0-23-23A23,23,0,0,0,412.816,151.6Zm-63.182-9.2a23,23,0,1,0,23,23A23,23,0,0,0,349.634,142.4Zm-63.627,83.244a23,23,0,1,0-23-23A23,23,0,0,0,286.007,225.648Zm-62.074,36.358a23,23,0,1,0-23-23A23,23,0,0,0,223.933,262.006Zm188.883-82.358a23,23,0,1,0,23,23A23,23,0,0,0,412.816,179.648Zm0,72.272a23,23,0,1,0,23,23A23,23,0,0,0,412.816,251.92Z\"],\n    \"uniregistry\": [384, 512, [], \"f404\", \"M192 480c39.5 0 76.2-11.8 106.8-32.2H85.3C115.8 468.2 152.5 480 192 480zm-89.1-193.1v-12.4H0v12.4c0 2.5 0 5 .1 7.4h103.1c-.2-2.4-.3-4.9-.3-7.4zm20.5 57H8.5c2.6 8.5 5.8 16.8 9.6 24.8h138.3c-12.9-5.7-24.1-14.2-33-24.8zm-17.7-34.7H1.3c.9 7.6 2.2 15 3.9 22.3h109.7c-4-6.9-7.2-14.4-9.2-22.3zm-2.8-69.3H0v17.3h102.9zm0-173.2H0v4.9h102.9zm0-34.7H0v2.5h102.9zm0 69.3H0v7.4h102.9zm0 104H0v14.8h102.9zm0-69.3H0v9.9h102.9zm0 34.6H0V183h102.9zm166.2 160.9h109.7c1.8-7.3 3.1-14.7 3.9-22.3H278.3c-2.1 7.9-5.2 15.4-9.2 22.3zm12-185.7H384V136H281.1zm0 37.2H384v-12.4H281.1zm0-74.3H384v-7.4H281.1zm0-76.7v2.5H384V32zm-203 410.9h227.7c11.8-8.7 22.7-18.6 32.2-29.7H44.9c9.6 11 21.4 21 33.2 29.7zm203-371.3H384v-4.9H281.1zm0 148.5H384v-14.8H281.1zM38.8 405.7h305.3c6.7-8.5 12.6-17.6 17.8-27.2H23c5.2 9.6 9.2 18.7 15.8 27.2zm188.8-37.1H367c3.7-8 5.8-16.2 8.5-24.8h-115c-8.8 10.7-20.1 19.2-32.9 24.8zm53.5-81.7c0 2.5-.1 5-.4 7.4h103.1c.1-2.5.2-4.9.2-7.4v-12.4H281.1zm0-29.7H384v-17.3H281.1z\"],\n    \"unity\": [576, 512, [], \"e049\", \"M498.11,206.4,445.31,14.72,248.2,66.08,219,116.14l-59.2-.43L15.54,256,159.82,396.32l59.17-.43,29.24,50,197.08,51.36,52.8-191.62-30-49.63ZM223.77,124.2,374.55,86.51,288,232.33H114.87Zm0,263.63L114.87,279.71H288l86.55,145.81Zm193,14L330.17,256l86.58-145.84L458.56,256Z\"],\n    \"unsplash\": [448, 512, [], \"e07c\", \"M448,230.17V480H0V230.17H141.13V355.09H306.87V230.17ZM306.87,32H141.13V156.91H306.87Z\"],\n    \"untappd\": [640, 512, [], \"f405\", \"M401.3 49.9c-79.8 160.1-84.6 152.5-87.9 173.2l-5.2 32.8c-1.9 12-6.6 23.5-13.7 33.4L145.6 497.1c-7.6 10.6-20.4 16.2-33.4 14.6-40.3-5-77.8-32.2-95.3-68.5-5.7-11.8-4.5-25.8 3.1-36.4l148.9-207.9c7.1-9.9 16.4-18 27.2-23.7l29.3-15.5c18.5-9.8 9.7-11.9 135.6-138.9 1-4.8 1-7.3 3.6-8 3-.7 6.6-1 6.3-4.6l-.4-4.6c-.2-1.9 1.3-3.6 3.2-3.6 4.5-.1 13.2 1.2 25.6 10 12.3 8.9 16.4 16.8 17.7 21.1.6 1.8-.6 3.7-2.4 4.2l-4.5 1.1c-3.4.9-2.5 4.4-2.3 7.4.1 2.8-2.3 3.6-6.5 6.1zM230.1 36.4c3.4.9 2.5 4.4 2.3 7.4-.2 2.7 2.1 3.5 6.4 6 7.9 15.9 15.3 30.5 22.2 44 .7 1.3 2.3 1.5 3.3.5 11.2-12 24.6-26.2 40.5-42.6 1.3-1.4 1.4-3.5.1-4.9-8-8.2-16.5-16.9-25.6-26.1-1-4.7-1-7.3-3.6-8-3-.8-6.6-1-6.3-4.6.3-3.3 1.4-8.1-2.8-8.2-4.5-.1-13.2 1.1-25.6 10-12.3 8.9-16.4 16.8-17.7 21.1-1.4 4.2 3.6 4.6 6.8 5.4zM620 406.7L471.2 198.8c-13.2-18.5-26.6-23.4-56.4-39.1-11.2-5.9-14.2-10.9-30.5-28.9-1-1.1-2.9-.9-3.6.5-46.3 88.8-47.1 82.8-49 94.8-1.7 10.7-1.3 20 .3 29.8 1.9 12 6.6 23.5 13.7 33.4l148.9 207.9c7.6 10.6 20.2 16.2 33.1 14.7 40.3-4.9 78-32 95.7-68.6 5.4-11.9 4.3-25.9-3.4-36.6z\"],\n    \"ups\": [384, 512, [], \"f7e0\", \"M103.2 303c-5.2 3.6-32.6 13.1-32.6-19V180H37.9v102.6c0 74.9 80.2 51.1 97.9 39V180h-32.6zM4 74.82v220.9c0 103.7 74.9 135.2 187.7 184.1 112.4-48.9 187.7-80.2 187.7-184.1V74.82c-116.3-61.6-281.8-49.6-375.4 0zm358.1 220.9c0 86.6-53.2 113.6-170.4 165.3-117.5-51.8-170.5-78.7-170.5-165.3v-126.4c102.3-93.8 231.6-100 340.9-89.8zm-209.6-107.4v212.8h32.7v-68.7c24.4 7.3 71.7-2.6 71.7-78.5 0-97.4-80.7-80.92-104.4-65.6zm32.7 117.3v-100.3c8.4-4.2 38.4-12.7 38.4 49.3 0 67.9-36.4 51.8-38.4 51zm79.1-86.4c.1 47.3 51.6 42.5 52.2 70.4.6 23.5-30.4 23-50.8 4.9v30.1c36.2 21.5 81.9 8.1 83.2-33.5 1.7-51.5-54.1-46.6-53.4-73.2.6-20.3 30.6-20.5 48.5-2.2v-28.4c-28.5-22-79.9-9.2-79.7 31.9z\"],\n    \"usb\": [640, 512, [], \"f287\", \"M641.5 256c0 3.1-1.7 6.1-4.5 7.5L547.9 317c-1.4.8-2.8 1.4-4.5 1.4-1.4 0-3.1-.3-4.5-1.1-2.8-1.7-4.5-4.5-4.5-7.8v-35.6H295.7c25.3 39.6 40.5 106.9 69.6 106.9H392V354c0-5 3.9-8.9 8.9-8.9H490c5 0 8.9 3.9 8.9 8.9v89.1c0 5-3.9 8.9-8.9 8.9h-89.1c-5 0-8.9-3.9-8.9-8.9v-26.7h-26.7c-75.4 0-81.1-142.5-124.7-142.5H140.3c-8.1 30.6-35.9 53.5-69 53.5C32 327.3 0 295.3 0 256s32-71.3 71.3-71.3c33.1 0 61 22.8 69 53.5 39.1 0 43.9 9.5 74.6-60.4C255 88.7 273 95.7 323.8 95.7c7.5-20.9 27-35.6 50.4-35.6 29.5 0 53.5 23.9 53.5 53.5s-23.9 53.5-53.5 53.5c-23.4 0-42.9-14.8-50.4-35.6H294c-29.1 0-44.3 67.4-69.6 106.9h310.1v-35.6c0-3.3 1.7-6.1 4.5-7.8 2.8-1.7 6.4-1.4 8.9.3l89.1 53.5c2.8 1.1 4.5 4.1 4.5 7.2z\"],\n    \"usps\": [576, 512, [], \"f7e1\", \"M460.3 241.7c25.8-41.3 15.2-48.8-11.7-48.8h-27c-.1 0-1.5-1.4-10.9 8-11.2 5.6-37.9 6.3-37.9 8.7 0 4.5 70.3-3.1 88.1 0 9.5 1.5-1.5 20.4-4.4 32-.5 4.5 2.4 2.3 3.8.1zm-112.1 22.6c64-21.3 97.3-23.9 102-26.2 4.4-2.9-4.4-6.6-26.2-5.8-51.7 2.2-137.6 37.1-172.6 53.9l-30.7-93.3h196.6c-2.7-28.2-152.9-22.6-337.9-22.6L27 415.8c196.4-97.3 258.9-130.3 321.2-151.5zM94.7 96c253.3 53.7 330 65.7 332.1 85.2 36.4 0 45.9 0 52.4 6.6 21.1 19.7-14.6 67.7-14.6 67.7-4.4 2.9-406.4 160.2-406.4 160.2h423.1L549 96z\"],\n    \"ussunnah\": [512, 512, [], \"f407\", \"M156.8 285.1l5.7 14.4h-8.2c-1.3-3.2-3.1-7.7-3.8-9.5-2.5-6.3-1.1-8.4 0-10 1.9-2.7 3.2-4.4 3.6-5.2 0 2.2.8 5.7 2.7 10.3zm297.3 18.8c-2.1 13.8-5.7 27.1-10.5 39.7l43 23.4-44.8-18.8c-5.3 13.2-12 25.6-19.9 37.2l34.2 30.2-36.8-26.4c-8.4 11.8-18 22.6-28.7 32.3l24.9 34.7-28.1-31.8c-11 9.6-23.1 18-36.1 25.1l15.7 37.2-19.3-35.3c-13.1 6.8-27 12.1-41.6 15.9l6.7 38.4-10.5-37.4c-14.3 3.4-29.2 5.3-44.5 5.4L256 512l-1.9-38.4c-15.3-.1-30.2-2-44.5-5.3L199 505.6l6.7-38.2c-14.6-3.7-28.6-9.1-41.7-15.8l-19.2 35.1 15.6-37c-13-7-25.2-15.4-36.2-25.1l-27.9 31.6 24.7-34.4c-10.7-9.7-20.4-20.5-28.8-32.3l-36.5 26.2 33.9-29.9c-7.9-11.6-14.6-24.1-20-37.3l-44.4 18.7L67.8 344c-4.8-12.7-8.4-26.1-10.5-39.9l-51 9 50.3-14.2c-1.1-8.5-1.7-17.1-1.7-25.9 0-4.7.2-9.4.5-14.1L0 256l56-2.8c1.3-13.1 3.8-25.8 7.5-38.1L6.4 199l58.9 10.4c4-12 9.1-23.5 15.2-34.4l-55.1-30 58.3 24.6C90 159 97.2 149.2 105.3 140L55.8 96.4l53.9 38.7c8.1-8.6 17-16.5 26.6-23.6l-40-55.6 45.6 51.6c9.5-6.6 19.7-12.3 30.3-17.2l-27.3-64.9 33.8 62.1c10.5-4.4 21.4-7.9 32.7-10.4L199 6.4l19.5 69.2c11-2.1 22.3-3.2 33.8-3.4L256 0l3.6 72.2c11.5.2 22.8 1.4 33.8 3.5L313 6.4l-12.4 70.7c11.3 2.6 22.2 6.1 32.6 10.5l33.9-62.2-27.4 65.1c10.6 4.9 20.7 10.7 30.2 17.2l45.8-51.8-40.1 55.9c9.5 7.1 18.4 15 26.5 23.6l54.2-38.9-49.7 43.9c8 9.1 15.2 18.9 21.5 29.4l58.7-24.7-55.5 30.2c6.1 10.9 11.1 22.3 15.1 34.3l59.3-10.4-57.5 16.2c3.7 12.2 6.2 24.9 7.5 37.9L512 256l-56 2.8c.3 4.6.5 9.3.5 14.1 0 8.7-.6 17.3-1.6 25.8l50.7 14.3-51.5-9.1zm-21.8-31c0-97.5-79-176.5-176.5-176.5s-176.5 79-176.5 176.5 79 176.5 176.5 176.5 176.5-79 176.5-176.5zm-24 0c0 84.3-68.3 152.6-152.6 152.6s-152.6-68.3-152.6-152.6 68.3-152.6 152.6-152.6 152.6 68.3 152.6 152.6zM195 241c0 2.1 1.3 3.8 3.6 5.1 3.3 1.9 6.2 4.6 8.2 8.2 2.8-5.7 4.3-9.5 4.3-11.2 0-2.2-1.1-4.4-3.2-7-2.1-2.5-3.2-5.2-3.3-7.7-6.5 6.8-9.6 10.9-9.6 12.6zm-40.7-19c0 2.1 1.3 3.8 3.6 5.1 3.5 1.9 6.2 4.6 8.2 8.2 2.8-5.7 4.3-9.5 4.3-11.2 0-2.2-1.1-4.4-3.2-7-2.1-2.5-3.2-5.2-3.3-7.7-6.5 6.8-9.6 10.9-9.6 12.6zm-19 0c0 2.1 1.3 3.8 3.6 5.1 3.3 1.9 6.2 4.6 8.2 8.2 2.8-5.7 4.3-9.5 4.3-11.2 0-2.2-1.1-4.4-3.2-7-2.1-2.5-3.2-5.2-3.3-7.7-6.4 6.8-9.6 10.9-9.6 12.6zm204.9 87.9c-8.4-3-8.7-6.8-8.7-15.6V182c-8.2 12.5-14.2 18.6-18 18.6 6.3 14.4 9.5 23.9 9.5 28.3v64.3c0 2.2-2.2 6.5-4.7 6.5h-18c-2.8-7.5-10.2-26.9-15.3-40.3-2 2.5-7.2 9.2-10.7 13.7 2.4 1.6 4.1 3.6 5.2 6.3 2.6 6.7 6.4 16.5 7.9 20.2h-9.2c-3.9-10.4-9.6-25.4-11.8-31.1-2 2.5-7.2 9.2-10.7 13.7 2.4 1.6 4.1 3.6 5.2 6.3.8 2 2.8 7.3 4.3 10.9H256c-1.5-4.1-5.6-14.6-8.4-22-2 2.5-7.2 9.2-10.7 13.7 2.5 1.6 4.3 3.6 5.2 6.3.2.6.5 1.4.6 1.7H225c-4.6-13.9-11.4-27.7-11.4-34.1 0-2.2.3-5.1 1.1-8.2-8.8 10.8-14 15.9-14 25 0 7.5 10.4 28.3 10.4 33.3 0 1.7-.5 3.3-1.4 4.9-9.6-12.7-15.5-20.7-18.8-20.7h-12l-11.2-28c-3.8-9.6-5.7-16-5.7-18.8 0-3.8.5-7.7 1.7-12.2-1 1.3-3.7 4.7-5.5 7.1-.8-2.1-3.1-7.7-4.6-11.5-2.1 2.5-7.5 9.1-11.2 13.6.9 2.3 3.3 8.1 4.9 12.2-2.5 3.3-9.1 11.8-13.6 17.7-4 5.3-5.8 13.3-2.7 21.8 2.5 6.7 2 7.9-1.7 14.1H191c5.5 0 14.3 14 15.5 22 13.2-16 15.4-19.6 16.8-21.6h107c3.9 0 7.2-1.9 9.9-5.8zm20.1-26.6V181.7c-9 12.5-15.9 18.6-20.7 18.6 7.1 14.4 10.7 23.9 10.7 28.3v66.3c0 17.5 8.6 20.4 24 20.4 8.1 0 12.5-.8 13.7-2.7-4.3-1.6-7.6-2.5-9.9-3.3-8.1-3.2-17.8-7.4-17.8-26z\"],\n    \"vaadin\": [448, 512, [], \"f408\", \"M224.5 140.7c1.5-17.6 4.9-52.7 49.8-52.7h98.6c20.7 0 32.1-7.8 32.1-21.6V54.1c0-12.2 9.3-22.1 21.5-22.1S448 41.9 448 54.1v36.5c0 42.9-21.5 62-66.8 62H280.7c-30.1 0-33 14.7-33 27.1 0 1.3-.1 2.5-.2 3.7-.7 12.3-10.9 22.2-23.4 22.2s-22.7-9.8-23.4-22.2c-.1-1.2-.2-2.4-.2-3.7 0-12.3-3-27.1-33-27.1H66.8c-45.3 0-66.8-19.1-66.8-62V54.1C0 41.9 9.4 32 21.6 32s21.5 9.9 21.5 22.1v12.3C43.1 80.2 54.5 88 75.2 88h98.6c44.8 0 48.3 35.1 49.8 52.7h.9zM224 456c11.5 0 21.4-7 25.7-16.3 1.1-1.8 97.1-169.6 98.2-171.4 11.9-19.6-3.2-44.3-27.2-44.3-13.9 0-23.3 6.4-29.8 20.3L224 362l-66.9-117.7c-6.4-13.9-15.9-20.3-29.8-20.3-24 0-39.1 24.6-27.2 44.3 1.1 1.9 97.1 169.6 98.2 171.4 4.3 9.3 14.2 16.3 25.7 16.3z\"],\n    \"viacoin\": [384, 512, [], \"f237\", \"M384 32h-64l-80.7 192h-94.5L64 32H0l48 112H0v48h68.5l13.8 32H0v48h102.8L192 480l89.2-208H384v-48h-82.3l13.8-32H384v-48h-48l48-112zM192 336l-27-64h54l-27 64z\"],\n    \"viadeo\": [448, 512, [], \"f2a9\", \"M276.2 150.5v.7C258.3 98.6 233.6 47.8 205.4 0c43.3 29.2 67 100 70.8 150.5zm32.7 121.7c7.6 18.2 11 37.5 11 57 0 77.7-57.8 141-137.8 139.4l3.8-.3c74.2-46.7 109.3-118.6 109.3-205.1 0-38.1-6.5-75.9-18.9-112 1 11.7 1 23.7 1 35.4 0 91.8-18.1 241.6-116.6 280C95 455.2 49.4 398 49.4 329.2c0-75.6 57.4-142.3 135.4-142.3 16.8 0 33.7 3.1 49.1 9.6 1.7-15.1 6.5-29.9 13.4-43.3-19.9-7.2-41.2-10.7-62.5-10.7-161.5 0-238.7 195.9-129.9 313.7 67.9 74.6 192 73.9 259.8 0 56.6-61.3 60.9-142.4 36.4-201-12.7 8-27.1 13.9-42.2 17zM418.1 11.7c-31 66.5-81.3 47.2-115.8 80.1-12.4 12-20.6 34-20.6 50.5 0 14.1 4.5 27.1 12 38.8 47.4-11 98.3-46 118.2-90.7-.7 5.5-4.8 14.4-7.2 19.2-20.3 35.7-64.6 65.6-99.7 84.9 14.8 14.4 33.7 25.8 55 25.8 79 0 110.1-134.6 58.1-208.6z\"],\n    \"viadeo-square\": [448, 512, [], \"f2aa\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM280.7 381.2c-42.4 46.2-120 46.6-162.4 0-68-73.6-19.8-196.1 81.2-196.1 13.3 0 26.6 2.1 39.1 6.7-4.3 8.4-7.3 17.6-8.4 27.1-9.7-4.1-20.2-6-30.7-6-48.8 0-84.6 41.7-84.6 88.9 0 43 28.5 78.7 69.5 85.9 61.5-24 72.9-117.6 72.9-175 0-7.3 0-14.8-.6-22.1-11.2-32.9-26.6-64.6-44.2-94.5 27.1 18.3 41.9 62.5 44.2 94.1v.4c7.7 22.5 11.8 46.2 11.8 70 0 54.1-21.9 99-68.3 128.2l-2.4.2c50 1 86.2-38.6 86.2-87.2 0-12.2-2.1-24.3-6.9-35.7 9.5-1.9 18.5-5.6 26.4-10.5 15.3 36.6 12.6 87.3-22.8 125.6zM309 233.7c-13.3 0-25.1-7.1-34.4-16.1 21.9-12 49.6-30.7 62.3-53 1.5-3 4.1-8.6 4.5-12-12.5 27.9-44.2 49.8-73.9 56.7-4.7-7.3-7.5-15.5-7.5-24.3 0-10.3 5.2-24.1 12.9-31.6 21.6-20.5 53-8.5 72.4-50 32.5 46.2 13.1 130.3-36.3 130.3z\"],\n    \"viber\": [512, 512, [], \"f409\", \"M444 49.9C431.3 38.2 379.9.9 265.3.4c0 0-135.1-8.1-200.9 52.3C27.8 89.3 14.9 143 13.5 209.5c-1.4 66.5-3.1 191.1 117 224.9h.1l-.1 51.6s-.8 20.9 13 25.1c16.6 5.2 26.4-10.7 42.3-27.8 8.7-9.4 20.7-23.2 29.8-33.7 82.2 6.9 145.3-8.9 152.5-11.2 16.6-5.4 110.5-17.4 125.7-142 15.8-128.6-7.6-209.8-49.8-246.5zM457.9 287c-12.9 104-89 110.6-103 115.1-6 1.9-61.5 15.7-131.2 11.2 0 0-52 62.7-68.2 79-5.3 5.3-11.1 4.8-11-5.7 0-6.9.4-85.7.4-85.7-.1 0-.1 0 0 0-101.8-28.2-95.8-134.3-94.7-189.8 1.1-55.5 11.6-101 42.6-131.6 55.7-50.5 170.4-43 170.4-43 96.9.4 143.3 29.6 154.1 39.4 35.7 30.6 53.9 103.8 40.6 211.1zm-139-80.8c.4 8.6-12.5 9.2-12.9.6-1.1-22-11.4-32.7-32.6-33.9-8.6-.5-7.8-13.4.7-12.9 27.9 1.5 43.4 17.5 44.8 46.2zm20.3 11.3c1-42.4-25.5-75.6-75.8-79.3-8.5-.6-7.6-13.5.9-12.9 58 4.2 88.9 44.1 87.8 92.5-.1 8.6-13.1 8.2-12.9-.3zm47 13.4c.1 8.6-12.9 8.7-12.9.1-.6-81.5-54.9-125.9-120.8-126.4-8.5-.1-8.5-12.9 0-12.9 73.7.5 133 51.4 133.7 139.2zM374.9 329v.2c-10.8 19-31 40-51.8 33.3l-.2-.3c-21.1-5.9-70.8-31.5-102.2-56.5-16.2-12.8-31-27.9-42.4-42.4-10.3-12.9-20.7-28.2-30.8-46.6-21.3-38.5-26-55.7-26-55.7-6.7-20.8 14.2-41 33.3-51.8h.2c9.2-4.8 18-3.2 23.9 3.9 0 0 12.4 14.8 17.7 22.1 5 6.8 11.7 17.7 15.2 23.8 6.1 10.9 2.3 22-3.7 26.6l-12 9.6c-6.1 4.9-5.3 14-5.3 14s17.8 67.3 84.3 84.3c0 0 9.1.8 14-5.3l9.6-12c4.6-6 15.7-9.8 26.6-3.7 14.7 8.3 33.4 21.2 45.8 32.9 7 5.7 8.6 14.4 3.8 23.6z\"],\n    \"vimeo\": [448, 512, [], \"f40a\", \"M403.2 32H44.8C20.1 32 0 52.1 0 76.8v358.4C0 459.9 20.1 480 44.8 480h358.4c24.7 0 44.8-20.1 44.8-44.8V76.8c0-24.7-20.1-44.8-44.8-44.8zM377 180.8c-1.4 31.5-23.4 74.7-66 129.4-44 57.2-81.3 85.8-111.7 85.8-18.9 0-34.8-17.4-47.9-52.3-25.5-93.3-36.4-148-57.4-148-2.4 0-10.9 5.1-25.4 15.2l-15.2-19.6c37.3-32.8 72.9-69.2 95.2-71.2 25.2-2.4 40.7 14.8 46.5 51.7 20.7 131.2 29.9 151 67.6 91.6 13.5-21.4 20.8-37.7 21.8-48.9 3.5-33.2-25.9-30.9-45.8-22.4 15.9-52.1 46.3-77.4 91.2-76 33.3.9 49 22.5 47.1 64.7z\"],\n    \"vimeo-square\": [448, 512, [], \"f194\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-16.2 149.6c-1.4 31.1-23.2 73.8-65.3 127.9-43.5 56.5-80.3 84.8-110.4 84.8-18.7 0-34.4-17.2-47.3-51.6-25.2-92.3-35.9-146.4-56.7-146.4-2.4 0-10.8 5-25.1 15.1L64 192c36.9-32.4 72.1-68.4 94.1-70.4 24.9-2.4 40.2 14.6 46 51.1 20.5 129.6 29.6 149.2 66.8 90.5 13.4-21.2 20.6-37.2 21.5-48.3 3.4-32.8-25.6-30.6-45.2-22.2 15.7-51.5 45.8-76.5 90.1-75.1 32.9 1 48.4 22.4 46.5 64z\"],\n    \"vimeo-v\": [448, 512, [], \"f27d\", \"M447.8 153.6c-2 43.6-32.4 103.3-91.4 179.1-60.9 79.2-112.4 118.8-154.6 118.8-26.1 0-48.2-24.1-66.3-72.3C100.3 250 85.3 174.3 56.2 174.3c-3.4 0-15.1 7.1-35.2 21.1L0 168.2c51.6-45.3 100.9-95.7 131.8-98.5 34.9-3.4 56.3 20.5 64.4 71.5 28.7 181.5 41.4 208.9 93.6 126.7 18.7-29.6 28.8-52.1 30.2-67.6 4.8-45.9-35.8-42.8-63.3-31 22-72.1 64.1-107.1 126.2-105.1 45.8 1.2 67.5 31.1 64.9 89.4z\"],\n    \"vine\": [384, 512, [], \"f1ca\", \"M384 254.7v52.1c-18.4 4.2-36.9 6.1-52.1 6.1-36.9 77.4-103 143.8-125.1 156.2-14 7.9-27.1 8.4-42.7-.8C137 452 34.2 367.7 0 102.7h74.5C93.2 261.8 139 343.4 189.3 404.5c27.9-27.9 54.8-65.1 75.6-106.9-49.8-25.3-80.1-80.9-80.1-145.6 0-65.6 37.7-115.1 102.2-115.1 114.9 0 106.2 127.9 81.6 181.5 0 0-46.4 9.2-63.5-20.5 3.4-11.3 8.2-30.8 8.2-48.5 0-31.3-11.3-46.6-28.4-46.6-18.2 0-30.8 17.1-30.8 50 .1 79.2 59.4 118.7 129.9 101.9z\"],\n    \"vk\": [576, 512, [], \"f189\", \"M545 117.7c3.7-12.5 0-21.7-17.8-21.7h-58.9c-15 0-21.9 7.9-25.6 16.7 0 0-30 73.1-72.4 120.5-13.7 13.7-20 18.1-27.5 18.1-3.7 0-9.4-4.4-9.4-16.9V117.7c0-15-4.2-21.7-16.6-21.7h-92.6c-9.4 0-15 7-15 13.5 0 14.2 21.2 17.5 23.4 57.5v86.8c0 19-3.4 22.5-10.9 22.5-20 0-68.6-73.4-97.4-157.4-5.8-16.3-11.5-22.9-26.6-22.9H38.8c-16.8 0-20.2 7.9-20.2 16.7 0 15.6 20 93.1 93.1 195.5C160.4 378.1 229 416 291.4 416c37.5 0 42.1-8.4 42.1-22.9 0-66.8-3.4-73.1 15.4-73.1 8.7 0 23.7 4.4 58.7 38.1 40 40 46.6 57.9 69 57.9h58.9c16.8 0 25.3-8.4 20.4-25-11.2-34.9-86.9-106.7-90.3-111.5-8.7-11.2-6.2-16.2 0-26.2.1-.1 72-101.3 79.4-135.6z\"],\n    \"vnv\": [640, 512, [], \"f40b\", \"M104.9 352c-34.1 0-46.4-30.4-46.4-30.4L2.6 210.1S-7.8 192 13 192h32.8c10.4 0 13.2 8.7 18.8 18.1l36.7 74.5s5.2 13.1 21.1 13.1 21.1-13.1 21.1-13.1l36.7-74.5c5.6-9.5 8.4-18.1 18.8-18.1h32.8c20.8 0 10.4 18.1 10.4 18.1l-55.8 111.5S174.2 352 140 352h-35.1zm395 0c-34.1 0-46.4-30.4-46.4-30.4l-55.9-111.5S387.2 192 408 192h32.8c10.4 0 13.2 8.7 18.8 18.1l36.7 74.5s5.2 13.1 21.1 13.1 21.1-13.1 21.1-13.1l36.8-74.5c5.6-9.5 8.4-18.1 18.8-18.1H627c20.8 0 10.4 18.1 10.4 18.1l-55.9 111.5S569.3 352 535.1 352h-35.2zM337.6 192c34.1 0 46.4 30.4 46.4 30.4l55.9 111.5s10.4 18.1-10.4 18.1h-32.8c-10.4 0-13.2-8.7-18.8-18.1l-36.7-74.5s-5.2-13.1-21.1-13.1c-15.9 0-21.1 13.1-21.1 13.1l-36.7 74.5c-5.6 9.4-8.4 18.1-18.8 18.1h-32.9c-20.8 0-10.4-18.1-10.4-18.1l55.9-111.5s12.2-30.4 46.4-30.4h35.1z\"],\n    \"vuejs\": [448, 512, [], \"f41f\", \"M356.9 64.3H280l-56 88.6-48-88.6H0L224 448 448 64.3h-91.1zm-301.2 32h53.8L224 294.5 338.4 96.3h53.8L224 384.5 55.7 96.3z\"],\n    \"watchman-monitoring\": [512, 512, [], \"e087\", \"M256,16C123.452,16,16,123.452,16,256S123.452,496,256,496,496,388.548,496,256,388.548,16,256,16ZM121.69,429.122C70.056,388.972,36.741,326.322,36.741,256a218.519,218.519,0,0,1,9.587-64.122l102.9-17.895-.121,10.967-13.943,2.013s-.144,12.5-.144,19.549a12.778,12.778,0,0,0,4.887,10.349l9.468,7.4Zm105.692-283.27,8.48-7.618s6.934-5.38-.143-9.344c-7.188-4.024-39.53-34.5-39.53-34.5-5.348-5.477-8.257-7.347-15.46,0,0,0-32.342,30.474-39.529,34.5-7.078,3.964-.144,9.344-.144,9.344l8.481,7.618-.048,4.369L75.982,131.045c39.644-56.938,105.532-94.3,180.018-94.3A218.754,218.754,0,0,1,420.934,111.77l-193.512,37.7Zm34.063,329.269-33.9-250.857,9.467-7.4a12.778,12.778,0,0,0,4.888-10.349c0-7.044-.144-19.549-.144-19.549l-13.943-2.013-.116-10.474,241.711,31.391A218.872,218.872,0,0,1,475.259,256C475.259,375.074,379.831,472.212,261.445,475.121Z\"],\n    \"waze\": [512, 512, [], \"f83f\", \"M502.17 201.67C516.69 287.53 471.23 369.59 389 409.8c13 34.1-12.4 70.2-48.32 70.2a51.68 51.68 0 0 1-51.57-49c-6.44.19-64.2 0-76.33-.64A51.69 51.69 0 0 1 159 479.92c-33.86-1.36-57.95-34.84-47-67.92-37.21-13.11-72.54-34.87-99.62-70.8-13-17.28-.48-41.8 20.84-41.8 46.31 0 32.22-54.17 43.15-110.26C94.8 95.2 193.12 32 288.09 32c102.48 0 197.15 70.67 214.08 169.67zM373.51 388.28c42-19.18 81.33-56.71 96.29-102.14 40.48-123.09-64.15-228-181.71-228-83.45 0-170.32 55.42-186.07 136-9.53 48.91 5 131.35-68.75 131.35C58.21 358.6 91.6 378.11 127 389.54c24.66-21.8 63.87-15.47 79.83 14.34 14.22 1 79.19 1.18 87.9.82a51.69 51.69 0 0 1 78.78-16.42zM205.12 187.13c0-34.74 50.84-34.75 50.84 0s-50.84 34.74-50.84 0zm116.57 0c0-34.74 50.86-34.75 50.86 0s-50.86 34.75-50.86 0zm-122.61 70.69c-3.44-16.94 22.18-22.18 25.62-5.21l.06.28c4.14 21.42 29.85 44 64.12 43.07 35.68-.94 59.25-22.21 64.11-42.77 4.46-16.05 28.6-10.36 25.47 6-5.23 22.18-31.21 62-91.46 62.9-42.55 0-80.88-27.84-87.9-64.25z\"],\n    \"weebly\": [512, 512, [], \"f5cc\", \"M425.09 65.83c-39.88 0-73.28 25.73-83.66 64.33-18.16-58.06-65.5-64.33-84.95-64.33-19.78 0-66.8 6.28-85.28 64.33-10.38-38.6-43.45-64.33-83.66-64.33C38.59 65.83 0 99.72 0 143.03c0 28.96 4.18 33.27 77.17 233.48 22.37 60.57 67.77 69.35 92.74 69.35 39.23 0 70.04-19.46 85.93-53.98 15.89 34.83 46.69 54.29 85.93 54.29 24.97 0 70.36-9.1 92.74-69.67 76.55-208.65 77.5-205.58 77.5-227.2.63-48.32-36.01-83.47-86.92-83.47zm26.34 114.81l-65.57 176.44c-7.92 21.49-21.22 37.22-46.24 37.22-23.44 0-37.38-12.41-44.03-33.9l-39.28-117.42h-.95L216.08 360.4c-6.96 21.5-20.9 33.6-44.02 33.6-25.02 0-38.33-15.74-46.24-37.22L60.88 181.55c-5.38-14.83-7.92-23.91-7.92-34.5 0-16.34 15.84-29.36 38.33-29.36 18.69 0 31.99 11.8 36.11 29.05l44.03 139.82h.95l44.66-136.79c6.02-19.67 16.47-32.08 38.96-32.08s32.94 12.11 38.96 32.08l44.66 136.79h.95l44.03-139.82c4.12-17.25 17.42-29.05 36.11-29.05 22.17 0 38.33 13.32 38.33 35.71-.32 7.87-4.12 16.04-7.61 27.24z\"],\n    \"weibo\": [512, 512, [], \"f18a\", \"M407 177.6c7.6-24-13.4-46.8-37.4-41.7-22 4.8-28.8-28.1-7.1-32.8 50.1-10.9 92.3 37.1 76.5 84.8-6.8 21.2-38.8 10.8-32-10.3zM214.8 446.7C108.5 446.7 0 395.3 0 310.4c0-44.3 28-95.4 76.3-143.7C176 67 279.5 65.8 249.9 161c-4 13.1 12.3 5.7 12.3 6 79.5-33.6 140.5-16.8 114 51.4-3.7 9.4 1.1 10.9 8.3 13.1 135.7 42.3 34.8 215.2-169.7 215.2zm143.7-146.3c-5.4-55.7-78.5-94-163.4-85.7-84.8 8.6-148.8 60.3-143.4 116s78.5 94 163.4 85.7c84.8-8.6 148.8-60.3 143.4-116zM347.9 35.1c-25.9 5.6-16.8 43.7 8.3 38.3 72.3-15.2 134.8 52.8 111.7 124-7.4 24.2 29.1 37 37.4 12 31.9-99.8-55.1-195.9-157.4-174.3zm-78.5 311c-17.1 38.8-66.8 60-109.1 46.3-40.8-13.1-58-53.4-40.3-89.7 17.7-35.4 63.1-55.4 103.4-45.1 42 10.8 63.1 50.2 46 88.5zm-86.3-30c-12.9-5.4-30 .3-38 12.9-8.3 12.9-4.3 28 8.6 34 13.1 6 30.8.3 39.1-12.9 8-13.1 3.7-28.3-9.7-34zm32.6-13.4c-5.1-1.7-11.4.6-14.3 5.4-2.9 5.1-1.4 10.6 3.7 12.9 5.1 2 11.7-.3 14.6-5.4 2.8-5.2 1.1-10.9-4-12.9z\"],\n    \"weixin\": [576, 512, [], \"f1d7\", \"M385.2 167.6c6.4 0 12.6.3 18.8 1.1C387.4 90.3 303.3 32 207.7 32 100.5 32 13 104.8 13 197.4c0 53.4 29.3 97.5 77.9 131.6l-19.3 58.6 68-34.1c24.4 4.8 43.8 9.7 68.2 9.7 6.2 0 12.1-.3 18.3-.8-4-12.9-6.2-26.6-6.2-40.8-.1-84.9 72.9-154 165.3-154zm-104.5-52.9c14.5 0 24.2 9.7 24.2 24.4 0 14.5-9.7 24.2-24.2 24.2-14.8 0-29.3-9.7-29.3-24.2.1-14.7 14.6-24.4 29.3-24.4zm-136.4 48.6c-14.5 0-29.3-9.7-29.3-24.2 0-14.8 14.8-24.4 29.3-24.4 14.8 0 24.4 9.7 24.4 24.4 0 14.6-9.6 24.2-24.4 24.2zM563 319.4c0-77.9-77.9-141.3-165.4-141.3-92.7 0-165.4 63.4-165.4 141.3S305 460.7 397.6 460.7c19.3 0 38.9-5.1 58.6-9.9l53.4 29.3-14.8-48.6C534 402.1 563 363.2 563 319.4zm-219.1-24.5c-9.7 0-19.3-9.7-19.3-19.6 0-9.7 9.7-19.3 19.3-19.3 14.8 0 24.4 9.7 24.4 19.3 0 10-9.7 19.6-24.4 19.6zm107.1 0c-9.7 0-19.3-9.7-19.3-19.6 0-9.7 9.7-19.3 19.3-19.3 14.5 0 24.4 9.7 24.4 19.3.1 10-9.9 19.6-24.4 19.6z\"],\n    \"whatsapp\": [448, 512, [], \"f232\", \"M380.9 97.1C339 55.1 283.2 32 223.9 32c-122.4 0-222 99.6-222 222 0 39.1 10.2 77.3 29.6 111L0 480l117.7-30.9c32.4 17.7 68.9 27 106.1 27h.1c122.3 0 224.1-99.6 224.1-222 0-59.3-25.2-115-67.1-157zm-157 341.6c-33.2 0-65.7-8.9-94-25.7l-6.7-4-69.8 18.3L72 359.2l-4.4-7c-18.5-29.4-28.2-63.3-28.2-98.2 0-101.7 82.8-184.5 184.6-184.5 49.3 0 95.6 19.2 130.4 54.1 34.8 34.9 56.2 81.2 56.1 130.5 0 101.8-84.9 184.6-186.6 184.6zm101.2-138.2c-5.5-2.8-32.8-16.2-37.9-18-5.1-1.9-8.8-2.8-12.5 2.8-3.7 5.6-14.3 18-17.6 21.8-3.2 3.7-6.5 4.2-12 1.4-32.6-16.3-54-29.1-75.5-66-5.7-9.8 5.7-9.1 16.3-30.3 1.8-3.7.9-6.9-.5-9.7-1.4-2.8-12.5-30.1-17.1-41.2-4.5-10.8-9.1-9.3-12.5-9.5-3.2-.2-6.9-.2-10.6-.2-3.7 0-9.7 1.4-14.8 6.9-5.1 5.6-19.4 19-19.4 46.3 0 27.3 19.9 53.7 22.6 57.4 2.8 3.7 39.1 59.7 94.8 83.8 35.2 15.2 49 16.5 66.6 13.9 10.7-1.6 32.8-13.4 37.4-26.4 4.6-13 4.6-24.1 3.2-26.4-1.3-2.5-5-3.9-10.5-6.6z\"],\n    \"whatsapp-square\": [448, 512, [], \"f40c\", \"M224 122.8c-72.7 0-131.8 59.1-131.9 131.8 0 24.9 7 49.2 20.2 70.1l3.1 5-13.3 48.6 49.9-13.1 4.8 2.9c20.2 12 43.4 18.4 67.1 18.4h.1c72.6 0 133.3-59.1 133.3-131.8 0-35.2-15.2-68.3-40.1-93.2-25-25-58-38.7-93.2-38.7zm77.5 188.4c-3.3 9.3-19.1 17.7-26.7 18.8-12.6 1.9-22.4.9-47.5-9.9-39.7-17.2-65.7-57.2-67.7-59.8-2-2.6-16.2-21.5-16.2-41s10.2-29.1 13.9-33.1c3.6-4 7.9-5 10.6-5 2.6 0 5.3 0 7.6.1 2.4.1 5.7-.9 8.9 6.8 3.3 7.9 11.2 27.4 12.2 29.4s1.7 4.3.3 6.9c-7.6 15.2-15.7 14.6-11.6 21.6 15.3 26.3 30.6 35.4 53.9 47.1 4 2 6.3 1.7 8.6-1 2.3-2.6 9.9-11.6 12.5-15.5 2.6-4 5.3-3.3 8.9-2 3.6 1.3 23.1 10.9 27.1 12.9s6.6 3 7.6 4.6c.9 1.9.9 9.9-2.4 19.1zM400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM223.9 413.2c-26.6 0-52.7-6.7-75.8-19.3L64 416l22.5-82.2c-13.9-24-21.2-51.3-21.2-79.3C65.4 167.1 136.5 96 223.9 96c42.4 0 82.2 16.5 112.2 46.5 29.9 30 47.9 69.8 47.9 112.2 0 87.4-72.7 158.5-160.1 158.5z\"],\n    \"whmcs\": [448, 512, [], \"f40d\", \"M448 161v-21.3l-28.5-8.8-2.2-10.4 20.1-20.7L427 80.4l-29 7.5-7.2-7.5 7.5-28.2-19.1-11.6-21.3 21-10.7-3.2-7-26.4h-22.6l-6.2 26.4-12.1 3.2-19.7-21-19.4 11 8.1 27.7-8.1 8.4-28.5-7.5-11 19.1 20.7 21-2.9 10.4-28.5 7.8-.3 21.7 28.8 7.5 2.4 12.1-20.1 19.9 10.4 18.5 29.6-7.5 7.2 8.6-8.1 26.9 19.9 11.6 19.4-20.4 11.6 2.9 6.7 28.5 22.6.3 6.7-28.8 11.6-3.5 20.7 21.6 20.4-12.1-8.8-28 7.8-8.1 28.8 8.8 10.3-20.1-20.9-18.8 2.2-12.1 29.1-7zm-119.2 45.2c-31.3 0-56.8-25.4-56.8-56.8s25.4-56.8 56.8-56.8 56.8 25.4 56.8 56.8c0 31.5-25.4 56.8-56.8 56.8zm72.3 16.4l46.9 14.5V277l-55.1 13.4-4.1 22.7 38.9 35.3-19.2 37.9-54-16.7-14.6 15.2 16.7 52.5-38.3 22.7-38.9-40.5-21.7 6.6-12.6 54-42.4-.5-12.6-53.6-21.7-5.6-36.4 38.4-37.4-21.7 15.2-50.5-13.7-16.1-55.5 14.1-19.7-34.8 37.9-37.4-4.8-22.8-54-14.1.5-40.9L54 219.9l5.7-19.7-38.9-39.4L41.5 125l53.6 14.1 15.2-15.7-15.2-52 36.4-20.7 36.8 39.4L191 84l11.6-52H245l11.6 45.9L234 72l-6.3-1.7-3.3 5.7-11 19.1-3.3 5.6 4.6 4.6 17.2 17.4-.3 1-23.8 6.5-6.2 1.7-.1 6.4-.2 12.9C153.8 161.6 118 204 118 254.7c0 58.3 47.3 105.7 105.7 105.7 50.5 0 92.7-35.4 103.2-82.8l13.2.2 6.9.1 1.6-6.7 5.6-24 1.9-.6 17.1 17.8 4.7 4.9 5.8-3.4 20.4-12.1 5.8-3.5-2-6.5-6.8-21.2z\"],\n    \"wikipedia-w\": [640, 512, [], \"f266\", \"M640 51.2l-.3 12.2c-28.1.8-45 15.8-55.8 40.3-25 57.8-103.3 240-155.3 358.6H415l-81.9-193.1c-32.5 63.6-68.3 130-99.2 193.1-.3.3-15 0-15-.3C172 352.3 122.8 243.4 75.8 133.4 64.4 106.7 26.4 63.4.2 63.7c0-3.1-.3-10-.3-14.2h161.9v13.9c-19.2 1.1-52.8 13.3-43.3 34.2 21.9 49.7 103.6 240.3 125.6 288.6 15-29.7 57.8-109.2 75.3-142.8-13.9-28.3-58.6-133.9-72.8-160-9.7-17.8-36.1-19.4-55.8-19.7V49.8l142.5.3v13.1c-19.4.6-38.1 7.8-29.4 26.1 18.9 40 30.6 68.1 48.1 104.7 5.6-10.8 34.7-69.4 48.1-100.8 8.9-20.6-3.9-28.6-38.6-29.4.3-3.6 0-10.3.3-13.6 44.4-.3 111.1-.3 123.1-.6v13.6c-22.5.8-45.8 12.8-58.1 31.7l-59.2 122.8c6.4 16.1 63.3 142.8 69.2 156.7L559.2 91.8c-8.6-23.1-36.4-28.1-47.2-28.3V49.6l127.8 1.1.2.5z\"],\n    \"windows\": [448, 512, [], \"f17a\", \"M0 93.7l183.6-25.3v177.4H0V93.7zm0 324.6l183.6 25.3V268.4H0v149.9zm203.8 28L448 480V268.4H203.8v177.9zm0-380.6v180.1H448V32L203.8 65.7z\"],\n    \"wix\": [640, 512, [], \"f5cf\", \"M393.38 131.69c0 13.03 2.08 32.69-28.68 43.83-9.52 3.45-15.95 9.66-15.95 9.66 0-31 4.72-42.22 17.4-48.86 9.75-5.11 27.23-4.63 27.23-4.63zm-115.8 35.54l-34.24 132.66-28.48-108.57c-7.69-31.99-20.81-48.53-48.43-48.53-27.37 0-40.66 16.18-48.43 48.53L89.52 299.89 55.28 167.23C49.73 140.51 23.86 128.96 0 131.96l65.57 247.93s21.63 1.56 32.46-3.96c14.22-7.25 20.98-12.84 29.59-46.57 7.67-30.07 29.11-118.41 31.12-124.7 4.76-14.94 11.09-13.81 15.4 0 1.97 6.3 23.45 94.63 31.12 124.7 8.6 33.73 15.37 39.32 29.59 46.57 10.82 5.52 32.46 3.96 32.46 3.96l65.57-247.93c-24.42-3.07-49.82 8.93-55.3 35.27zm115.78 5.21s-4.1 6.34-13.46 11.57c-6.01 3.36-11.78 5.64-17.97 8.61-15.14 7.26-13.18 13.95-13.18 35.2v152.07s16.55 2.09 27.37-3.43c13.93-7.1 17.13-13.95 17.26-44.78V181.41l-.02.01v-8.98zm163.44 84.08L640 132.78s-35.11-5.98-52.5 9.85c-13.3 12.1-24.41 29.55-54.18 72.47-.47.73-6.25 10.54-13.07 0-29.29-42.23-40.8-60.29-54.18-72.47-17.39-15.83-52.5-9.85-52.5-9.85l83.2 123.74-82.97 123.36s36.57 4.62 53.95-11.21c11.49-10.46 17.58-20.37 52.51-70.72 6.81-10.52 12.57-.77 13.07 0 29.4 42.38 39.23 58.06 53.14 70.72 17.39 15.83 53.32 11.21 53.32 11.21L556.8 256.52z\"],\n    \"wizards-of-the-coast\": [640, 512, [], \"f730\", \"M219.19 345.69c-1.9 1.38-11.07 8.44-.26 23.57 4.64 6.42 14.11 12.79 21.73 6.55 6.5-4.88 7.35-12.92.26-23.04-5.47-7.76-14.28-12.88-21.73-7.08zm336.75 75.94c-.34 1.7-.55 1.67.79 0 2.09-4.19 4.19-10.21 4.98-19.9 3.14-38.49-40.33-71.49-101.34-78.03-54.73-6.02-124.38 9.17-188.8 60.49l-.26 1.57c2.62 4.98 4.98 10.74 3.4 21.21l.79.26c63.89-58.4 131.19-77.25 184.35-73.85 58.4 3.67 100.03 34.04 100.03 68.08-.01 9.96-2.63 15.72-3.94 20.17zM392.28 240.42c.79 7.07 4.19 10.21 9.17 10.47 5.5.26 9.43-2.62 10.47-6.55.79-3.4 2.09-29.85 2.09-29.85s-11.26 6.55-14.93 10.47c-3.66 3.68-7.33 8.39-6.8 15.46zm-50.02-151.1C137.75 89.32 13.1 226.8.79 241.2c-1.05.52-1.31.79.79 1.31 60.49 16.5 155.81 81.18 196.13 202.16l1.05.26c55.25-69.92 140.88-128.05 236.99-128.05 80.92 0 130.15 42.16 130.15 80.39 0 18.33-6.55 33.52-22.26 46.35 0 .96-.2.79.79.79 14.66-10.74 27.5-28.8 27.5-48.18 0-22.78-12.05-38.23-12.05-38.23 7.07 7.07 10.74 16.24 10.74 16.24 5.76-40.85 26.97-62.32 26.97-62.32-2.36-9.69-6.81-17.81-6.81-17.81 7.59 8.12 14.4 27.5 14.4 41.37 0 10.47-3.4 22.78-12.57 31.95l.26.52c8.12-4.98 16.5-16.76 16.5-37.97 0-15.71-4.71-25.92-4.71-25.92 5.76-5.24 11.26-9.17 15.97-11.78.79 3.4 2.09 9.69 2.36 14.93 0 1.05.79 1.83 1.05 0 .79-5.76-.26-16.24-.26-16.5 6.02-3.14 9.69-4.45 9.69-4.45C617.74 176 489.43 89.32 342.26 89.32zm-99.24 289.62c-11.06 8.99-24.2 4.08-30.64-4.19-7.45-9.58-6.76-24.09 4.19-32.47 14.85-11.35 27.08-.49 31.16 5.5.28.39 12.13 16.57-4.71 31.16zm2.09-136.43l9.43-17.81 11.78 70.96-12.57 6.02-24.62-28.8 14.14-26.71 3.67 4.45-1.83-8.11zm18.59 117.58l-.26-.26c2.05-4.1-2.5-6.61-17.54-31.69-1.31-2.36-3.14-2.88-4.45-2.62l-.26-.52c7.86-5.76 15.45-10.21 25.4-15.71l.52.26c1.31 1.83 2.09 2.88 3.4 4.71l-.26.52c-1.05-.26-2.36-.79-5.24.26-2.09.79-7.86 3.67-12.31 7.59v1.31c1.57 2.36 3.93 6.55 5.76 9.69h.26c10.05-6.28 7.56-4.55 11.52-7.86h.26c.52 1.83.52 1.83 1.83 5.5l-.26.26c-3.06.61-4.65.34-11.52 5.5v.26c9.46 17.02 11.01 16.75 12.57 15.97l.26.26c-2.34 1.59-6.27 4.21-9.68 6.57zm55.26-32.47c-3.14 1.57-6.02 2.88-9.95 4.98l-.26-.26c1.29-2.59 1.16-2.71-11.78-32.47l-.26-.26c-.15 0-8.9 3.65-9.95 7.33h-.52l-1.05-5.76.26-.52c7.29-4.56 25.53-11.64 27.76-12.57l.52.26 3.14 4.98-.26.52c-3.53-1.76-7.35.76-12.31 2.62v.26c12.31 32.01 12.67 30.64 14.66 30.64v.25zm44.77-16.5c-4.19 1.05-5.24 1.31-9.69 2.88l-.26-.26.52-4.45c-1.05-3.4-3.14-11.52-3.67-13.62l-.26-.26c-3.4.79-8.9 2.62-12.83 3.93l-.26.26c.79 2.62 3.14 9.95 4.19 13.88.79 2.36 1.83 2.88 2.88 3.14v.52c-3.67 1.05-7.07 2.62-10.21 3.93l-.26-.26c1.05-1.31 1.05-2.88.26-4.98-1.05-3.14-8.12-23.83-9.17-27.23-.52-1.83-1.57-3.14-2.62-3.14v-.52c3.14-1.05 6.02-2.09 10.74-3.4l.26.26-.26 4.71c1.31 3.93 2.36 7.59 3.14 9.69h.26c3.93-1.31 9.43-2.88 12.83-3.93l.26-.26-2.62-9.43c-.52-1.83-1.05-3.4-2.62-3.93v-.26c4.45-1.05 7.33-1.83 10.74-2.36l.26.26c-1.05 1.31-1.05 2.88-.52 4.45 1.57 6.28 4.71 20.43 6.28 26.45.54 2.62 1.85 3.41 2.63 3.93zm32.21-6.81l-.26.26c-4.71.52-14.14 2.36-22.52 4.19l-.26-.26.79-4.19c-1.57-7.86-3.4-18.59-4.98-26.19-.26-1.83-.79-2.88-2.62-3.67l.79-.52c9.17-1.57 20.16-2.36 24.88-2.62l.26.26c.52 2.36.79 3.14 1.57 5.5l-.26.26c-1.14-1.14-3.34-3.2-16.24-.79l-.26.26c.26 1.57 1.05 6.55 1.57 9.95l.26.26c9.52-1.68 4.76-.06 10.74-2.36h.26c0 1.57-.26 1.83-.26 5.24h-.26c-4.81-1.03-2.15-.9-10.21 0l-.26.26c.26 2.09 1.57 9.43 2.09 12.57l.26.26c1.15.38 14.21-.65 16.24-4.71h.26c-.53 2.38-1.05 4.21-1.58 6.04zm10.74-44.51c-4.45 2.36-8.12 2.88-11 2.88-.25.02-11.41 1.09-17.54-9.95-6.74-10.79-.98-25.2 5.5-31.69 8.8-8.12 23.35-10.1 28.54-17.02 8.03-10.33-13.04-22.31-29.59-5.76l-2.62-2.88 5.24-16.24c25.59-1.57 45.2-3.04 50.02 16.24.79 3.14 0 9.43-.26 12.05 0 2.62-1.83 18.85-2.09 23.04-.52 4.19-.79 18.33-.79 20.69.26 2.36.52 4.19 1.57 5.5 1.57 1.83 5.76 1.83 5.76 1.83l-.79 4.71c-11.82-1.07-10.28-.59-20.43-1.05-3.22-5.15-2.23-3.28-4.19-7.86 0 .01-4.19 3.94-7.33 5.51zm37.18 21.21c-6.35-10.58-19.82-7.16-21.73 5.5-2.63 17.08 14.3 19.79 20.69 10.21l.26.26c-.52 1.83-1.83 6.02-1.83 6.28l-.52.52c-10.3 6.87-28.5-2.5-25.66-18.59 1.94-10.87 14.44-18.93 28.8-9.95l.26.52c0 1.06-.27 3.41-.27 5.25zm5.77-87.73v-6.55c.69 0 19.65 3.28 27.76 7.33l-1.57 17.54s10.21-9.43 15.45-10.74c5.24-1.57 14.93 7.33 14.93 7.33l-11.26 11.26c-12.07-6.35-19.59-.08-20.69.79-5.29 38.72-8.6 42.17 4.45 46.09l-.52 4.71c-17.55-4.29-18.53-4.5-36.92-7.33l.79-4.71c7.25 0 7.48-5.32 7.59-6.81 0 0 4.98-53.16 4.98-55.25-.02-2.87-4.99-3.66-4.99-3.66zm10.99 114.44c-8.12-2.09-14.14-11-10.74-20.69 3.14-9.43 12.31-12.31 18.85-10.21 9.17 2.62 12.83 11.78 10.74 19.38-2.61 8.9-9.42 13.87-18.85 11.52zm42.16 9.69c-2.36-.52-7.07-2.36-8.64-2.88v-.26l1.57-1.83c.59-8.24.59-7.27.26-7.59-4.82-1.81-6.66-2.36-7.07-2.36-1.31 1.83-2.88 4.45-3.67 5.5l-.79 3.4v.26c-1.31-.26-3.93-1.31-6.02-1.57v-.26l2.62-1.83c3.4-4.71 9.95-14.14 13.88-20.16v-2.09l.52-.26c2.09.79 5.5 2.09 7.59 2.88.48.48.18-1.87-1.05 25.14-.24 1.81.02 2.6.8 3.91zm-4.71-89.82c11.25-18.27 30.76-16.19 34.04-3.4L539.7 198c2.34-6.25-2.82-9.9-4.45-11.26l1.83-3.67c12.22 10.37 16.38 13.97 22.52 20.43-25.91 73.07-30.76 80.81-24.62 84.32l-1.83 4.45c-6.37-3.35-8.9-4.42-17.81-8.64l2.09-6.81c-.26-.26-3.93 3.93-9.69 3.67-19.06-1.3-22.89-31.75-9.67-52.9zm29.33 79.34c0-5.71-6.34-7.89-7.86-5.24-1.31 2.09 1.05 4.98 2.88 8.38 1.57 2.62 2.62 6.28 1.05 9.43-2.64 6.34-12.4 5.31-15.45-.79 0-.7-.27.09 1.83-4.71l.79-.26c-.57 5.66 6.06 9.61 8.38 4.98 1.05-2.09-.52-5.5-2.09-8.38-1.57-2.62-3.67-6.28-1.83-9.69 2.72-5.06 11.25-4.47 14.66 2.36v.52l-2.36 3.4zm21.21 13.36c-1.96-3.27-.91-2.14-4.45-4.71h-.26c-2.36 4.19-5.76 10.47-8.64 16.24-1.31 2.36-1.05 3.4-.79 3.93l-.26.26-5.76-4.45.26-.26 2.09-1.31c3.14-5.76 6.55-12.05 9.17-17.02v-.26c-2.64-1.98-1.22-1.51-6.02-1.83v-.26l3.14-3.4h.26c3.67 2.36 9.95 6.81 12.31 8.9l.26.26-1.31 3.91zm27.23-44.26l-2.88-2.88c.79-2.36 1.83-4.98 2.09-7.59.75-9.74-11.52-11.84-11.52-4.98 0 4.98 7.86 19.38 7.86 27.76 0 10.21-5.76 15.71-13.88 16.5-8.38.79-20.16-10.47-20.16-10.47l4.98-14.4 2.88 2.09c-2.97 17.8 17.68 20.37 13.35 5.24-1.06-4.02-18.75-34.2 2.09-38.23 13.62-2.36 23.04 16.5 23.04 16.5l-7.85 10.46zm35.62-10.21c-11-30.38-60.49-127.53-191.95-129.62-53.42-1.05-94.27 15.45-132.76 37.97l85.63-9.17-91.39 20.69 25.14 19.64-3.93-16.5c7.5-1.71 39.15-8.45 66.77-8.9l-22.26 80.39c13.61-.7 18.97-8.98 19.64-22.78l4.98-1.05.26 26.71c-22.46 3.21-37.3 6.69-49.49 9.95l13.09-43.21-61.54-36.66 2.36 8.12 10.21 4.98c6.28 18.59 19.38 56.56 20.43 58.66 1.95 4.28 3.16 5.78 12.05 4.45l1.05 4.98c-16.08 4.86-23.66 7.61-39.02 14.4l-2.36-4.71c4.4-2.94 8.73-3.94 5.5-12.83-23.7-62.5-21.48-58.14-22.78-59.44l2.36-4.45 33.52 67.3c-3.84-11.87 1.68 1.69-32.99-78.82l-41.9 88.51 4.71-13.88-35.88-42.16 27.76 93.48-11.78 8.38C95 228.58 101.05 231.87 93.23 231.52c-5.5-.26-13.62 5.5-13.62 5.5L74.63 231c30.56-23.53 31.62-24.33 58.4-42.68l4.19 7.07s-5.76 4.19-7.86 7.07c-5.9 9.28 1.67 13.28 61.8 75.68l-18.85-58.92 39.8-10.21 25.66 30.64 4.45-12.31-4.98-24.62 13.09-3.4.52 3.14 3.67-10.47-94.27 29.33 11.26-4.98-13.62-42.42 17.28-9.17 30.11 36.14 28.54-13.09c-1.41-7.47-2.47-14.5-4.71-19.64l17.28 13.88 4.71-2.09-59.18-42.68 23.08 11.5c18.98-6.07 25.23-7.47 32.21-9.69l2.62 11c-12.55 12.55 1.43 16.82 6.55 19.38l-13.62-61.01 12.05 28.28c4.19-1.31 7.33-2.09 7.33-2.09l2.62 8.64s-3.14 1.05-6.28 2.09l8.9 20.95 33.78-65.73-20.69 61.01c42.42-24.09 81.44-36.66 131.98-35.88 67.04 1.05 167.33 40.85 199.8 139.83.78 2.1-.01 2.63-.79.27zM203.48 152.43s1.83-.52 4.19-1.31l9.43 7.59c-.4 0-3.44-.25-11.26 2.36l-2.36-8.64zm143.76 38.5c-1.57-.6-26.46-4.81-33.26 20.69l21.73 17.02 11.53-37.71zM318.43 67.07c-58.4 0-106.05 12.05-114.96 14.4v.79c8.38 2.09 14.4 4.19 21.21 11.78l1.57.26c6.55-1.83 48.97-13.88 110.24-13.88 180.16 0 301.67 116.79 301.67 223.37v9.95c0 1.31.79 2.62 1.05.52.52-2.09.79-8.64.79-19.64.26-83.79-96.63-227.55-321.57-227.55zm211.06 169.68c1.31-5.76 0-12.31-7.33-13.09-9.62-1.13-16.14 23.79-17.02 33.52-.79 5.5-1.31 14.93 6.02 14.93 4.68-.01 9.72-.91 18.33-35.36zm-61.53 42.95c-2.62-.79-9.43-.79-12.57 10.47-1.83 6.81.52 13.35 6.02 14.66 3.67 1.05 8.9.52 11.78-10.74 2.62-9.94-1.83-13.61-5.23-14.39zM491 300.65c1.83.52 3.14 1.05 5.76 1.83 0-1.83.52-8.38.79-12.05-1.05 1.31-5.5 8.12-6.55 9.95v.27z\"],\n    \"wodu\": [640, 512, [], \"e088\", \"M178.414 339.706H141.1L112.166 223.475h-.478L83.228 339.706H45.2L0 168.946H37.548L64.574 285.177h.478L94.707 168.946h35.157l29.178 117.667h.479L187.5 168.946h36.831zM271.4 212.713c38.984 0 64.1 25.828 64.1 65.291 0 39.222-25.111 65.05-64.1 65.05-38.743 0-63.855-25.828-63.855-65.05C207.547 238.541 232.659 212.713 271.4 212.713zm0 104.753c23.2 0 30.133-19.852 30.133-39.462 0-19.852-6.934-39.7-30.133-39.7-27.7 0-29.894 19.85-29.894 39.7C241.508 297.614 248.443 317.466 271.4 317.466zM435.084 323.922h-.478c-7.893 13.392-21.765 19.132-37.548 19.132-37.31 0-55.485-32.045-55.485-66.246 0-33.243 18.415-64.095 54.767-64.095 14.589 0 28.938 6.218 36.831 18.416h.24V168.946h33.96v170.76H435.084zM405.428 238.3c-22.24 0-29.894 19.134-29.894 39.463 0 19.371 8.848 39.7 29.894 39.7 22.482 0 29.178-19.613 29.178-39.94C434.606 257.436 427.432 238.3 405.428 238.3zM592.96 339.706H560.673V322.487h-.718c-8.609 13.87-23.436 20.567-37.786 20.567-36.113 0-45.2-20.328-45.2-50.941V216.061h33.959V285.9c0 20.329 5.979 30.372 21.765 30.372 18.415 0 26.306-10.283 26.306-35.393V216.061H592.96zM602.453 302.876H640v36.83H602.453z\"],\n    \"wolf-pack-battalion\": [512, 512, [], \"f514\", \"M267.73 471.53l10.56 15.84 5.28-12.32 5.28 7V512c21.06-7.92 21.11-66.86 25.51-97.21 4.62-31.89-.88-92.81 81.37-149.11-8.88-23.61-12-49.43-2.64-80.05C421 189 447 196.21 456.43 239.73l-30.35 8.36c11.15 23 17 46.76 13.2 72.14L412 313.18l-6.16 33.43-18.47-7-8.8 33.39-19.35-7 26.39 21.11 8.8-28.15L419 364.2l7-35.63 26.39 14.52c.25-20 7-58.06-8.8-84.45l26.39 5.28c4-22.07-2.38-39.21-7.92-56.74l22.43 9.68c-.44-25.07-29.94-56.79-61.58-58.5-20.22-1.09-56.74-25.17-54.1-51.9 2-19.87 17.45-42.62 43.11-49.7-44 36.51-9.68 67.3 5.28 73.46 4.4-11.44 17.54-69.08 0-130.2-40.39 22.87-89.65 65.1-93.2 147.79l-58 38.71-3.52 93.25L369.78 220l7 7-17.59 3.52-44 38.71-15.84-5.28-28.1 49.25-3.52 119.64 21.11 15.84-32.55 15.84-32.55-15.84 21.11-15.84-3.52-119.64-28.15-49.26-15.84 5.28-44-38.71-17.58-3.51 7-7 107.33 59.82-3.52-93.25-58.06-38.71C185 65.1 135.77 22.87 95.3 0c-17.54 61.12-4.4 118.76 0 130.2 15-6.16 49.26-36.95 5.28-73.46 25.66 7.08 41.15 29.83 43.11 49.7 2.63 26.74-33.88 50.81-54.1 51.9-31.65 1.72-61.15 33.44-61.59 58.51l22.43-9.68c-5.54 17.53-11.91 34.67-7.92 56.74l26.39-5.28c-15.76 26.39-9.05 64.43-8.8 84.45l26.39-14.52 7 35.63 24.63-5.28 8.8 28.15L153.35 366 134 373l-8.8-33.43-18.47 7-6.16-33.43-27.27 7c-3.82-25.38 2-49.1 13.2-72.14l-30.35-8.36c9.4-43.52 35.47-50.77 63.34-54.1 9.36 30.62 6.24 56.45-2.64 80.05 82.25 56.3 76.75 117.23 81.37 149.11 4.4 30.35 4.45 89.29 25.51 97.21v-29.83l5.28-7 5.28 12.32 10.56-15.84 11.44 21.11 11.43-21.1zm79.17-95L331.06 366c7.47-4.36 13.76-8.42 19.35-12.32-.6 7.22-.27 13.84-3.51 22.84zm28.15-49.26c-.4 10.94-.9 21.66-1.76 31.67-7.85-1.86-15.57-3.8-21.11-7 8.24-7.94 15.55-16.32 22.87-24.68zm24.63 5.28c0-13.43-2.05-24.21-5.28-33.43a235 235 0 0 1-18.47 27.27zm3.52-80.94c19.44 12.81 27.8 33.66 29.91 56.3-12.32-4.53-24.63-9.31-36.95-10.56 5.06-12 6.65-28.14 7-45.74zm-1.76-45.74c.81 14.3 1.84 28.82 1.76 42.23 19.22-8.11 29.78-9.72 44-14.08-10.61-18.96-27.2-25.53-45.76-28.16zM165.68 376.52L181.52 366c-7.47-4.36-13.76-8.42-19.35-12.32.6 7.26.27 13.88 3.51 22.88zm-28.15-49.26c.4 10.94.9 21.66 1.76 31.67 7.85-1.86 15.57-3.8 21.11-7-8.24-7.93-15.55-16.31-22.87-24.67zm-24.64 5.28c0-13.43 2-24.21 5.28-33.43a235 235 0 0 0 18.47 27.27zm-3.52-80.94c-19.44 12.81-27.8 33.66-29.91 56.3 12.32-4.53 24.63-9.31 37-10.56-5-12-6.65-28.14-7-45.74zm1.76-45.74c-.81 14.3-1.84 28.82-1.76 42.23-19.22-8.11-29.78-9.72-44-14.08 10.63-18.95 27.23-25.52 45.76-28.15z\"],\n    \"wordpress\": [512, 512, [], \"f19a\", \"M61.7 169.4l101.5 278C92.2 413 43.3 340.2 43.3 256c0-30.9 6.6-60.1 18.4-86.6zm337.9 75.9c0-26.3-9.4-44.5-17.5-58.7-10.8-17.5-20.9-32.4-20.9-49.9 0-19.6 14.8-37.8 35.7-37.8.9 0 1.8.1 2.8.2-37.9-34.7-88.3-55.9-143.7-55.9-74.3 0-139.7 38.1-177.8 95.9 5 .2 9.7.3 13.7.3 22.2 0 56.7-2.7 56.7-2.7 11.5-.7 12.8 16.2 1.4 17.5 0 0-11.5 1.3-24.3 2l77.5 230.4L249.8 247l-33.1-90.8c-11.5-.7-22.3-2-22.3-2-11.5-.7-10.1-18.2 1.3-17.5 0 0 35.1 2.7 56 2.7 22.2 0 56.7-2.7 56.7-2.7 11.5-.7 12.8 16.2 1.4 17.5 0 0-11.5 1.3-24.3 2l76.9 228.7 21.2-70.9c9-29.4 16-50.5 16-68.7zm-139.9 29.3l-63.8 185.5c19.1 5.6 39.2 8.7 60.1 8.7 24.8 0 48.5-4.3 70.6-12.1-.6-.9-1.1-1.9-1.5-2.9l-65.4-179.2zm183-120.7c.9 6.8 1.4 14 1.4 21.9 0 21.6-4 45.8-16.2 76.2l-65 187.9C426.2 403 468.7 334.5 468.7 256c0-37-9.4-71.8-26-102.1zM504 256c0 136.8-111.3 248-248 248C119.2 504 8 392.7 8 256 8 119.2 119.2 8 256 8c136.7 0 248 111.2 248 248zm-11.4 0c0-130.5-106.2-236.6-236.6-236.6C125.5 19.4 19.4 125.5 19.4 256S125.6 492.6 256 492.6c130.5 0 236.6-106.1 236.6-236.6z\"],\n    \"wordpress-simple\": [512, 512, [], \"f411\", \"M256 8C119.3 8 8 119.2 8 256c0 136.7 111.3 248 248 248s248-111.3 248-248C504 119.2 392.7 8 256 8zM33 256c0-32.3 6.9-63 19.3-90.7l106.4 291.4C84.3 420.5 33 344.2 33 256zm223 223c-21.9 0-43-3.2-63-9.1l66.9-194.4 68.5 187.8c.5 1.1 1 2.1 1.6 3.1-23.1 8.1-48 12.6-74 12.6zm30.7-327.5c13.4-.7 25.5-2.1 25.5-2.1 12-1.4 10.6-19.1-1.4-18.4 0 0-36.1 2.8-59.4 2.8-21.9 0-58.7-2.8-58.7-2.8-12-.7-13.4 17.7-1.4 18.4 0 0 11.4 1.4 23.4 2.1l34.7 95.2L200.6 393l-81.2-241.5c13.4-.7 25.5-2.1 25.5-2.1 12-1.4 10.6-19.1-1.4-18.4 0 0-36.1 2.8-59.4 2.8-4.2 0-9.1-.1-14.4-.3C109.6 73 178.1 33 256 33c58 0 110.9 22.2 150.6 58.5-1-.1-1.9-.2-2.9-.2-21.9 0-37.4 19.1-37.4 39.6 0 18.4 10.6 33.9 21.9 52.3 8.5 14.8 18.4 33.9 18.4 61.5 0 19.1-7.3 41.2-17 72.1l-22.2 74.3-80.7-239.6zm81.4 297.2l68.1-196.9c12.7-31.8 17-57.2 17-79.9 0-8.2-.5-15.8-1.5-22.9 17.4 31.8 27.3 68.2 27.3 107 0 82.3-44.6 154.1-110.9 192.7z\"],\n    \"wpbeginner\": [512, 512, [], \"f297\", \"M462.799 322.374C519.01 386.682 466.961 480 370.944 480c-39.602 0-78.824-17.687-100.142-50.04-6.887.356-22.702.356-29.59 0C219.848 462.381 180.588 480 141.069 480c-95.49 0-148.348-92.996-91.855-157.626C-29.925 190.523 80.479 32 256.006 32c175.632 0 285.87 158.626 206.793 290.374zm-339.647-82.972h41.529v-58.075h-41.529v58.075zm217.18 86.072v-23.839c-60.506 20.915-132.355 9.198-187.589-33.971l.246 24.897c51.101 46.367 131.746 57.875 187.343 32.913zm-150.753-86.072h166.058v-58.075H189.579v58.075z\"],\n    \"wpexplorer\": [512, 512, [], \"f2de\", \"M512 256c0 141.2-114.7 256-256 256C114.8 512 0 397.3 0 256S114.7 0 256 0s256 114.7 256 256zm-32 0c0-123.2-100.3-224-224-224C132.5 32 32 132.5 32 256s100.5 224 224 224 224-100.5 224-224zM160.9 124.6l86.9 37.1-37.1 86.9-86.9-37.1 37.1-86.9zm110 169.1l46.6 94h-14.6l-50-100-48.9 100h-14l51.1-106.9-22.3-9.4 6-14 68.6 29.1-6 14.3-16.5-7.1zm-11.8-116.3l68.6 29.4-29.4 68.3L230 246l29.1-68.6zm80.3 42.9l54.6 23.1-23.4 54.3-54.3-23.1 23.1-54.3z\"],\n    \"wpforms\": [448, 512, [], \"f298\", \"M448 75.2v361.7c0 24.3-19 43.2-43.2 43.2H43.2C19.3 480 0 461.4 0 436.8V75.2C0 51.1 18.8 32 43.2 32h361.7c24 0 43.1 18.8 43.1 43.2zm-37.3 361.6V75.2c0-3-2.6-5.8-5.8-5.8h-9.3L285.3 144 224 94.1 162.8 144 52.5 69.3h-9.3c-3.2 0-5.8 2.8-5.8 5.8v361.7c0 3 2.6 5.8 5.8 5.8h361.7c3.2.1 5.8-2.7 5.8-5.8zM150.2 186v37H76.7v-37h73.5zm0 74.4v37.3H76.7v-37.3h73.5zm11.1-147.3l54-43.7H96.8l64.5 43.7zm210 72.9v37h-196v-37h196zm0 74.4v37.3h-196v-37.3h196zm-84.6-147.3l64.5-43.7H232.8l53.9 43.7zM371.3 335v37.3h-99.4V335h99.4z\"],\n    \"wpressr\": [496, 512, [], \"f3e4\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm171.33 158.6c-15.18 34.51-30.37 69.02-45.63 103.5-2.44 5.51-6.89 8.24-12.97 8.24-23.02-.01-46.03.06-69.05-.05-5.12-.03-8.25 1.89-10.34 6.72-10.19 23.56-20.63 47-30.95 70.5-1.54 3.51-4.06 5.29-7.92 5.29-45.94-.01-91.87-.02-137.81 0-3.13 0-5.63-1.15-7.72-3.45-11.21-12.33-22.46-24.63-33.68-36.94-2.69-2.95-2.79-6.18-1.21-9.73 8.66-19.54 17.27-39.1 25.89-58.66 12.93-29.35 25.89-58.69 38.75-88.08 1.7-3.88 4.28-5.68 8.54-5.65 14.24.1 28.48.02 42.72.05 6.24.01 9.2 4.84 6.66 10.59-13.6 30.77-27.17 61.55-40.74 92.33-5.72 12.99-11.42 25.99-17.09 39-3.91 8.95 7.08 11.97 10.95 5.6.23-.37-1.42 4.18 30.01-67.69 1.36-3.1 3.41-4.4 6.77-4.39 15.21.08 30.43.02 45.64.04 5.56.01 7.91 3.64 5.66 8.75-8.33 18.96-16.71 37.9-24.98 56.89-4.98 11.43 8.08 12.49 11.28 5.33.04-.08 27.89-63.33 32.19-73.16 2.02-4.61 5.44-6.51 10.35-6.5 26.43.05 52.86 0 79.29.05 12.44.02 13.93-13.65 3.9-13.64-25.26.03-50.52.02-75.78.02-6.27 0-7.84-2.47-5.27-8.27 5.78-13.06 11.59-26.11 17.3-39.21 1.73-3.96 4.52-5.79 8.84-5.78 23.09.06 25.98.02 130.78.03 6.08-.01 8.03 2.79 5.62 8.27z\"],\n    \"xbox\": [512, 512, [], \"f412\", \"M369.9 318.2c44.3 54.3 64.7 98.8 54.4 118.7-7.9 15.1-56.7 44.6-92.6 55.9-29.6 9.3-68.4 13.3-100.4 10.2-38.2-3.7-76.9-17.4-110.1-39C93.3 445.8 87 438.3 87 423.4c0-29.9 32.9-82.3 89.2-142.1 32-33.9 76.5-73.7 81.4-72.6 9.4 2.1 84.3 75.1 112.3 109.5zM188.6 143.8c-29.7-26.9-58.1-53.9-86.4-63.4-15.2-5.1-16.3-4.8-28.7 8.1-29.2 30.4-53.5 79.7-60.3 122.4-5.4 34.2-6.1 43.8-4.2 60.5 5.6 50.5 17.3 85.4 40.5 120.9 9.5 14.6 12.1 17.3 9.3 9.9-4.2-11-.3-37.5 9.5-64 14.3-39 53.9-112.9 120.3-194.4zm311.6 63.5C483.3 127.3 432.7 77 425.6 77c-7.3 0-24.2 6.5-36 13.9-23.3 14.5-41 31.4-64.3 52.8C367.7 197 427.5 283.1 448.2 346c6.8 20.7 9.7 41.1 7.4 52.3-1.7 8.5-1.7 8.5 1.4 4.6 6.1-7.7 19.9-31.3 25.4-43.5 7.4-16.2 15-40.2 18.6-58.7 4.3-22.5 3.9-70.8-.8-93.4zM141.3 43C189 40.5 251 77.5 255.6 78.4c.7.1 10.4-4.2 21.6-9.7 63.9-31.1 94-25.8 107.4-25.2-63.9-39.3-152.7-50-233.9-11.7-23.4 11.1-24 11.9-9.4 11.2z\"],\n    \"xing\": [384, 512, [], \"f168\", \"M162.7 210c-1.8 3.3-25.2 44.4-70.1 123.5-4.9 8.3-10.8 12.5-17.7 12.5H9.8c-7.7 0-12.1-7.5-8.5-14.4l69-121.3c.2 0 .2-.1 0-.3l-43.9-75.6c-4.3-7.8.3-14.1 8.5-14.1H100c7.3 0 13.3 4.1 18 12.2l44.7 77.5zM382.6 46.1l-144 253v.3L330.2 466c3.9 7.1.2 14.1-8.5 14.1h-65.2c-7.6 0-13.6-4-18-12.2l-92.4-168.5c3.3-5.8 51.5-90.8 144.8-255.2 4.6-8.1 10.4-12.2 17.5-12.2h65.7c8 0 12.3 6.7 8.5 14.1z\"],\n    \"xing-square\": [448, 512, [], \"f169\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM140.4 320.2H93.8c-5.5 0-8.7-5.3-6-10.3l49.3-86.7c.1 0 .1-.1 0-.2l-31.4-54c-3-5.6.2-10.1 6-10.1h46.6c5.2 0 9.5 2.9 12.9 8.7l31.9 55.3c-1.3 2.3-18 31.7-50.1 88.2-3.5 6.2-7.7 9.1-12.6 9.1zm219.7-214.1L257.3 286.8v.2l65.5 119c2.8 5.1.1 10.1-6 10.1h-46.6c-5.5 0-9.7-2.9-12.9-8.7l-66-120.3c2.3-4.1 36.8-64.9 103.4-182.3 3.3-5.8 7.4-8.7 12.5-8.7h46.9c5.7-.1 8.8 4.7 6 10z\"],\n    \"y-combinator\": [448, 512, [], \"f23b\", \"M448 32v448H0V32h448zM236 287.5L313.5 142h-32.7L235 233c-4.7 9.3-9 18.3-12.8 26.8L210 233l-45.2-91h-35l76.7 143.8v94.5H236v-92.8z\"],\n    \"yahoo\": [512, 512, [], \"f19e\", \"M223.69,141.06,167,284.23,111,141.06H14.93L120.76,390.19,82.19,480h94.17L317.27,141.06Zm105.4,135.79a58.22,58.22,0,1,0,58.22,58.22A58.22,58.22,0,0,0,329.09,276.85ZM394.65,32l-93,223.47H406.44L499.07,32Z\"],\n    \"yammer\": [512, 512, [], \"f840\", \"M421.78 152.17A23.06 23.06 0 0 0 400.9 112c-.83.43-1.71.9-2.63 1.4-15.25 8.4-118.33 80.62-106.69 88.77s82.04-23.61 130.2-50zm0 217.17c-48.16-26.38-118.64-58.1-130.2-50s91.42 80.35 106.69 88.74c.92.51 1.8 1 2.63 1.41a23.07 23.07 0 0 0 20.88-40.15zM464.21 237c-.95 0-1.95-.06-3-.06-17.4 0-142.52 13.76-136.24 26.51s83.3 18.74 138.21 18.76a23 23 0 0 0 1-45.21zM31 96.65a24.88 24.88 0 0 1 46.14-18.4l81 205.06h1.21l77-203.53a23.52 23.52 0 0 1 44.45 15.27L171.2 368.44C152.65 415.66 134.08 448 77.91 448a139.67 139.67 0 0 1-23.81-1.95 21.31 21.31 0 0 1 6.9-41.77c.66.06 10.91.66 13.86.66 30.47 0 43.74-18.94 58.07-59.41z\"],\n    \"yandex\": [256, 512, [], \"f413\", \"M153.1 315.8L65.7 512H2l96-209.8c-45.1-22.9-75.2-64.4-75.2-141.1C22.7 53.7 90.8 0 171.7 0H254v512h-55.1V315.8h-45.8zm45.8-269.3h-29.4c-44.4 0-87.4 29.4-87.4 114.6 0 82.3 39.4 108.8 87.4 108.8h29.4V46.5z\"],\n    \"yandex-international\": [320, 512, [], \"f414\", \"M129.5 512V345.9L18.5 48h55.8l81.8 229.7L250.2 0h51.3L180.8 347.8V512h-51.3z\"],\n    \"yarn\": [496, 512, [], \"f7e3\", \"M393.9 345.2c-39 9.3-48.4 32.1-104 47.4 0 0-2.7 4-10.4 5.8-13.4 3.3-63.9 6-68.5 6.1-12.4.1-19.9-3.2-22-8.2-6.4-15.3 9.2-22 9.2-22-8.1-5-9-9.9-9.8-8.1-2.4 5.8-3.6 20.1-10.1 26.5-8.8 8.9-25.5 5.9-35.3.8-10.8-5.7.8-19.2.8-19.2s-5.8 3.4-10.5-3.6c-6-9.3-17.1-37.3 11.5-62-1.3-10.1-4.6-53.7 40.6-85.6 0 0-20.6-22.8-12.9-43.3 5-13.4 7-13.3 8.6-13.9 5.7-2.2 11.3-4.6 15.4-9.1 20.6-22.2 46.8-18 46.8-18s12.4-37.8 23.9-30.4c3.5 2.3 16.3 30.6 16.3 30.6s13.6-7.9 15.1-5c8.2 16 9.2 46.5 5.6 65.1-6.1 30.6-21.4 47.1-27.6 57.5-1.4 2.4 16.5 10 27.8 41.3 10.4 28.6 1.1 52.7 2.8 55.3.8 1.4 13.7.8 36.4-13.2 12.8-7.9 28.1-16.9 45.4-17 16.7-.5 17.6 19.2 4.9 22.2zM496 256c0 136.9-111.1 248-248 248S0 392.9 0 256 111.1 8 248 8s248 111.1 248 248zm-79.3 75.2c-1.7-13.6-13.2-23-28-22.8-22 .3-40.5 11.7-52.8 19.2-4.8 3-8.9 5.2-12.4 6.8 3.1-44.5-22.5-73.1-28.7-79.4 7.8-11.3 18.4-27.8 23.4-53.2 4.3-21.7 3-55.5-6.9-74.5-1.6-3.1-7.4-11.2-21-7.4-9.7-20-13-22.1-15.6-23.8-1.1-.7-23.6-16.4-41.4 28-12.2.9-31.3 5.3-47.5 22.8-2 2.2-5.9 3.8-10.1 5.4h.1c-8.4 3-12.3 9.9-16.9 22.3-6.5 17.4.2 34.6 6.8 45.7-17.8 15.9-37 39.8-35.7 82.5-34 36-11.8 73-5.6 79.6-1.6 11.1 3.7 19.4 12 23.8 12.6 6.7 30.3 9.6 43.9 2.8 4.9 5.2 13.8 10.1 30 10.1 6.8 0 58-2.9 72.6-6.5 6.8-1.6 11.5-4.5 14.6-7.1 9.8-3.1 36.8-12.3 62.2-28.7 18-11.7 24.2-14.2 37.6-17.4 12.9-3.2 21-15.1 19.4-28.2z\"],\n    \"yelp\": [384, 512, [], \"f1e9\", \"M42.9 240.32l99.62 48.61c19.2 9.4 16.2 37.51-4.5 42.71L30.5 358.45a22.79 22.79 0 0 1-28.21-19.6 197.16 197.16 0 0 1 9-85.32 22.8 22.8 0 0 1 31.61-13.21zm44 239.25a199.45 199.45 0 0 0 79.42 32.11A22.78 22.78 0 0 0 192.94 490l3.9-110.82c.7-21.3-25.5-31.91-39.81-16.1l-74.21 82.4a22.82 22.82 0 0 0 4.09 34.09zm145.34-109.92l58.81 94a22.93 22.93 0 0 0 34 5.5 198.36 198.36 0 0 0 52.71-67.61A23 23 0 0 0 364.17 370l-105.42-34.26c-20.31-6.5-37.81 15.8-26.51 33.91zm148.33-132.23a197.44 197.44 0 0 0-50.41-69.31 22.85 22.85 0 0 0-34 4.4l-62 91.92c-11.9 17.7 4.7 40.61 25.2 34.71L366 268.63a23 23 0 0 0 14.61-31.21zM62.11 30.18a22.86 22.86 0 0 0-9.9 32l104.12 180.44c11.7 20.2 42.61 11.9 42.61-11.4V22.88a22.67 22.67 0 0 0-24.5-22.8 320.37 320.37 0 0 0-112.33 30.1z\"],\n    \"yoast\": [448, 512, [], \"f2b1\", \"M91.3 76h186l-7 18.9h-179c-39.7 0-71.9 31.6-71.9 70.3v205.4c0 35.4 24.9 70.3 84 70.3V460H91.3C41.2 460 0 419.8 0 370.5V165.2C0 115.9 40.7 76 91.3 76zm229.1-56h66.5C243.1 398.1 241.2 418.9 202.2 459.3c-20.8 21.6-49.3 31.7-78.3 32.7v-51.1c49.2-7.7 64.6-49.9 64.6-75.3 0-20.1.6-12.6-82.1-223.2h61.4L218.2 299 320.4 20zM448 161.5V460H234c6.6-9.6 10.7-16.3 12.1-19.4h182.5V161.5c0-32.5-17.1-51.9-48.2-62.9l6.7-17.6c41.7 13.6 60.9 43.1 60.9 80.5z\"],\n    \"youtube\": [576, 512, [], \"f167\", \"M549.655 124.083c-6.281-23.65-24.787-42.276-48.284-48.597C458.781 64 288 64 288 64S117.22 64 74.629 75.486c-23.497 6.322-42.003 24.947-48.284 48.597-11.412 42.867-11.412 132.305-11.412 132.305s0 89.438 11.412 132.305c6.281 23.65 24.787 41.5 48.284 47.821C117.22 448 288 448 288 448s170.78 0 213.371-11.486c23.497-6.321 42.003-24.171 48.284-47.821 11.412-42.867 11.412-132.305 11.412-132.305s0-89.438-11.412-132.305zm-317.51 213.508V175.185l142.739 81.205-142.739 81.201z\"],\n    \"youtube-square\": [448, 512, [], \"f431\", \"M186.8 202.1l95.2 54.1-95.2 54.1V202.1zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-42 176.3s0-59.6-7.6-88.2c-4.2-15.8-16.5-28.2-32.2-32.4C337.9 128 224 128 224 128s-113.9 0-142.2 7.7c-15.7 4.2-28 16.6-32.2 32.4-7.6 28.5-7.6 88.2-7.6 88.2s0 59.6 7.6 88.2c4.2 15.8 16.5 27.7 32.2 31.9C110.1 384 224 384 224 384s113.9 0 142.2-7.7c15.7-4.2 28-16.1 32.2-31.9 7.6-28.5 7.6-88.1 7.6-88.1z\"],\n    \"zhihu\": [640, 512, [], \"f63f\", \"M170.54 148.13v217.54l23.43.01 7.71 26.37 42.01-26.37h49.53V148.13H170.54zm97.75 193.93h-27.94l-27.9 17.51-5.08-17.47-11.9-.04V171.75h72.82v170.31zm-118.46-94.39H97.5c1.74-27.1 2.2-51.59 2.2-73.46h51.16s1.97-22.56-8.58-22.31h-88.5c3.49-13.12 7.87-26.66 13.12-40.67 0 0-24.07 0-32.27 21.57-3.39 8.9-13.21 43.14-30.7 78.12 5.89-.64 25.37-1.18 36.84-22.21 2.11-5.89 2.51-6.66 5.14-14.53h28.87c0 10.5-1.2 66.88-1.68 73.44H20.83c-11.74 0-15.56 23.62-15.56 23.62h65.58C66.45 321.1 42.83 363.12 0 396.34c20.49 5.85 40.91-.93 51-9.9 0 0 22.98-20.9 35.59-69.25l53.96 64.94s7.91-26.89-1.24-39.99c-7.58-8.92-28.06-33.06-36.79-41.81L87.9 311.95c4.36-13.98 6.99-27.55 7.87-40.67h61.65s-.09-23.62-7.59-23.62v.01zm412.02-1.6c20.83-25.64 44.98-58.57 44.98-58.57s-18.65-14.8-27.38-4.06c-6 8.15-36.83 48.2-36.83 48.2l19.23 14.43zm-150.09-59.09c-9.01-8.25-25.91 2.13-25.91 2.13s39.52 55.04 41.12 57.45l19.46-13.73s-25.67-37.61-34.66-45.86h-.01zM640 258.35c-19.78 0-130.91.93-131.06.93v-101c4.81 0 12.42-.4 22.85-1.2 40.88-2.41 70.13-4 87.77-4.81 0 0 12.22-27.19-.59-33.44-3.07-1.18-23.17 4.58-23.17 4.58s-165.22 16.49-232.36 18.05c1.6 8.82 7.62 17.08 15.78 19.55 13.31 3.48 22.69 1.7 49.15.89 24.83-1.6 43.68-2.43 56.51-2.43v99.81H351.41s2.82 22.31 25.51 22.85h107.94v70.92c0 13.97-11.19 21.99-24.48 21.12-14.08.11-26.08-1.15-41.69-1.81 1.99 3.97 6.33 14.39 19.31 21.84 9.88 4.81 16.17 6.57 26.02 6.57 29.56 0 45.67-17.28 44.89-45.31v-73.32h122.36c9.68 0 8.7-23.78 8.7-23.78l.03-.01z\"]\n  };\n  bunker(function () {\n    defineIcons('fab', icons);\n  });\n})();\n\n(function () {\n  'use strict';\n\n  var _WINDOW = {};\n  var _DOCUMENT = {};\n\n  try {\n    if (typeof window !== 'undefined') _WINDOW = window;\n    if (typeof document !== 'undefined') _DOCUMENT = document;\n  } catch (e) {}\n\n  var _ref = _WINDOW.navigator || {},\n      _ref$userAgent = _ref.userAgent,\n      userAgent = _ref$userAgent === void 0 ? '' : _ref$userAgent;\n\n  var WINDOW = _WINDOW;\n  var DOCUMENT = _DOCUMENT;\n  var IS_BROWSER = !!WINDOW.document;\n  var IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === 'function' && typeof DOCUMENT.createElement === 'function';\n  var IS_IE = ~userAgent.indexOf('MSIE') || ~userAgent.indexOf('Trident/');\n  var NAMESPACE_IDENTIFIER = '___FONT_AWESOME___';\n\n  var PRODUCTION = function () {\n    try {\n      return \"production\" === 'production';\n    } catch (e) {\n      return false;\n    }\n  }();\n\n  function bunker(fn) {\n    try {\n      fn();\n    } catch (e) {\n      if (!PRODUCTION) {\n        throw e;\n      }\n    }\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      var ownKeys = Object.keys(source);\n\n      if (typeof Object.getOwnPropertySymbols === 'function') {\n        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n      }\n\n      ownKeys.forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    }\n\n    return target;\n  }\n\n  var w = WINDOW || {};\n  if (!w[NAMESPACE_IDENTIFIER]) w[NAMESPACE_IDENTIFIER] = {};\n  if (!w[NAMESPACE_IDENTIFIER].styles) w[NAMESPACE_IDENTIFIER].styles = {};\n  if (!w[NAMESPACE_IDENTIFIER].hooks) w[NAMESPACE_IDENTIFIER].hooks = {};\n  if (!w[NAMESPACE_IDENTIFIER].shims) w[NAMESPACE_IDENTIFIER].shims = [];\n  var namespace = w[NAMESPACE_IDENTIFIER];\n\n  function defineIcons(prefix, icons) {\n    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var _params$skipHooks = params.skipHooks,\n        skipHooks = _params$skipHooks === void 0 ? false : _params$skipHooks;\n    var normalized = Object.keys(icons).reduce(function (acc, iconName) {\n      var icon = icons[iconName];\n      var expanded = !!icon.icon;\n\n      if (expanded) {\n        acc[icon.iconName] = icon.icon;\n      } else {\n        acc[iconName] = icon;\n      }\n\n      return acc;\n    }, {});\n\n    if (typeof namespace.hooks.addPack === 'function' && !skipHooks) {\n      namespace.hooks.addPack(prefix, normalized);\n    } else {\n      namespace.styles[prefix] = _objectSpread({}, namespace.styles[prefix] || {}, normalized);\n    }\n    /**\n     * Font Awesome 4 used the prefix of `fa` for all icons. With the introduction\n     * of new styles we needed to differentiate between them. Prefix `fa` is now an alias\n     * for `fas` so we'll easy the upgrade process for our users by automatically defining\n     * this as well.\n     */\n\n\n    if (prefix === 'fas') {\n      defineIcons('fa', icons);\n    }\n  }\n\n  var icons = {\n    \"address-book\": [448, 512, [], \"f2b9\", \"M436 160c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h320c26.5 0 48-21.5 48-48v-48h20c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20v-64h20c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20v-64h20zm-68 304H48V48h320v416zM208 256c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm-89.6 128h179.2c12.4 0 22.4-8.6 22.4-19.2v-19.2c0-31.8-30.1-57.6-67.2-57.6-10.8 0-18.7 8-44.8 8-26.9 0-33.4-8-44.8-8-37.1 0-67.2 25.8-67.2 57.6v19.2c0 10.6 10 19.2 22.4 19.2z\"],\n    \"address-card\": [576, 512, [], \"f2bb\", \"M528 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm0 400H48V80h480v352zM208 256c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm-89.6 128h179.2c12.4 0 22.4-8.6 22.4-19.2v-19.2c0-31.8-30.1-57.6-67.2-57.6-10.8 0-18.7 8-44.8 8-26.9 0-33.4-8-44.8-8-37.1 0-67.2 25.8-67.2 57.6v19.2c0 10.6 10 19.2 22.4 19.2zM360 320h112c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8H360c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8zm0-64h112c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8H360c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8zm0-64h112c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8H360c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8z\"],\n    \"angry\": [496, 512, [], \"f556\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm0-144c-33.6 0-65.2 14.8-86.8 40.6-8.5 10.2-7.1 25.3 3.1 33.8s25.3 7.2 33.8-3c24.8-29.7 75-29.7 99.8 0 8.1 9.7 23.2 11.9 33.8 3 10.2-8.5 11.5-23.6 3.1-33.8-21.6-25.8-53.2-40.6-86.8-40.6zm-48-72c10.3 0 19.9-6.7 23-17.1 3.8-12.7-3.4-26.1-16.1-29.9l-80-24c-12.8-3.9-26.1 3.4-29.9 16.1-3.8 12.7 3.4 26.1 16.1 29.9l28.2 8.5c-3.1 4.9-5.3 10.4-5.3 16.6 0 17.7 14.3 32 32 32s32-14.4 32-32.1zm199-54.9c-3.8-12.7-17.1-19.9-29.9-16.1l-80 24c-12.7 3.8-19.9 17.2-16.1 29.9 3.1 10.4 12.7 17.1 23 17.1 0 17.7 14.3 32 32 32s32-14.3 32-32c0-6.2-2.2-11.7-5.3-16.6l28.2-8.5c12.7-3.7 19.9-17.1 16.1-29.8z\"],\n    \"arrow-alt-circle-down\": [512, 512, [], \"f358\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm-32-316v116h-67c-10.7 0-16 12.9-8.5 20.5l99 99c4.7 4.7 12.3 4.7 17 0l99-99c7.6-7.6 2.2-20.5-8.5-20.5h-67V140c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12z\"],\n    \"arrow-alt-circle-left\": [512, 512, [], \"f359\", \"M8 256c0 137 111 248 248 248s248-111 248-248S393 8 256 8 8 119 8 256zm448 0c0 110.5-89.5 200-200 200S56 366.5 56 256 145.5 56 256 56s200 89.5 200 200zm-72-20v40c0 6.6-5.4 12-12 12H256v67c0 10.7-12.9 16-20.5 8.5l-99-99c-4.7-4.7-4.7-12.3 0-17l99-99c7.6-7.6 20.5-2.2 20.5 8.5v67h116c6.6 0 12 5.4 12 12z\"],\n    \"arrow-alt-circle-right\": [512, 512, [], \"f35a\", \"M504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zm-448 0c0-110.5 89.5-200 200-200s200 89.5 200 200-89.5 200-200 200S56 366.5 56 256zm72 20v-40c0-6.6 5.4-12 12-12h116v-67c0-10.7 12.9-16 20.5-8.5l99 99c4.7 4.7 4.7 12.3 0 17l-99 99c-7.6 7.6-20.5 2.2-20.5-8.5v-67H140c-6.6 0-12-5.4-12-12z\"],\n    \"arrow-alt-circle-up\": [512, 512, [], \"f35b\", \"M256 504c137 0 248-111 248-248S393 8 256 8 8 119 8 256s111 248 248 248zm0-448c110.5 0 200 89.5 200 200s-89.5 200-200 200S56 366.5 56 256 145.5 56 256 56zm20 328h-40c-6.6 0-12-5.4-12-12V256h-67c-10.7 0-16-12.9-8.5-20.5l99-99c4.7-4.7 12.3-4.7 17 0l99 99c7.6 7.6 2.2 20.5-8.5 20.5h-67v116c0 6.6-5.4 12-12 12z\"],\n    \"bell\": [448, 512, [], \"f0f3\", \"M439.39 362.29c-19.32-20.76-55.47-51.99-55.47-154.29 0-77.7-54.48-139.9-127.94-155.16V32c0-17.67-14.32-32-31.98-32s-31.98 14.33-31.98 32v20.84C118.56 68.1 64.08 130.3 64.08 208c0 102.3-36.15 133.53-55.47 154.29-6 6.45-8.66 14.16-8.61 21.71.11 16.4 12.98 32 32.1 32h383.8c19.12 0 32-15.6 32.1-32 .05-7.55-2.61-15.27-8.61-21.71zM67.53 368c21.22-27.97 44.42-74.33 44.53-159.42 0-.2-.06-.38-.06-.58 0-61.86 50.14-112 112-112s112 50.14 112 112c0 .2-.06.38-.06.58.11 85.1 23.31 131.46 44.53 159.42H67.53zM224 512c35.32 0 63.97-28.65 63.97-64H160.03c0 35.35 28.65 64 63.97 64z\"],\n    \"bell-slash\": [640, 512, [], \"f1f6\", \"M633.99 471.02L36 3.51C29.1-2.01 19.03-.9 13.51 6l-10 12.49C-2.02 25.39-.9 35.46 6 40.98l598 467.51c6.9 5.52 16.96 4.4 22.49-2.49l10-12.49c5.52-6.9 4.41-16.97-2.5-22.49zM163.53 368c16.71-22.03 34.48-55.8 41.4-110.58l-45.47-35.55c-3.27 90.73-36.47 120.68-54.84 140.42-6 6.45-8.66 14.16-8.61 21.71.11 16.4 12.98 32 32.1 32h279.66l-61.4-48H163.53zM320 96c61.86 0 112 50.14 112 112 0 .2-.06.38-.06.58.02 16.84 1.16 31.77 2.79 45.73l59.53 46.54c-8.31-22.13-14.34-51.49-14.34-92.85 0-77.7-54.48-139.9-127.94-155.16V32c0-17.67-14.32-32-31.98-32s-31.98 14.33-31.98 32v20.84c-26.02 5.41-49.45 16.94-69.13 32.72l38.17 29.84C275 103.18 296.65 96 320 96zm0 416c35.32 0 63.97-28.65 63.97-64H256.03c0 35.35 28.65 64 63.97 64z\"],\n    \"bookmark\": [384, 512, [], \"f02e\", \"M336 0H48C21.49 0 0 21.49 0 48v464l192-112 192 112V48c0-26.51-21.49-48-48-48zm0 428.43l-144-84-144 84V54a6 6 0 0 1 6-6h276c3.314 0 6 2.683 6 5.996V428.43z\"],\n    \"building\": [448, 512, [], \"f1ad\", \"M128 148v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12zm140 12h40c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12zm-128 96h40c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12zm128 0h40c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12zm-76 84v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm76 12h40c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12zm180 124v36H0v-36c0-6.6 5.4-12 12-12h19.5V24c0-13.3 10.7-24 24-24h337c13.3 0 24 10.7 24 24v440H436c6.6 0 12 5.4 12 12zM79.5 463H192v-67c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v67h112.5V49L80 48l-.5 415z\"],\n    \"calendar\": [448, 512, [], \"f133\", \"M400 64h-48V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H160V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm-6 400H54c-3.3 0-6-2.7-6-6V160h352v298c0 3.3-2.7 6-6 6z\"],\n    \"calendar-alt\": [448, 512, [], \"f073\", \"M148 288h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm108-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm96 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 96v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm96-260v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48zm-48 346V160H48v298c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n    \"calendar-check\": [448, 512, [], \"f274\", \"M400 64h-48V12c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v52H160V12c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v52H48C21.49 64 0 85.49 0 112v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm-6 400H54a6 6 0 0 1-6-6V160h352v298a6 6 0 0 1-6 6zm-52.849-200.65L198.842 404.519c-4.705 4.667-12.303 4.637-16.971-.068l-75.091-75.699c-4.667-4.705-4.637-12.303.068-16.971l22.719-22.536c4.705-4.667 12.303-4.637 16.97.069l44.104 44.461 111.072-110.181c4.705-4.667 12.303-4.637 16.971.068l22.536 22.718c4.667 4.705 4.636 12.303-.069 16.97z\"],\n    \"calendar-minus\": [448, 512, [], \"f272\", \"M124 328c-6.6 0-12-5.4-12-12v-24c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v24c0 6.6-5.4 12-12 12H124zm324-216v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48zm-48 346V160H48v298c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n    \"calendar-plus\": [448, 512, [], \"f271\", \"M336 292v24c0 6.6-5.4 12-12 12h-76v76c0 6.6-5.4 12-12 12h-24c-6.6 0-12-5.4-12-12v-76h-76c-6.6 0-12-5.4-12-12v-24c0-6.6 5.4-12 12-12h76v-76c0-6.6 5.4-12 12-12h24c6.6 0 12 5.4 12 12v76h76c6.6 0 12 5.4 12 12zm112-180v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48zm-48 346V160H48v298c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n    \"calendar-times\": [448, 512, [], \"f273\", \"M311.7 374.7l-17 17c-4.7 4.7-12.3 4.7-17 0L224 337.9l-53.7 53.7c-4.7 4.7-12.3 4.7-17 0l-17-17c-4.7-4.7-4.7-12.3 0-17l53.7-53.7-53.7-53.7c-4.7-4.7-4.7-12.3 0-17l17-17c4.7-4.7 12.3-4.7 17 0l53.7 53.7 53.7-53.7c4.7-4.7 12.3-4.7 17 0l17 17c4.7 4.7 4.7 12.3 0 17L257.9 304l53.7 53.7c4.8 4.7 4.8 12.3.1 17zM448 112v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48zm-48 346V160H48v298c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n    \"caret-square-down\": [448, 512, [], \"f150\", \"M125.1 208h197.8c10.7 0 16.1 13 8.5 20.5l-98.9 98.3c-4.7 4.7-12.2 4.7-16.9 0l-98.9-98.3c-7.7-7.5-2.3-20.5 8.4-20.5zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n    \"caret-square-left\": [448, 512, [], \"f191\", \"M272 157.1v197.8c0 10.7-13 16.1-20.5 8.5l-98.3-98.9c-4.7-4.7-4.7-12.2 0-16.9l98.3-98.9c7.5-7.7 20.5-2.3 20.5 8.4zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n    \"caret-square-right\": [448, 512, [], \"f152\", \"M176 354.9V157.1c0-10.7 13-16.1 20.5-8.5l98.3 98.9c4.7 4.7 4.7 12.2 0 16.9l-98.3 98.9c-7.5 7.7-20.5 2.3-20.5-8.4zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n    \"caret-square-up\": [448, 512, [], \"f151\", \"M322.9 304H125.1c-10.7 0-16.1-13-8.5-20.5l98.9-98.3c4.7-4.7 12.2-4.7 16.9 0l98.9 98.3c7.7 7.5 2.3 20.5-8.4 20.5zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n    \"chart-bar\": [512, 512, [], \"f080\", \"M396.8 352h22.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-192 0h22.4c6.4 0 12.8-6.4 12.8-12.8V140.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h22.4c6.4 0 12.8-6.4 12.8-12.8V204.8c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zM496 400H48V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16zm-387.2-48h22.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-22.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8z\"],\n    \"check-circle\": [512, 512, [], \"f058\", \"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 48c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m140.204 130.267l-22.536-22.718c-4.667-4.705-12.265-4.736-16.97-.068L215.346 303.697l-59.792-60.277c-4.667-4.705-12.265-4.736-16.97-.069l-22.719 22.536c-4.705 4.667-4.736 12.265-.068 16.971l90.781 91.516c4.667 4.705 12.265 4.736 16.97.068l172.589-171.204c4.704-4.668 4.734-12.266.067-16.971z\"],\n    \"check-square\": [448, 512, [], \"f14a\", \"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zm0 400H48V80h352v352zm-35.864-241.724L191.547 361.48c-4.705 4.667-12.303 4.637-16.97-.068l-90.781-91.516c-4.667-4.705-4.637-12.303.069-16.971l22.719-22.536c4.705-4.667 12.303-4.637 16.97.069l59.792 60.277 141.352-140.216c4.705-4.667 12.303-4.637 16.97.068l22.536 22.718c4.667 4.706 4.637 12.304-.068 16.971z\"],\n    \"circle\": [512, 512, [], \"f111\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200z\"],\n    \"clipboard\": [384, 512, [], \"f328\", \"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"],\n    \"clock\": [512, 512, [], \"f017\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z\"],\n    \"clone\": [512, 512, [], \"f24d\", \"M464 0H144c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h320c26.51 0 48-21.49 48-48v-48h48c26.51 0 48-21.49 48-48V48c0-26.51-21.49-48-48-48zM362 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h42v224c0 26.51 21.49 48 48 48h224v42a6 6 0 0 1-6 6zm96-96H150a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h308a6 6 0 0 1 6 6v308a6 6 0 0 1-6 6z\"],\n    \"closed-captioning\": [512, 512, [], \"f20a\", \"M464 64H48C21.5 64 0 85.5 0 112v288c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm-6 336H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h404c3.3 0 6 2.7 6 6v276c0 3.3-2.7 6-6 6zm-211.1-85.7c1.7 2.4 1.5 5.6-.5 7.7-53.6 56.8-172.8 32.1-172.8-67.9 0-97.3 121.7-119.5 172.5-70.1 2.1 2 2.5 3.2 1 5.7l-17.5 30.5c-1.9 3.1-6.2 4-9.1 1.7-40.8-32-94.6-14.9-94.6 31.2 0 48 51 70.5 92.2 32.6 2.8-2.5 7.1-2.1 9.2.9l19.6 27.7zm190.4 0c1.7 2.4 1.5 5.6-.5 7.7-53.6 56.9-172.8 32.1-172.8-67.9 0-97.3 121.7-119.5 172.5-70.1 2.1 2 2.5 3.2 1 5.7L420 220.2c-1.9 3.1-6.2 4-9.1 1.7-40.8-32-94.6-14.9-94.6 31.2 0 48 51 70.5 92.2 32.6 2.8-2.5 7.1-2.1 9.2.9l19.6 27.7z\"],\n    \"comment\": [512, 512, [], \"f075\", \"M256 32C114.6 32 0 125.1 0 240c0 47.6 19.9 91.2 52.9 126.3C38 405.7 7 439.1 6.5 439.5c-6.6 7-8.4 17.2-4.6 26S14.4 480 24 480c61.5 0 110-25.7 139.1-46.3C192 442.8 223.2 448 256 448c141.4 0 256-93.1 256-208S397.4 32 256 32zm0 368c-26.7 0-53.1-4.1-78.4-12.1l-22.7-7.2-19.5 13.8c-14.3 10.1-33.9 21.4-57.5 29 7.3-12.1 14.4-25.7 19.9-40.2l10.6-28.1-20.6-21.8C69.7 314.1 48 282.2 48 240c0-88.2 93.3-160 208-160s208 71.8 208 160-93.3 160-208 160z\"],\n    \"comment-alt\": [512, 512, [], \"f27a\", \"M448 0H64C28.7 0 0 28.7 0 64v288c0 35.3 28.7 64 64 64h96v84c0 7.1 5.8 12 12 12 2.4 0 4.9-.7 7.1-2.4L304 416h144c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64zm16 352c0 8.8-7.2 16-16 16H288l-12.8 9.6L208 428v-60H64c-8.8 0-16-7.2-16-16V64c0-8.8 7.2-16 16-16h384c8.8 0 16 7.2 16 16v288z\"],\n    \"comment-dots\": [512, 512, [], \"f4ad\", \"M144 208c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm112 0c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm112 0c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zM256 32C114.6 32 0 125.1 0 240c0 47.6 19.9 91.2 52.9 126.3C38 405.7 7 439.1 6.5 439.5c-6.6 7-8.4 17.2-4.6 26S14.4 480 24 480c61.5 0 110-25.7 139.1-46.3C192 442.8 223.2 448 256 448c141.4 0 256-93.1 256-208S397.4 32 256 32zm0 368c-26.7 0-53.1-4.1-78.4-12.1l-22.7-7.2-19.5 13.8c-14.3 10.1-33.9 21.4-57.5 29 7.3-12.1 14.4-25.7 19.9-40.2l10.6-28.1-20.6-21.8C69.7 314.1 48 282.2 48 240c0-88.2 93.3-160 208-160s208 71.8 208 160-93.3 160-208 160z\"],\n    \"comments\": [576, 512, [], \"f086\", \"M532 386.2c27.5-27.1 44-61.1 44-98.2 0-80-76.5-146.1-176.2-157.9C368.3 72.5 294.3 32 208 32 93.1 32 0 103.6 0 192c0 37 16.5 71 44 98.2-15.3 30.7-37.3 54.5-37.7 54.9-6.3 6.7-8.1 16.5-4.4 25 3.6 8.5 12 14 21.2 14 53.5 0 96.7-20.2 125.2-38.8 9.2 2.1 18.7 3.7 28.4 4.9C208.1 407.6 281.8 448 368 448c20.8 0 40.8-2.4 59.8-6.8C456.3 459.7 499.4 480 553 480c9.2 0 17.5-5.5 21.2-14 3.6-8.5 1.9-18.3-4.4-25-.4-.3-22.5-24.1-37.8-54.8zm-392.8-92.3L122.1 305c-14.1 9.1-28.5 16.3-43.1 21.4 2.7-4.7 5.4-9.7 8-14.8l15.5-31.1L77.7 256C64.2 242.6 48 220.7 48 192c0-60.7 73.3-112 160-112s160 51.3 160 112-73.3 112-160 112c-16.5 0-33-1.9-49-5.6l-19.8-4.5zM498.3 352l-24.7 24.4 15.5 31.1c2.6 5.1 5.3 10.1 8 14.8-14.6-5.1-29-12.3-43.1-21.4l-17.1-11.1-19.9 4.6c-16 3.7-32.5 5.6-49 5.6-54 0-102.2-20.1-131.3-49.7C338 339.5 416 272.9 416 192c0-3.4-.4-6.7-.7-10C479.7 196.5 528 238.8 528 288c0 28.7-16.2 50.6-29.7 64z\"],\n    \"compass\": [496, 512, [], \"f14e\", \"M347.94 129.86L203.6 195.83a31.938 31.938 0 0 0-15.77 15.77l-65.97 144.34c-7.61 16.65 9.54 33.81 26.2 26.2l144.34-65.97a31.938 31.938 0 0 0 15.77-15.77l65.97-144.34c7.61-16.66-9.54-33.81-26.2-26.2zm-77.36 148.72c-12.47 12.47-32.69 12.47-45.16 0-12.47-12.47-12.47-32.69 0-45.16 12.47-12.47 32.69-12.47 45.16 0 12.47 12.47 12.47 32.69 0 45.16zM248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm0 448c-110.28 0-200-89.72-200-200S137.72 56 248 56s200 89.72 200 200-89.72 200-200 200z\"],\n    \"copy\": [448, 512, [], \"f0c5\", \"M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z\"],\n    \"copyright\": [512, 512, [], \"f1f9\", \"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 448c-110.532 0-200-89.451-200-200 0-110.531 89.451-200 200-200 110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200zm107.351-101.064c-9.614 9.712-45.53 41.396-104.065 41.396-82.43 0-140.484-61.425-140.484-141.567 0-79.152 60.275-139.401 139.762-139.401 55.531 0 88.738 26.62 97.593 34.779a11.965 11.965 0 0 1 1.936 15.322l-18.155 28.113c-3.841 5.95-11.966 7.282-17.499 2.921-8.595-6.776-31.814-22.538-61.708-22.538-48.303 0-77.916 35.33-77.916 80.082 0 41.589 26.888 83.692 78.277 83.692 32.657 0 56.843-19.039 65.726-27.225 5.27-4.857 13.596-4.039 17.82 1.738l19.865 27.17a11.947 11.947 0 0 1-1.152 15.518z\"],\n    \"credit-card\": [576, 512, [], \"f09d\", \"M527.9 32H48.1C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48.1 48h479.8c26.6 0 48.1-21.5 48.1-48V80c0-26.5-21.5-48-48.1-48zM54.1 80h467.8c3.3 0 6 2.7 6 6v42H48.1V86c0-3.3 2.7-6 6-6zm467.8 352H54.1c-3.3 0-6-2.7-6-6V256h479.8v170c0 3.3-2.7 6-6 6zM192 332v40c0 6.6-5.4 12-12 12h-72c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h72c6.6 0 12 5.4 12 12zm192 0v40c0 6.6-5.4 12-12 12H236c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h136c6.6 0 12 5.4 12 12z\"],\n    \"dizzy\": [496, 512, [], \"f567\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-33.8-217.9c7.8-7.8 7.8-20.5 0-28.3L196.3 192l17.9-17.9c7.8-7.8 7.8-20.5 0-28.3-7.8-7.8-20.5-7.8-28.3 0L168 163.7l-17.8-17.8c-7.8-7.8-20.5-7.8-28.3 0-7.8 7.8-7.8 20.5 0 28.3l17.9 17.9-17.9 17.9c-7.8 7.8-7.8 20.5 0 28.3 7.8 7.8 20.5 7.8 28.3 0l17.8-17.8 17.8 17.8c7.9 7.7 20.5 7.7 28.4-.2zm160-92.2c-7.8-7.8-20.5-7.8-28.3 0L328 163.7l-17.8-17.8c-7.8-7.8-20.5-7.8-28.3 0-7.8 7.8-7.8 20.5 0 28.3l17.9 17.9-17.9 17.9c-7.8 7.8-7.8 20.5 0 28.3 7.8 7.8 20.5 7.8 28.3 0l17.8-17.8 17.8 17.8c7.8 7.8 20.5 7.8 28.3 0 7.8-7.8 7.8-20.5 0-28.3l-17.8-18 17.9-17.9c7.7-7.8 7.7-20.4 0-28.2zM248 272c-35.3 0-64 28.7-64 64s28.7 64 64 64 64-28.7 64-64-28.7-64-64-64z\"],\n    \"dot-circle\": [512, 512, [], \"f192\", \"M256 56c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m0-48C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 168c-44.183 0-80 35.817-80 80s35.817 80 80 80 80-35.817 80-80-35.817-80-80-80z\"],\n    \"edit\": [576, 512, [], \"f044\", \"M402.3 344.9l32-32c5-5 13.7-1.5 13.7 5.7V464c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h273.5c7.1 0 10.7 8.6 5.7 13.7l-32 32c-1.5 1.5-3.5 2.3-5.7 2.3H48v352h352V350.5c0-2.1.8-4.1 2.3-5.6zm156.6-201.8L296.3 405.7l-90.4 10c-26.2 2.9-48.5-19.2-45.6-45.6l10-90.4L432.9 17.1c22.9-22.9 59.9-22.9 82.7 0l43.2 43.2c22.9 22.9 22.9 60 .1 82.8zM460.1 174L402 115.9 216.2 301.8l-7.3 65.3 65.3-7.3L460.1 174zm64.8-79.7l-43.2-43.2c-4.1-4.1-10.8-4.1-14.8 0L436 82l58.1 58.1 30.9-30.9c4-4.2 4-10.8-.1-14.9z\"],\n    \"envelope\": [512, 512, [], \"f0e0\", \"M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\"],\n    \"envelope-open\": [512, 512, [], \"f2b6\", \"M494.586 164.516c-4.697-3.883-111.723-89.95-135.251-108.657C337.231 38.191 299.437 0 256 0c-43.205 0-80.636 37.717-103.335 55.859-24.463 19.45-131.07 105.195-135.15 108.549A48.004 48.004 0 0 0 0 201.485V464c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V201.509a48 48 0 0 0-17.414-36.993zM464 458a6 6 0 0 1-6 6H54a6 6 0 0 1-6-6V204.347c0-1.813.816-3.526 2.226-4.665 15.87-12.814 108.793-87.554 132.364-106.293C200.755 78.88 232.398 48 256 48c23.693 0 55.857 31.369 73.41 45.389 23.573 18.741 116.503 93.493 132.366 106.316a5.99 5.99 0 0 1 2.224 4.663V458zm-31.991-187.704c4.249 5.159 3.465 12.795-1.745 16.981-28.975 23.283-59.274 47.597-70.929 56.863C336.636 362.283 299.205 400 256 400c-43.452 0-81.287-38.237-103.335-55.86-11.279-8.967-41.744-33.413-70.927-56.865-5.21-4.187-5.993-11.822-1.745-16.981l15.258-18.528c4.178-5.073 11.657-5.843 16.779-1.726 28.618 23.001 58.566 47.035 70.56 56.571C200.143 320.631 232.307 352 256 352c23.602 0 55.246-30.88 73.41-45.389 11.994-9.535 41.944-33.57 70.563-56.568 5.122-4.116 12.601-3.346 16.778 1.727l15.258 18.526z\"],\n    \"eye\": [576, 512, [], \"f06e\", \"M288 144a110.94 110.94 0 0 0-31.24 5 55.4 55.4 0 0 1 7.24 27 56 56 0 0 1-56 56 55.4 55.4 0 0 1-27-7.24A111.71 111.71 0 1 0 288 144zm284.52 97.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400c-98.65 0-189.09-55-237.93-144C98.91 167 189.34 112 288 112s189.09 55 237.93 144C477.1 345 386.66 400 288 400z\"],\n    \"eye-slash\": [640, 512, [], \"f070\", \"M634 471L36 3.51A16 16 0 0 0 13.51 6l-10 12.49A16 16 0 0 0 6 41l598 467.49a16 16 0 0 0 22.49-2.49l10-12.49A16 16 0 0 0 634 471zM296.79 146.47l134.79 105.38C429.36 191.91 380.48 144 320 144a112.26 112.26 0 0 0-23.21 2.47zm46.42 219.07L208.42 260.16C210.65 320.09 259.53 368 320 368a113 113 0 0 0 23.21-2.46zM320 112c98.65 0 189.09 55 237.93 144a285.53 285.53 0 0 1-44 60.2l37.74 29.5a333.7 333.7 0 0 0 52.9-75.11 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64c-36.7 0-71.71 7-104.63 18.81l46.41 36.29c18.94-4.3 38.34-7.1 58.22-7.1zm0 288c-98.65 0-189.08-55-237.93-144a285.47 285.47 0 0 1 44.05-60.19l-37.74-29.5a333.6 333.6 0 0 0-52.89 75.1 32.35 32.35 0 0 0 0 29.19C89.72 376.41 197.08 448 320 448c36.7 0 71.71-7.05 104.63-18.81l-46.41-36.28C359.28 397.2 339.89 400 320 400z\"],\n    \"file\": [384, 512, [], \"f15b\", \"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48z\"],\n    \"file-alt\": [384, 512, [], \"f15c\", \"M288 248v28c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-28c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm-12 72H108c-6.6 0-12 5.4-12 12v28c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-28c0-6.6-5.4-12-12-12zm108-188.1V464c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V48C0 21.5 21.5 0 48 0h204.1C264.8 0 277 5.1 286 14.1L369.9 98c9 8.9 14.1 21.2 14.1 33.9zm-128-80V128h76.1L256 51.9zM336 464V176H232c-13.3 0-24-10.7-24-24V48H48v416h288z\"],\n    \"file-archive\": [384, 512, [], \"f1c6\", \"M128.3 160v32h32v-32zm64-96h-32v32h32zm-64 32v32h32V96zm64 32h-32v32h32zm177.6-30.1L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM256 51.9l76.1 76.1H256zM336 464H48V48h79.7v16h32V48H208v104c0 13.3 10.7 24 24 24h104zM194.2 265.7c-1.1-5.6-6-9.7-11.8-9.7h-22.1v-32h-32v32l-19.7 97.1C102 385.6 126.8 416 160 416c33.1 0 57.9-30.2 51.5-62.6zm-33.9 124.4c-17.9 0-32.4-12.1-32.4-27s14.5-27 32.4-27 32.4 12.1 32.4 27-14.5 27-32.4 27zm32-198.1h-32v32h32z\"],\n    \"file-audio\": [384, 512, [], \"f1c7\", \"M369.941 97.941l-83.882-83.882A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v416c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48V131.882a48 48 0 0 0-14.059-33.941zM332.118 128H256V51.882L332.118 128zM48 464V48h160v104c0 13.255 10.745 24 24 24h104v288H48zm144-76.024c0 10.691-12.926 16.045-20.485 8.485L136 360.486h-28c-6.627 0-12-5.373-12-12v-56c0-6.627 5.373-12 12-12h28l35.515-36.947c7.56-7.56 20.485-2.206 20.485 8.485v135.952zm41.201-47.13c9.051-9.297 9.06-24.133.001-33.439-22.149-22.752 12.235-56.246 34.395-33.481 27.198 27.94 27.212 72.444.001 100.401-21.793 22.386-56.947-10.315-34.397-33.481z\"],\n    \"file-code\": [384, 512, [], \"f1c9\", \"M149.9 349.1l-.2-.2-32.8-28.9 32.8-28.9c3.6-3.2 4-8.8.8-12.4l-.2-.2-17.4-18.6c-3.4-3.6-9-3.7-12.4-.4l-57.7 54.1c-3.7 3.5-3.7 9.4 0 12.8l57.7 54.1c1.6 1.5 3.8 2.4 6 2.4 2.4 0 4.8-1 6.4-2.8l17.4-18.6c3.3-3.5 3.1-9.1-.4-12.4zm220-251.2L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM256 51.9l76.1 76.1H256zM336 464H48V48h160v104c0 13.3 10.7 24 24 24h104zM209.6 214c-4.7-1.4-9.5 1.3-10.9 6L144 408.1c-1.4 4.7 1.3 9.6 6 10.9l24.4 7.1c4.7 1.4 9.6-1.4 10.9-6L240 231.9c1.4-4.7-1.3-9.6-6-10.9zm24.5 76.9l.2.2 32.8 28.9-32.8 28.9c-3.6 3.2-4 8.8-.8 12.4l.2.2 17.4 18.6c3.3 3.5 8.9 3.7 12.4.4l57.7-54.1c3.7-3.5 3.7-9.4 0-12.8l-57.7-54.1c-3.5-3.3-9.1-3.2-12.4.4l-17.4 18.6c-3.3 3.5-3.1 9.1.4 12.4z\"],\n    \"file-excel\": [384, 512, [], \"f1c3\", \"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm212-240h-28.8c-4.4 0-8.4 2.4-10.5 6.3-18 33.1-22.2 42.4-28.6 57.7-13.9-29.1-6.9-17.3-28.6-57.7-2.1-3.9-6.2-6.3-10.6-6.3H124c-9.3 0-15 10-10.4 18l46.3 78-46.3 78c-4.7 8 1.1 18 10.4 18h28.9c4.4 0 8.4-2.4 10.5-6.3 21.7-40 23-45 28.6-57.7 14.9 30.2 5.9 15.9 28.6 57.7 2.1 3.9 6.2 6.3 10.6 6.3H260c9.3 0 15-10 10.4-18L224 320c.7-1.1 30.3-50.5 46.3-78 4.7-8-1.1-18-10.3-18z\"],\n    \"file-image\": [384, 512, [], \"f1c5\", \"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm32-48h224V288l-23.5-23.5c-4.7-4.7-12.3-4.7-17 0L176 352l-39.5-39.5c-4.7-4.7-12.3-4.7-17 0L80 352v64zm48-240c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z\"],\n    \"file-pdf\": [384, 512, [], \"f1c1\", \"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm250.2-143.7c-12.2-12-47-8.7-64.4-6.5-17.2-10.5-28.7-25-36.8-46.3 3.9-16.1 10.1-40.6 5.4-56-4.2-26.2-37.8-23.6-42.6-5.9-4.4 16.1-.4 38.5 7 67.1-10 23.9-24.9 56-35.4 74.4-20 10.3-47 26.2-51 46.2-3.3 15.8 26 55.2 76.1-31.2 22.4-7.4 46.8-16.5 68.4-20.1 18.9 10.2 41 17 55.8 17 25.5 0 28-28.2 17.5-38.7zm-198.1 77.8c5.1-13.7 24.5-29.5 30.4-35-19 30.3-30.4 35.7-30.4 35zm81.6-190.6c7.4 0 6.7 32.1 1.8 40.8-4.4-13.9-4.3-40.8-1.8-40.8zm-24.4 136.6c9.7-16.9 18-37 24.7-54.7 8.3 15.1 18.9 27.2 30.1 35.5-20.8 4.3-38.9 13.1-54.8 19.2zm131.6-5s-5 6-37.3-7.8c35.1-2.6 40.9 5.4 37.3 7.8z\"],\n    \"file-powerpoint\": [384, 512, [], \"f1c4\", \"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm72-60V236c0-6.6 5.4-12 12-12h69.2c36.7 0 62.8 27 62.8 66.3 0 74.3-68.7 66.5-95.5 66.5V404c0 6.6-5.4 12-12 12H132c-6.6 0-12-5.4-12-12zm48.5-87.4h23c7.9 0 13.9-2.4 18.1-7.2 8.5-9.8 8.4-28.5.1-37.8-4.1-4.6-9.9-7-17.4-7h-23.9v52z\"],\n    \"file-video\": [384, 512, [], \"f1c8\", \"M369.941 97.941l-83.882-83.882A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v416c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48V131.882a48 48 0 0 0-14.059-33.941zM332.118 128H256V51.882L332.118 128zM48 464V48h160v104c0 13.255 10.745 24 24 24h104v288H48zm228.687-211.303L224 305.374V268c0-11.046-8.954-20-20-20H100c-11.046 0-20 8.954-20 20v104c0 11.046 8.954 20 20 20h104c11.046 0 20-8.954 20-20v-37.374l52.687 52.674C286.704 397.318 304 390.28 304 375.986V264.011c0-14.311-17.309-21.319-27.313-11.314z\"],\n    \"file-word\": [384, 512, [], \"f1c2\", \"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm220.1-208c-5.7 0-10.6 4-11.7 9.5-20.6 97.7-20.4 95.4-21 103.5-.2-1.2-.4-2.6-.7-4.3-.8-5.1.3.2-23.6-99.5-1.3-5.4-6.1-9.2-11.7-9.2h-13.3c-5.5 0-10.3 3.8-11.7 9.1-24.4 99-24 96.2-24.8 103.7-.1-1.1-.2-2.5-.5-4.2-.7-5.2-14.1-73.3-19.1-99-1.1-5.6-6-9.7-11.8-9.7h-16.8c-7.8 0-13.5 7.3-11.7 14.8 8 32.6 26.7 109.5 33.2 136 1.3 5.4 6.1 9.1 11.7 9.1h25.2c5.5 0 10.3-3.7 11.6-9.1l17.9-71.4c1.5-6.2 2.5-12 3-17.3l2.9 17.3c.1.4 12.6 50.5 17.9 71.4 1.3 5.3 6.1 9.1 11.6 9.1h24.7c5.5 0 10.3-3.7 11.6-9.1 20.8-81.9 30.2-119 34.5-136 1.9-7.6-3.8-14.9-11.6-14.9h-15.8z\"],\n    \"flag\": [512, 512, [], \"f024\", \"M336.174 80c-49.132 0-93.305-32-161.913-32-31.301 0-58.303 6.482-80.721 15.168a48.04 48.04 0 0 0 2.142-20.727C93.067 19.575 74.167 1.594 51.201.104 23.242-1.71 0 20.431 0 48c0 17.764 9.657 33.262 24 41.562V496c0 8.837 7.163 16 16 16h16c8.837 0 16-7.163 16-16v-83.443C109.869 395.28 143.259 384 199.826 384c49.132 0 93.305 32 161.913 32 58.479 0 101.972-22.617 128.548-39.981C503.846 367.161 512 352.051 512 335.855V95.937c0-34.459-35.264-57.768-66.904-44.117C409.193 67.309 371.641 80 336.174 80zM464 336c-21.783 15.412-60.824 32-102.261 32-59.945 0-102.002-32-161.913-32-43.361 0-96.379 9.403-127.826 24V128c21.784-15.412 60.824-32 102.261-32 59.945 0 102.002 32 161.913 32 43.271 0 96.32-17.366 127.826-32v240z\"],\n    \"flushed\": [496, 512, [], \"f579\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm96-312c-44.2 0-80 35.8-80 80s35.8 80 80 80 80-35.8 80-80-35.8-80-80-80zm0 128c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm0-72c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zm-112 24c0-44.2-35.8-80-80-80s-80 35.8-80 80 35.8 80 80 80 80-35.8 80-80zm-80 48c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm0-72c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zm160 144H184c-13.2 0-24 10.8-24 24s10.8 24 24 24h128c13.2 0 24-10.8 24-24s-10.8-24-24-24z\"],\n    \"folder\": [512, 512, [], \"f07b\", \"M464 128H272l-54.63-54.63c-6-6-14.14-9.37-22.63-9.37H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48zm0 272H48V112h140.12l54.63 54.63c6 6 14.14 9.37 22.63 9.37H464v224z\"],\n    \"folder-open\": [576, 512, [], \"f07c\", \"M527.9 224H480v-48c0-26.5-21.5-48-48-48H272l-64-64H48C21.5 64 0 85.5 0 112v288c0 26.5 21.5 48 48 48h400c16.5 0 31.9-8.5 40.7-22.6l79.9-128c20-31.9-3-73.4-40.7-73.4zM48 118c0-3.3 2.7-6 6-6h134.1l64 64H426c3.3 0 6 2.7 6 6v42H152c-16.8 0-32.4 8.8-41.1 23.2L48 351.4zm400 282H72l77.2-128H528z\"],\n    \"font-awesome-logo-full\": [3992, 512, [\"Font Awesome\"], \"f4e6\", \"M454.6 0H57.4C25.9 0 0 25.9 0 57.4v397.3C0 486.1 25.9 512 57.4 512h397.3c31.4 0 57.4-25.9 57.4-57.4V57.4C512 25.9 486.1 0 454.6 0zm-58.9 324.9c0 4.8-4.1 6.9-8.9 8.9-19.2 8.1-39.7 15.7-61.5 15.7-40.5 0-68.7-44.8-163.2 2.5v51.8c0 30.3-45.7 30.2-45.7 0v-250c-9-7-15-17.9-15-30.3 0-21 17.1-38.2 38.2-38.2 21 0 38.2 17.1 38.2 38.2 0 12.2-5.8 23.2-14.9 30.2v21c37.1-12 65.5-34.4 146.1-3.4 26.6 11.4 68.7-15.7 76.5-15.7 5.5 0 10.3 4.1 10.3 8.9v160.4zm432.9-174.2h-137v70.1H825c39.8 0 40.4 62.2 0 62.2H691.6v105.6c0 45.5-70.7 46.4-70.7 0V128.3c0-22 18-39.8 39.8-39.8h167.8c39.6 0 40.5 62.2.1 62.2zm191.1 23.4c-169.3 0-169.1 252.4 0 252.4 169.9 0 169.9-252.4 0-252.4zm0 196.1c-81.6 0-82.1-139.8 0-139.8 82.5 0 82.4 139.8 0 139.8zm372.4 53.4c-17.5 0-31.4-13.9-31.4-31.4v-117c0-62.4-72.6-52.5-99.1-16.4v133.4c0 41.5-63.3 41.8-63.3 0V208c0-40 63.1-41.6 63.1 0v3.4c43.3-51.6 162.4-60.4 162.4 39.3v141.5c.3 30.4-31.5 31.4-31.7 31.4zm179.7 2.9c-44.3 0-68.3-22.9-68.3-65.8V235.2H1488c-35.6 0-36.7-55.3 0-55.3h15.5v-37.3c0-41.3 63.8-42.1 63.8 0v37.5h24.9c35.4 0 35.7 55.3 0 55.3h-24.9v108.5c0 29.6 26.1 26.3 27.4 26.3 31.4 0 52.6 56.3-22.9 56.3zM1992 123c-19.5-50.2-95.5-50-114.5 0-107.3 275.7-99.5 252.7-99.5 262.8 0 42.8 58.3 51.2 72.1 14.4l13.5-35.9H2006l13 35.9c14.2 37.7 72.1 27.2 72.1-14.4 0-10.1 5.3 6.8-99.1-262.8zm-108.9 179.1l51.7-142.9 51.8 142.9h-103.5zm591.3-85.6l-53.7 176.3c-12.4 41.2-72 41-84 0l-42.3-135.9-42.3 135.9c-12.4 40.9-72 41.2-84.5 0l-54.2-176.3c-12.5-39.4 49.8-56.1 60.2-16.9L2213 342l45.3-139.5c10.9-32.7 59.6-34.7 71.2 0l45.3 139.5 39.3-142.4c10.3-38.3 72.6-23.8 60.3 16.9zm275.4 75.1c0-42.4-33.9-117.5-119.5-117.5-73.2 0-124.4 56.3-124.4 126 0 77.2 55.3 126.4 128.5 126.4 31.7 0 93-11.5 93-39.8 0-18.3-21.1-31.5-39.3-22.4-49.4 26.2-109 8.4-115.9-43.8h148.3c16.3 0 29.3-13.4 29.3-28.9zM2571 277.7c9.5-73.4 113.9-68.6 118.6 0H2571zm316.7 148.8c-31.4 0-81.6-10.5-96.6-31.9-12.4-17 2.5-39.8 21.8-39.8 16.3 0 36.8 22.9 77.7 22.9 27.4 0 40.4-11 40.4-25.8 0-39.8-142.9-7.4-142.9-102 0-40.4 35.3-75.7 98.6-75.7 31.4 0 74.1 9.9 87.6 29.4 10.8 14.8-1.4 36.2-20.9 36.2-15.1 0-26.7-17.3-66.2-17.3-22.9 0-37.8 10.5-37.8 23.8 0 35.9 142.4 6 142.4 103.1-.1 43.7-37.4 77.1-104.1 77.1zm266.8-252.4c-169.3 0-169.1 252.4 0 252.4 170.1 0 169.6-252.4 0-252.4zm0 196.1c-81.8 0-82-139.8 0-139.8 82.5 0 82.4 139.8 0 139.8zm476.9 22V268.7c0-53.8-61.4-45.8-85.7-10.5v134c0 41.3-63.8 42.1-63.8 0V268.7c0-52.1-59.5-47.4-85.7-10.1v133.6c0 41.5-63.3 41.8-63.3 0V208c0-40 63.1-41.6 63.1 0v3.4c9.9-14.4 41.8-37.3 78.6-37.3 35.3 0 57.7 16.4 66.7 43.8 13.9-21.8 45.8-43.8 82.6-43.8 44.3 0 70.7 23.4 70.7 72.7v145.3c.5 17.3-13.5 31.4-31.9 31.4 3.5.1-31.3 1.1-31.3-31.3zM3992 291.6c0-42.4-32.4-117.5-117.9-117.5-73.2 0-127.5 56.3-127.5 126 0 77.2 58.3 126.4 131.6 126.4 31.7 0 91.5-11.5 91.5-39.8 0-18.3-21.1-31.5-39.3-22.4-49.4 26.2-110.5 8.4-117.5-43.8h149.8c16.3 0 29.1-13.4 29.3-28.9zm-180.5-13.9c9.7-74.4 115.9-68.3 120.1 0h-120.1z\"],\n    \"frown\": [496, 512, [], \"f119\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160-64c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm-80 128c-40.2 0-78 17.7-103.8 48.6-8.5 10.2-7.1 25.3 3.1 33.8 10.2 8.4 25.3 7.1 33.8-3.1 16.6-19.9 41-31.4 66.9-31.4s50.3 11.4 66.9 31.4c8.1 9.7 23.1 11.9 33.8 3.1 10.2-8.5 11.5-23.6 3.1-33.8C326 321.7 288.2 304 248 304z\"],\n    \"frown-open\": [496, 512, [], \"f57a\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-48-248c0-17.7-14.3-32-32-32s-32 14.3-32 32 14.3 32 32 32 32-14.3 32-32zm128-32c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm-80 112c-35.6 0-88.8 21.3-95.8 61.2-2 11.8 9 21.5 20.5 18.1 31.2-9.6 59.4-15.3 75.3-15.3s44.1 5.7 75.3 15.3c11.4 3.5 22.5-6.3 20.5-18.1-7-39.9-60.2-61.2-95.8-61.2z\"],\n    \"futbol\": [496, 512, [], \"f1e3\", \"M483.8 179.4C449.8 74.6 352.6 8 248.1 8c-25.4 0-51.2 3.9-76.7 12.2C41.2 62.5-30.1 202.4 12.2 332.6 46.2 437.4 143.4 504 247.9 504c25.4 0 51.2-3.9 76.7-12.2 130.2-42.3 201.5-182.2 159.2-312.4zm-74.5 193.7l-52.2 6.4-43.7-60.9 24.4-75.2 71.1-22.1 38.9 36.4c-.2 30.7-7.4 61.1-21.7 89.2-4.7 9.3-10.7 17.8-16.8 26.2zm0-235.4l-10.4 53.1-70.7 22-64.2-46.5V92.5l47.4-26.2c39.2 13 73.4 38 97.9 71.4zM184.9 66.4L232 92.5v73.8l-64.2 46.5-70.6-22-10.1-52.5c24.3-33.4 57.9-58.6 97.8-71.9zM139 379.5L85.9 373c-14.4-20.1-37.3-59.6-37.8-115.3l39-36.4 71.1 22.2 24.3 74.3-43.5 61.7zm48.2 67l-22.4-48.1 43.6-61.7H287l44.3 61.7-22.4 48.1c-6.2 1.8-57.6 20.4-121.7 0z\"],\n    \"gem\": [576, 512, [], \"f3a5\", \"M464 0H112c-4 0-7.8 2-10 5.4L2 152.6c-2.9 4.4-2.6 10.2.7 14.2l276 340.8c4.8 5.9 13.8 5.9 18.6 0l276-340.8c3.3-4.1 3.6-9.8.7-14.2L474.1 5.4C471.8 2 468.1 0 464 0zm-19.3 48l63.3 96h-68.4l-51.7-96h56.8zm-202.1 0h90.7l51.7 96H191l51.6-96zm-111.3 0h56.8l-51.7 96H68l63.3-96zm-43 144h51.4L208 352 88.3 192zm102.9 0h193.6L288 435.3 191.2 192zM368 352l68.2-160h51.4L368 352z\"],\n    \"grimace\": [496, 512, [], \"f57f\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160 0c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm16 16H152c-26.5 0-48 21.5-48 48v32c0 26.5 21.5 48 48 48h192c26.5 0 48-21.5 48-48v-32c0-26.5-21.5-48-48-48zm-168 96h-24c-8.8 0-16-7.2-16-16v-8h40v24zm0-40h-40v-8c0-8.8 7.2-16 16-16h24v24zm64 40h-48v-24h48v24zm0-40h-48v-24h48v24zm64 40h-48v-24h48v24zm0-40h-48v-24h48v24zm56 24c0 8.8-7.2 16-16 16h-24v-24h40v8zm0-24h-40v-24h24c8.8 0 16 7.2 16 16v8z\"],\n    \"grin\": [496, 512, [], \"f580\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm105.6-151.4c-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.9-3.1-19.4 5.4-17.7 15.3 7.9 47.1 71.3 80 123.3 80s115.3-32.9 123.3-80c1.6-9.8-7.7-18.4-17.7-15.3zM168 240c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160 0c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32z\"],\n    \"grin-alt\": [496, 512, [], \"f581\", \"M200.3 248c12.4-18.7 15.1-37.3 15.7-56-.5-18.7-3.3-37.3-15.7-56-8-12-25.1-11.4-32.7 0-12.4 18.7-15.1 37.3-15.7 56 .5 18.7 3.3 37.3 15.7 56 8.1 12 25.2 11.4 32.7 0zm128 0c12.4-18.7 15.1-37.3 15.7-56-.5-18.7-3.3-37.3-15.7-56-8-12-25.1-11.4-32.7 0-12.4 18.7-15.1 37.3-15.7 56 .5 18.7 3.3 37.3 15.7 56 8.1 12 25.2 11.4 32.7 0zM248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm105.6-151.4c-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.9-3.1-19.4 5.3-17.7 15.3 7.9 47.2 71.3 80 123.3 80s115.3-32.9 123.3-80c1.6-9.8-7.7-18.4-17.7-15.3z\"],\n    \"grin-beam\": [496, 512, [], \"f582\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm105.6-151.4c-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.8-3.1-19.4 5.3-17.7 15.3 7.9 47.1 71.3 80 123.3 80s115.3-32.9 123.3-80c1.6-9.8-7.7-18.4-17.7-15.3zm-235.9-72.9c3.5 1.1 7.4-.5 9.3-3.7l9.5-17c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c2.1 3.7 6.2 4.7 9.3 3.7 3.6-1.1 6-4.5 5.7-8.3-3.3-42.1-32.2-71.4-56-71.4s-52.7 29.3-56 71.4c-.3 3.7 2.1 7.2 5.7 8.3zm160 0c3.5 1.1 7.4-.5 9.3-3.7l9.5-17c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c2.1 3.7 6.2 4.7 9.3 3.7 3.6-1.1 6-4.5 5.7-8.3-3.3-42.1-32.2-71.4-56-71.4s-52.7 29.3-56 71.4c-.3 3.7 2.1 7.2 5.7 8.3z\"],\n    \"grin-beam-sweat\": [496, 512, [], \"f583\", \"M440 160c29.5 0 53.3-26.3 53.3-58.7 0-25-31.7-75.5-46.2-97.3-3.6-5.3-10.7-5.3-14.2 0-14.5 21.8-46.2 72.3-46.2 97.3 0 32.4 23.8 58.7 53.3 58.7zM248 400c51.9 0 115.3-32.9 123.3-80 1.7-9.9-7.7-18.5-17.7-15.3-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.8-3.1-19.4 5.3-17.7 15.3 8 47.1 71.4 80 123.3 80zm130.3-168.3c3.6-1.1 6-4.5 5.7-8.3-3.3-42.1-32.2-71.4-56-71.4s-52.7 29.3-56 71.4c-.3 3.7 2.1 7.2 5.7 8.3 3.5 1.1 7.4-.5 9.3-3.7l9.5-17c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c2.1 3.6 6.2 4.6 9.3 3.7zm105.3-52.9c-24.6 15.7-46 12.9-46.4 12.9 6.9 20.2 10.8 41.8 10.8 64.3 0 110.3-89.7 200-200 200S48 366.3 48 256 137.7 56 248 56c39.8 0 76.8 11.8 108 31.9 1.7-9.5 6.3-24.1 17.2-45.7C336.4 20.6 293.7 8 248 8 111 8 0 119 0 256s111 248 248 248 248-111 248-248c0-27-4.4-52.9-12.4-77.2zM168 189.4c12.3 0 23.8 7.9 31.5 21.6l9.5 17c2.1 3.7 6.2 4.7 9.3 3.7 3.6-1.1 6-4.5 5.7-8.3-3.3-42.1-32.2-71.4-56-71.4s-52.7 29.3-56 71.4c-.3 3.7 2.1 7.2 5.7 8.3 3.5 1.1 7.4-.5 9.3-3.7l9.5-17c7.7-13.8 19.2-21.6 31.5-21.6z\"],\n    \"grin-hearts\": [496, 512, [], \"f584\", \"M353.6 304.6c-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.8-3.1-19.4 5.3-17.7 15.3 7.9 47.2 71.3 80 123.3 80s115.3-32.9 123.3-80c1.6-9.8-7.7-18.4-17.7-15.3zm-152.8-48.9c4.5 1.2 9.2-1.5 10.5-6l19.4-69.9c5.6-20.3-7.4-41.1-28.8-44.5-18.6-3-36.4 9.8-41.5 27.9l-2 7.1-7.1-1.9c-18.2-4.7-38.2 4.3-44.9 22-7.7 20.2 3.8 41.9 24.2 47.2l70.2 18.1zm188.8-65.3c-6.7-17.6-26.7-26.7-44.9-22l-7.1 1.9-2-7.1c-5-18.1-22.8-30.9-41.5-27.9-21.4 3.4-34.4 24.2-28.8 44.5l19.4 69.9c1.2 4.5 5.9 7.2 10.5 6l70.2-18.2c20.4-5.3 31.9-26.9 24.2-47.1zM248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200z\"],\n    \"grin-squint\": [496, 512, [], \"f585\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm105.6-151.4c-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.9-3.1-19.4 5.4-17.7 15.3 7.9 47.1 71.3 80 123.3 80s115.3-32.9 123.3-80c1.6-9.8-7.7-18.4-17.7-15.3zm-234.7-40.8c3.6 4.2 9.9 5.7 15.3 2.5l80-48c3.6-2.2 5.8-6.1 5.8-10.3s-2.2-8.1-5.8-10.3l-80-48c-5.1-3-11.4-1.9-15.3 2.5-3.8 4.5-3.8 11-.1 15.5l33.6 40.3-33.6 40.3c-3.8 4.5-3.7 11.1.1 15.5zm242.9 2.5c5.4 3.2 11.7 1.7 15.3-2.5 3.8-4.5 3.8-11 .1-15.5L343.6 208l33.6-40.3c3.8-4.5 3.7-11-.1-15.5-3.8-4.4-10.2-5.4-15.3-2.5l-80 48c-3.6 2.2-5.8 6.1-5.8 10.3s2.2 8.1 5.8 10.3l80 48z\"],\n    \"grin-squint-tears\": [512, 512, [], \"f586\", \"M117.1 384.1c-25.8 3.7-84 13.7-100.9 30.6-21.9 21.9-21.5 57.9.9 80.3s58.3 22.8 80.3.9C114.3 479 124.3 420.8 128 395c.8-6.4-4.6-11.8-10.9-10.9zm-41.2-41.7C40.3 268 53 176.1 114.6 114.6 152.4 76.8 202.6 56 256 56c36.2 0 70.8 9.8 101.2 27.7 3.8-20.3 8-36.1 12-48.3C333.8 17.2 294.9 8 256 8 192.5 8 129.1 32.2 80.6 80.6c-74.1 74.1-91.3 183.4-52 274 12.2-4.1 27.7-8.3 47.3-12.2zm352.3-187.6c45 76.6 34.9 176.9-30.8 242.6-37.8 37.8-88 58.6-141.4 58.6-30.5 0-59.8-7-86.4-19.8-3.9 19.5-8 35-12.2 47.2 31.4 13.6 65 20.6 98.7 20.6 63.5 0 126.9-24.2 175.4-72.6 78.1-78.1 93.1-195.4 45.2-288.6-12.3 4-28.2 8.1-48.5 12zm-33.3-26.9c25.8-3.7 84-13.7 100.9-30.6 21.9-21.9 21.5-57.9-.9-80.3s-58.3-22.8-80.3-.9C397.7 33 387.7 91.2 384 117c-.8 6.4 4.6 11.8 10.9 10.9zm-187 108.3c-3-3-7.2-4.2-11.4-3.2L106 255.7c-5.7 1.4-9.5 6.7-9.1 12.6.5 5.8 5.1 10.5 10.9 11l52.3 4.8 4.8 52.3c.5 5.8 5.2 10.4 11 10.9h.9c5.5 0 10.3-3.7 11.7-9.1l22.6-90.5c1-4.2-.2-8.5-3.2-11.5zm39.7-25.1l90.5-22.6c5.7-1.4 9.5-6.7 9.1-12.6-.5-5.8-5.1-10.5-10.9-11l-52.3-4.8-4.8-52.3c-.5-5.8-5.2-10.4-11-10.9-5.6-.1-11.2 3.4-12.6 9.1L233 196.5c-1 4.1.2 8.4 3.2 11.4 5 5 11.3 3.2 11.4 3.2zm52 88.5c-29.1 29.1-59.7 52.9-83.9 65.4-9.2 4.8-10 17.5-1.7 23.4 38.9 27.7 107 6.2 143.7-30.6S416 253 388.3 214.1c-5.8-8.2-18.5-7.6-23.4 1.7-12.3 24.2-36.2 54.7-65.3 83.8z\"],\n    \"grin-stars\": [496, 512, [], \"f587\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm105.6-151.4c-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.8-3.1-19.4 5.3-17.7 15.3 7.9 47.2 71.3 80 123.3 80s115.3-32.9 123.3-80c1.6-9.8-7.7-18.4-17.7-15.3zm-227.9-57.5c-1 6.2 5.4 11 11 7.9l31.3-16.3 31.3 16.3c5.6 3.1 12-1.7 11-7.9l-6-34.9 25.4-24.6c4.5-4.5 1.9-12.2-4.3-13.2l-34.9-5-15.5-31.6c-2.9-5.8-11-5.8-13.9 0l-15.5 31.6-34.9 5c-6.2.9-8.9 8.6-4.3 13.2l25.4 24.6-6.1 34.9zm259.7-72.7l-34.9-5-15.5-31.6c-2.9-5.8-11-5.8-13.9 0l-15.5 31.6-34.9 5c-6.2.9-8.9 8.6-4.3 13.2l25.4 24.6-6 34.9c-1 6.2 5.4 11 11 7.9l31.3-16.3 31.3 16.3c5.6 3.1 12-1.7 11-7.9l-6-34.9 25.4-24.6c4.5-4.6 1.8-12.2-4.4-13.2z\"],\n    \"grin-tears\": [640, 512, [], \"f588\", \"M117.1 256.1c-25.8 3.7-84 13.7-100.9 30.6-21.9 21.9-21.5 57.9.9 80.3s58.3 22.8 80.3.9C114.3 351 124.3 292.8 128 267c.8-6.4-4.6-11.8-10.9-10.9zm506.7 30.6c-16.9-16.9-75.1-26.9-100.9-30.6-6.3-.9-11.7 4.5-10.8 10.8 3.7 25.8 13.7 84 30.6 100.9 21.9 21.9 57.9 21.5 80.3-.9 22.3-22.3 22.7-58.3.8-80.2zm-126.6 61.7C463.8 412.3 396.9 456 320 456c-76.9 0-143.8-43.7-177.2-107.6-12.5 37.4-25.2 43.9-28.3 46.5C159.1 460.7 234.5 504 320 504s160.9-43.3 205.5-109.1c-3.2-2.7-15.9-9.2-28.3-46.5zM122.7 224.5C137.9 129.2 220.5 56 320 56c99.5 0 182.1 73.2 197.3 168.5 2.1-.2 5.2-2.4 49.5 7C554.4 106 448.7 8 320 8S85.6 106 73.2 231.4c44.5-9.4 47.1-7.2 49.5-6.9zM320 400c51.9 0 115.3-32.9 123.3-80 1.7-9.9-7.7-18.5-17.7-15.3-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.8-3.1-19.4 5.3-17.7 15.3 8 47.1 71.4 80 123.3 80zm130.3-168.3c3.6-1.1 6-4.5 5.7-8.3-3.3-42.1-32.2-71.4-56-71.4s-52.7 29.3-56 71.4c-.3 3.7 2.1 7.2 5.7 8.3 3.5 1.1 7.4-.5 9.3-3.7l9.5-17c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c2.1 3.6 6.2 4.6 9.3 3.7zM240 189.4c12.3 0 23.8 7.9 31.5 21.6l9.5 17c2.1 3.7 6.2 4.7 9.3 3.7 3.6-1.1 6-4.5 5.7-8.3-3.3-42.1-32.2-71.4-56-71.4s-52.7 29.3-56 71.4c-.3 3.7 2.1 7.2 5.7 8.3 3.5 1.1 7.4-.5 9.3-3.7l9.5-17c7.7-13.8 19.2-21.6 31.5-21.6z\"],\n    \"grin-tongue\": [496, 512, [], \"f589\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm64 400c0 35.6-29.1 64.5-64.9 64-35.1-.5-63.1-29.8-63.1-65v-42.8l17.7-8.8c15-7.5 31.5 1.7 34.9 16.5l2.8 12.1c2.1 9.2 15.2 9.2 17.3 0l2.8-12.1c3.4-14.8 19.8-24.1 34.9-16.5l17.7 8.8V408zm28.2 25.3c2.2-8.1 3.8-16.5 3.8-25.3v-43.5c14.2-12.4 24.4-27.5 27.3-44.5 1.7-9.9-7.7-18.5-17.7-15.3-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.9-3.1-19.4 5.3-17.7 15.3 2.9 17 13.1 32.1 27.3 44.5V408c0 8.8 1.6 17.2 3.8 25.3C91.8 399.9 48 333 48 256c0-110.3 89.7-200 200-200s200 89.7 200 200c0 77-43.8 143.9-107.8 177.3zM168 176c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm160 0c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32z\"],\n    \"grin-tongue-squint\": [496, 512, [], \"f58a\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm64 400c0 35.6-29.1 64.5-64.9 64-35.1-.5-63.1-29.8-63.1-65v-42.8l17.7-8.8c15-7.5 31.5 1.7 34.9 16.5l2.8 12.1c2.1 9.2 15.2 9.2 17.3 0l2.8-12.1c3.4-14.8 19.8-24.1 34.9-16.5l17.7 8.8V408zm28.2 25.3c2.2-8.1 3.8-16.5 3.8-25.3v-43.5c14.2-12.4 24.4-27.5 27.3-44.5 1.7-9.9-7.7-18.5-17.7-15.3-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.9-3.1-19.4 5.3-17.7 15.3 2.9 17 13.1 32.1 27.3 44.5V408c0 8.8 1.6 17.2 3.8 25.3C91.8 399.9 48 333 48 256c0-110.3 89.7-200 200-200s200 89.7 200 200c0 77-43.8 143.9-107.8 177.3zm36.9-281.1c-3.8-4.4-10.3-5.5-15.3-2.5l-80 48c-3.6 2.2-5.8 6.1-5.8 10.3s2.2 8.1 5.8 10.3l80 48c5.4 3.2 11.7 1.7 15.3-2.5 3.8-4.5 3.8-11 .1-15.5L343.6 208l33.6-40.3c3.8-4.5 3.7-11.1-.1-15.5zm-162.9 45.5l-80-48c-5-3-11.4-2-15.3 2.5-3.8 4.5-3.8 11-.1 15.5l33.6 40.3-33.6 40.3c-3.8 4.5-3.7 11 .1 15.5 3.6 4.2 9.9 5.7 15.3 2.5l80-48c3.6-2.2 5.8-6.1 5.8-10.3s-2.2-8.1-5.8-10.3z\"],\n    \"grin-tongue-wink\": [496, 512, [], \"f58b\", \"M152 180c-25.7 0-55.9 16.9-59.8 42.1-.8 5 1.7 10 6.1 12.4 4.4 2.4 9.9 1.8 13.7-1.6l9.5-8.5c14.8-13.2 46.2-13.2 61 0l9.5 8.5c2.5 2.2 8 4.7 13.7 1.6 4.4-2.4 6.9-7.4 6.1-12.4-3.9-25.2-34.1-42.1-59.8-42.1zm176-52c-44.2 0-80 35.8-80 80s35.8 80 80 80 80-35.8 80-80-35.8-80-80-80zm0 128c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm0-72c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zM248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm64 400c0 35.6-29.1 64.5-64.9 64-35.1-.5-63.1-29.8-63.1-65v-42.8l17.7-8.8c15-7.5 31.5 1.7 34.9 16.5l2.8 12.1c2.1 9.2 15.2 9.2 17.3 0l2.8-12.1c3.4-14.8 19.8-24.1 34.9-16.5l17.7 8.8V408zm28.2 25.3c2.2-8.1 3.8-16.5 3.8-25.3v-43.5c14.2-12.4 24.4-27.5 27.3-44.5 1.7-9.9-7.7-18.5-17.7-15.3-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.9-3.1-19.4 5.3-17.7 15.3 2.9 17 13.1 32.1 27.3 44.5V408c0 8.8 1.6 17.2 3.8 25.3C91.8 399.9 48 333 48 256c0-110.3 89.7-200 200-200s200 89.7 200 200c0 77-43.8 143.9-107.8 177.3z\"],\n    \"grin-wink\": [496, 512, [], \"f58c\", \"M328 180c-25.69 0-55.88 16.92-59.86 42.12-1.75 11.22 11.5 18.24 19.83 10.84l9.55-8.48c14.81-13.19 46.16-13.19 60.97 0l9.55 8.48c8.48 7.43 21.56.25 19.83-10.84C383.88 196.92 353.69 180 328 180zm-160 60c17.67 0 32-14.33 32-32s-14.33-32-32-32-32 14.33-32 32 14.33 32 32 32zm185.55 64.64c-25.93 8.3-64.4 13.06-105.55 13.06s-79.62-4.75-105.55-13.06c-9.94-3.13-19.4 5.37-17.71 15.34C132.67 367.13 196.06 400 248 400s115.33-32.87 123.26-80.02c1.68-9.89-7.67-18.48-17.71-15.34zM248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm0 448c-110.28 0-200-89.72-200-200S137.72 56 248 56s200 89.72 200 200-89.72 200-200 200z\"],\n    \"hand-lizard\": [576, 512, [], \"f258\", \"M556.686 290.542L410.328 64.829C397.001 44.272 374.417 32 349.917 32H56C25.121 32 0 57.122 0 88v8c0 44.112 35.888 80 80 80h196.042l-18.333 48H144c-48.523 0-88 39.477-88 88 0 30.879 25.121 56 56 56h131.552c2.987 0 5.914.549 8.697 1.631L352 408.418V480h224V355.829c0-23.225-6.679-45.801-19.314-65.287zM528 432H400v-23.582c0-19.948-12.014-37.508-30.604-44.736l-99.751-38.788A71.733 71.733 0 0 0 243.552 320H112c-4.411 0-8-3.589-8-8 0-22.056 17.944-40 40-40h113.709c19.767 0 37.786-12.407 44.84-30.873l24.552-64.281c8.996-23.553-8.428-48.846-33.63-48.846H80c-17.645 0-32-14.355-32-32v-8c0-4.411 3.589-8 8-8h293.917c8.166 0 15.693 4.09 20.137 10.942l146.358 225.715A71.84 71.84 0 0 1 528 355.829V432z\"],\n    \"hand-paper\": [448, 512, [], \"f256\", \"M372.57 112.641v-10.825c0-43.612-40.52-76.691-83.039-65.546-25.629-49.5-94.09-47.45-117.982.747C130.269 26.456 89.144 57.945 89.144 102v126.13c-19.953-7.427-43.308-5.068-62.083 8.871-29.355 21.796-35.794 63.333-14.55 93.153L132.48 498.569a32 32 0 0 0 26.062 13.432h222.897c14.904 0 27.835-10.289 31.182-24.813l30.184-130.958A203.637 203.637 0 0 0 448 310.564V179c0-40.62-35.523-71.992-75.43-66.359zm27.427 197.922c0 11.731-1.334 23.469-3.965 34.886L368.707 464h-201.92L51.591 302.303c-14.439-20.27 15.023-42.776 29.394-22.605l27.128 38.079c8.995 12.626 29.031 6.287 29.031-9.283V102c0-25.645 36.571-24.81 36.571.691V256c0 8.837 7.163 16 16 16h6.856c8.837 0 16-7.163 16-16V67c0-25.663 36.571-24.81 36.571.691V256c0 8.837 7.163 16 16 16h6.856c8.837 0 16-7.163 16-16V101.125c0-25.672 36.57-24.81 36.57.691V256c0 8.837 7.163 16 16 16h6.857c8.837 0 16-7.163 16-16v-76.309c0-26.242 36.57-25.64 36.57-.691v131.563z\"],\n    \"hand-peace\": [448, 512, [], \"f25b\", \"M362.146 191.976c-13.71-21.649-38.761-34.016-65.006-30.341V74c0-40.804-32.811-74-73.141-74-40.33 0-73.14 33.196-73.14 74L160 168l-18.679-78.85C126.578 50.843 83.85 32.11 46.209 47.208 8.735 62.238-9.571 104.963 5.008 142.85l55.757 144.927c-30.557 24.956-43.994 57.809-24.733 92.218l54.853 97.999C102.625 498.97 124.73 512 148.575 512h205.702c30.744 0 57.558-21.44 64.555-51.797l27.427-118.999a67.801 67.801 0 0 0 1.729-15.203L448 256c0-44.956-43.263-77.343-85.854-64.024zM399.987 326c0 1.488-.169 2.977-.502 4.423l-27.427 119.001c-1.978 8.582-9.29 14.576-17.782 14.576H148.575c-6.486 0-12.542-3.621-15.805-9.449l-54.854-98c-4.557-8.141-2.619-18.668 4.508-24.488l26.647-21.764a16 16 0 0 0 4.812-18.139l-64.09-166.549C37.226 92.956 84.37 74.837 96.51 106.389l59.784 155.357A16 16 0 0 0 171.227 272h11.632c8.837 0 16-7.163 16-16V74c0-34.375 50.281-34.43 50.281 0v182c0 8.837 7.163 16 16 16h6.856c8.837 0 16-7.163 16-16v-28c0-25.122 36.567-25.159 36.567 0v28c0 8.837 7.163 16 16 16h6.856c8.837 0 16-7.163 16-16 0-25.12 36.567-25.16 36.567 0v70z\"],\n    \"hand-point-down\": [448, 512, [], \"f0a7\", \"M188.8 512c45.616 0 83.2-37.765 83.2-83.2v-35.647a93.148 93.148 0 0 0 22.064-7.929c22.006 2.507 44.978-3.503 62.791-15.985C409.342 368.1 448 331.841 448 269.299V248c0-60.063-40-98.512-40-127.2v-2.679c4.952-5.747 8-13.536 8-22.12V32c0-17.673-12.894-32-28.8-32H156.8C140.894 0 128 14.327 128 32v64c0 8.584 3.048 16.373 8 22.12v2.679c0 6.964-6.193 14.862-23.668 30.183l-.148.129-.146.131c-9.937 8.856-20.841 18.116-33.253 25.851C48.537 195.798 0 207.486 0 252.8c0 56.928 35.286 92 83.2 92 8.026 0 15.489-.814 22.4-2.176V428.8c0 45.099 38.101 83.2 83.2 83.2zm0-48c-18.7 0-35.2-16.775-35.2-35.2V270.4c-17.325 0-35.2 26.4-70.4 26.4-26.4 0-35.2-20.625-35.2-44 0-8.794 32.712-20.445 56.1-34.926 14.575-9.074 27.225-19.524 39.875-30.799 18.374-16.109 36.633-33.836 39.596-59.075h176.752C364.087 170.79 400 202.509 400 248v21.299c0 40.524-22.197 57.124-61.325 50.601-8.001 14.612-33.979 24.151-53.625 12.925-18.225 19.365-46.381 17.787-61.05 4.95V428.8c0 18.975-16.225 35.2-35.2 35.2zM328 64c0-13.255 10.745-24 24-24s24 10.745 24 24-10.745 24-24 24-24-10.745-24-24z\"],\n    \"hand-point-left\": [512, 512, [], \"f0a5\", \"M0 220.8C0 266.416 37.765 304 83.2 304h35.647a93.148 93.148 0 0 0 7.929 22.064c-2.507 22.006 3.503 44.978 15.985 62.791C143.9 441.342 180.159 480 242.701 480H264c60.063 0 98.512-40 127.2-40h2.679c5.747 4.952 13.536 8 22.12 8h64c17.673 0 32-12.894 32-28.8V188.8c0-15.906-14.327-28.8-32-28.8h-64c-8.584 0-16.373 3.048-22.12 8H391.2c-6.964 0-14.862-6.193-30.183-23.668l-.129-.148-.131-.146c-8.856-9.937-18.116-20.841-25.851-33.253C316.202 80.537 304.514 32 259.2 32c-56.928 0-92 35.286-92 83.2 0 8.026.814 15.489 2.176 22.4H83.2C38.101 137.6 0 175.701 0 220.8zm48 0c0-18.7 16.775-35.2 35.2-35.2h158.4c0-17.325-26.4-35.2-26.4-70.4 0-26.4 20.625-35.2 44-35.2 8.794 0 20.445 32.712 34.926 56.1 9.074 14.575 19.524 27.225 30.799 39.875 16.109 18.374 33.836 36.633 59.075 39.596v176.752C341.21 396.087 309.491 432 264 432h-21.299c-40.524 0-57.124-22.197-50.601-61.325-14.612-8.001-24.151-33.979-12.925-53.625-19.365-18.225-17.787-46.381-4.95-61.05H83.2C64.225 256 48 239.775 48 220.8zM448 360c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24z\"],\n    \"hand-point-right\": [512, 512, [], \"f0a4\", \"M428.8 137.6h-86.177a115.52 115.52 0 0 0 2.176-22.4c0-47.914-35.072-83.2-92-83.2-45.314 0-57.002 48.537-75.707 78.784-7.735 12.413-16.994 23.317-25.851 33.253l-.131.146-.129.148C135.662 161.807 127.764 168 120.8 168h-2.679c-5.747-4.952-13.536-8-22.12-8H32c-17.673 0-32 12.894-32 28.8v230.4C0 435.106 14.327 448 32 448h64c8.584 0 16.373-3.048 22.12-8h2.679c28.688 0 67.137 40 127.2 40h21.299c62.542 0 98.8-38.658 99.94-91.145 12.482-17.813 18.491-40.785 15.985-62.791A93.148 93.148 0 0 0 393.152 304H428.8c45.435 0 83.2-37.584 83.2-83.2 0-45.099-38.101-83.2-83.2-83.2zm0 118.4h-91.026c12.837 14.669 14.415 42.825-4.95 61.05 11.227 19.646 1.687 45.624-12.925 53.625 6.524 39.128-10.076 61.325-50.6 61.325H248c-45.491 0-77.21-35.913-120-39.676V215.571c25.239-2.964 42.966-21.222 59.075-39.596 11.275-12.65 21.725-25.3 30.799-39.875C232.355 112.712 244.006 80 252.8 80c23.375 0 44 8.8 44 35.2 0 35.2-26.4 53.075-26.4 70.4h158.4c18.425 0 35.2 16.5 35.2 35.2 0 18.975-16.225 35.2-35.2 35.2zM88 384c0 13.255-10.745 24-24 24s-24-10.745-24-24 10.745-24 24-24 24 10.745 24 24z\"],\n    \"hand-point-up\": [448, 512, [], \"f0a6\", \"M105.6 83.2v86.177a115.52 115.52 0 0 0-22.4-2.176c-47.914 0-83.2 35.072-83.2 92 0 45.314 48.537 57.002 78.784 75.707 12.413 7.735 23.317 16.994 33.253 25.851l.146.131.148.129C129.807 376.338 136 384.236 136 391.2v2.679c-4.952 5.747-8 13.536-8 22.12v64c0 17.673 12.894 32 28.8 32h230.4c15.906 0 28.8-14.327 28.8-32v-64c0-8.584-3.048-16.373-8-22.12V391.2c0-28.688 40-67.137 40-127.2v-21.299c0-62.542-38.658-98.8-91.145-99.94-17.813-12.482-40.785-18.491-62.791-15.985A93.148 93.148 0 0 0 272 118.847V83.2C272 37.765 234.416 0 188.8 0c-45.099 0-83.2 38.101-83.2 83.2zm118.4 0v91.026c14.669-12.837 42.825-14.415 61.05 4.95 19.646-11.227 45.624-1.687 53.625 12.925 39.128-6.524 61.325 10.076 61.325 50.6V264c0 45.491-35.913 77.21-39.676 120H183.571c-2.964-25.239-21.222-42.966-39.596-59.075-12.65-11.275-25.3-21.725-39.875-30.799C80.712 279.645 48 267.994 48 259.2c0-23.375 8.8-44 35.2-44 35.2 0 53.075 26.4 70.4 26.4V83.2c0-18.425 16.5-35.2 35.2-35.2 18.975 0 35.2 16.225 35.2 35.2zM352 424c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24z\"],\n    \"hand-pointer\": [448, 512, [], \"f25a\", \"M358.182 179.361c-19.493-24.768-52.679-31.945-79.872-19.098-15.127-15.687-36.182-22.487-56.595-19.629V67c0-36.944-29.736-67-66.286-67S89.143 30.056 89.143 67v161.129c-19.909-7.41-43.272-5.094-62.083 8.872-29.355 21.795-35.793 63.333-14.55 93.152l109.699 154.001C134.632 501.59 154.741 512 176 512h178.286c30.802 0 57.574-21.5 64.557-51.797l27.429-118.999A67.873 67.873 0 0 0 448 326v-84c0-46.844-46.625-79.273-89.818-62.639zM80.985 279.697l27.126 38.079c8.995 12.626 29.031 6.287 29.031-9.283V67c0-25.12 36.571-25.16 36.571 0v175c0 8.836 7.163 16 16 16h6.857c8.837 0 16-7.164 16-16v-35c0-25.12 36.571-25.16 36.571 0v35c0 8.836 7.163 16 16 16H272c8.837 0 16-7.164 16-16v-21c0-25.12 36.571-25.16 36.571 0v21c0 8.836 7.163 16 16 16h6.857c8.837 0 16-7.164 16-16 0-25.121 36.571-25.16 36.571 0v84c0 1.488-.169 2.977-.502 4.423l-27.43 119.001c-1.978 8.582-9.29 14.576-17.782 14.576H176c-5.769 0-11.263-2.878-14.697-7.697l-109.712-154c-14.406-20.223 14.994-42.818 29.394-22.606zM176.143 400v-96c0-8.837 6.268-16 14-16h6c7.732 0 14 7.163 14 16v96c0 8.837-6.268 16-14 16h-6c-7.733 0-14-7.163-14-16zm75.428 0v-96c0-8.837 6.268-16 14-16h6c7.732 0 14 7.163 14 16v96c0 8.837-6.268 16-14 16h-6c-7.732 0-14-7.163-14-16zM327 400v-96c0-8.837 6.268-16 14-16h6c7.732 0 14 7.163 14 16v96c0 8.837-6.268 16-14 16h-6c-7.732 0-14-7.163-14-16z\"],\n    \"hand-rock\": [512, 512, [], \"f255\", \"M408.864 79.052c-22.401-33.898-66.108-42.273-98.813-23.588-29.474-31.469-79.145-31.093-108.334-.022-47.16-27.02-108.71 5.055-110.671 60.806C44.846 105.407 0 140.001 0 187.429v56.953c0 32.741 14.28 63.954 39.18 85.634l97.71 85.081c4.252 3.702 3.11 5.573 3.11 32.903 0 17.673 14.327 32 32 32h252c17.673 0 32-14.327 32-32 0-23.513-1.015-30.745 3.982-42.37l42.835-99.656c6.094-14.177 9.183-29.172 9.183-44.568V146.963c0-52.839-54.314-88.662-103.136-67.911zM464 261.406a64.505 64.505 0 0 1-5.282 25.613l-42.835 99.655c-5.23 12.171-7.883 25.04-7.883 38.25V432H188v-10.286c0-16.37-7.14-31.977-19.59-42.817l-97.71-85.08C56.274 281.255 48 263.236 48 244.381v-56.953c0-33.208 52-33.537 52 .677v41.228a16 16 0 0 0 5.493 12.067l7 6.095A16 16 0 0 0 139 235.429V118.857c0-33.097 52-33.725 52 .677v26.751c0 8.836 7.164 16 16 16h7c8.836 0 16-7.164 16-16v-41.143c0-33.134 52-33.675 52 .677v40.466c0 8.836 7.163 16 16 16h7c8.837 0 16-7.164 16-16v-27.429c0-33.03 52-33.78 52 .677v26.751c0 8.836 7.163 16 16 16h7c8.837 0 16-7.164 16-16 0-33.146 52-33.613 52 .677v114.445z\"],\n    \"hand-scissors\": [512, 512, [], \"f257\", \"M256 480l70-.013c5.114 0 10.231-.583 15.203-1.729l118.999-27.427C490.56 443.835 512 417.02 512 386.277V180.575c0-23.845-13.03-45.951-34.005-57.69l-97.999-54.853c-34.409-19.261-67.263-5.824-92.218 24.733L142.85 37.008c-37.887-14.579-80.612 3.727-95.642 41.201-15.098 37.642 3.635 80.37 41.942 95.112L168 192l-94-9.141c-40.804 0-74 32.811-74 73.14 0 40.33 33.196 73.141 74 73.141h87.635c-3.675 26.245 8.692 51.297 30.341 65.006C178.657 436.737 211.044 480 256 480zm0-48.013c-25.16 0-25.12-36.567 0-36.567 8.837 0 16-7.163 16-16v-6.856c0-8.837-7.163-16-16-16h-28c-25.159 0-25.122-36.567 0-36.567h28c8.837 0 16-7.163 16-16v-6.856c0-8.837-7.163-16-16-16H74c-34.43 0-34.375-50.281 0-50.281h182c8.837 0 16-7.163 16-16v-11.632a16 16 0 0 0-10.254-14.933L106.389 128.51c-31.552-12.14-13.432-59.283 19.222-46.717l166.549 64.091a16.001 16.001 0 0 0 18.139-4.812l21.764-26.647c5.82-7.127 16.348-9.064 24.488-4.508l98 54.854c5.828 3.263 9.449 9.318 9.449 15.805v205.701c0 8.491-5.994 15.804-14.576 17.782l-119.001 27.427a19.743 19.743 0 0 1-4.423.502h-70z\"],\n    \"hand-spock\": [512, 512, [], \"f259\", \"M501.03053,116.17605c-19.39059-31.50779-51.24406-35.72849-66.31044-35.01756-14.11325-50.81051-62.0038-54.08-70.73816-54.08a74.03091,74.03091,0,0,0-72.23816,58.916l-4.64648,22.66014-13.68357-53.207c-9.09569-35.37107-46.412-64.05074-89.66-53.07223a73.89749,73.89749,0,0,0-55.121,78.94722,73.68273,73.68273,0,0,0-64.8495,94.42181l24.35933,82.19721c-38.24017-7.54492-62.79677,16.18358-68.11512,21.84764a73.6791,73.6791,0,0,0,3.19921,104.19329l91.36509,85.9765A154.164,154.164,0,0,0,220.62279,512h107.4549A127.30079,127.30079,0,0,0,452.3392,413.86139l57.623-241.96272A73.20274,73.20274,0,0,0,501.03053,116.17605Zm-37.7597,44.60544L405.64788,402.74812a79.46616,79.46616,0,0,1-77.57019,61.25972H220.62279a106.34052,106.34052,0,0,1-73.1366-28.998l-91.369-85.98041C31.34381,325.72669,66.61133,288.131,91.39644,311.5392l51.123,48.10739c5.42577,5.10937,13.48239.71679,13.48239-5.82617a246.79914,246.79914,0,0,0-10.17771-70.1523l-36.01362-121.539c-9.7324-32.88279,39.69916-47.27145,49.38664-14.625l31.3437,105.77923c5.59374,18.90428,33.78119,10.71288,28.9648-8.00781L177.06427,80.23662c-8.50389-33.1035,41.43157-45.64646,49.86515-12.83593l47.32609,184.035c4.42773,17.24218,29.16207,16.5039,32.71089-.80468l31.791-154.9706c6.81054-33.1074,57.51748-24.10741,50.11906,11.96288L360.32764,246.78924c-3.72265,18.10936,23.66793,24.63084,28.05659,6.21679L413.185,148.85962C421.1498,115.512,471.14,127.79713,463.27083,160.78149Z\"],\n    \"handshake\": [640, 512, [], \"f2b5\", \"M519.2 127.9l-47.6-47.6A56.252 56.252 0 0 0 432 64H205.2c-14.8 0-29.1 5.9-39.6 16.3L118 127.9H0v255.7h64c17.6 0 31.8-14.2 31.9-31.7h9.1l84.6 76.4c30.9 25.1 73.8 25.7 105.6 3.8 12.5 10.8 26 15.9 41.1 15.9 18.2 0 35.3-7.4 48.8-24 22.1 8.7 48.2 2.6 64-16.8l26.2-32.3c5.6-6.9 9.1-14.8 10.9-23h57.9c.1 17.5 14.4 31.7 31.9 31.7h64V127.9H519.2zM48 351.6c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16c0 8.9-7.2 16-16 16zm390-6.9l-26.1 32.2c-2.8 3.4-7.8 4-11.3 1.2l-23.9-19.4-30 36.5c-6 7.3-15 4.8-18 2.4l-36.8-31.5-15.6 19.2c-13.9 17.1-39.2 19.7-55.3 6.6l-97.3-88H96V175.8h41.9l61.7-61.6c2-.8 3.7-1.5 5.7-2.3H262l-38.7 35.5c-29.4 26.9-31.1 72.3-4.4 101.3 14.8 16.2 61.2 41.2 101.5 4.4l8.2-7.5 108.2 87.8c3.4 2.8 3.9 7.9 1.2 11.3zm106-40.8h-69.2c-2.3-2.8-4.9-5.4-7.7-7.7l-102.7-83.4 12.5-11.4c6.5-6 7-16.1 1-22.6L367 167.1c-6-6.5-16.1-6.9-22.6-1l-55.2 50.6c-9.5 8.7-25.7 9.4-34.6 0-9.3-9.9-8.5-25.1 1.2-33.9l65.6-60.1c7.4-6.8 17-10.5 27-10.5l83.7-.2c2.1 0 4.1.8 5.5 2.3l61.7 61.6H544v128zm48 47.7c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16c0 8.9-7.2 16-16 16z\"],\n    \"hdd\": [576, 512, [], \"f0a0\", \"M567.403 235.642L462.323 84.589A48 48 0 0 0 422.919 64H153.081a48 48 0 0 0-39.404 20.589L8.597 235.642A48.001 48.001 0 0 0 0 263.054V400c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V263.054c0-9.801-3-19.366-8.597-27.412zM153.081 112h269.838l77.913 112H75.168l77.913-112zM528 400H48V272h480v128zm-32-64c0 17.673-14.327 32-32 32s-32-14.327-32-32 14.327-32 32-32 32 14.327 32 32zm-96 0c0 17.673-14.327 32-32 32s-32-14.327-32-32 14.327-32 32-32 32 14.327 32 32z\"],\n    \"heart\": [512, 512, [], \"f004\", \"M458.4 64.3C400.6 15.7 311.3 23 256 79.3 200.7 23 111.4 15.6 53.6 64.3-21.6 127.6-10.6 230.8 43 285.5l175.4 178.7c10 10.2 23.4 15.9 37.6 15.9 14.3 0 27.6-5.6 37.6-15.8L469 285.6c53.5-54.7 64.7-157.9-10.6-221.3zm-23.6 187.5L259.4 430.5c-2.4 2.4-4.4 2.4-6.8 0L77.2 251.8c-36.5-37.2-43.9-107.6 7.3-150.7 38.9-32.7 98.9-27.8 136.5 10.5l35 35.7 35-35.7c37.8-38.5 97.8-43.2 136.5-10.6 51.1 43.1 43.5 113.9 7.3 150.8z\"],\n    \"hospital\": [448, 512, [], \"f0f8\", \"M128 244v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12zm140 12h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12zm-76 84v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm76 12h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12zm180 124v36H0v-36c0-6.627 5.373-12 12-12h19.5V85.035C31.5 73.418 42.245 64 55.5 64H144V24c0-13.255 10.745-24 24-24h112c13.255 0 24 10.745 24 24v40h88.5c13.255 0 24 9.418 24 21.035V464H436c6.627 0 12 5.373 12 12zM79.5 463H192v-67c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v67h112.5V112H304v24c0 13.255-10.745 24-24 24H168c-13.255 0-24-10.745-24-24v-24H79.5v351zM266 64h-26V38a6 6 0 0 0-6-6h-20a6 6 0 0 0-6 6v26h-26a6 6 0 0 0-6 6v20a6 6 0 0 0 6 6h26v26a6 6 0 0 0 6 6h20a6 6 0 0 0 6-6V96h26a6 6 0 0 0 6-6V70a6 6 0 0 0-6-6z\"],\n    \"hourglass\": [384, 512, [], \"f254\", \"M368 48h4c6.627 0 12-5.373 12-12V12c0-6.627-5.373-12-12-12H12C5.373 0 0 5.373 0 12v24c0 6.627 5.373 12 12 12h4c0 80.564 32.188 165.807 97.18 208C47.899 298.381 16 383.9 16 464h-4c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h360c6.627 0 12-5.373 12-12v-24c0-6.627-5.373-12-12-12h-4c0-80.564-32.188-165.807-97.18-208C336.102 213.619 368 128.1 368 48zM64 48h256c0 101.62-57.307 184-128 184S64 149.621 64 48zm256 416H64c0-101.62 57.308-184 128-184s128 82.38 128 184z\"],\n    \"id-badge\": [384, 512, [], \"f2c1\", \"M336 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zm0 464H48V48h288v416zM144 112h96c8.8 0 16-7.2 16-16s-7.2-16-16-16h-96c-8.8 0-16 7.2-16 16s7.2 16 16 16zm48 176c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm-89.6 128h179.2c12.4 0 22.4-8.6 22.4-19.2v-19.2c0-31.8-30.1-57.6-67.2-57.6-10.8 0-18.7 8-44.8 8-26.9 0-33.4-8-44.8-8-37.1 0-67.2 25.8-67.2 57.6v19.2c0 10.6 10 19.2 22.4 19.2z\"],\n    \"id-card\": [576, 512, [], \"f2c2\", \"M528 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm0 400H303.2c.9-4.5.8 3.6.8-22.4 0-31.8-30.1-57.6-67.2-57.6-10.8 0-18.7 8-44.8 8-26.9 0-33.4-8-44.8-8-37.1 0-67.2 25.8-67.2 57.6 0 26-.2 17.9.8 22.4H48V144h480v288zm-168-80h112c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8H360c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8zm0-64h112c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8H360c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8zm0-64h112c4.4 0 8-3.6 8-8v-16c0-4.4-3.6-8-8-8H360c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8zm-168 96c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64z\"],\n    \"image\": [512, 512, [], \"f03e\", \"M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm-6 336H54a6 6 0 0 1-6-6V118a6 6 0 0 1 6-6h404a6 6 0 0 1 6 6v276a6 6 0 0 1-6 6zM128 152c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zM96 352h320v-80l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L192 304l-39.515-39.515c-4.686-4.686-12.284-4.686-16.971 0L96 304v48z\"],\n    \"images\": [576, 512, [], \"f302\", \"M480 416v16c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V176c0-26.51 21.49-48 48-48h16v48H54a6 6 0 0 0-6 6v244a6 6 0 0 0 6 6h372a6 6 0 0 0 6-6v-10h48zm42-336H150a6 6 0 0 0-6 6v244a6 6 0 0 0 6 6h372a6 6 0 0 0 6-6V86a6 6 0 0 0-6-6zm6-48c26.51 0 48 21.49 48 48v256c0 26.51-21.49 48-48 48H144c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h384zM264 144c0 22.091-17.909 40-40 40s-40-17.909-40-40 17.909-40 40-40 40 17.909 40 40zm-72 96l39.515-39.515c4.686-4.686 12.284-4.686 16.971 0L288 240l103.515-103.515c4.686-4.686 12.284-4.686 16.971 0L480 208v80H192v-48z\"],\n    \"keyboard\": [576, 512, [], \"f11c\", \"M528 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm8 336c0 4.411-3.589 8-8 8H48c-4.411 0-8-3.589-8-8V112c0-4.411 3.589-8 8-8h480c4.411 0 8 3.589 8 8v288zM170 270v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm96 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm96 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm96 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm-336 82v-28c0-6.627-5.373-12-12-12H82c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm384 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zM122 188v-28c0-6.627-5.373-12-12-12H82c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm96 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm96 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm96 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm96 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm-98 158v-16c0-6.627-5.373-12-12-12H180c-6.627 0-12 5.373-12 12v16c0 6.627 5.373 12 12 12h216c6.627 0 12-5.373 12-12z\"],\n    \"kiss\": [496, 512, [], \"f596\", \"M168 176c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm136 132c0-19.2-28.8-41.5-71.5-44-3.8-.4-7.4 2.4-8.2 6.2-.9 3.8 1.1 7.7 4.7 9.2l16.9 7.2c13 5.5 20.8 13.5 20.8 21.5s-7.8 16-20.7 21.5l-17 7.2c-5.7 2.4-6 12.2 0 14.8l16.9 7.2c13 5.5 20.8 13.5 20.8 21.5s-7.8 16-20.7 21.5l-17 7.2c-3.6 1.5-5.6 5.4-4.7 9.2.8 3.6 4.1 6.2 7.8 6.2h.5c42.8-2.5 71.5-24.8 71.5-44 0-13-13.4-27.3-35.2-36C290.6 335.3 304 321 304 308zM248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm80-280c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32z\"],\n    \"kiss-beam\": [496, 512, [], \"f597\", \"M168 152c-23.8 0-52.7 29.3-56 71.4-.3 3.7 2 7.2 5.6 8.3 3.5 1 7.5-.5 9.3-3.7l9.5-17c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c2.1 3.7 6.2 4.7 9.3 3.7 3.6-1.1 5.9-4.5 5.6-8.3-3.1-42.1-32-71.4-55.8-71.4zM248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm56-148c0-19.2-28.8-41.5-71.5-44-3.8-.4-7.4 2.4-8.2 6.2-.9 3.8 1.1 7.7 4.7 9.2l16.9 7.2c13 5.5 20.8 13.5 20.8 21.5s-7.8 16-20.7 21.5l-17 7.2c-5.7 2.4-6 12.2 0 14.8l16.9 7.2c13 5.5 20.8 13.5 20.8 21.5s-7.8 16-20.7 21.5l-17 7.2c-3.6 1.5-5.6 5.4-4.7 9.2.8 3.6 4.1 6.2 7.8 6.2h.5c42.8-2.5 71.5-24.8 71.5-44 0-13-13.4-27.3-35.2-36C290.6 335.3 304 321 304 308zm24-156c-23.8 0-52.7 29.3-56 71.4-.3 3.7 2 7.2 5.6 8.3 3.5 1 7.5-.5 9.3-3.7l9.5-17c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c2.1 3.7 6.2 4.7 9.3 3.7 3.6-1.1 5.9-4.5 5.6-8.3-3.1-42.1-32-71.4-55.8-71.4z\"],\n    \"kiss-wink-heart\": [504, 512, [], \"f598\", \"M304 308.5c0-19.2-28.8-41.5-71.5-44-3.8-.4-7.4 2.4-8.2 6.2-.9 3.8 1.1 7.7 4.7 9.2l16.9 7.2c13 5.5 20.8 13.5 20.8 21.5s-7.8 16-20.7 21.5l-17 7.2c-5.7 2.4-6 12.2 0 14.8l16.9 7.2c13 5.5 20.8 13.5 20.8 21.5s-7.8 16-20.7 21.5l-17 7.2c-3.6 1.5-5.6 5.4-4.7 9.2.8 3.6 4.1 6.2 7.8 6.2h.5c42.8-2.5 71.5-24.8 71.5-44 0-13-13.4-27.3-35.2-36 21.7-9.1 35.1-23.4 35.1-36.4zm70.5-83.5l9.5 8.5c3.8 3.3 9.3 4 13.7 1.6 4.4-2.4 6.9-7.4 6.1-12.4-4-25.2-34.2-42.1-59.8-42.1s-55.9 16.9-59.8 42.1c-.8 5 1.7 10 6.1 12.4 5.8 3.1 11.2.7 13.7-1.6l9.5-8.5c14.8-13.2 46.2-13.2 61 0zM136 208.5c0 17.7 14.3 32 32 32s32-14.3 32-32-14.3-32-32-32-32 14.3-32 32zm365.1 194c-8-20.8-31.5-31.5-53.1-25.9l-8.4 2.2-2.3-8.4c-5.9-21.4-27-36.5-49-33-25.2 4-40.6 28.6-34 52.6l22.9 82.6c1.5 5.3 7 8.5 12.4 7.1l83-21.5c24.1-6.3 37.7-31.8 28.5-55.7zM334 436.3c-26.1 12.5-55.2 19.7-86 19.7-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200c0 22.1-3.7 43.3-10.4 63.2 9 6.4 17 14.2 22.6 23.9 6.4.1 12.6 1.4 18.6 2.9 10.9-27.9 17.1-58.2 17.1-90C496 119 385 8 248 8S0 119 0 256s111 248 248 248c35.4 0 68.9-7.5 99.4-20.9-2.5-7.3 4.3 17.2-13.4-46.8z\"],\n    \"laugh\": [496, 512, [], \"f599\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm141.4 389.4c-37.8 37.8-88 58.6-141.4 58.6s-103.6-20.8-141.4-58.6S48 309.4 48 256s20.8-103.6 58.6-141.4S194.6 56 248 56s103.6 20.8 141.4 58.6S448 202.6 448 256s-20.8 103.6-58.6 141.4zM328 224c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm-160 0c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm194.4 64H133.6c-8.2 0-14.5 7-13.5 15 7.5 59.2 58.9 105 121.1 105h13.6c62.2 0 113.6-45.8 121.1-105 1-8-5.3-15-13.5-15z\"],\n    \"laugh-beam\": [496, 512, [], \"f59a\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm141.4 389.4c-37.8 37.8-88 58.6-141.4 58.6s-103.6-20.8-141.4-58.6S48 309.4 48 256s20.8-103.6 58.6-141.4S194.6 56 248 56s103.6 20.8 141.4 58.6S448 202.6 448 256s-20.8 103.6-58.6 141.4zM328 152c-23.8 0-52.7 29.3-56 71.4-.7 8.6 10.8 11.9 14.9 4.5l9.5-17c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c4.1 7.4 15.6 4 14.9-4.5-3.1-42.1-32-71.4-55.8-71.4zm-201 75.9l9.5-17c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c4.1 7.4 15.6 4 14.9-4.5-3.3-42.1-32.2-71.4-56-71.4s-52.7 29.3-56 71.4c-.6 8.5 10.9 11.9 15.1 4.5zM362.4 288H133.6c-8.2 0-14.5 7-13.5 15 7.5 59.2 58.9 105 121.1 105h13.6c62.2 0 113.6-45.8 121.1-105 1-8-5.3-15-13.5-15z\"],\n    \"laugh-squint\": [496, 512, [], \"f59b\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm141.4 389.4c-37.8 37.8-88 58.6-141.4 58.6s-103.6-20.8-141.4-58.6S48 309.4 48 256s20.8-103.6 58.6-141.4S194.6 56 248 56s103.6 20.8 141.4 58.6S448 202.6 448 256s-20.8 103.6-58.6 141.4zM343.6 196l33.6-40.3c8.6-10.3-3.8-24.8-15.4-18l-80 48c-7.8 4.7-7.8 15.9 0 20.6l80 48c11.5 6.8 24-7.6 15.4-18L343.6 196zm-209.4 58.3l80-48c7.8-4.7 7.8-15.9 0-20.6l-80-48c-11.6-6.9-24 7.7-15.4 18l33.6 40.3-33.6 40.3c-8.7 10.4 3.8 24.8 15.4 18zM362.4 288H133.6c-8.2 0-14.5 7-13.5 15 7.5 59.2 58.9 105 121.1 105h13.6c62.2 0 113.6-45.8 121.1-105 1-8-5.3-15-13.5-15z\"],\n    \"laugh-wink\": [496, 512, [], \"f59c\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm141.4 389.4c-37.8 37.8-88 58.6-141.4 58.6s-103.6-20.8-141.4-58.6C68.8 359.6 48 309.4 48 256s20.8-103.6 58.6-141.4C144.4 76.8 194.6 56 248 56s103.6 20.8 141.4 58.6c37.8 37.8 58.6 88 58.6 141.4s-20.8 103.6-58.6 141.4zM328 164c-25.7 0-55.9 16.9-59.9 42.1-1.7 11.2 11.5 18.2 19.8 10.8l9.5-8.5c14.8-13.2 46.2-13.2 61 0l9.5 8.5c8.5 7.4 21.6.3 19.8-10.8-3.8-25.2-34-42.1-59.7-42.1zm-160 60c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm194.4 64H133.6c-8.2 0-14.5 7-13.5 15 7.5 59.2 58.9 105 121.1 105h13.6c62.2 0 113.6-45.8 121.1-105 1-8-5.3-15-13.5-15z\"],\n    \"lemon\": [512, 512, [], \"f094\", \"M484.112 27.889C455.989-.233 416.108-8.057 387.059 8.865 347.604 31.848 223.504-41.111 91.196 91.197-41.277 223.672 31.923 347.472 8.866 387.058c-16.922 29.051-9.1 68.932 19.022 97.054 28.135 28.135 68.011 35.938 97.057 19.021 39.423-22.97 163.557 49.969 295.858-82.329 132.474-132.477 59.273-256.277 82.331-295.861 16.922-29.05 9.1-68.931-19.022-97.054zm-22.405 72.894c-38.8 66.609 45.6 165.635-74.845 286.08-120.44 120.443-219.475 36.048-286.076 74.843-22.679 13.207-64.035-27.241-50.493-50.488 38.8-66.609-45.6-165.635 74.845-286.08C245.573 4.702 344.616 89.086 411.219 50.292c22.73-13.24 64.005 27.288 50.488 50.491zm-169.861 8.736c1.37 10.96-6.404 20.957-17.365 22.327-54.846 6.855-135.779 87.787-142.635 142.635-1.373 10.989-11.399 18.734-22.326 17.365-10.961-1.37-18.735-11.366-17.365-22.326 9.162-73.286 104.167-168.215 177.365-177.365 10.953-1.368 20.956 6.403 22.326 17.364z\"],\n    \"life-ring\": [512, 512, [], \"f1cd\", \"M256 504c136.967 0 248-111.033 248-248S392.967 8 256 8 8 119.033 8 256s111.033 248 248 248zm-103.398-76.72l53.411-53.411c31.806 13.506 68.128 13.522 99.974 0l53.411 53.411c-63.217 38.319-143.579 38.319-206.796 0zM336 256c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80zm91.28 103.398l-53.411-53.411c13.505-31.806 13.522-68.128 0-99.974l53.411-53.411c38.319 63.217 38.319 143.579 0 206.796zM359.397 84.72l-53.411 53.411c-31.806-13.505-68.128-13.522-99.973 0L152.602 84.72c63.217-38.319 143.579-38.319 206.795 0zM84.72 152.602l53.411 53.411c-13.506 31.806-13.522 68.128 0 99.974L84.72 359.398c-38.319-63.217-38.319-143.579 0-206.796z\"],\n    \"lightbulb\": [352, 512, [], \"f0eb\", \"M176 80c-52.94 0-96 43.06-96 96 0 8.84 7.16 16 16 16s16-7.16 16-16c0-35.3 28.72-64 64-64 8.84 0 16-7.16 16-16s-7.16-16-16-16zM96.06 459.17c0 3.15.93 6.22 2.68 8.84l24.51 36.84c2.97 4.46 7.97 7.14 13.32 7.14h78.85c5.36 0 10.36-2.68 13.32-7.14l24.51-36.84c1.74-2.62 2.67-5.7 2.68-8.84l.05-43.18H96.02l.04 43.18zM176 0C73.72 0 0 82.97 0 176c0 44.37 16.45 84.85 43.56 115.78 16.64 18.99 42.74 58.8 52.42 92.16v.06h48v-.12c-.01-4.77-.72-9.51-2.15-14.07-5.59-17.81-22.82-64.77-62.17-109.67-20.54-23.43-31.52-53.15-31.61-84.14-.2-73.64 59.67-128 127.95-128 70.58 0 128 57.42 128 128 0 30.97-11.24 60.85-31.65 84.14-39.11 44.61-56.42 91.47-62.1 109.46a47.507 47.507 0 0 0-2.22 14.3v.1h48v-.05c9.68-33.37 35.78-73.18 52.42-92.16C335.55 260.85 352 220.37 352 176 352 78.8 273.2 0 176 0z\"],\n    \"list-alt\": [512, 512, [], \"f022\", \"M464 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zm-6 400H54a6 6 0 0 1-6-6V86a6 6 0 0 1 6-6h404a6 6 0 0 1 6 6v340a6 6 0 0 1-6 6zm-42-92v24c0 6.627-5.373 12-12 12H204c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h200c6.627 0 12 5.373 12 12zm0-96v24c0 6.627-5.373 12-12 12H204c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h200c6.627 0 12 5.373 12 12zm0-96v24c0 6.627-5.373 12-12 12H204c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h200c6.627 0 12 5.373 12 12zm-252 12c0 19.882-16.118 36-36 36s-36-16.118-36-36 16.118-36 36-36 36 16.118 36 36zm0 96c0 19.882-16.118 36-36 36s-36-16.118-36-36 16.118-36 36-36 36 16.118 36 36zm0 96c0 19.882-16.118 36-36 36s-36-16.118-36-36 16.118-36 36-36 36 16.118 36 36z\"],\n    \"map\": [576, 512, [], \"f279\", \"M560.02 32c-1.96 0-3.98.37-5.96 1.16L384.01 96H384L212 35.28A64.252 64.252 0 0 0 191.76 32c-6.69 0-13.37 1.05-19.81 3.14L20.12 87.95A32.006 32.006 0 0 0 0 117.66v346.32C0 473.17 7.53 480 15.99 480c1.96 0 3.97-.37 5.96-1.16L192 416l172 60.71a63.98 63.98 0 0 0 40.05.15l151.83-52.81A31.996 31.996 0 0 0 576 394.34V48.02c0-9.19-7.53-16.02-15.98-16.02zM224 90.42l128 45.19v285.97l-128-45.19V90.42zM48 418.05V129.07l128-44.53v286.2l-.64.23L48 418.05zm480-35.13l-128 44.53V141.26l.64-.24L528 93.95v288.97z\"],\n    \"meh\": [496, 512, [], \"f11a\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160-64c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm8 144H160c-13.2 0-24 10.8-24 24s10.8 24 24 24h176c13.2 0 24-10.8 24-24s-10.8-24-24-24z\"],\n    \"meh-blank\": [496, 512, [], \"f5a4\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-280c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm160 0c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32z\"],\n    \"meh-rolling-eyes\": [496, 512, [], \"f5a5\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm88-304c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm0 112c-22.1 0-40-17.9-40-40 0-13.6 7.3-25.1 17.7-32.3-1 2.6-1.7 5.3-1.7 8.3 0 13.3 10.7 24 24 24s24-10.7 24-24c0-2.9-.7-5.7-1.7-8.3 10.4 7.2 17.7 18.7 17.7 32.3 0 22.1-17.9 40-40 40zm-104-40c0-39.8-32.2-72-72-72s-72 32.2-72 72 32.2 72 72 72 72-32.2 72-72zm-112 0c0-13.6 7.3-25.1 17.7-32.3-1 2.6-1.7 5.3-1.7 8.3 0 13.3 10.7 24 24 24s24-10.7 24-24c0-2.9-.7-5.7-1.7-8.3 10.4 7.2 17.7 18.7 17.7 32.3 0 22.1-17.9 40-40 40s-40-17.9-40-40zm192 128H184c-13.2 0-24 10.8-24 24s10.8 24 24 24h128c13.2 0 24-10.8 24-24s-10.8-24-24-24z\"],\n    \"minus-square\": [448, 512, [], \"f146\", \"M108 284c-6.6 0-12-5.4-12-12v-32c0-6.6 5.4-12 12-12h232c6.6 0 12 5.4 12 12v32c0 6.6-5.4 12-12 12H108zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n    \"money-bill-alt\": [640, 512, [], \"f3d1\", \"M320 144c-53.02 0-96 50.14-96 112 0 61.85 42.98 112 96 112 53 0 96-50.13 96-112 0-61.86-42.98-112-96-112zm40 168c0 4.42-3.58 8-8 8h-64c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h16v-55.44l-.47.31a7.992 7.992 0 0 1-11.09-2.22l-8.88-13.31a7.992 7.992 0 0 1 2.22-11.09l15.33-10.22a23.99 23.99 0 0 1 13.31-4.03H328c4.42 0 8 3.58 8 8v88h16c4.42 0 8 3.58 8 8v16zM608 64H32C14.33 64 0 78.33 0 96v320c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V96c0-17.67-14.33-32-32-32zm-16 272c-35.35 0-64 28.65-64 64H112c0-35.35-28.65-64-64-64V176c35.35 0 64-28.65 64-64h416c0 35.35 28.65 64 64 64v160z\"],\n    \"moon\": [512, 512, [], \"f186\", \"M279.135 512c78.756 0 150.982-35.804 198.844-94.775 28.27-34.831-2.558-85.722-46.249-77.401-82.348 15.683-158.272-47.268-158.272-130.792 0-48.424 26.06-92.292 67.434-115.836 38.745-22.05 28.999-80.788-15.022-88.919A257.936 257.936 0 0 0 279.135 0c-141.36 0-256 114.575-256 256 0 141.36 114.576 256 256 256zm0-464c12.985 0 25.689 1.201 38.016 3.478-54.76 31.163-91.693 90.042-91.693 157.554 0 113.848 103.641 199.2 215.252 177.944C402.574 433.964 344.366 464 279.135 464c-114.875 0-208-93.125-208-208s93.125-208 208-208z\"],\n    \"newspaper\": [576, 512, [], \"f1ea\", \"M552 64H112c-20.858 0-38.643 13.377-45.248 32H24c-13.255 0-24 10.745-24 24v272c0 30.928 25.072 56 56 56h496c13.255 0 24-10.745 24-24V88c0-13.255-10.745-24-24-24zM48 392V144h16v248c0 4.411-3.589 8-8 8s-8-3.589-8-8zm480 8H111.422c.374-2.614.578-5.283.578-8V112h416v288zM172 280h136c6.627 0 12-5.373 12-12v-96c0-6.627-5.373-12-12-12H172c-6.627 0-12 5.373-12 12v96c0 6.627 5.373 12 12 12zm28-80h80v40h-80v-40zm-40 140v-24c0-6.627 5.373-12 12-12h136c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12H172c-6.627 0-12-5.373-12-12zm192 0v-24c0-6.627 5.373-12 12-12h104c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12H364c-6.627 0-12-5.373-12-12zm0-144v-24c0-6.627 5.373-12 12-12h104c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12H364c-6.627 0-12-5.373-12-12zm0 72v-24c0-6.627 5.373-12 12-12h104c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12H364c-6.627 0-12-5.373-12-12z\"],\n    \"object-group\": [512, 512, [], \"f247\", \"M500 128c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12h-72c-6.627 0-12 5.373-12 12v12H96V44c0-6.627-5.373-12-12-12H12C5.373 32 0 37.373 0 44v72c0 6.627 5.373 12 12 12h12v256H12c-6.627 0-12 5.373-12 12v72c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-12h320v12c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-72c0-6.627-5.373-12-12-12h-12V128h12zm-52-64h32v32h-32V64zM32 64h32v32H32V64zm32 384H32v-32h32v32zm416 0h-32v-32h32v32zm-40-64h-12c-6.627 0-12 5.373-12 12v12H96v-12c0-6.627-5.373-12-12-12H72V128h12c6.627 0 12-5.373 12-12v-12h320v12c0 6.627 5.373 12 12 12h12v256zm-36-192h-84v-52c0-6.628-5.373-12-12-12H108c-6.627 0-12 5.372-12 12v168c0 6.628 5.373 12 12 12h84v52c0 6.628 5.373 12 12 12h200c6.627 0 12-5.372 12-12V204c0-6.628-5.373-12-12-12zm-268-24h144v112H136V168zm240 176H232v-24h76c6.627 0 12-5.372 12-12v-76h56v112z\"],\n    \"object-ungroup\": [576, 512, [], \"f248\", \"M564 224c6.627 0 12-5.373 12-12v-72c0-6.627-5.373-12-12-12h-72c-6.627 0-12 5.373-12 12v12h-88v-24h12c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12h-72c-6.627 0-12 5.373-12 12v12H96V44c0-6.627-5.373-12-12-12H12C5.373 32 0 37.373 0 44v72c0 6.627 5.373 12 12 12h12v160H12c-6.627 0-12 5.373-12 12v72c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-12h88v24h-12c-6.627 0-12 5.373-12 12v72c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-12h224v12c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-72c0-6.627-5.373-12-12-12h-12V224h12zM352 64h32v32h-32V64zm0 256h32v32h-32v-32zM64 352H32v-32h32v32zm0-256H32V64h32v32zm32 216v-12c0-6.627-5.373-12-12-12H72V128h12c6.627 0 12-5.373 12-12v-12h224v12c0 6.627 5.373 12 12 12h12v160h-12c-6.627 0-12 5.373-12 12v12H96zm128 136h-32v-32h32v32zm280-64h-12c-6.627 0-12 5.373-12 12v12H256v-12c0-6.627-5.373-12-12-12h-12v-24h88v12c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-72c0-6.627-5.373-12-12-12h-12v-88h88v12c0 6.627 5.373 12 12 12h12v160zm40 64h-32v-32h32v32zm0-256h-32v-32h32v32z\"],\n    \"paper-plane\": [512, 512, [], \"f1d8\", \"M440 6.5L24 246.4c-34.4 19.9-31.1 70.8 5.7 85.9L144 379.6V464c0 46.4 59.2 65.5 86.6 28.6l43.8-59.1 111.9 46.2c5.9 2.4 12.1 3.6 18.3 3.6 8.2 0 16.3-2.1 23.6-6.2 12.8-7.2 21.6-20 23.9-34.5l59.4-387.2c6.1-40.1-36.9-68.8-71.5-48.9zM192 464v-64.6l36.6 15.1L192 464zm212.6-28.7l-153.8-63.5L391 169.5c10.7-15.5-9.5-33.5-23.7-21.2L155.8 332.6 48 288 464 48l-59.4 387.3z\"],\n    \"pause-circle\": [512, 512, [], \"f28b\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm96-280v160c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16zm-112 0v160c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16z\"],\n    \"play-circle\": [512, 512, [], \"f144\", \"M371.7 238l-176-107c-15.8-8.8-35.7 2.5-35.7 21v208c0 18.4 19.8 29.8 35.7 21l176-101c16.4-9.1 16.4-32.8 0-42zM504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zm-448 0c0-110.5 89.5-200 200-200s200 89.5 200 200-89.5 200-200 200S56 366.5 56 256z\"],\n    \"plus-square\": [448, 512, [], \"f0fe\", \"M352 240v32c0 6.6-5.4 12-12 12h-88v88c0 6.6-5.4 12-12 12h-32c-6.6 0-12-5.4-12-12v-88h-88c-6.6 0-12-5.4-12-12v-32c0-6.6 5.4-12 12-12h88v-88c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v88h88c6.6 0 12 5.4 12 12zm96-160v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n    \"question-circle\": [512, 512, [], \"f059\", \"M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z\"],\n    \"registered\": [512, 512, [], \"f25d\", \"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 448c-110.532 0-200-89.451-200-200 0-110.531 89.451-200 200-200 110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200zm110.442-81.791c-53.046-96.284-50.25-91.468-53.271-96.085 24.267-13.879 39.482-41.563 39.482-73.176 0-52.503-30.247-85.252-101.498-85.252h-78.667c-6.617 0-12 5.383-12 12V380c0 6.617 5.383 12 12 12h38.568c6.617 0 12-5.383 12-12v-83.663h31.958l47.515 89.303a11.98 11.98 0 0 0 10.593 6.36h42.81c9.14 0 14.914-9.799 10.51-17.791zM256.933 239.906h-33.875v-64.14h27.377c32.417 0 38.929 12.133 38.929 31.709-.001 20.913-11.518 32.431-32.431 32.431z\"],\n    \"sad-cry\": [496, 512, [], \"f5b3\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm144 386.4V280c0-13.2-10.8-24-24-24s-24 10.8-24 24v151.4C315.5 447 282.8 456 248 456s-67.5-9-96-24.6V280c0-13.2-10.8-24-24-24s-24 10.8-24 24v114.4c-34.6-36-56-84.7-56-138.4 0-110.3 89.7-200 200-200s200 89.7 200 200c0 53.7-21.4 102.5-56 138.4zM205.8 234.5c4.4-2.4 6.9-7.4 6.1-12.4-4-25.2-34.2-42.1-59.8-42.1s-55.9 16.9-59.8 42.1c-.8 5 1.7 10 6.1 12.4 4.4 2.4 9.9 1.8 13.7-1.6l9.5-8.5c14.8-13.2 46.2-13.2 61 0l9.5 8.5c2.5 2.3 7.9 4.8 13.7 1.6zM344 180c-25.7 0-55.9 16.9-59.8 42.1-.8 5 1.7 10 6.1 12.4 4.5 2.4 9.9 1.8 13.7-1.6l9.5-8.5c14.8-13.2 46.2-13.2 61 0l9.5 8.5c2.5 2.2 8 4.7 13.7 1.6 4.4-2.4 6.9-7.4 6.1-12.4-3.9-25.2-34.1-42.1-59.8-42.1zm-96 92c-30.9 0-56 28.7-56 64s25.1 64 56 64 56-28.7 56-64-25.1-64-56-64z\"],\n    \"sad-tear\": [496, 512, [], \"f5b4\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm8-152c-13.2 0-24 10.8-24 24s10.8 24 24 24c23.8 0 46.3 10.5 61.6 28.8 8.1 9.8 23.2 11.9 33.8 3.1 10.2-8.5 11.6-23.6 3.1-33.8C330 320.8 294.1 304 256 304zm-88-64c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160-64c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm-165.6 98.8C151 290.1 126 325.4 126 342.9c0 22.7 18.8 41.1 42 41.1s42-18.4 42-41.1c0-17.5-25-52.8-36.4-68.1-2.8-3.7-8.4-3.7-11.2 0z\"],\n    \"save\": [448, 512, [], \"f0c7\", \"M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM272 80v80H144V80h128zm122 352H54a6 6 0 0 1-6-6V86a6 6 0 0 1 6-6h42v104c0 13.255 10.745 24 24 24h176c13.255 0 24-10.745 24-24V83.882l78.243 78.243a6 6 0 0 1 1.757 4.243V426a6 6 0 0 1-6 6zM224 232c-48.523 0-88 39.477-88 88s39.477 88 88 88 88-39.477 88-88-39.477-88-88-88zm0 128c-22.056 0-40-17.944-40-40s17.944-40 40-40 40 17.944 40 40-17.944 40-40 40z\"],\n    \"share-square\": [576, 512, [], \"f14d\", \"M561.938 158.06L417.94 14.092C387.926-15.922 336 5.097 336 48.032v57.198c-42.45 1.88-84.03 6.55-120.76 17.99-35.17 10.95-63.07 27.58-82.91 49.42C108.22 199.2 96 232.6 96 271.94c0 61.697 33.178 112.455 84.87 144.76 37.546 23.508 85.248-12.651 71.02-55.74-15.515-47.119-17.156-70.923 84.11-78.76V336c0 42.993 51.968 63.913 81.94 33.94l143.998-144c18.75-18.74 18.75-49.14 0-67.88zM384 336V232.16C255.309 234.082 166.492 255.35 206.31 376 176.79 357.55 144 324.08 144 271.94c0-109.334 129.14-118.947 240-119.85V48l144 144-144 144zm24.74 84.493a82.658 82.658 0 0 0 20.974-9.303c7.976-4.952 18.286.826 18.286 10.214V464c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h132c6.627 0 12 5.373 12 12v4.486c0 4.917-2.987 9.369-7.569 11.152-13.702 5.331-26.396 11.537-38.05 18.585a12.138 12.138 0 0 1-6.28 1.777H54a6 6 0 0 0-6 6v340a6 6 0 0 0 6 6h340a6 6 0 0 0 6-6v-25.966c0-5.37 3.579-10.059 8.74-11.541z\"],\n    \"smile\": [496, 512, [], \"f118\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160 0c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm4 72.6c-20.8 25-51.5 39.4-84 39.4s-63.2-14.3-84-39.4c-8.5-10.2-23.7-11.5-33.8-3.1-10.2 8.5-11.5 23.6-3.1 33.8 30 36 74.1 56.6 120.9 56.6s90.9-20.6 120.9-56.6c8.5-10.2 7.1-25.3-3.1-33.8-10.1-8.4-25.3-7.1-33.8 3.1z\"],\n    \"smile-beam\": [496, 512, [], \"f5b8\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm84-143.4c-20.8 25-51.5 39.4-84 39.4s-63.2-14.3-84-39.4c-8.5-10.2-23.6-11.5-33.8-3.1-10.2 8.5-11.5 23.6-3.1 33.8 30 36 74.1 56.6 120.9 56.6s90.9-20.6 120.9-56.6c8.5-10.2 7.1-25.3-3.1-33.8-10.2-8.4-25.3-7.1-33.8 3.1zM136.5 211c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c2.1 3.7 6.2 4.7 9.3 3.7 3.6-1.1 6-4.5 5.7-8.3-3.3-42.1-32.2-71.4-56-71.4s-52.7 29.3-56 71.4c-.3 3.7 2.1 7.2 5.7 8.3 3.4 1.1 7.4-.5 9.3-3.7l9.5-17zM328 152c-23.8 0-52.7 29.3-56 71.4-.3 3.7 2.1 7.2 5.7 8.3 3.5 1.1 7.4-.5 9.3-3.7l9.5-17c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c2.1 3.7 6.2 4.7 9.3 3.7 3.6-1.1 6-4.5 5.7-8.3-3.3-42.1-32.2-71.4-56-71.4z\"],\n    \"smile-wink\": [496, 512, [], \"f4da\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm117.8-146.4c-10.2-8.5-25.3-7.1-33.8 3.1-20.8 25-51.5 39.4-84 39.4s-63.2-14.3-84-39.4c-8.5-10.2-23.7-11.5-33.8-3.1-10.2 8.5-11.5 23.6-3.1 33.8 30 36 74.1 56.6 120.9 56.6s90.9-20.6 120.9-56.6c8.5-10.2 7.1-25.3-3.1-33.8zM168 240c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160-60c-25.7 0-55.9 16.9-59.9 42.1-1.7 11.2 11.5 18.2 19.8 10.8l9.5-8.5c14.8-13.2 46.2-13.2 61 0l9.5 8.5c8.5 7.4 21.6.3 19.8-10.8-3.8-25.2-34-42.1-59.7-42.1z\"],\n    \"snowflake\": [448, 512, [], \"f2dc\", \"M440.1 355.2l-39.2-23 34.1-9.3c8.4-2.3 13.4-11.1 11.1-19.6l-4.1-15.5c-2.2-8.5-10.9-13.6-19.3-11.3L343 298.2 271.2 256l71.9-42.2 79.7 21.7c8.4 2.3 17-2.8 19.3-11.3l4.1-15.5c2.2-8.5-2.7-17.3-11.1-19.6l-34.1-9.3 39.2-23c7.5-4.4 10.1-14.2 5.8-21.9l-7.9-13.9c-4.3-7.7-14-10.3-21.5-5.9l-39.2 23 9.1-34.7c2.2-8.5-2.7-17.3-11.1-19.6l-15.2-4.1c-8.4-2.3-17 2.8-19.3 11.3l-21.3 81-71.9 42.2v-84.5L306 70.4c6.1-6.2 6.1-16.4 0-22.6l-11.1-11.3c-6.1-6.2-16.1-6.2-22.2 0l-24.9 25.4V16c0-8.8-7-16-15.7-16h-15.7c-8.7 0-15.7 7.2-15.7 16v46.1l-24.9-25.4c-6.1-6.2-16.1-6.2-22.2 0L142.1 48c-6.1 6.2-6.1 16.4 0 22.6l58.3 59.3v84.5l-71.9-42.2-21.3-81c-2.2-8.5-10.9-13.6-19.3-11.3L72.7 84c-8.4 2.3-13.4 11.1-11.1 19.6l9.1 34.7-39.2-23c-7.5-4.4-17.1-1.8-21.5 5.9l-7.9 13.9c-4.3 7.7-1.8 17.4 5.8 21.9l39.2 23-34.1 9.1c-8.4 2.3-13.4 11.1-11.1 19.6L6 224.2c2.2 8.5 10.9 13.6 19.3 11.3l79.7-21.7 71.9 42.2-71.9 42.2-79.7-21.7c-8.4-2.3-17 2.8-19.3 11.3l-4.1 15.5c-2.2 8.5 2.7 17.3 11.1 19.6l34.1 9.3-39.2 23c-7.5 4.4-10.1 14.2-5.8 21.9L10 391c4.3 7.7 14 10.3 21.5 5.9l39.2-23-9.1 34.7c-2.2 8.5 2.7 17.3 11.1 19.6l15.2 4.1c8.4 2.3 17-2.8 19.3-11.3l21.3-81 71.9-42.2v84.5l-58.3 59.3c-6.1 6.2-6.1 16.4 0 22.6l11.1 11.3c6.1 6.2 16.1 6.2 22.2 0l24.9-25.4V496c0 8.8 7 16 15.7 16h15.7c8.7 0 15.7-7.2 15.7-16v-46.1l24.9 25.4c6.1 6.2 16.1 6.2 22.2 0l11.1-11.3c6.1-6.2 6.1-16.4 0-22.6l-58.3-59.3v-84.5l71.9 42.2 21.3 81c2.2 8.5 10.9 13.6 19.3 11.3L375 428c8.4-2.3 13.4-11.1 11.1-19.6l-9.1-34.7 39.2 23c7.5 4.4 17.1 1.8 21.5-5.9l7.9-13.9c4.6-7.5 2.1-17.3-5.5-21.7z\"],\n    \"square\": [448, 512, [], \"f0c8\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-6 400H54c-3.3 0-6-2.7-6-6V86c0-3.3 2.7-6 6-6h340c3.3 0 6 2.7 6 6v340c0 3.3-2.7 6-6 6z\"],\n    \"star\": [576, 512, [], \"f005\", \"M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\"],\n    \"star-half\": [576, 512, [], \"f089\", \"M288 385.3l-124.3 65.4 23.7-138.4-100.6-98 139-20.2 62.2-126V0c-11.4 0-22.8 5.9-28.7 17.8L194 150.2 47.9 171.4c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.1 23 46 46.4 33.7L288 439.6v-54.3z\"],\n    \"sticky-note\": [448, 512, [], \"f249\", \"M448 348.106V80c0-26.51-21.49-48-48-48H48C21.49 32 0 53.49 0 80v351.988c0 26.51 21.49 48 48 48h268.118a48 48 0 0 0 33.941-14.059l83.882-83.882A48 48 0 0 0 448 348.106zm-128 80v-76.118h76.118L320 428.106zM400 80v223.988H296c-13.255 0-24 10.745-24 24v104H48V80h352z\"],\n    \"stop-circle\": [512, 512, [], \"f28d\", \"M504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zm-448 0c0-110.5 89.5-200 200-200s200 89.5 200 200-89.5 200-200 200S56 366.5 56 256zm296-80v160c0 8.8-7.2 16-16 16H176c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h160c8.8 0 16 7.2 16 16z\"],\n    \"sun\": [512, 512, [], \"f185\", \"M494.2 221.9l-59.8-40.5 13.7-71c2.6-13.2-1.6-26.8-11.1-36.4-9.6-9.5-23.2-13.7-36.2-11.1l-70.9 13.7-40.4-59.9c-15.1-22.3-51.9-22.3-67 0l-40.4 59.9-70.8-13.7C98 60.4 84.5 64.5 75 74.1c-9.5 9.6-13.7 23.1-11.1 36.3l13.7 71-59.8 40.5C6.6 229.5 0 242 0 255.5s6.7 26 17.8 33.5l59.8 40.5-13.7 71c-2.6 13.2 1.6 26.8 11.1 36.3 9.5 9.5 22.9 13.7 36.3 11.1l70.8-13.7 40.4 59.9C230 505.3 242.6 512 256 512s26-6.7 33.5-17.8l40.4-59.9 70.9 13.7c13.4 2.7 26.8-1.6 36.3-11.1 9.5-9.5 13.6-23.1 11.1-36.3l-13.7-71 59.8-40.5c11.1-7.5 17.8-20.1 17.8-33.5-.1-13.6-6.7-26.1-17.9-33.7zm-112.9 85.6l17.6 91.2-91-17.6L256 458l-51.9-77-90.9 17.6 17.6-91.2-76.8-52 76.8-52-17.6-91.2 91 17.6L256 53l51.9 76.9 91-17.6-17.6 91.1 76.8 52-76.8 52.1zM256 152c-57.3 0-104 46.7-104 104s46.7 104 104 104 104-46.7 104-104-46.7-104-104-104zm0 160c-30.9 0-56-25.1-56-56s25.1-56 56-56 56 25.1 56 56-25.1 56-56 56z\"],\n    \"surprise\": [496, 512, [], \"f5c2\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm0-176c-35.3 0-64 28.7-64 64s28.7 64 64 64 64-28.7 64-64-28.7-64-64-64zm-48-72c0-17.7-14.3-32-32-32s-32 14.3-32 32 14.3 32 32 32 32-14.3 32-32zm128-32c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32z\"],\n    \"thumbs-down\": [512, 512, [], \"f165\", \"M466.27 225.31c4.674-22.647.864-44.538-8.99-62.99 2.958-23.868-4.021-48.565-17.34-66.99C438.986 39.423 404.117 0 327 0c-7 0-15 .01-22.22.01C201.195.01 168.997 40 128 40h-10.845c-5.64-4.975-13.042-8-21.155-8H32C14.327 32 0 46.327 0 64v240c0 17.673 14.327 32 32 32h64c11.842 0 22.175-6.438 27.708-16h7.052c19.146 16.953 46.013 60.653 68.76 83.4 13.667 13.667 10.153 108.6 71.76 108.6 57.58 0 95.27-31.936 95.27-104.73 0-18.41-3.93-33.73-8.85-46.54h36.48c48.602 0 85.82-41.565 85.82-85.58 0-19.15-4.96-34.99-13.73-49.84zM64 296c-13.255 0-24-10.745-24-24s10.745-24 24-24 24 10.745 24 24-10.745 24-24 24zm330.18 16.73H290.19c0 37.82 28.36 55.37 28.36 94.54 0 23.75 0 56.73-47.27 56.73-18.91-18.91-9.46-66.18-37.82-94.54C206.9 342.89 167.28 272 138.92 272H128V85.83c53.611 0 100.001-37.82 171.64-37.82h37.82c35.512 0 60.82 17.12 53.12 65.9 15.2 8.16 26.5 36.44 13.94 57.57 21.581 20.384 18.699 51.065 5.21 65.62 9.45 0 22.36 18.91 22.27 37.81-.09 18.91-16.71 37.82-37.82 37.82z\"],\n    \"thumbs-up\": [512, 512, [], \"f164\", \"M466.27 286.69C475.04 271.84 480 256 480 236.85c0-44.015-37.218-85.58-85.82-85.58H357.7c4.92-12.81 8.85-28.13 8.85-46.54C366.55 31.936 328.86 0 271.28 0c-61.607 0-58.093 94.933-71.76 108.6-22.747 22.747-49.615 66.447-68.76 83.4H32c-17.673 0-32 14.327-32 32v240c0 17.673 14.327 32 32 32h64c14.893 0 27.408-10.174 30.978-23.95 44.509 1.001 75.06 39.94 177.802 39.94 7.22 0 15.22.01 22.22.01 77.117 0 111.986-39.423 112.94-95.33 13.319-18.425 20.299-43.122 17.34-66.99 9.854-18.452 13.664-40.343 8.99-62.99zm-61.75 53.83c12.56 21.13 1.26 49.41-13.94 57.57 7.7 48.78-17.608 65.9-53.12 65.9h-37.82c-71.639 0-118.029-37.82-171.64-37.82V240h10.92c28.36 0 67.98-70.89 94.54-97.46 28.36-28.36 18.91-75.63 37.82-94.54 47.27 0 47.27 32.98 47.27 56.73 0 39.17-28.36 56.72-28.36 94.54h103.99c21.11 0 37.73 18.91 37.82 37.82.09 18.9-12.82 37.81-22.27 37.81 13.489 14.555 16.371 45.236-5.21 65.62zM88 432c0 13.255-10.745 24-24 24s-24-10.745-24-24 10.745-24 24-24 24 10.745 24 24z\"],\n    \"times-circle\": [512, 512, [], \"f057\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm101.8-262.2L295.6 256l62.2 62.2c4.7 4.7 4.7 12.3 0 17l-22.6 22.6c-4.7 4.7-12.3 4.7-17 0L256 295.6l-62.2 62.2c-4.7 4.7-12.3 4.7-17 0l-22.6-22.6c-4.7-4.7-4.7-12.3 0-17l62.2-62.2-62.2-62.2c-4.7-4.7-4.7-12.3 0-17l22.6-22.6c4.7-4.7 12.3-4.7 17 0l62.2 62.2 62.2-62.2c4.7-4.7 12.3-4.7 17 0l22.6 22.6c4.7 4.7 4.7 12.3 0 17z\"],\n    \"tired\": [496, 512, [], \"f5c8\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm129.1-303.8c-3.8-4.4-10.3-5.4-15.3-2.5l-80 48c-3.6 2.2-5.8 6.1-5.8 10.3s2.2 8.1 5.8 10.3l80 48c5.4 3.2 11.8 1.6 15.3-2.5 3.8-4.5 3.9-11 .1-15.5L343.6 208l33.6-40.3c3.8-4.5 3.7-11.1-.1-15.5zM220 208c0-4.2-2.2-8.1-5.8-10.3l-80-48c-5-3-11.5-1.9-15.3 2.5-3.8 4.5-3.9 11-.1 15.5l33.6 40.3-33.6 40.3c-3.8 4.5-3.7 11 .1 15.5 3.5 4.1 9.9 5.7 15.3 2.5l80-48c3.6-2.2 5.8-6.1 5.8-10.3zm28 64c-45.4 0-100.9 38.3-107.8 93.3-1.5 11.8 6.9 21.6 15.5 17.9C178.4 373.5 212 368 248 368s69.6 5.5 92.3 15.2c8.5 3.7 17-6 15.5-17.9-6.9-55-62.4-93.3-107.8-93.3z\"],\n    \"trash-alt\": [448, 512, [], \"f2ed\", \"M268 416h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12zM432 80h-82.41l-34-56.7A48 48 0 0 0 274.41 0H173.59a48 48 0 0 0-41.16 23.3L98.41 80H16A16 16 0 0 0 0 96v16a16 16 0 0 0 16 16h16v336a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128h16a16 16 0 0 0 16-16V96a16 16 0 0 0-16-16zM171.84 50.91A6 6 0 0 1 177 48h94a6 6 0 0 1 5.15 2.91L293.61 80H154.39zM368 464H80V128h288zm-212-48h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12z\"],\n    \"user\": [448, 512, [], \"f007\", \"M313.6 304c-28.7 0-42.5 16-89.6 16-47.1 0-60.8-16-89.6-16C60.2 304 0 364.2 0 438.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-25.6c0-74.2-60.2-134.4-134.4-134.4zM400 464H48v-25.6c0-47.6 38.8-86.4 86.4-86.4 14.6 0 38.3 16 89.6 16 51.7 0 74.9-16 89.6-16 47.6 0 86.4 38.8 86.4 86.4V464zM224 288c79.5 0 144-64.5 144-144S303.5 0 224 0 80 64.5 80 144s64.5 144 144 144zm0-240c52.9 0 96 43.1 96 96s-43.1 96-96 96-96-43.1-96-96 43.1-96 96-96z\"],\n    \"user-circle\": [496, 512, [], \"f2bd\", \"M248 104c-53 0-96 43-96 96s43 96 96 96 96-43 96-96-43-96-96-96zm0 144c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm0-240C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-49.7 0-95.1-18.3-130.1-48.4 14.9-23 40.4-38.6 69.6-39.5 20.8 6.4 40.6 9.6 60.5 9.6s39.7-3.1 60.5-9.6c29.2 1 54.7 16.5 69.6 39.5-35 30.1-80.4 48.4-130.1 48.4zm162.7-84.1c-24.4-31.4-62.1-51.9-105.1-51.9-10.2 0-26 9.6-57.6 9.6-31.5 0-47.4-9.6-57.6-9.6-42.9 0-80.6 20.5-105.1 51.9C61.9 339.2 48 299.2 48 256c0-110.3 89.7-200 200-200s200 89.7 200 200c0 43.2-13.9 83.2-37.3 115.9z\"],\n    \"window-close\": [512, 512, [], \"f410\", \"M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm0 394c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V86c0-3.3 2.7-6 6-6h404c3.3 0 6 2.7 6 6v340zM356.5 194.6L295.1 256l61.4 61.4c4.6 4.6 4.6 12.1 0 16.8l-22.3 22.3c-4.6 4.6-12.1 4.6-16.8 0L256 295.1l-61.4 61.4c-4.6 4.6-12.1 4.6-16.8 0l-22.3-22.3c-4.6-4.6-4.6-12.1 0-16.8l61.4-61.4-61.4-61.4c-4.6-4.6-4.6-12.1 0-16.8l22.3-22.3c4.6-4.6 12.1-4.6 16.8 0l61.4 61.4 61.4-61.4c4.6-4.6 12.1-4.6 16.8 0l22.3 22.3c4.7 4.6 4.7 12.1 0 16.8z\"],\n    \"window-maximize\": [512, 512, [], \"f2d0\", \"M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm0 394c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V192h416v234z\"],\n    \"window-minimize\": [512, 512, [], \"f2d1\", \"M480 480H32c-17.7 0-32-14.3-32-32s14.3-32 32-32h448c17.7 0 32 14.3 32 32s-14.3 32-32 32z\"],\n    \"window-restore\": [512, 512, [], \"f2d2\", \"M464 0H144c-26.5 0-48 21.5-48 48v48H48c-26.5 0-48 21.5-48 48v320c0 26.5 21.5 48 48 48h320c26.5 0 48-21.5 48-48v-48h48c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zm-96 464H48V256h320v208zm96-96h-48V144c0-26.5-21.5-48-48-48H144V48h320v320z\"]\n  };\n  bunker(function () {\n    defineIcons('far', icons);\n  });\n})();\n\n(function () {\n  'use strict';\n\n  var _WINDOW = {};\n  var _DOCUMENT = {};\n\n  try {\n    if (typeof window !== 'undefined') _WINDOW = window;\n    if (typeof document !== 'undefined') _DOCUMENT = document;\n  } catch (e) {}\n\n  var _ref = _WINDOW.navigator || {},\n      _ref$userAgent = _ref.userAgent,\n      userAgent = _ref$userAgent === void 0 ? '' : _ref$userAgent;\n\n  var WINDOW = _WINDOW;\n  var DOCUMENT = _DOCUMENT;\n  var IS_BROWSER = !!WINDOW.document;\n  var IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === 'function' && typeof DOCUMENT.createElement === 'function';\n  var IS_IE = ~userAgent.indexOf('MSIE') || ~userAgent.indexOf('Trident/');\n  var NAMESPACE_IDENTIFIER = '___FONT_AWESOME___';\n\n  var PRODUCTION = function () {\n    try {\n      return \"production\" === 'production';\n    } catch (e) {\n      return false;\n    }\n  }();\n\n  function bunker(fn) {\n    try {\n      fn();\n    } catch (e) {\n      if (!PRODUCTION) {\n        throw e;\n      }\n    }\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      var ownKeys = Object.keys(source);\n\n      if (typeof Object.getOwnPropertySymbols === 'function') {\n        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n      }\n\n      ownKeys.forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    }\n\n    return target;\n  }\n\n  var w = WINDOW || {};\n  if (!w[NAMESPACE_IDENTIFIER]) w[NAMESPACE_IDENTIFIER] = {};\n  if (!w[NAMESPACE_IDENTIFIER].styles) w[NAMESPACE_IDENTIFIER].styles = {};\n  if (!w[NAMESPACE_IDENTIFIER].hooks) w[NAMESPACE_IDENTIFIER].hooks = {};\n  if (!w[NAMESPACE_IDENTIFIER].shims) w[NAMESPACE_IDENTIFIER].shims = [];\n  var namespace = w[NAMESPACE_IDENTIFIER];\n\n  function defineIcons(prefix, icons) {\n    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var _params$skipHooks = params.skipHooks,\n        skipHooks = _params$skipHooks === void 0 ? false : _params$skipHooks;\n    var normalized = Object.keys(icons).reduce(function (acc, iconName) {\n      var icon = icons[iconName];\n      var expanded = !!icon.icon;\n\n      if (expanded) {\n        acc[icon.iconName] = icon.icon;\n      } else {\n        acc[iconName] = icon;\n      }\n\n      return acc;\n    }, {});\n\n    if (typeof namespace.hooks.addPack === 'function' && !skipHooks) {\n      namespace.hooks.addPack(prefix, normalized);\n    } else {\n      namespace.styles[prefix] = _objectSpread({}, namespace.styles[prefix] || {}, normalized);\n    }\n    /**\n     * Font Awesome 4 used the prefix of `fa` for all icons. With the introduction\n     * of new styles we needed to differentiate between them. Prefix `fa` is now an alias\n     * for `fas` so we'll easy the upgrade process for our users by automatically defining\n     * this as well.\n     */\n\n\n    if (prefix === 'fas') {\n      defineIcons('fa', icons);\n    }\n  }\n\n  var icons = {\n    \"ad\": [512, 512, [], \"f641\", \"M157.52 272h36.96L176 218.78 157.52 272zM352 256c-13.23 0-24 10.77-24 24s10.77 24 24 24 24-10.77 24-24-10.77-24-24-24zM464 64H48C21.5 64 0 85.5 0 112v288c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM250.58 352h-16.94c-6.81 0-12.88-4.32-15.12-10.75L211.15 320h-70.29l-7.38 21.25A16 16 0 0 1 118.36 352h-16.94c-11.01 0-18.73-10.85-15.12-21.25L140 176.12A23.995 23.995 0 0 1 162.67 160h26.66A23.99 23.99 0 0 1 212 176.13l53.69 154.62c3.61 10.4-4.11 21.25-15.11 21.25zM424 336c0 8.84-7.16 16-16 16h-16c-4.85 0-9.04-2.27-11.98-5.68-8.62 3.66-18.09 5.68-28.02 5.68-39.7 0-72-32.3-72-72s32.3-72 72-72c8.46 0 16.46 1.73 24 4.42V176c0-8.84 7.16-16 16-16h16c8.84 0 16 7.16 16 16v160z\"],\n    \"address-book\": [448, 512, [], \"f2b9\", \"M436 160c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h320c26.5 0 48-21.5 48-48v-48h20c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20v-64h20c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20v-64h20zm-228-32c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zm112 236.8c0 10.6-10 19.2-22.4 19.2H118.4C106 384 96 375.4 96 364.8v-19.2c0-31.8 30.1-57.6 67.2-57.6h5c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h5c37.1 0 67.2 25.8 67.2 57.6v19.2z\"],\n    \"address-card\": [576, 512, [], \"f2bb\", \"M528 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-352 96c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zm112 236.8c0 10.6-10 19.2-22.4 19.2H86.4C74 384 64 375.4 64 364.8v-19.2c0-31.8 30.1-57.6 67.2-57.6h5c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h5c37.1 0 67.2 25.8 67.2 57.6v19.2zM512 312c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16zm0-64c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16zm0-64c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16z\"],\n    \"adjust\": [512, 512, [], \"f042\", \"M8 256c0 136.966 111.033 248 248 248s248-111.034 248-248S392.966 8 256 8 8 119.033 8 256zm248 184V72c101.705 0 184 82.311 184 184 0 101.705-82.311 184-184 184z\"],\n    \"air-freshener\": [512, 512, [], \"f5d0\", \"M224 160H96C43 160 0 203 0 256V480C0 497.625 14.375 512 32 512H288C305.625 512 320 497.625 320 480V256C320 203 277 160 224 160ZM160 416C115.875 416 80 380.125 80 336S115.875 256 160 256S240 291.875 240 336S204.125 416 160 416ZM224 32C224 14.375 209.625 0 192 0H128C110.375 0 96 14.375 96 32V128H224V32ZM381.781 51.578C383 50.969 384 49.359 384 48C384 46.625 383 45.031 381.781 44.422L352 32L339.562 2.219C338.969 1 337.375 0 336 0S333.031 1 332.406 2.219L320 32L290.219 44.422C289 45.031 288 46.625 288 48C288 49.359 289 50.969 290.219 51.578L320 64L332.406 93.781C333.031 95 334.625 96 336 96S338.969 95 339.562 93.781L352 64L381.781 51.578ZM448 64L460.406 93.781C461.031 95 462.625 96 464 96S466.969 95 467.562 93.781L480 64L509.781 51.578C511 50.969 512 49.359 512 48C512 46.625 511 45.031 509.781 44.422L480 32L467.562 2.219C466.969 1 465.375 0 464 0S461.031 1 460.406 2.219L448 32L418.219 44.422C417 45.031 416 46.625 416 48C416 49.359 417 50.969 418.219 51.578L448 64ZM480 224L467.562 194.219C466.969 193 465.375 192 464 192S461.031 193 460.406 194.219L448 224L418.219 236.422C417 237.031 416 238.625 416 240C416 241.359 417 242.969 418.219 243.578L448 256L460.406 285.781C461.031 287 462.625 288 464 288S466.969 287 467.562 285.781L480 256L509.781 243.578C511 242.969 512 241.359 512 240C512 238.625 511 237.031 509.781 236.422L480 224ZM445.781 147.578C447 146.969 448 145.359 448 144C448 142.625 447 141.031 445.781 140.422L416 128L403.562 98.219C402.969 97 401.375 96 400 96S397.031 97 396.406 98.219L384 128L354.219 140.422C353 141.031 352 142.625 352 144C352 145.359 353 146.969 354.219 147.578L384 160L396.406 189.781C397.031 191 398.625 192 400 192S402.969 191 403.562 189.781L416 160L445.781 147.578Z\"],\n    \"align-center\": [448, 512, [], \"f037\", \"M432 160H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0 256H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM108.1 96h231.81A12.09 12.09 0 0 0 352 83.9V44.09A12.09 12.09 0 0 0 339.91 32H108.1A12.09 12.09 0 0 0 96 44.09V83.9A12.1 12.1 0 0 0 108.1 96zm231.81 256A12.09 12.09 0 0 0 352 339.9v-39.81A12.09 12.09 0 0 0 339.91 288H108.1A12.09 12.09 0 0 0 96 300.09v39.81a12.1 12.1 0 0 0 12.1 12.1z\"],\n    \"align-justify\": [448, 512, [], \"f039\", \"M432 416H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-128H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-128H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-128H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"],\n    \"align-left\": [448, 512, [], \"f036\", \"M12.83 352h262.34A12.82 12.82 0 0 0 288 339.17v-38.34A12.82 12.82 0 0 0 275.17 288H12.83A12.82 12.82 0 0 0 0 300.83v38.34A12.82 12.82 0 0 0 12.83 352zm0-256h262.34A12.82 12.82 0 0 0 288 83.17V44.83A12.82 12.82 0 0 0 275.17 32H12.83A12.82 12.82 0 0 0 0 44.83v38.34A12.82 12.82 0 0 0 12.83 96zM432 160H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0 256H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\"],\n    \"align-right\": [448, 512, [], \"f038\", \"M16 224h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm416 192H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm3.17-384H172.83A12.82 12.82 0 0 0 160 44.83v38.34A12.82 12.82 0 0 0 172.83 96h262.34A12.82 12.82 0 0 0 448 83.17V44.83A12.82 12.82 0 0 0 435.17 32zm0 256H172.83A12.82 12.82 0 0 0 160 300.83v38.34A12.82 12.82 0 0 0 172.83 352h262.34A12.82 12.82 0 0 0 448 339.17v-38.34A12.82 12.82 0 0 0 435.17 288z\"],\n    \"allergies\": [448, 512, [], \"f461\", \"M416 112c-17.6 0-32 14.4-32 32v72c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8V64c0-17.6-14.4-32-32-32s-32 14.4-32 32v152c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8V32c0-17.6-14.4-32-32-32s-32 14.4-32 32v184c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8V64c0-17.6-14.4-32-32-32S96 46.4 96 64v241l-23.6-32.5c-13-17.9-38-21.8-55.9-8.8s-21.8 38-8.8 55.9l125.6 172.7c9 12.4 23.5 19.8 38.8 19.8h197.6c22.3 0 41.6-15.3 46.7-37l26.5-112.7c3.2-13.7 4.9-28.3 5.1-42.3V144c0-17.6-14.4-32-32-32zM176 416c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm0-96c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm64 128c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm0-96c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm64 32c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm32 64c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm32-128c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16z\"],\n    \"ambulance\": [640, 512, [], \"f0f9\", \"M624 352h-16V243.9c0-12.7-5.1-24.9-14.1-33.9L494 110.1c-9-9-21.2-14.1-33.9-14.1H416V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48v320c0 26.5 21.5 48 48 48h16c0 53 43 96 96 96s96-43 96-96h128c0 53 43 96 96 96s96-43 96-96h48c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM160 464c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm144-248c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8v48zm176 248c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm80-208H416V144h44.1l99.9 99.9V256z\"],\n    \"american-sign-language-interpreting\": [640, 512, [], \"f2a3\", \"M290.547 189.039c-20.295-10.149-44.147-11.199-64.739-3.89 42.606 0 71.208 20.475 85.578 50.576 8.576 17.899-5.148 38.071-23.617 38.071 18.429 0 32.211 20.136 23.617 38.071-14.725 30.846-46.123 50.854-80.298 50.854-.557 0-94.471-8.615-94.471-8.615l-66.406 33.347c-9.384 4.693-19.815.379-23.895-7.781L1.86 290.747c-4.167-8.615-1.111-18.897 6.946-23.621l58.072-33.069L108 159.861c6.39-57.245 34.731-109.767 79.743-146.726 11.391-9.448 28.341-7.781 37.51 3.613 9.446 11.394 7.78 28.067-3.612 37.516-12.503 10.559-23.618 22.509-32.509 35.57 21.672-14.729 46.679-24.732 74.186-28.067 14.725-1.945 28.063 8.336 29.73 23.065 1.945 14.728-8.336 28.067-23.062 29.734-16.116 1.945-31.12 7.503-44.178 15.284 26.114-5.713 58.712-3.138 88.079 11.115 13.336 6.669 18.893 22.509 12.224 35.848-6.389 13.06-22.504 18.617-35.564 12.226zm-27.229 69.472c-6.112-12.505-18.338-20.286-32.231-20.286a35.46 35.46 0 0 0-35.565 35.57c0 21.428 17.808 35.57 35.565 35.57 13.893 0 26.119-7.781 32.231-20.286 4.446-9.449 13.614-15.006 23.339-15.284-9.725-.277-18.893-5.835-23.339-15.284zm374.821-37.237c4.168 8.615 1.111 18.897-6.946 23.621l-58.071 33.069L532 352.16c-6.39 57.245-34.731 109.767-79.743 146.726-10.932 9.112-27.799 8.144-37.51-3.613-9.446-11.394-7.78-28.067 3.613-37.516 12.503-10.559 23.617-22.509 32.508-35.57-21.672 14.729-46.679 24.732-74.186 28.067-10.021 2.506-27.552-5.643-29.73-23.065-1.945-14.728 8.336-28.067 23.062-29.734 16.116-1.946 31.12-7.503 44.178-15.284-26.114 5.713-58.712 3.138-88.079-11.115-13.336-6.669-18.893-22.509-12.224-35.848 6.389-13.061 22.505-18.619 35.565-12.227 20.295 10.149 44.147 11.199 64.739 3.89-42.606 0-71.208-20.475-85.578-50.576-8.576-17.899 5.148-38.071 23.617-38.071-18.429 0-32.211-20.136-23.617-38.071 14.033-29.396 44.039-50.887 81.966-50.854l92.803 8.615 66.406-33.347c9.408-4.704 19.828-.354 23.894 7.781l44.455 88.926zm-229.227-18.618c-13.893 0-26.119 7.781-32.231 20.286-4.446 9.449-13.614 15.006-23.339 15.284 9.725.278 18.893 5.836 23.339 15.284 6.112 12.505 18.338 20.286 32.231 20.286a35.46 35.46 0 0 0 35.565-35.57c0-21.429-17.808-35.57-35.565-35.57z\"],\n    \"anchor\": [576, 512, [], \"f13d\", \"M12.971 352h32.394C67.172 454.735 181.944 512 288 512c106.229 0 220.853-57.38 242.635-160h32.394c10.691 0 16.045-12.926 8.485-20.485l-67.029-67.029c-4.686-4.686-12.284-4.686-16.971 0l-67.029 67.029c-7.56 7.56-2.206 20.485 8.485 20.485h35.146c-20.29 54.317-84.963 86.588-144.117 94.015V256h52c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-52v-5.47c37.281-13.178 63.995-48.725 64-90.518C384.005 43.772 341.605.738 289.37.01 235.723-.739 192 42.525 192 96c0 41.798 26.716 77.35 64 90.53V192h-52c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h52v190.015c-58.936-7.399-123.82-39.679-144.117-94.015h35.146c10.691 0 16.045-12.926 8.485-20.485l-67.029-67.029c-4.686-4.686-12.284-4.686-16.971 0L4.485 331.515C-3.074 339.074 2.28 352 12.971 352zM288 64c17.645 0 32 14.355 32 32s-14.355 32-32 32-32-14.355-32-32 14.355-32 32-32z\"],\n    \"angle-double-down\": [320, 512, [], \"f103\", \"M143 256.3L7 120.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0L313 86.3c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.4 9.5-24.6 9.5-34 .1zm34 192l136-136c9.4-9.4 9.4-24.6 0-33.9l-22.6-22.6c-9.4-9.4-24.6-9.4-33.9 0L160 352.1l-96.4-96.4c-9.4-9.4-24.6-9.4-33.9 0L7 278.3c-9.4 9.4-9.4 24.6 0 33.9l136 136c9.4 9.5 24.6 9.5 34 .1z\"],\n    \"angle-double-left\": [448, 512, [], \"f100\", \"M223.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L319.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L393.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34zm-192 34l136 136c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9L127.9 256l96.4-96.4c9.4-9.4 9.4-24.6 0-33.9L201.7 103c-9.4-9.4-24.6-9.4-33.9 0l-136 136c-9.5 9.4-9.5 24.6-.1 34z\"],\n    \"angle-double-right\": [448, 512, [], \"f101\", \"M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34zm192-34l-136-136c-9.4-9.4-24.6-9.4-33.9 0l-22.6 22.6c-9.4 9.4-9.4 24.6 0 33.9l96.4 96.4-96.4 96.4c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l136-136c9.4-9.2 9.4-24.4 0-33.8z\"],\n    \"angle-double-up\": [320, 512, [], \"f102\", \"M177 255.7l136 136c9.4 9.4 9.4 24.6 0 33.9l-22.6 22.6c-9.4 9.4-24.6 9.4-33.9 0L160 351.9l-96.4 96.4c-9.4 9.4-24.6 9.4-33.9 0L7 425.7c-9.4-9.4-9.4-24.6 0-33.9l136-136c9.4-9.5 24.6-9.5 34-.1zm-34-192L7 199.7c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l96.4-96.4 96.4 96.4c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9l-136-136c-9.2-9.4-24.4-9.4-33.8 0z\"],\n    \"angle-down\": [320, 512, [], \"f107\", \"M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z\"],\n    \"angle-left\": [256, 512, [], \"f104\", \"M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z\"],\n    \"angle-right\": [256, 512, [], \"f105\", \"M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z\"],\n    \"angle-up\": [320, 512, [], \"f106\", \"M177 159.7l136 136c9.4 9.4 9.4 24.6 0 33.9l-22.6 22.6c-9.4 9.4-24.6 9.4-33.9 0L160 255.9l-96.4 96.4c-9.4 9.4-24.6 9.4-33.9 0L7 329.7c-9.4-9.4-9.4-24.6 0-33.9l136-136c9.4-9.5 24.6-9.5 34-.1z\"],\n    \"angry\": [496, 512, [], \"f556\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM136 240c0-9.3 4.1-17.5 10.5-23.4l-31-9.3c-8.5-2.5-13.3-11.5-10.7-19.9 2.5-8.5 11.4-13.2 19.9-10.7l80 24c8.5 2.5 13.3 11.5 10.7 19.9-2.1 6.9-8.4 11.4-15.3 11.4-.5 0-1.1-.2-1.7-.2.7 2.7 1.7 5.3 1.7 8.2 0 17.7-14.3 32-32 32S136 257.7 136 240zm168 154.2c-27.8-33.4-84.2-33.4-112.1 0-13.5 16.3-38.2-4.2-24.6-20.5 20-24 49.4-37.8 80.6-37.8s60.6 13.8 80.6 37.8c13.8 16.5-11.1 36.6-24.5 20.5zm76.6-186.9l-31 9.3c6.3 5.8 10.5 14.1 10.5 23.4 0 17.7-14.3 32-32 32s-32-14.3-32-32c0-2.9.9-5.6 1.7-8.2-.6.1-1.1.2-1.7.2-6.9 0-13.2-4.5-15.3-11.4-2.5-8.5 2.3-17.4 10.7-19.9l80-24c8.4-2.5 17.4 2.3 19.9 10.7 2.5 8.5-2.3 17.4-10.8 19.9z\"],\n    \"ankh\": [320, 512, [], \"f644\", \"M296 256h-44.62C272.46 222.01 288 181.65 288 144 288 55.63 230.69 0 160 0S32 55.63 32 144c0 37.65 15.54 78.01 36.62 112H24c-13.25 0-24 10.74-24 24v32c0 13.25 10.75 24 24 24h96v152c0 13.25 10.75 24 24 24h32c13.25 0 24-10.75 24-24V336h96c13.25 0 24-10.75 24-24v-32c0-13.26-10.75-24-24-24zM160 80c29.61 0 48 24.52 48 64 0 34.66-27.14 78.14-48 100.87-20.86-22.72-48-66.21-48-100.87 0-39.48 18.39-64 48-64z\"],\n    \"apple-alt\": [448, 512, [], \"f5d1\", \"M350.85 129c25.97 4.67 47.27 18.67 63.92 42 14.65 20.67 24.64 46.67 29.96 78 4.67 28.67 4.32 57.33-1 86-7.99 47.33-23.97 87-47.94 119-28.64 38.67-64.59 58-107.87 58-10.66 0-22.3-3.33-34.96-10-8.66-5.33-18.31-8-28.97-8s-20.3 2.67-28.97 8c-12.66 6.67-24.3 10-34.96 10-43.28 0-79.23-19.33-107.87-58-23.97-32-39.95-71.67-47.94-119-5.32-28.67-5.67-57.33-1-86 5.32-31.33 15.31-57.33 29.96-78 16.65-23.33 37.95-37.33 63.92-42 15.98-2.67 37.95-.33 65.92 7 23.97 6.67 44.28 14.67 60.93 24 16.65-9.33 36.96-17.33 60.93-24 27.98-7.33 49.96-9.67 65.94-7zm-54.94-41c-9.32 8.67-21.65 15-36.96 19-10.66 3.33-22.3 5-34.96 5l-14.98-1c-1.33-9.33-1.33-20 0-32 2.67-24 10.32-42.33 22.97-55 9.32-8.67 21.65-15 36.96-19 10.66-3.33 22.3-5 34.96-5l14.98 1 1 15c0 12.67-1.67 24.33-4.99 35-3.99 15.33-10.31 27.67-18.98 37z\"],\n    \"archive\": [512, 512, [], \"f187\", \"M32 448c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V160H32v288zm160-212c0-6.6 5.4-12 12-12h104c6.6 0 12 5.4 12 12v8c0 6.6-5.4 12-12 12H204c-6.6 0-12-5.4-12-12v-8zM480 32H32C14.3 32 0 46.3 0 64v48c0 8.8 7.2 16 16 16h480c8.8 0 16-7.2 16-16V64c0-17.7-14.3-32-32-32z\"],\n    \"archway\": [576, 512, [], \"f557\", \"M560 448h-16V96H32v352H16.02c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16H176c8.84 0 16-7.16 16-16V320c0-53.02 42.98-96 96-96s96 42.98 96 96l.02 160v16c0 8.84 7.16 16 16 16H560c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zm0-448H16C7.16 0 0 7.16 0 16v32c0 8.84 7.16 16 16 16h544c8.84 0 16-7.16 16-16V16c0-8.84-7.16-16-16-16z\"],\n    \"arrow-alt-circle-down\": [512, 512, [], \"f358\", \"M504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zM212 140v116h-70.9c-10.7 0-16.1 13-8.5 20.5l114.9 114.3c4.7 4.7 12.2 4.7 16.9 0l114.9-114.3c7.6-7.6 2.2-20.5-8.5-20.5H300V140c0-6.6-5.4-12-12-12h-64c-6.6 0-12 5.4-12 12z\"],\n    \"arrow-alt-circle-left\": [512, 512, [], \"f359\", \"M256 504C119 504 8 393 8 256S119 8 256 8s248 111 248 248-111 248-248 248zm116-292H256v-70.9c0-10.7-13-16.1-20.5-8.5L121.2 247.5c-4.7 4.7-4.7 12.2 0 16.9l114.3 114.9c7.6 7.6 20.5 2.2 20.5-8.5V300h116c6.6 0 12-5.4 12-12v-64c0-6.6-5.4-12-12-12z\"],\n    \"arrow-alt-circle-right\": [512, 512, [], \"f35a\", \"M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zM140 300h116v70.9c0 10.7 13 16.1 20.5 8.5l114.3-114.9c4.7-4.7 4.7-12.2 0-16.9l-114.3-115c-7.6-7.6-20.5-2.2-20.5 8.5V212H140c-6.6 0-12 5.4-12 12v64c0 6.6 5.4 12 12 12z\"],\n    \"arrow-alt-circle-up\": [512, 512, [], \"f35b\", \"M8 256C8 119 119 8 256 8s248 111 248 248-111 248-248 248S8 393 8 256zm292 116V256h70.9c10.7 0 16.1-13 8.5-20.5L264.5 121.2c-4.7-4.7-12.2-4.7-16.9 0l-115 114.3c-7.6 7.6-2.2 20.5 8.5 20.5H212v116c0 6.6 5.4 12 12 12h64c6.6 0 12-5.4 12-12z\"],\n    \"arrow-circle-down\": [512, 512, [], \"f0ab\", \"M504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-143.6-28.9L288 302.6V120c0-13.3-10.7-24-24-24h-16c-13.3 0-24 10.7-24 24v182.6l-72.4-75.5c-9.3-9.7-24.8-9.9-34.3-.4l-10.9 11c-9.4 9.4-9.4 24.6 0 33.9L239 404.3c9.4 9.4 24.6 9.4 33.9 0l132.7-132.7c9.4-9.4 9.4-24.6 0-33.9l-10.9-11c-9.5-9.5-25-9.3-34.3.4z\"],\n    \"arrow-circle-left\": [512, 512, [], \"f0a8\", \"M256 504C119 504 8 393 8 256S119 8 256 8s248 111 248 248-111 248-248 248zm28.9-143.6L209.4 288H392c13.3 0 24-10.7 24-24v-16c0-13.3-10.7-24-24-24H209.4l75.5-72.4c9.7-9.3 9.9-24.8.4-34.3l-11-10.9c-9.4-9.4-24.6-9.4-33.9 0L107.7 239c-9.4 9.4-9.4 24.6 0 33.9l132.7 132.7c9.4 9.4 24.6 9.4 33.9 0l11-10.9c9.5-9.5 9.3-25-.4-34.3z\"],\n    \"arrow-circle-right\": [512, 512, [], \"f0a9\", \"M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zm-28.9 143.6l75.5 72.4H120c-13.3 0-24 10.7-24 24v16c0 13.3 10.7 24 24 24h182.6l-75.5 72.4c-9.7 9.3-9.9 24.8-.4 34.3l11 10.9c9.4 9.4 24.6 9.4 33.9 0L404.3 273c9.4-9.4 9.4-24.6 0-33.9L271.6 106.3c-9.4-9.4-24.6-9.4-33.9 0l-11 10.9c-9.5 9.6-9.3 25.1.4 34.4z\"],\n    \"arrow-circle-up\": [512, 512, [], \"f0aa\", \"M8 256C8 119 119 8 256 8s248 111 248 248-111 248-248 248S8 393 8 256zm143.6 28.9l72.4-75.5V392c0 13.3 10.7 24 24 24h16c13.3 0 24-10.7 24-24V209.4l72.4 75.5c9.3 9.7 24.8 9.9 34.3.4l10.9-11c9.4-9.4 9.4-24.6 0-33.9L273 107.7c-9.4-9.4-24.6-9.4-33.9 0L106.3 240.4c-9.4 9.4-9.4 24.6 0 33.9l10.9 11c9.6 9.5 25.1 9.3 34.4-.4z\"],\n    \"arrow-down\": [448, 512, [], \"f063\", \"M413.1 222.5l22.2 22.2c9.4 9.4 9.4 24.6 0 33.9L241 473c-9.4 9.4-24.6 9.4-33.9 0L12.7 278.6c-9.4-9.4-9.4-24.6 0-33.9l22.2-22.2c9.5-9.5 25-9.3 34.3.4L184 343.4V56c0-13.3 10.7-24 24-24h32c13.3 0 24 10.7 24 24v287.4l114.8-120.5c9.3-9.8 24.8-10 34.3-.4z\"],\n    \"arrow-left\": [448, 512, [], \"f060\", \"M257.5 445.1l-22.2 22.2c-9.4 9.4-24.6 9.4-33.9 0L7 273c-9.4-9.4-9.4-24.6 0-33.9L201.4 44.7c9.4-9.4 24.6-9.4 33.9 0l22.2 22.2c9.5 9.5 9.3 25-.4 34.3L136.6 216H424c13.3 0 24 10.7 24 24v32c0 13.3-10.7 24-24 24H136.6l120.5 114.8c9.8 9.3 10 24.8.4 34.3z\"],\n    \"arrow-right\": [448, 512, [], \"f061\", \"M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z\"],\n    \"arrow-up\": [448, 512, [], \"f062\", \"M34.9 289.5l-22.2-22.2c-9.4-9.4-9.4-24.6 0-33.9L207 39c9.4-9.4 24.6-9.4 33.9 0l194.3 194.3c9.4 9.4 9.4 24.6 0 33.9L413 289.4c-9.5 9.5-25 9.3-34.3-.4L264 168.6V456c0 13.3-10.7 24-24 24h-32c-13.3 0-24-10.7-24-24V168.6L69.2 289.1c-9.3 9.8-24.8 10-34.3.4z\"],\n    \"arrows-alt\": [512, 512, [], \"f0b2\", \"M352.201 425.775l-79.196 79.196c-9.373 9.373-24.568 9.373-33.941 0l-79.196-79.196c-15.119-15.119-4.411-40.971 16.971-40.97h51.162L228 284H127.196v51.162c0 21.382-25.851 32.09-40.971 16.971L7.029 272.937c-9.373-9.373-9.373-24.569 0-33.941L86.225 159.8c15.119-15.119 40.971-4.411 40.971 16.971V228H228V127.196h-51.23c-21.382 0-32.09-25.851-16.971-40.971l79.196-79.196c9.373-9.373 24.568-9.373 33.941 0l79.196 79.196c15.119 15.119 4.411 40.971-16.971 40.971h-51.162V228h100.804v-51.162c0-21.382 25.851-32.09 40.97-16.971l79.196 79.196c9.373 9.373 9.373 24.569 0 33.941L425.773 352.2c-15.119 15.119-40.971 4.411-40.97-16.971V284H284v100.804h51.23c21.382 0 32.09 25.851 16.971 40.971z\"],\n    \"arrows-alt-h\": [512, 512, [], \"f337\", \"M377.941 169.941V216H134.059v-46.059c0-21.382-25.851-32.09-40.971-16.971L7.029 239.029c-9.373 9.373-9.373 24.568 0 33.941l86.059 86.059c15.119 15.119 40.971 4.411 40.971-16.971V296h243.882v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.568 0-33.941l-86.059-86.059c-15.119-15.12-40.971-4.412-40.971 16.97z\"],\n    \"arrows-alt-v\": [256, 512, [], \"f338\", \"M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z\"],\n    \"assistive-listening-systems\": [512, 512, [], \"f2a2\", \"M216 260c0 15.464-12.536 28-28 28s-28-12.536-28-28c0-44.112 35.888-80 80-80s80 35.888 80 80c0 15.464-12.536 28-28 28s-28-12.536-28-28c0-13.234-10.767-24-24-24s-24 10.766-24 24zm24-176c-97.047 0-176 78.953-176 176 0 15.464 12.536 28 28 28s28-12.536 28-28c0-66.168 53.832-120 120-120s120 53.832 120 120c0 75.164-71.009 70.311-71.997 143.622L288 404c0 28.673-23.327 52-52 52-15.464 0-28 12.536-28 28s12.536 28 28 28c59.475 0 107.876-48.328 108-107.774.595-34.428 72-48.24 72-144.226 0-97.047-78.953-176-176-176zm-80 236c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zM32 448c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm480-187.993c0-1.518-.012-3.025-.045-4.531C510.076 140.525 436.157 38.47 327.994 1.511c-14.633-4.998-30.549 2.809-35.55 17.442-5 14.633 2.81 30.549 17.442 35.55 85.906 29.354 144.61 110.513 146.077 201.953l.003.188c.026 1.118.033 2.236.033 3.363 0 15.464 12.536 28 28 28s28.001-12.536 28.001-28zM152.971 439.029l-80-80L39.03 392.97l80 80 33.941-33.941z\"],\n    \"asterisk\": [512, 512, [], \"f069\", \"M478.21 334.093L336 256l142.21-78.093c11.795-6.477 15.961-21.384 9.232-33.037l-19.48-33.741c-6.728-11.653-21.72-15.499-33.227-8.523L296 186.718l3.475-162.204C299.763 11.061 288.937 0 275.48 0h-38.96c-13.456 0-24.283 11.061-23.994 24.514L216 186.718 77.265 102.607c-11.506-6.976-26.499-3.13-33.227 8.523l-19.48 33.741c-6.728 11.653-2.562 26.56 9.233 33.037L176 256 33.79 334.093c-11.795 6.477-15.961 21.384-9.232 33.037l19.48 33.741c6.728 11.653 21.721 15.499 33.227 8.523L216 325.282l-3.475 162.204C212.237 500.939 223.064 512 236.52 512h38.961c13.456 0 24.283-11.061 23.995-24.514L296 325.282l138.735 84.111c11.506 6.976 26.499 3.13 33.227-8.523l19.48-33.741c6.728-11.653 2.563-26.559-9.232-33.036z\"],\n    \"at\": [512, 512, [], \"f1fa\", \"M256 8C118.941 8 8 118.919 8 256c0 137.059 110.919 248 248 248 48.154 0 95.342-14.14 135.408-40.223 12.005-7.815 14.625-24.288 5.552-35.372l-10.177-12.433c-7.671-9.371-21.179-11.667-31.373-5.129C325.92 429.757 291.314 440 256 440c-101.458 0-184-82.542-184-184S154.542 72 256 72c100.139 0 184 57.619 184 160 0 38.786-21.093 79.742-58.17 83.693-17.349-.454-16.91-12.857-13.476-30.024l23.433-121.11C394.653 149.75 383.308 136 368.225 136h-44.981a13.518 13.518 0 0 0-13.432 11.993l-.01.092c-14.697-17.901-40.448-21.775-59.971-21.775-74.58 0-137.831 62.234-137.831 151.46 0 65.303 36.785 105.87 96 105.87 26.984 0 57.369-15.637 74.991-38.333 9.522 34.104 40.613 34.103 70.71 34.103C462.609 379.41 504 307.798 504 232 504 95.653 394.023 8 256 8zm-21.68 304.43c-22.249 0-36.07-15.623-36.07-40.771 0-44.993 30.779-72.729 58.63-72.729 22.292 0 35.601 15.241 35.601 40.77 0 45.061-33.875 72.73-58.161 72.73z\"],\n    \"atlas\": [448, 512, [], \"f558\", \"M318.38 208h-39.09c-1.49 27.03-6.54 51.35-14.21 70.41 27.71-13.24 48.02-39.19 53.3-70.41zm0-32c-5.29-31.22-25.59-57.17-53.3-70.41 7.68 19.06 12.72 43.38 14.21 70.41h39.09zM224 97.31c-7.69 7.45-20.77 34.42-23.43 78.69h46.87c-2.67-44.26-15.75-71.24-23.44-78.69zm-41.08 8.28c-27.71 13.24-48.02 39.19-53.3 70.41h39.09c1.49-27.03 6.53-51.35 14.21-70.41zm0 172.82c-7.68-19.06-12.72-43.38-14.21-70.41h-39.09c5.28 31.22 25.59 57.17 53.3 70.41zM247.43 208h-46.87c2.66 44.26 15.74 71.24 23.43 78.69 7.7-7.45 20.78-34.43 23.44-78.69zM448 358.4V25.6c0-16-9.6-25.6-25.6-25.6H96C41.6 0 0 41.6 0 96v320c0 54.4 41.6 96 96 96h326.4c12.8 0 25.6-9.6 25.6-25.6v-16c0-6.4-3.2-12.8-9.6-19.2-3.2-16-3.2-60.8 0-73.6 6.4-3.2 9.6-9.6 9.6-19.2zM224 64c70.69 0 128 57.31 128 128s-57.31 128-128 128S96 262.69 96 192 153.31 64 224 64zm160 384H96c-19.2 0-32-12.8-32-32s16-32 32-32h288v64z\"],\n    \"atom\": [448, 512, [], \"f5d2\", \"M223.99908,224a32,32,0,1,0,32.00782,32A32.06431,32.06431,0,0,0,223.99908,224Zm214.172-96c-10.877-19.5-40.50979-50.75-116.27544-41.875C300.39168,34.875,267.63386,0,223.99908,0s-76.39066,34.875-97.89653,86.125C50.3369,77.375,20.706,108.5,9.82907,128-6.54984,157.375-5.17484,201.125,34.958,256-5.17484,310.875-6.54984,354.625,9.82907,384c29.13087,52.375,101.64652,43.625,116.27348,41.875C147.60842,477.125,180.36429,512,223.99908,512s76.3926-34.875,97.89652-86.125c14.62891,1.75,87.14456,10.5,116.27544-41.875C454.55,354.625,453.175,310.875,413.04017,256,453.175,201.125,454.55,157.375,438.171,128ZM63.33886,352c-4-7.25-.125-24.75,15.00391-48.25,6.87695,6.5,14.12891,12.875,21.88087,19.125,1.625,13.75,4,27.125,6.75,40.125C82.34472,363.875,67.09081,358.625,63.33886,352Zm36.88478-162.875c-7.752,6.25-15.00392,12.625-21.88087,19.125-15.12891-23.5-19.00392-41-15.00391-48.25,3.377-6.125,16.37891-11.5,37.88478-11.5,1.75,0,3.875.375,5.75.375C104.09864,162.25,101.84864,175.625,100.22364,189.125ZM223.99908,64c9.50195,0,22.25586,13.5,33.88282,37.25-11.252,3.75-22.50391,8-33.88282,12.875-11.377-4.875-22.62892-9.125-33.88283-12.875C201.74516,77.5,214.49712,64,223.99908,64Zm0,384c-9.502,0-22.25392-13.5-33.88283-37.25,11.25391-3.75,22.50587-8,33.88283-12.875C235.378,402.75,246.62994,407,257.8819,410.75,246.25494,434.5,233.501,448,223.99908,448Zm0-112a80,80,0,1,1,80-80A80.00023,80.00023,0,0,1,223.99908,336ZM384.6593,352c-3.625,6.625-19.00392,11.875-43.63479,11,2.752-13,5.127-26.375,6.752-40.125,7.75195-6.25,15.00391-12.625,21.87891-19.125C384.7843,327.25,388.6593,344.75,384.6593,352ZM369.65538,208.25c-6.875-6.5-14.127-12.875-21.87891-19.125-1.625-13.5-3.875-26.875-6.752-40.25,1.875,0,4.002-.375,5.752-.375,21.50391,0,34.50782,5.375,37.88283,11.5C388.6593,167.25,384.7843,184.75,369.65538,208.25Z\"],\n    \"audio-description\": [512, 512, [], \"f29e\", \"M162.925 238.709l8.822 30.655h-25.606l9.041-30.652c1.277-4.421 2.651-9.994 3.872-15.245 1.22 5.251 2.594 10.823 3.871 15.242zm166.474-32.099h-14.523v98.781h14.523c29.776 0 46.175-17.678 46.175-49.776 0-32.239-17.49-49.005-46.175-49.005zM512 112v288c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48zM245.459 336.139l-57.097-168A12.001 12.001 0 0 0 177 160h-35.894a12.001 12.001 0 0 0-11.362 8.139l-57.097 168C70.003 343.922 75.789 352 84.009 352h29.133a12 12 0 0 0 11.535-8.693l8.574-29.906h51.367l8.793 29.977A12 12 0 0 0 204.926 352h29.172c8.22 0 14.006-8.078 11.361-15.861zm184.701-80.525c0-58.977-37.919-95.614-98.96-95.614h-57.366c-6.627 0-12 5.373-12 12v168c0 6.627 5.373 12 12 12H331.2c61.041 0 98.96-36.933 98.96-96.386z\"],\n    \"award\": [384, 512, [], \"f559\", \"M97.12 362.63c-8.69-8.69-4.16-6.24-25.12-11.85-9.51-2.55-17.87-7.45-25.43-13.32L1.2 448.7c-4.39 10.77 3.81 22.47 15.43 22.03l52.69-2.01L105.56 507c8 8.44 22.04 5.81 26.43-4.96l52.05-127.62c-10.84 6.04-22.87 9.58-35.31 9.58-19.5 0-37.82-7.59-51.61-21.37zM382.8 448.7l-45.37-111.24c-7.56 5.88-15.92 10.77-25.43 13.32-21.07 5.64-16.45 3.18-25.12 11.85-13.79 13.78-32.12 21.37-51.62 21.37-12.44 0-24.47-3.55-35.31-9.58L252 502.04c4.39 10.77 18.44 13.4 26.43 4.96l36.25-38.28 52.69 2.01c11.62.44 19.82-11.27 15.43-22.03zM263 340c15.28-15.55 17.03-14.21 38.79-20.14 13.89-3.79 24.75-14.84 28.47-28.98 7.48-28.4 5.54-24.97 25.95-45.75 10.17-10.35 14.14-25.44 10.42-39.58-7.47-28.38-7.48-24.42 0-52.83 3.72-14.14-.25-29.23-10.42-39.58-20.41-20.78-18.47-17.36-25.95-45.75-3.72-14.14-14.58-25.19-28.47-28.98-27.88-7.61-24.52-5.62-44.95-26.41-10.17-10.35-25-14.4-38.89-10.61-27.87 7.6-23.98 7.61-51.9 0-13.89-3.79-28.72.25-38.89 10.61-20.41 20.78-17.05 18.8-44.94 26.41-13.89 3.79-24.75 14.84-28.47 28.98-7.47 28.39-5.54 24.97-25.95 45.75-10.17 10.35-14.15 25.44-10.42 39.58 7.47 28.36 7.48 24.4 0 52.82-3.72 14.14.25 29.23 10.42 39.59 20.41 20.78 18.47 17.35 25.95 45.75 3.72 14.14 14.58 25.19 28.47 28.98C104.6 325.96 106.27 325 121 340c13.23 13.47 33.84 15.88 49.74 5.82a39.676 39.676 0 0 1 42.53 0c15.89 10.06 36.5 7.65 49.73-5.82zM97.66 175.96c0-53.03 42.24-96.02 94.34-96.02s94.34 42.99 94.34 96.02-42.24 96.02-94.34 96.02-94.34-42.99-94.34-96.02z\"],\n    \"baby\": [384, 512, [], \"f77c\", \"M192 160c44.2 0 80-35.8 80-80S236.2 0 192 0s-80 35.8-80 80 35.8 80 80 80zm-53.4 248.8l25.6-32-61.5-51.2L56.8 383c-11.4 14.2-11.7 34.4-.8 49l48 64c7.9 10.5 19.9 16 32 16 8.3 0 16.8-2.6 24-8 17.7-13.2 21.2-38.3 8-56l-29.4-39.2zm142.7-83.2l-61.5 51.2 25.6 32L216 448c-13.2 17.7-9.7 42.8 8 56 7.2 5.4 15.6 8 24 8 12.2 0 24.2-5.5 32-16l48-64c10.9-14.6 10.6-34.8-.8-49l-45.9-57.4zM376.7 145c-12.7-18.1-37.6-22.4-55.7-9.8l-40.6 28.5c-52.7 37-124.2 37-176.8 0L63 135.3C44.9 122.6 20 127 7.3 145-5.4 163.1-1 188 17 200.7l40.6 28.5c17 11.9 35.4 20.9 54.4 27.9V288h160v-30.8c19-7 37.4-16 54.4-27.9l40.6-28.5c18.1-12.8 22.4-37.7 9.7-55.8z\"],\n    \"baby-carriage\": [512, 512, [], \"f77d\", \"M144.8 17c-11.3-17.8-37.2-22.8-54-9.4C35.3 51.9 0 118 0 192h256L144.8 17zM496 96h-48c-35.3 0-64 28.7-64 64v64H0c0 50.6 23 96.4 60.3 130.7C25.7 363.6 0 394.7 0 432c0 44.2 35.8 80 80 80s80-35.8 80-80c0-8.9-1.8-17.2-4.4-25.2 21.6 5.9 44.6 9.2 68.4 9.2s46.9-3.3 68.4-9.2c-2.7 8-4.4 16.3-4.4 25.2 0 44.2 35.8 80 80 80s80-35.8 80-80c0-37.3-25.7-68.4-60.3-77.3C425 320.4 448 274.6 448 224v-64h48c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM80 464c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32zm320-32c0 17.6-14.4 32-32 32s-32-14.4-32-32 14.4-32 32-32 32 14.4 32 32z\"],\n    \"backspace\": [640, 512, [], \"f55a\", \"M576 64H205.26A63.97 63.97 0 0 0 160 82.75L9.37 233.37c-12.5 12.5-12.5 32.76 0 45.25L160 429.25c12 12 28.28 18.75 45.25 18.75H576c35.35 0 64-28.65 64-64V128c0-35.35-28.65-64-64-64zm-84.69 254.06c6.25 6.25 6.25 16.38 0 22.63l-22.62 22.62c-6.25 6.25-16.38 6.25-22.63 0L384 301.25l-62.06 62.06c-6.25 6.25-16.38 6.25-22.63 0l-22.62-22.62c-6.25-6.25-6.25-16.38 0-22.63L338.75 256l-62.06-62.06c-6.25-6.25-6.25-16.38 0-22.63l22.62-22.62c6.25-6.25 16.38-6.25 22.63 0L384 210.75l62.06-62.06c6.25-6.25 16.38-6.25 22.63 0l22.62 22.62c6.25 6.25 6.25 16.38 0 22.63L429.25 256l62.06 62.06z\"],\n    \"backward\": [512, 512, [], \"f04a\", \"M11.5 280.6l192 160c20.6 17.2 52.5 2.8 52.5-24.6V96c0-27.4-31.9-41.8-52.5-24.6l-192 160c-15.3 12.8-15.3 36.4 0 49.2zm256 0l192 160c20.6 17.2 52.5 2.8 52.5-24.6V96c0-27.4-31.9-41.8-52.5-24.6l-192 160c-15.3 12.8-15.3 36.4 0 49.2z\"],\n    \"bacon\": [576, 512, [], \"f7e5\", \"M218.92 336.39c34.89-34.89 44.2-59.7 54.05-86 10.61-28.29 21.59-57.54 61.37-97.34s69.05-50.77 97.35-61.38c23.88-9 46.64-17.68 76.79-45.37L470.81 8.91a31 31 0 0 0-40.18-2.83c-13.64 10.1-25.15 14.39-41 20.3C247 79.52 209.26 191.29 200.65 214.1c-29.75 78.83-89.55 94.68-98.72 98.09-24.86 9.26-54.73 20.38-91.07 50.36C-3 374-3.63 395 9.07 407.61l35.76 35.51C80 410.52 107 400.15 133 390.39c26.27-9.84 51.06-19.12 85.92-54zm348-232l-35.75-35.51c-35.19 32.63-62.18 43-88.25 52.79-26.26 9.85-51.06 19.16-85.95 54s-44.19 59.69-54 86C292.33 290 281.34 319.22 241.55 359s-69 50.73-97.3 61.32c-23.86 9-46.61 17.66-76.72 45.33l37.68 37.43a31 31 0 0 0 40.18 2.82c13.6-10.06 25.09-14.34 40.94-20.24 142.2-53 180-164.1 188.94-187.69C405 219.18 464.8 203.3 474 199.86c24.87-9.27 54.74-20.4 91.11-50.41 13.89-11.4 14.52-32.45 1.82-45.05z\"],\n    \"bacteria\": [640, 512, [], \"e059\", \"M272.35,226.4A17.71,17.71,0,0,0,281.46,203l-4-9.08a121.29,121.29,0,0,1,12.36-3.08A83.34,83.34,0,0,0,323.57,177l10,9a17.76,17.76,0,1,0,23.92-26.27l-9.72-8.76a83.12,83.12,0,0,0,11.65-48.18l11.85-3.51a17.73,17.73,0,1,0-10.15-34l-11.34,3.36a84,84,0,0,0-36.38-35.57l2.84-10.85a17.8,17.8,0,0,0-34.47-8.93l-2.82,10.78a83.25,83.25,0,0,0-16.74,1.1C250.83,27,240,30.22,229.1,33.39l-3.38-9.46a17.8,17.8,0,0,0-33.56,11.89l3.49,9.8a286.74,286.74,0,0,0-43.94,23.57l-6.32-8.43a17.9,17.9,0,0,0-24.94-3.6A17.69,17.69,0,0,0,116.84,82l6.45,8.61a286.59,286.59,0,0,0-34.95,35.33l-8.82-6.42a17.84,17.84,0,0,0-24.89,3.86,17.66,17.66,0,0,0,3.88,24.77l8.88,6.47a286.6,286.6,0,0,0-23,43.91l-10.48-3.59a17.73,17.73,0,1,0-11.59,33.52L32.67,232c-2.79,10-5.79,19.84-7.52,30.22a83.16,83.16,0,0,0-.82,19l-11.58,3.43a17.73,17.73,0,1,0,10.13,34l11.27-3.33a83.51,83.51,0,0,0,36.39,35.43l-2.88,11.06a17.81,17.81,0,0,0,34.48,8.92l2.87-11c1,0,2.07.26,3.1.26a83.39,83.39,0,0,0,45.65-13.88l8.59,8.8a17.77,17.77,0,0,0,25.56-24.7l-9.14-9.37a83.41,83.41,0,0,0,12.08-31.05,119.08,119.08,0,0,1,3.87-15.53l9,4.22a17.74,17.74,0,1,0,15.15-32.09l-8.8-4.11c.67-1,1.2-2.08,1.9-3.05a119.89,119.89,0,0,1,7.87-9.41,121.73,121.73,0,0,1,11.65-11.4,119.49,119.49,0,0,1,9.94-7.82c1.12-.77,2.32-1.42,3.47-2.15l3.92,8.85a17.86,17.86,0,0,0,16.32,10.58A18.14,18.14,0,0,0,272.35,226.4ZM128,256a32,32,0,1,1,32-32A32,32,0,0,1,128,256Zm80-96a16,16,0,1,1,16-16A16,16,0,0,1,208,160Zm431.26,45.3a17.79,17.79,0,0,0-17.06-12.69,17.55,17.55,0,0,0-5.08.74l-11.27,3.33a83.61,83.61,0,0,0-36.39-35.43l2.88-11.06a17.81,17.81,0,0,0-34.48-8.91l-2.87,11c-1,0-2.07-.26-3.1-.26a83.32,83.32,0,0,0-45.65,13.89l-8.59-8.81a17.77,17.77,0,0,0-25.56,24.7l9.14,9.37a83.28,83.28,0,0,0-12.08,31.06,119.34,119.34,0,0,1-3.87,15.52l-9-4.22a17.74,17.74,0,1,0-15.15,32.09l8.8,4.11c-.67,1-1.2,2.08-1.89,3.05a117.71,117.71,0,0,1-7.94,9.47,119,119,0,0,1-11.57,11.33,121.59,121.59,0,0,1-10,7.83c-1.12.77-2.32,1.42-3.47,2.15l-3.92-8.85a17.86,17.86,0,0,0-16.32-10.58,18.14,18.14,0,0,0-7.18,1.5A17.71,17.71,0,0,0,358.54,309l4,9.08a118.71,118.71,0,0,1-12.36,3.08,83.34,83.34,0,0,0-33.77,13.9l-10-9a17.77,17.77,0,1,0-23.92,26.28l9.72,8.75a83.12,83.12,0,0,0-11.65,48.18l-11.86,3.51a17.73,17.73,0,1,0,10.16,34l11.34-3.36A84,84,0,0,0,326.61,479l-2.84,10.85a17.8,17.8,0,0,0,34.47,8.93L361.06,488a83.3,83.3,0,0,0,16.74-1.1c11.37-1.89,22.24-5.07,33.1-8.24l3.38,9.46a17.8,17.8,0,0,0,33.56-11.89l-3.49-9.79a287.66,287.66,0,0,0,43.94-23.58l6.32,8.43a17.88,17.88,0,0,0,24.93,3.6A17.67,17.67,0,0,0,523.16,430l-6.45-8.61a287.37,287.37,0,0,0,34.95-35.34l8.82,6.42a17.76,17.76,0,1,0,21-28.63l-8.88-6.46a287.17,287.17,0,0,0,23-43.92l10.48,3.59a17.73,17.73,0,1,0,11.59-33.52L607.33,280c2.79-10,5.79-19.84,7.52-30.21a83.27,83.27,0,0,0,.82-19.05l11.58-3.43A17.7,17.7,0,0,0,639.26,205.3ZM416,416a32,32,0,1,1,32-32A32,32,0,0,1,416,416Z\"],\n    \"bacterium\": [512, 512, [], \"e05a\", \"M511,102.93A23.76,23.76,0,0,0,481.47,87l-15.12,4.48a111.85,111.85,0,0,0-48.5-47.42l3.79-14.47a23.74,23.74,0,0,0-46-11.91l-3.76,14.37a111.94,111.94,0,0,0-22.33,1.47,386.74,386.74,0,0,0-44.33,10.41l-4.3-12a23.74,23.74,0,0,0-44.75,15.85l4.3,12.05a383.4,383.4,0,0,0-58.69,31.83l-8-10.63a23.85,23.85,0,0,0-33.24-4.8,23.57,23.57,0,0,0-4.83,33.09l8,10.63a386.14,386.14,0,0,0-46.7,47.44l-11-8a23.68,23.68,0,1,0-28,38.17l11.09,8.06a383.45,383.45,0,0,0-30.92,58.75l-12.93-4.43a23.65,23.65,0,1,0-15.47,44.69l13,4.48a385.81,385.81,0,0,0-9.3,40.53A111.58,111.58,0,0,0,32.44,375L17,379.56a23.64,23.64,0,0,0,13.51,45.31l15-4.44a111.49,111.49,0,0,0,48.53,47.24l-3.85,14.75a23.66,23.66,0,0,0,17,28.83,24.7,24.7,0,0,0,6,.75,23.73,23.73,0,0,0,23-17.7L140,479.67c1.37.05,2.77.35,4.13.35A111.22,111.22,0,0,0,205,461.5l11.45,11.74a23.7,23.7,0,0,0,34.08-32.93l-12.19-12.5a111,111,0,0,0,16.11-41.4,158.69,158.69,0,0,1,5.16-20.71l12,5.64a23.66,23.66,0,1,0,20.19-42.79l-11.72-5.49c.89-1.32,1.59-2.77,2.52-4.06a157.86,157.86,0,0,1,10.46-12.49,159.5,159.5,0,0,1,15.59-15.28,162.18,162.18,0,0,1,13.23-10.4c1.5-1,3.1-1.89,4.63-2.87l5.23,11.8a23.74,23.74,0,0,0,43.48-19.08l-5.36-12.11a158.87,158.87,0,0,1,16.49-4.1,111,111,0,0,0,45-18.54l13.33,12a23.69,23.69,0,1,0,31.88-35l-12.94-11.67A110.83,110.83,0,0,0,479.21,137L495,132.32A23.61,23.61,0,0,0,511,102.93ZM160,368a48,48,0,1,1,48-48A48,48,0,0,1,160,368Zm80-136a24,24,0,1,1,24-24A24,24,0,0,1,240,232Z\"],\n    \"bahai\": [512, 512, [], \"f666\", \"M496.25 202.52l-110-15.44 41.82-104.34c6.67-16.64-11.6-32.18-26.59-22.63L307.44 120 273.35 12.82C270.64 4.27 263.32 0 256 0c-7.32 0-14.64 4.27-17.35 12.82l-34.09 107.19-94.04-59.89c-14.99-9.55-33.25 5.99-26.59 22.63l41.82 104.34-110 15.43c-17.54 2.46-21.68 26.27-6.03 34.67l98.16 52.66-74.48 83.54c-10.92 12.25-1.72 30.93 13.29 30.93 1.31 0 2.67-.14 4.07-.45l108.57-23.65-4.11 112.55c-.43 11.65 8.87 19.22 18.41 19.22 5.15 0 10.39-2.21 14.2-7.18l68.18-88.9 68.18 88.9c3.81 4.97 9.04 7.18 14.2 7.18 9.54 0 18.84-7.57 18.41-19.22l-4.11-112.55 108.57 23.65c17.36 3.76 29.21-17.2 17.35-30.49l-74.48-83.54 98.16-52.66c15.64-8.39 11.5-32.2-6.04-34.66zM338.51 311.68l-51.89-11.3 1.97 53.79L256 311.68l-32.59 42.49 1.96-53.79-51.89 11.3 35.6-39.93-46.92-25.17 52.57-7.38-19.99-49.87 44.95 28.62L256 166.72l16.29 51.23 44.95-28.62-19.99 49.87 52.57 7.38-46.92 25.17 35.61 39.93z\"],\n    \"balance-scale\": [640, 512, [], \"f24e\", \"M256 336h-.02c0-16.18 1.34-8.73-85.05-181.51-17.65-35.29-68.19-35.36-85.87 0C-2.06 328.75.02 320.33.02 336H0c0 44.18 57.31 80 128 80s128-35.82 128-80zM128 176l72 144H56l72-144zm511.98 160c0-16.18 1.34-8.73-85.05-181.51-17.65-35.29-68.19-35.36-85.87 0-87.12 174.26-85.04 165.84-85.04 181.51H384c0 44.18 57.31 80 128 80s128-35.82 128-80h-.02zM440 320l72-144 72 144H440zm88 128H352V153.25c23.51-10.29 41.16-31.48 46.39-57.25H528c8.84 0 16-7.16 16-16V48c0-8.84-7.16-16-16-16H383.64C369.04 12.68 346.09 0 320 0s-49.04 12.68-63.64 32H112c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h129.61c5.23 25.76 22.87 46.96 46.39 57.25V448H112c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h416c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z\"],\n    \"balance-scale-left\": [640, 512, [], \"f515\", \"M528 448H352V153.25c20.42-8.94 36.1-26.22 43.38-47.47l132-44.26c8.38-2.81 12.89-11.88 10.08-20.26l-10.17-30.34C524.48 2.54 515.41-1.97 507.03.84L389.11 40.37C375.3 16.36 349.69 0 320 0c-44.18 0-80 35.82-80 80 0 3.43.59 6.71 1.01 10.03l-128.39 43.05c-8.38 2.81-12.89 11.88-10.08 20.26l10.17 30.34c2.81 8.38 11.88 12.89 20.26 10.08l142.05-47.63c4.07 2.77 8.43 5.12 12.99 7.12V496c0 8.84 7.16 16 16 16h224c8.84 0 16-7.16 16-16v-32c-.01-8.84-7.17-16-16.01-16zm111.98-144c0-16.18 1.34-8.73-85.05-181.51-17.65-35.29-68.19-35.36-85.87 0-87.12 174.26-85.04 165.84-85.04 181.51H384c0 44.18 57.31 80 128 80s128-35.82 128-80h-.02zM440 288l72-144 72 144H440zm-269.07-37.51c-17.65-35.29-68.19-35.36-85.87 0C-2.06 424.75.02 416.33.02 432H0c0 44.18 57.31 80 128 80s128-35.82 128-80h-.02c0-16.18 1.34-8.73-85.05-181.51zM56 416l72-144 72 144H56z\"],\n    \"balance-scale-right\": [640, 512, [], \"f516\", \"M96 464v32c0 8.84 7.16 16 16 16h224c8.84 0 16-7.16 16-16V153.25c4.56-2 8.92-4.35 12.99-7.12l142.05 47.63c8.38 2.81 17.45-1.71 20.26-10.08l10.17-30.34c2.81-8.38-1.71-17.45-10.08-20.26l-128.4-43.05c.42-3.32 1.01-6.6 1.01-10.03 0-44.18-35.82-80-80-80-29.69 0-55.3 16.36-69.11 40.37L132.96.83c-8.38-2.81-17.45 1.71-20.26 10.08l-10.17 30.34c-2.81 8.38 1.71 17.45 10.08 20.26l132 44.26c7.28 21.25 22.96 38.54 43.38 47.47V448H112c-8.84 0-16 7.16-16 16zM0 304c0 44.18 57.31 80 128 80s128-35.82 128-80h-.02c0-15.67 2.08-7.25-85.05-181.51-17.68-35.36-68.22-35.29-85.87 0C-1.32 295.27.02 287.82.02 304H0zm56-16l72-144 72 144H56zm328.02 144H384c0 44.18 57.31 80 128 80s128-35.82 128-80h-.02c0-15.67 2.08-7.25-85.05-181.51-17.68-35.36-68.22-35.29-85.87 0-86.38 172.78-85.04 165.33-85.04 181.51zM440 416l72-144 72 144H440z\"],\n    \"ban\": [512, 512, [], \"f05e\", \"M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z\"],\n    \"band-aid\": [640, 512, [], \"f462\", \"M0 160v192c0 35.3 28.7 64 64 64h96V96H64c-35.3 0-64 28.7-64 64zm576-64h-96v320h96c35.3 0 64-28.7 64-64V160c0-35.3-28.7-64-64-64zM192 416h256V96H192v320zm176-232c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm0 96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm-96-96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm0 96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24z\"],\n    \"barcode\": [512, 512, [], \"f02a\", \"M0 448V64h18v384H0zm26.857-.273V64H36v383.727h-9.143zm27.143 0V64h8.857v383.727H54zm44.857 0V64h8.857v383.727h-8.857zm36 0V64h17.714v383.727h-17.714zm44.857 0V64h8.857v383.727h-8.857zm18 0V64h8.857v383.727h-8.857zm18 0V64h8.857v383.727h-8.857zm35.715 0V64h18v383.727h-18zm44.857 0V64h18v383.727h-18zm35.999 0V64h18.001v383.727h-18.001zm36.001 0V64h18.001v383.727h-18.001zm26.857 0V64h18v383.727h-18zm45.143 0V64h26.857v383.727h-26.857zm35.714 0V64h9.143v383.727H476zm18 .273V64h18v384h-18z\"],\n    \"bars\": [448, 512, [], \"f0c9\", \"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"],\n    \"baseball-ball\": [496, 512, [], \"f433\", \"M368.5 363.9l28.8-13.9c11.1 22.9 26 43.2 44.1 60.9 34-42.5 54.5-96.3 54.5-154.9 0-58.5-20.4-112.2-54.2-154.6-17.8 17.3-32.6 37.1-43.6 59.5l-28.7-14.1c12.8-26 30-49 50.8-69C375.6 34.7 315 8 248 8 181.1 8 120.5 34.6 75.9 77.7c20.7 19.9 37.9 42.9 50.7 68.8l-28.7 14.1c-11-22.3-25.7-42.1-43.5-59.4C20.4 143.7 0 197.4 0 256c0 58.6 20.4 112.3 54.4 154.7 18.2-17.7 33.2-38 44.3-61l28.8 13.9c-12.9 26.7-30.3 50.3-51.5 70.7 44.5 43.1 105.1 69.7 172 69.7 66.8 0 127.3-26.5 171.9-69.5-21.1-20.4-38.5-43.9-51.4-70.6zm-228.3-32l-30.5-9.8c14.9-46.4 12.7-93.8-.6-134l30.4-10c15 45.6 18 99.9.7 153.8zm216.3-153.4l30.4 10c-13.2 40.1-15.5 87.5-.6 134l-30.5 9.8c-17.3-54-14.3-108.3.7-153.8z\"],\n    \"basketball-ball\": [496, 512, [], \"f434\", \"M212.3 10.3c-43.8 6.3-86.2 24.1-122.2 53.8l77.4 77.4c27.8-35.8 43.3-81.2 44.8-131.2zM248 222L405.9 64.1c-42.4-35-93.6-53.5-145.5-56.1-1.2 63.9-21.5 122.3-58.7 167.7L248 222zM56.1 98.1c-29.7 36-47.5 78.4-53.8 122.2 50-1.5 95.5-17 131.2-44.8L56.1 98.1zm272.2 204.2c45.3-37.1 103.7-57.4 167.7-58.7-2.6-51.9-21.1-103.1-56.1-145.5L282 256l46.3 46.3zM248 290L90.1 447.9c42.4 34.9 93.6 53.5 145.5 56.1 1.3-64 21.6-122.4 58.7-167.7L248 290zm191.9 123.9c29.7-36 47.5-78.4 53.8-122.2-50.1 1.6-95.5 17.1-131.2 44.8l77.4 77.4zM167.7 209.7C122.3 246.9 63.9 267.3 0 268.4c2.6 51.9 21.1 103.1 56.1 145.5L214 256l-46.3-46.3zm116 292c43.8-6.3 86.2-24.1 122.2-53.8l-77.4-77.4c-27.7 35.7-43.2 81.2-44.8 131.2z\"],\n    \"bath\": [512, 512, [], \"f2cd\", \"M32,384a95.4,95.4,0,0,0,32,71.09V496a16,16,0,0,0,16,16h32a16,16,0,0,0,16-16V480H384v16a16,16,0,0,0,16,16h32a16,16,0,0,0,16-16V455.09A95.4,95.4,0,0,0,480,384V336H32ZM496,256H80V69.25a21.26,21.26,0,0,1,36.28-15l19.27,19.26c-13.13,29.88-7.61,59.11,8.62,79.73l-.17.17A16,16,0,0,0,144,176l11.31,11.31a16,16,0,0,0,22.63,0L283.31,81.94a16,16,0,0,0,0-22.63L272,48a16,16,0,0,0-22.62,0l-.17.17c-20.62-16.23-49.83-21.75-79.73-8.62L150.22,20.28A69.25,69.25,0,0,0,32,69.25V256H16A16,16,0,0,0,0,272v16a16,16,0,0,0,16,16H496a16,16,0,0,0,16-16V272A16,16,0,0,0,496,256Z\"],\n    \"battery-empty\": [640, 512, [], \"f244\", \"M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48z\"],\n    \"battery-full\": [640, 512, [], \"f240\", \"M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48zm-48 96H96v128h416V192z\"],\n    \"battery-half\": [640, 512, [], \"f242\", \"M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48zm-240 96H96v128h224V192z\"],\n    \"battery-quarter\": [640, 512, [], \"f243\", \"M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48zm-336 96H96v128h128V192z\"],\n    \"battery-three-quarters\": [640, 512, [], \"f241\", \"M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48zm-144 96H96v128h320V192z\"],\n    \"bed\": [640, 512, [], \"f236\", \"M176 256c44.11 0 80-35.89 80-80s-35.89-80-80-80-80 35.89-80 80 35.89 80 80 80zm352-128H304c-8.84 0-16 7.16-16 16v144H64V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v352c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-48h512v48c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V240c0-61.86-50.14-112-112-112z\"],\n    \"beer\": [448, 512, [], \"f0fc\", \"M368 96h-48V56c0-13.255-10.745-24-24-24H24C10.745 32 0 42.745 0 56v400c0 13.255 10.745 24 24 24h272c13.255 0 24-10.745 24-24v-42.11l80.606-35.977C429.396 365.063 448 336.388 448 304.86V176c0-44.112-35.888-80-80-80zm16 208.86a16.018 16.018 0 0 1-9.479 14.611L320 343.805V160h48c8.822 0 16 7.178 16 16v128.86zM208 384c-8.836 0-16-7.164-16-16V144c0-8.836 7.164-16 16-16s16 7.164 16 16v224c0 8.836-7.164 16-16 16zm-96 0c-8.836 0-16-7.164-16-16V144c0-8.836 7.164-16 16-16s16 7.164 16 16v224c0 8.836-7.164 16-16 16z\"],\n    \"bell\": [448, 512, [], \"f0f3\", \"M224 512c35.32 0 63.97-28.65 63.97-64H160.03c0 35.35 28.65 64 63.97 64zm215.39-149.71c-19.32-20.76-55.47-51.99-55.47-154.29 0-77.7-54.48-139.9-127.94-155.16V32c0-17.67-14.32-32-31.98-32s-31.98 14.33-31.98 32v20.84C118.56 68.1 64.08 130.3 64.08 208c0 102.3-36.15 133.53-55.47 154.29-6 6.45-8.66 14.16-8.61 21.71.11 16.4 12.98 32 32.1 32h383.8c19.12 0 32-15.6 32.1-32 .05-7.55-2.61-15.27-8.61-21.71z\"],\n    \"bell-slash\": [640, 512, [], \"f1f6\", \"M633.82 458.1l-90.62-70.05c.19-1.38.8-2.66.8-4.06.05-7.55-2.61-15.27-8.61-21.71-19.32-20.76-55.47-51.99-55.47-154.29 0-77.7-54.48-139.9-127.94-155.16V32c0-17.67-14.32-32-31.98-32s-31.98 14.33-31.98 32v20.84c-40.33 8.38-74.66 31.07-97.59 62.57L45.47 3.37C38.49-2.05 28.43-.8 23.01 6.18L3.37 31.45C-2.05 38.42-.8 48.47 6.18 53.9l588.35 454.73c6.98 5.43 17.03 4.17 22.46-2.81l19.64-25.27c5.42-6.97 4.17-17.02-2.81-22.45zM157.23 251.54c-8.61 67.96-36.41 93.33-52.62 110.75-6 6.45-8.66 14.16-8.61 21.71.11 16.4 12.98 32 32.1 32h241.92L157.23 251.54zM320 512c35.32 0 63.97-28.65 63.97-64H256.03c0 35.35 28.65 64 63.97 64z\"],\n    \"bezier-curve\": [640, 512, [], \"f55b\", \"M368 32h-96c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zM208 88h-84.75C113.75 64.56 90.84 48 64 48 28.66 48 0 76.65 0 112s28.66 64 64 64c26.84 0 49.75-16.56 59.25-40h79.73c-55.37 32.52-95.86 87.32-109.54 152h49.4c11.3-41.61 36.77-77.21 71.04-101.56-3.7-8.08-5.88-16.99-5.88-26.44V88zm-48 232H64c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32zM576 48c-26.84 0-49.75 16.56-59.25 40H432v72c0 9.45-2.19 18.36-5.88 26.44 34.27 24.35 59.74 59.95 71.04 101.56h49.4c-13.68-64.68-54.17-119.48-109.54-152h79.73c9.5 23.44 32.41 40 59.25 40 35.34 0 64-28.65 64-64s-28.66-64-64-64zm0 272h-96c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32z\"],\n    \"bible\": [448, 512, [], \"f647\", \"M448 358.4V25.6c0-16-9.6-25.6-25.6-25.6H96C41.6 0 0 41.6 0 96v320c0 54.4 41.6 96 96 96h326.4c12.8 0 25.6-9.6 25.6-25.6v-16c0-6.4-3.2-12.8-9.6-19.2-3.2-16-3.2-60.8 0-73.6 6.4-3.2 9.6-9.6 9.6-19.2zM144 144c0-8.84 7.16-16 16-16h48V80c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v48h48c8.84 0 16 7.16 16 16v32c0 8.84-7.16 16-16 16h-48v112c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16V192h-48c-8.84 0-16-7.16-16-16v-32zm236.8 304H96c-19.2 0-32-12.8-32-32s16-32 32-32h284.8v64z\"],\n    \"bicycle\": [640, 512, [], \"f206\", \"M512.509 192.001c-16.373-.064-32.03 2.955-46.436 8.495l-77.68-125.153A24 24 0 0 0 368.001 64h-64c-8.837 0-16 7.163-16 16v16c0 8.837 7.163 16 16 16h50.649l14.896 24H256.002v-16c0-8.837-7.163-16-16-16h-87.459c-13.441 0-24.777 10.999-24.536 24.437.232 13.044 10.876 23.563 23.995 23.563h48.726l-29.417 47.52c-13.433-4.83-27.904-7.483-42.992-7.52C58.094 191.83.412 249.012.002 319.236-.413 390.279 57.055 448 128.002 448c59.642 0 109.758-40.793 123.967-96h52.033a24 24 0 0 0 20.406-11.367L410.37 201.77l14.938 24.067c-25.455 23.448-41.385 57.081-41.307 94.437.145 68.833 57.899 127.051 126.729 127.719 70.606.685 128.181-55.803 129.255-125.996 1.086-70.941-56.526-129.72-127.476-129.996zM186.75 265.772c9.727 10.529 16.673 23.661 19.642 38.228h-43.306l23.664-38.228zM128.002 400c-44.112 0-80-35.888-80-80s35.888-80 80-80c5.869 0 11.586.653 17.099 1.859l-45.505 73.509C89.715 331.327 101.213 352 120.002 352h81.3c-12.37 28.225-40.562 48-73.3 48zm162.63-96h-35.624c-3.96-31.756-19.556-59.894-42.383-80.026L237.371 184h127.547l-74.286 120zm217.057 95.886c-41.036-2.165-74.049-35.692-75.627-76.755-.812-21.121 6.633-40.518 19.335-55.263l44.433 71.586c4.66 7.508 14.524 9.816 22.032 5.156l13.594-8.437c7.508-4.66 9.817-14.524 5.156-22.032l-44.468-71.643a79.901 79.901 0 0 1 19.858-2.497c44.112 0 80 35.888 80 80-.001 45.54-38.252 82.316-84.313 79.885z\"],\n    \"biking\": [640, 512, [], \"f84a\", \"M400 96a48 48 0 1 0-48-48 48 48 0 0 0 48 48zm-4 121a31.9 31.9 0 0 0 20 7h64a32 32 0 0 0 0-64h-52.78L356 103a31.94 31.94 0 0 0-40.81.68l-112 96a32 32 0 0 0 3.08 50.92L288 305.12V416a32 32 0 0 0 64 0V288a32 32 0 0 0-14.25-26.62l-41.36-27.57 58.25-49.92zm116 39a128 128 0 1 0 128 128 128 128 0 0 0-128-128zm0 192a64 64 0 1 1 64-64 64 64 0 0 1-64 64zM128 256a128 128 0 1 0 128 128 128 128 0 0 0-128-128zm0 192a64 64 0 1 1 64-64 64 64 0 0 1-64 64z\"],\n    \"binoculars\": [512, 512, [], \"f1e5\", \"M416 48c0-8.84-7.16-16-16-16h-64c-8.84 0-16 7.16-16 16v48h96V48zM63.91 159.99C61.4 253.84 3.46 274.22 0 404v44c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32V288h32V128H95.84c-17.63 0-31.45 14.37-31.93 31.99zm384.18 0c-.48-17.62-14.3-31.99-31.93-31.99H320v160h32v160c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-44c-3.46-129.78-61.4-150.16-63.91-244.01zM176 32h-64c-8.84 0-16 7.16-16 16v48h96V48c0-8.84-7.16-16-16-16zm48 256h64V128h-64v160z\"],\n    \"biohazard\": [576, 512, [], \"f780\", \"M287.9 112c18.6 0 36.2 3.8 52.8 9.6 13.3-10.3 23.6-24.3 29.5-40.7-25.2-10.9-53-17-82.2-17-29.1 0-56.9 6-82.1 16.9 5.9 16.4 16.2 30.4 29.5 40.7 16.5-5.7 34-9.5 52.5-9.5zM163.6 438.7c12-11.8 20.4-26.4 24.5-42.4-32.9-26.4-54.8-65.3-58.9-109.6-8.5-2.8-17.2-4.6-26.4-4.6-7.6 0-15.2 1-22.5 3.1 4.1 62.8 35.8 118 83.3 153.5zm224.2-42.6c4.1 16 12.5 30.7 24.5 42.5 47.4-35.5 79.1-90.7 83-153.5-7.2-2-14.7-3-22.2-3-9.2 0-18 1.9-26.6 4.7-4.1 44.2-26 82.9-58.7 109.3zm113.5-205c-17.6-10.4-36.3-16.6-55.3-19.9 6-17.7 10-36.4 10-56.2 0-41-14.5-80.8-41-112.2-2.5-3-6.6-3.7-10-1.8-3.3 1.9-4.8 6-3.6 9.7 4.5 13.8 6.6 26.3 6.6 38.5 0 67.8-53.8 122.9-120 122.9S168 117 168 49.2c0-12.1 2.2-24.7 6.6-38.5 1.2-3.7-.3-7.8-3.6-9.7-3.4-1.9-7.5-1.2-10 1.8C134.6 34.2 120 74 120 115c0 19.8 3.9 38.5 10 56.2-18.9 3.3-37.7 9.5-55.3 19.9-34.6 20.5-61 53.3-74.3 92.4-1.3 3.7.2 7.7 3.5 9.8 3.3 2 7.5 1.3 10-1.6 9.4-10.8 19-19.1 29.2-25.1 57.3-33.9 130.8-13.7 163.9 45 33.1 58.7 13.4 134-43.9 167.9-10.2 6.1-22 10.4-35.8 13.4-3.7.8-6.4 4.2-6.4 8.1.1 4 2.7 7.3 6.5 8 39.7 7.8 80.6.8 115.2-19.7 18-10.6 32.9-24.5 45.3-40.1 12.4 15.6 27.3 29.5 45.3 40.1 34.6 20.5 75.5 27.5 115.2 19.7 3.8-.7 6.4-4 6.5-8 0-3.9-2.6-7.3-6.4-8.1-13.9-2.9-25.6-7.3-35.8-13.4-57.3-33.9-77-109.2-43.9-167.9s106.6-78.9 163.9-45c10.2 6.1 19.8 14.3 29.2 25.1 2.5 2.9 6.7 3.6 10 1.6s4.8-6.1 3.5-9.8c-13.1-39.1-39.5-72-74.1-92.4zm-213.4 129c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z\"],\n    \"birthday-cake\": [448, 512, [], \"f1fd\", \"M448 384c-28.02 0-31.26-32-74.5-32-43.43 0-46.825 32-74.75 32-27.695 0-31.454-32-74.75-32-42.842 0-47.218 32-74.5 32-28.148 0-31.202-32-74.75-32-43.547 0-46.653 32-74.75 32v-80c0-26.5 21.5-48 48-48h16V112h64v144h64V112h64v144h64V112h64v144h16c26.5 0 48 21.5 48 48v80zm0 128H0v-96c43.356 0 46.767-32 74.75-32 27.951 0 31.253 32 74.75 32 42.843 0 47.217-32 74.5-32 28.148 0 31.201 32 74.75 32 43.357 0 46.767-32 74.75-32 27.488 0 31.252 32 74.5 32v96zM96 96c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40zm128 0c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40zm128 0c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40z\"],\n    \"blender\": [512, 512, [], \"f517\", \"M416 384H160c-35.35 0-64 28.65-64 64v32c0 17.67 14.33 32 32 32h320c17.67 0 32-14.33 32-32v-32c0-35.35-28.65-64-64-64zm-128 96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm40-416h166.54L512 0H48C21.49 0 0 21.49 0 48v160c0 26.51 21.49 48 48 48h103.27l8.73 96h256l17.46-64H328c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h114.18l17.46-64H328c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h140.36l17.46-64H328c-4.42 0-8-3.58-8-8V72c0-4.42 3.58-8 8-8zM64 192V64h69.82l11.64 128H64z\"],\n    \"blender-phone\": [576, 512, [], \"f6b6\", \"M392 64h166.54L576 0H192v352h288l17.46-64H392c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h114.18l17.46-64H392c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h140.36l17.46-64H392c-4.42 0-8-3.58-8-8V72c0-4.42 3.58-8 8-8zM158.8 335.01l-25.78-63.26c-2.78-6.81-9.8-10.99-17.24-10.26l-45.03 4.42c-17.28-46.94-17.65-99.78 0-147.72l45.03 4.42c7.43.73 14.46-3.46 17.24-10.26l25.78-63.26c3.02-7.39.2-15.85-6.68-20.07l-39.28-24.1C98.51-3.87 80.09-.5 68.95 11.97c-92.57 103.6-92 259.55 2.1 362.49 9.87 10.8 29.12 12.48 41.65 4.8l39.41-24.18c6.89-4.22 9.7-12.67 6.69-20.07zM480 384H192c-35.35 0-64 28.65-64 64v32c0 17.67 14.33 32 32 32h352c17.67 0 32-14.33 32-32v-32c0-35.35-28.65-64-64-64zm-144 96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"blind\": [384, 512, [], \"f29d\", \"M380.15 510.837a8 8 0 0 1-10.989-2.687l-125.33-206.427a31.923 31.923 0 0 0 12.958-9.485l126.048 207.608a8 8 0 0 1-2.687 10.991zM142.803 314.338l-32.54 89.485 36.12 88.285c6.693 16.36 25.377 24.192 41.733 17.501 16.357-6.692 24.193-25.376 17.501-41.734l-62.814-153.537zM96 88c24.301 0 44-19.699 44-44S120.301 0 96 0 52 19.699 52 44s19.699 44 44 44zm154.837 169.128l-120-152c-4.733-5.995-11.75-9.108-18.837-9.112V96H80v.026c-7.146.003-14.217 3.161-18.944 9.24L0 183.766v95.694c0 13.455 11.011 24.791 24.464 24.536C37.505 303.748 48 293.1 48 280v-79.766l16-20.571v140.698L9.927 469.055c-6.04 16.609 2.528 34.969 19.138 41.009 16.602 6.039 34.968-2.524 41.009-19.138L136 309.638V202.441l-31.406-39.816a4 4 0 1 1 6.269-4.971l102.3 129.217c9.145 11.584 24.368 11.339 33.708 3.965 10.41-8.216 12.159-23.334 3.966-33.708z\"],\n    \"blog\": [512, 512, [], \"f781\", \"M172.2 226.8c-14.6-2.9-28.2 8.9-28.2 23.8V301c0 10.2 7.1 18.4 16.7 22 18.2 6.8 31.3 24.4 31.3 45 0 26.5-21.5 48-48 48s-48-21.5-48-48V120c0-13.3-10.7-24-24-24H24c-13.3 0-24 10.7-24 24v248c0 89.5 82.1 160.2 175 140.7 54.4-11.4 98.3-55.4 109.7-109.7 17.4-82.9-37-157.2-112.5-172.2zM209 0c-9.2-.5-17 6.8-17 16v31.6c0 8.5 6.6 15.5 15 15.9 129.4 7 233.4 112 240.9 241.5.5 8.4 7.5 15 15.9 15h32.1c9.2 0 16.5-7.8 16-17C503.4 139.8 372.2 8.6 209 0zm.3 96c-9.3-.7-17.3 6.7-17.3 16.1v32.1c0 8.4 6.5 15.3 14.8 15.9 76.8 6.3 138 68.2 144.9 145.2.8 8.3 7.6 14.7 15.9 14.7h32.2c9.3 0 16.8-8 16.1-17.3-8.4-110.1-96.5-198.2-206.6-206.7z\"],\n    \"bold\": [384, 512, [], \"f032\", \"M333.49 238a122 122 0 0 0 27-65.21C367.87 96.49 308 32 233.42 32H34a16 16 0 0 0-16 16v48a16 16 0 0 0 16 16h31.87v288H34a16 16 0 0 0-16 16v48a16 16 0 0 0 16 16h209.32c70.8 0 134.14-51.75 141-122.4 4.74-48.45-16.39-92.06-50.83-119.6zM145.66 112h87.76a48 48 0 0 1 0 96h-87.76zm87.76 288h-87.76V288h87.76a56 56 0 0 1 0 112z\"],\n    \"bolt\": [320, 512, [], \"f0e7\", \"M296 160H180.6l42.6-129.8C227.2 15 215.7 0 200 0H56C44 0 33.8 8.9 32.2 20.8l-32 240C-1.7 275.2 9.5 288 24 288h118.7L96.6 482.5c-3.6 15.2 8 29.5 23.3 29.5 8.4 0 16.4-4.4 20.8-12l176-304c9.3-15.9-2.2-36-20.7-36z\"],\n    \"bomb\": [512, 512, [], \"f1e2\", \"M440.5 88.5l-52 52L415 167c9.4 9.4 9.4 24.6 0 33.9l-17.4 17.4c11.8 26.1 18.4 55.1 18.4 85.6 0 114.9-93.1 208-208 208S0 418.9 0 304 93.1 96 208 96c30.5 0 59.5 6.6 85.6 18.4L311 97c9.4-9.4 24.6-9.4 33.9 0l26.5 26.5 52-52 17.1 17zM500 60h-24c-6.6 0-12 5.4-12 12s5.4 12 12 12h24c6.6 0 12-5.4 12-12s-5.4-12-12-12zM440 0c-6.6 0-12 5.4-12 12v24c0 6.6 5.4 12 12 12s12-5.4 12-12V12c0-6.6-5.4-12-12-12zm33.9 55l17-17c4.7-4.7 4.7-12.3 0-17-4.7-4.7-12.3-4.7-17 0l-17 17c-4.7 4.7-4.7 12.3 0 17 4.8 4.7 12.4 4.7 17 0zm-67.8 0c4.7 4.7 12.3 4.7 17 0 4.7-4.7 4.7-12.3 0-17l-17-17c-4.7-4.7-12.3-4.7-17 0-4.7 4.7-4.7 12.3 0 17l17 17zm67.8 34c-4.7-4.7-12.3-4.7-17 0-4.7 4.7-4.7 12.3 0 17l17 17c4.7 4.7 12.3 4.7 17 0 4.7-4.7 4.7-12.3 0-17l-17-17zM112 272c0-35.3 28.7-64 64-64 8.8 0 16-7.2 16-16s-7.2-16-16-16c-52.9 0-96 43.1-96 96 0 8.8 7.2 16 16 16s16-7.2 16-16z\"],\n    \"bone\": [640, 512, [], \"f5d7\", \"M598.88 244.56c25.2-12.6 41.12-38.36 41.12-66.53v-7.64C640 129.3 606.7 96 565.61 96c-32.02 0-60.44 20.49-70.57 50.86-7.68 23.03-11.6 45.14-38.11 45.14H183.06c-27.38 0-31.58-25.54-38.11-45.14C134.83 116.49 106.4 96 74.39 96 33.3 96 0 129.3 0 170.39v7.64c0 28.17 15.92 53.93 41.12 66.53 9.43 4.71 9.43 18.17 0 22.88C15.92 280.04 0 305.8 0 333.97v7.64C0 382.7 33.3 416 74.38 416c32.02 0 60.44-20.49 70.57-50.86 7.68-23.03 11.6-45.14 38.11-45.14h273.87c27.38 0 31.58 25.54 38.11 45.14C505.17 395.51 533.6 416 565.61 416c41.08 0 74.38-33.3 74.38-74.39v-7.64c0-28.18-15.92-53.93-41.12-66.53-9.42-4.71-9.42-18.17.01-22.88z\"],\n    \"bong\": [448, 512, [], \"f55c\", \"M302.5 512c23.18 0 44.43-12.58 56-32.66C374.69 451.26 384 418.75 384 384c0-36.12-10.08-69.81-27.44-98.62L400 241.94l9.38 9.38c6.25 6.25 16.38 6.25 22.63 0l11.3-11.32c6.25-6.25 6.25-16.38 0-22.63l-52.69-52.69c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63l9.38 9.38-39.41 39.41c-11.56-11.37-24.53-21.33-38.65-29.51V63.74l15.97-.02c8.82-.01 15.97-7.16 15.98-15.98l.04-31.72C320 7.17 312.82-.01 303.97 0L80.03.26c-8.82.01-15.97 7.16-15.98 15.98l-.04 31.73c-.01 8.85 7.17 16.02 16.02 16.01L96 63.96v153.93C38.67 251.1 0 312.97 0 384c0 34.75 9.31 67.27 25.5 95.34C37.08 499.42 58.33 512 81.5 512h221zM120.06 259.43L144 245.56V63.91l96-.11v181.76l23.94 13.87c24.81 14.37 44.12 35.73 56.56 60.57h-257c12.45-24.84 31.75-46.2 56.56-60.57z\"],\n    \"book\": [448, 512, [], \"f02d\", \"M448 360V24c0-13.3-10.7-24-24-24H96C43 0 0 43 0 96v320c0 53 43 96 96 96h328c13.3 0 24-10.7 24-24v-16c0-7.5-3.5-14.3-8.9-18.7-4.2-15.4-4.2-59.3 0-74.7 5.4-4.3 8.9-11.1 8.9-18.6zM128 134c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm0 64c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm253.4 250H96c-17.7 0-32-14.3-32-32 0-17.6 14.4-32 32-32h285.4c-1.9 17.1-1.9 46.9 0 64z\"],\n    \"book-dead\": [448, 512, [], \"f6b7\", \"M272 136c8.8 0 16-7.2 16-16s-7.2-16-16-16-16 7.2-16 16 7.2 16 16 16zm176 222.4V25.6c0-16-9.6-25.6-25.6-25.6H96C41.6 0 0 41.6 0 96v320c0 54.4 41.6 96 96 96h326.4c12.8 0 25.6-9.6 25.6-25.6v-16c0-6.4-3.2-12.8-9.6-19.2-3.2-16-3.2-60.8 0-73.6 6.4-3.2 9.6-9.6 9.6-19.2zM240 56c44.2 0 80 28.7 80 64 0 20.9-12.7 39.2-32 50.9V184c0 8.8-7.2 16-16 16h-64c-8.8 0-16-7.2-16-16v-13.1c-19.3-11.7-32-30-32-50.9 0-35.3 35.8-64 80-64zM124.8 223.3l6.3-14.7c1.7-4.1 6.4-5.9 10.5-4.2l98.3 42.1 98.4-42.1c4.1-1.7 8.8.1 10.5 4.2l6.3 14.7c1.7 4.1-.1 8.8-4.2 10.5L280.6 264l70.3 30.1c4.1 1.7 5.9 6.4 4.2 10.5l-6.3 14.7c-1.7 4.1-6.4 5.9-10.5 4.2L240 281.4l-98.3 42.2c-4.1 1.7-8.8-.1-10.5-4.2l-6.3-14.7c-1.7-4.1.1-8.8 4.2-10.5l70.4-30.1-70.5-30.3c-4.1-1.7-5.9-6.4-4.2-10.5zm256 224.7H96c-19.2 0-32-12.8-32-32s16-32 32-32h284.8zM208 136c8.8 0 16-7.2 16-16s-7.2-16-16-16-16 7.2-16 16 7.2 16 16 16z\"],\n    \"book-medical\": [448, 512, [], \"f7e6\", \"M448 358.4V25.6c0-16-9.6-25.6-25.6-25.6H96C41.6 0 0 41.6 0 96v320c0 54.4 41.6 96 96 96h326.4c12.8 0 25.6-9.6 25.6-25.6v-16q0-9.6-9.6-19.2c-3.2-16-3.2-60.8 0-73.6q9.6-4.8 9.6-19.2zM144 168a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8v48a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8zm236.8 280H96c-19.2 0-32-12.8-32-32s16-32 32-32h284.8z\"],\n    \"book-open\": [576, 512, [], \"f518\", \"M542.22 32.05c-54.8 3.11-163.72 14.43-230.96 55.59-4.64 2.84-7.27 7.89-7.27 13.17v363.87c0 11.55 12.63 18.85 23.28 13.49 69.18-34.82 169.23-44.32 218.7-46.92 16.89-.89 30.02-14.43 30.02-30.66V62.75c.01-17.71-15.35-31.74-33.77-30.7zM264.73 87.64C197.5 46.48 88.58 35.17 33.78 32.05 15.36 31.01 0 45.04 0 62.75V400.6c0 16.24 13.13 29.78 30.02 30.66 49.49 2.6 149.59 12.11 218.77 46.95 10.62 5.35 23.21-1.94 23.21-13.46V100.63c0-5.29-2.62-10.14-7.27-12.99z\"],\n    \"book-reader\": [512, 512, [], \"f5da\", \"M352 96c0-53.02-42.98-96-96-96s-96 42.98-96 96 42.98 96 96 96 96-42.98 96-96zM233.59 241.1c-59.33-36.32-155.43-46.3-203.79-49.05C13.55 191.13 0 203.51 0 219.14v222.8c0 14.33 11.59 26.28 26.49 27.05 43.66 2.29 131.99 10.68 193.04 41.43 9.37 4.72 20.48-1.71 20.48-11.87V252.56c-.01-4.67-2.32-8.95-6.42-11.46zm248.61-49.05c-48.35 2.74-144.46 12.73-203.78 49.05-4.1 2.51-6.41 6.96-6.41 11.63v245.79c0 10.19 11.14 16.63 20.54 11.9 61.04-30.72 149.32-39.11 192.97-41.4 14.9-.78 26.49-12.73 26.49-27.06V219.14c-.01-15.63-13.56-28.01-29.81-27.09z\"],\n    \"bookmark\": [384, 512, [], \"f02e\", \"M0 512V48C0 21.49 21.49 0 48 0h288c26.51 0 48 21.49 48 48v464L192 400 0 512z\"],\n    \"border-all\": [448, 512, [], \"f84c\", \"M416 32H32A32 32 0 0 0 0 64v384a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32V64a32 32 0 0 0-32-32zm-32 64v128H256V96zm-192 0v128H64V96zM64 416V288h128v128zm192 0V288h128v128z\"],\n    \"border-none\": [448, 512, [], \"f850\", \"M240 224h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-288 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96 192h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-96h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-192h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM240 320h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-192h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-96 288h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96-384h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM48 224H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0 192H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-96H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-192H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-96H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"],\n    \"border-style\": [448, 512, [], \"f853\", \"M240 416h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm192 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96-192h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0 96h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0 96h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-288h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-96H32A32 32 0 0 0 0 64v400a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V96h368a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"],\n    \"bowling-ball\": [496, 512, [], \"f436\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM120 192c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm64-96c0-17.7 14.3-32 32-32s32 14.3 32 32-14.3 32-32 32-32-14.3-32-32zm48 144c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"box\": [512, 512, [], \"f466\", \"M509.5 184.6L458.9 32.8C452.4 13.2 434.1 0 413.4 0H272v192h238.7c-.4-2.5-.4-5-1.2-7.4zM240 0H98.6c-20.7 0-39 13.2-45.5 32.8L2.5 184.6c-.8 2.4-.8 4.9-1.2 7.4H240V0zM0 224v240c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V224H0z\"],\n    \"box-open\": [640, 512, [], \"f49e\", \"M425.7 256c-16.9 0-32.8-9-41.4-23.4L320 126l-64.2 106.6c-8.7 14.5-24.6 23.5-41.5 23.5-4.5 0-9-.6-13.3-1.9L64 215v178c0 14.7 10 27.5 24.2 31l216.2 54.1c10.2 2.5 20.9 2.5 31 0L551.8 424c14.2-3.6 24.2-16.4 24.2-31V215l-137 39.1c-4.3 1.3-8.8 1.9-13.3 1.9zm212.6-112.2L586.8 41c-3.1-6.2-9.8-9.8-16.7-8.9L320 64l91.7 152.1c3.8 6.3 11.4 9.3 18.5 7.3l197.9-56.5c9.9-2.9 14.7-13.9 10.2-23.1zM53.2 41L1.7 143.8c-4.6 9.2.3 20.2 10.1 23l197.9 56.5c7.1 2 14.7-1 18.5-7.3L320 64 69.8 32.1c-6.9-.8-13.5 2.7-16.6 8.9z\"],\n    \"box-tissue\": [512, 512, [], \"e05b\", \"M383.88,287.82l64-192H338.47a70.2,70.2,0,0,1-66.59-48,70.21,70.21,0,0,0-66.6-48H63.88l64,288Zm-384,192a32,32,0,0,0,32,32h448a32,32,0,0,0,32-32v-64H-.12Zm480-256H438.94l-21.33,64h14.27a16,16,0,0,1,0,32h-352a16,16,0,1,1,0-32H95.09l-14.22-64h-49a32,32,0,0,0-32,32v128h512v-128A32,32,0,0,0,479.88,223.82Z\"],\n    \"boxes\": [576, 512, [], \"f468\", \"M560 288h-80v96l-32-21.3-32 21.3v-96h-80c-8.8 0-16 7.2-16 16v192c0 8.8 7.2 16 16 16h224c8.8 0 16-7.2 16-16V304c0-8.8-7.2-16-16-16zm-384-64h224c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16h-80v96l-32-21.3L256 96V0h-80c-8.8 0-16 7.2-16 16v192c0 8.8 7.2 16 16 16zm64 64h-80v96l-32-21.3L96 384v-96H16c-8.8 0-16 7.2-16 16v192c0 8.8 7.2 16 16 16h224c8.8 0 16-7.2 16-16V304c0-8.8-7.2-16-16-16z\"],\n    \"braille\": [640, 512, [], \"f2a1\", \"M128 256c0 35.346-28.654 64-64 64S0 291.346 0 256s28.654-64 64-64 64 28.654 64 64zM64 384c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0-352C28.654 32 0 60.654 0 96s28.654 64 64 64 64-28.654 64-64-28.654-64-64-64zm160 192c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0 160c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0-352c-35.346 0-64 28.654-64 64s28.654 64 64 64 64-28.654 64-64-28.654-64-64-64zm224 192c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0 160c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0-352c-35.346 0-64 28.654-64 64s28.654 64 64 64 64-28.654 64-64-28.654-64-64-64zm160 192c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0 160c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0-320c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32z\"],\n    \"brain\": [576, 512, [], \"f5dc\", \"M208 0c-29.9 0-54.7 20.5-61.8 48.2-.8 0-1.4-.2-2.2-.2-35.3 0-64 28.7-64 64 0 4.8.6 9.5 1.7 14C52.5 138 32 166.6 32 200c0 12.6 3.2 24.3 8.3 34.9C16.3 248.7 0 274.3 0 304c0 33.3 20.4 61.9 49.4 73.9-.9 4.6-1.4 9.3-1.4 14.1 0 39.8 32.2 72 72 72 4.1 0 8.1-.5 12-1.2 9.6 28.5 36.2 49.2 68 49.2 39.8 0 72-32.2 72-72V64c0-35.3-28.7-64-64-64zm368 304c0-29.7-16.3-55.3-40.3-69.1 5.2-10.6 8.3-22.3 8.3-34.9 0-33.4-20.5-62-49.7-74 1-4.5 1.7-9.2 1.7-14 0-35.3-28.7-64-64-64-.8 0-1.5.2-2.2.2C422.7 20.5 397.9 0 368 0c-35.3 0-64 28.6-64 64v376c0 39.8 32.2 72 72 72 31.8 0 58.4-20.7 68-49.2 3.9.7 7.9 1.2 12 1.2 39.8 0 72-32.2 72-72 0-4.8-.5-9.5-1.4-14.1 29-12 49.4-40.6 49.4-73.9z\"],\n    \"bread-slice\": [576, 512, [], \"f7ec\", \"M288 0C108 0 0 93.4 0 169.14 0 199.44 24.24 224 64 224v256c0 17.67 16.12 32 36 32h376c19.88 0 36-14.33 36-32V224c39.76 0 64-24.56 64-54.86C576 93.4 468 0 288 0z\"],\n    \"briefcase\": [512, 512, [], \"f0b1\", \"M320 336c0 8.84-7.16 16-16 16h-96c-8.84 0-16-7.16-16-16v-48H0v144c0 25.6 22.4 48 48 48h416c25.6 0 48-22.4 48-48V288H320v48zm144-208h-80V80c0-25.6-22.4-48-48-48H176c-25.6 0-48 22.4-48 48v48H48c-25.6 0-48 22.4-48 48v80h512v-80c0-25.6-22.4-48-48-48zm-144 0H192V96h128v32z\"],\n    \"briefcase-medical\": [512, 512, [], \"f469\", \"M464 128h-80V80c0-26.5-21.5-48-48-48H176c-26.5 0-48 21.5-48 48v48H48c-26.5 0-48 21.5-48 48v288c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V176c0-26.5-21.5-48-48-48zM192 96h128v32H192V96zm160 248c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8v48z\"],\n    \"broadcast-tower\": [640, 512, [], \"f519\", \"M150.94 192h33.73c11.01 0 18.61-10.83 14.86-21.18-4.93-13.58-7.55-27.98-7.55-42.82s2.62-29.24 7.55-42.82C203.29 74.83 195.68 64 184.67 64h-33.73c-7.01 0-13.46 4.49-15.41 11.23C130.64 92.21 128 109.88 128 128c0 18.12 2.64 35.79 7.54 52.76 1.94 6.74 8.39 11.24 15.4 11.24zM89.92 23.34C95.56 12.72 87.97 0 75.96 0H40.63c-6.27 0-12.14 3.59-14.74 9.31C9.4 45.54 0 85.65 0 128c0 24.75 3.12 68.33 26.69 118.86 2.62 5.63 8.42 9.14 14.61 9.14h34.84c12.02 0 19.61-12.74 13.95-23.37-49.78-93.32-16.71-178.15-.17-209.29zM614.06 9.29C611.46 3.58 605.6 0 599.33 0h-35.42c-11.98 0-19.66 12.66-14.02 23.25 18.27 34.29 48.42 119.42.28 209.23-5.72 10.68 1.8 23.52 13.91 23.52h35.23c6.27 0 12.13-3.58 14.73-9.29C630.57 210.48 640 170.36 640 128s-9.42-82.48-25.94-118.71zM489.06 64h-33.73c-11.01 0-18.61 10.83-14.86 21.18 4.93 13.58 7.55 27.98 7.55 42.82s-2.62 29.24-7.55 42.82c-3.76 10.35 3.85 21.18 14.86 21.18h33.73c7.02 0 13.46-4.49 15.41-11.24 4.9-16.97 7.53-34.64 7.53-52.76 0-18.12-2.64-35.79-7.54-52.76-1.94-6.75-8.39-11.24-15.4-11.24zm-116.3 100.12c7.05-10.29 11.2-22.71 11.2-36.12 0-35.35-28.63-64-63.96-64-35.32 0-63.96 28.65-63.96 64 0 13.41 4.15 25.83 11.2 36.12l-130.5 313.41c-3.4 8.15.46 17.52 8.61 20.92l29.51 12.31c8.15 3.4 17.52-.46 20.91-8.61L244.96 384h150.07l49.2 118.15c3.4 8.16 12.76 12.01 20.91 8.61l29.51-12.31c8.15-3.4 12-12.77 8.61-20.92l-130.5-313.41zM271.62 320L320 203.81 368.38 320h-96.76z\"],\n    \"broom\": [640, 512, [], \"f51a\", \"M256.47 216.77l86.73 109.18s-16.6 102.36-76.57 150.12C206.66 523.85 0 510.19 0 510.19s3.8-23.14 11-55.43l94.62-112.17c3.97-4.7-.87-11.62-6.65-9.5l-60.4 22.09c14.44-41.66 32.72-80.04 54.6-97.47 59.97-47.76 163.3-40.94 163.3-40.94zM636.53 31.03l-19.86-25c-5.49-6.9-15.52-8.05-22.41-2.56l-232.48 177.8-34.14-42.97c-5.09-6.41-15.14-5.21-18.59 2.21l-25.33 54.55 86.73 109.18 58.8-12.45c8-1.69 11.42-11.2 6.34-17.6l-34.09-42.92 232.48-177.8c6.89-5.48 8.04-15.53 2.55-22.44z\"],\n    \"brush\": [384, 512, [], \"f55d\", \"M352 0H32C14.33 0 0 14.33 0 32v224h384V32c0-17.67-14.33-32-32-32zM0 320c0 35.35 28.66 64 64 64h64v64c0 35.35 28.66 64 64 64s64-28.65 64-64v-64h64c35.34 0 64-28.65 64-64v-32H0v32zm192 104c13.25 0 24 10.74 24 24 0 13.25-10.75 24-24 24s-24-10.75-24-24c0-13.26 10.75-24 24-24z\"],\n    \"bug\": [512, 512, [], \"f188\", \"M511.988 288.9c-.478 17.43-15.217 31.1-32.653 31.1H424v16c0 21.864-4.882 42.584-13.6 61.145l60.228 60.228c12.496 12.497 12.496 32.758 0 45.255-12.498 12.497-32.759 12.496-45.256 0l-54.736-54.736C345.886 467.965 314.351 480 280 480V236c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v244c-34.351 0-65.886-12.035-90.636-32.108l-54.736 54.736c-12.498 12.497-32.759 12.496-45.256 0-12.496-12.497-12.496-32.758 0-45.255l60.228-60.228C92.882 378.584 88 357.864 88 336v-16H32.666C15.23 320 .491 306.33.013 288.9-.484 270.816 14.028 256 32 256h56v-58.745l-46.628-46.628c-12.496-12.497-12.496-32.758 0-45.255 12.498-12.497 32.758-12.497 45.256 0L141.255 160h229.489l54.627-54.627c12.498-12.497 32.758-12.497 45.256 0 12.496 12.497 12.496 32.758 0 45.255L424 197.255V256h56c17.972 0 32.484 14.816 31.988 32.9zM257 0c-61.856 0-112 50.144-112 112h224C369 50.144 318.856 0 257 0z\"],\n    \"building\": [448, 512, [], \"f1ad\", \"M436 480h-20V24c0-13.255-10.745-24-24-24H56C42.745 0 32 10.745 32 24v456H12c-6.627 0-12 5.373-12 12v20h448v-20c0-6.627-5.373-12-12-12zM128 76c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12V76zm0 96c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40zm52 148h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12zm76 160h-64v-84c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v84zm64-172c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40zm0-96c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40zm0-96c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12V76c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40z\"],\n    \"bullhorn\": [576, 512, [], \"f0a1\", \"M576 240c0-23.63-12.95-44.04-32-55.12V32.01C544 23.26 537.02 0 512 0c-7.12 0-14.19 2.38-19.98 7.02l-85.03 68.03C364.28 109.19 310.66 128 256 128H64c-35.35 0-64 28.65-64 64v96c0 35.35 28.65 64 64 64h33.7c-1.39 10.48-2.18 21.14-2.18 32 0 39.77 9.26 77.35 25.56 110.94 5.19 10.69 16.52 17.06 28.4 17.06h74.28c26.05 0 41.69-29.84 25.9-50.56-16.4-21.52-26.15-48.36-26.15-77.44 0-11.11 1.62-21.79 4.41-32H256c54.66 0 108.28 18.81 150.98 52.95l85.03 68.03a32.023 32.023 0 0 0 19.98 7.02c24.92 0 32-22.78 32-32V295.13C563.05 284.04 576 263.63 576 240zm-96 141.42l-33.05-26.44C392.95 311.78 325.12 288 256 288v-96c69.12 0 136.95-23.78 190.95-66.98L480 98.58v282.84z\"],\n    \"bullseye\": [496, 512, [], \"f140\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm0 432c-101.69 0-184-82.29-184-184 0-101.69 82.29-184 184-184 101.69 0 184 82.29 184 184 0 101.69-82.29 184-184 184zm0-312c-70.69 0-128 57.31-128 128s57.31 128 128 128 128-57.31 128-128-57.31-128-128-128zm0 192c-35.29 0-64-28.71-64-64s28.71-64 64-64 64 28.71 64 64-28.71 64-64 64z\"],\n    \"burn\": [384, 512, [], \"f46a\", \"M192 0C79.7 101.3 0 220.9 0 300.5 0 425 79 512 192 512s192-87 192-211.5c0-79.9-80.2-199.6-192-300.5zm0 448c-56.5 0-96-39-96-94.8 0-13.5 4.6-61.5 96-161.2 91.4 99.7 96 147.7 96 161.2 0 55.8-39.5 94.8-96 94.8z\"],\n    \"bus\": [512, 512, [], \"f207\", \"M488 128h-8V80c0-44.8-99.2-80-224-80S32 35.2 32 80v48h-8c-13.25 0-24 10.74-24 24v80c0 13.25 10.75 24 24 24h8v160c0 17.67 14.33 32 32 32v32c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-32h192v32c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-32h6.4c16 0 25.6-12.8 25.6-25.6V256h8c13.25 0 24-10.75 24-24v-80c0-13.26-10.75-24-24-24zM112 400c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm16-112c-17.67 0-32-14.33-32-32V128c0-17.67 14.33-32 32-32h256c17.67 0 32 14.33 32 32v128c0 17.67-14.33 32-32 32H128zm272 112c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"bus-alt\": [512, 512, [], \"f55e\", \"M488 128h-8V80c0-44.8-99.2-80-224-80S32 35.2 32 80v48h-8c-13.25 0-24 10.74-24 24v80c0 13.25 10.75 24 24 24h8v160c0 17.67 14.33 32 32 32v32c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-32h192v32c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-32h6.4c16 0 25.6-12.8 25.6-25.6V256h8c13.25 0 24-10.75 24-24v-80c0-13.26-10.75-24-24-24zM160 72c0-4.42 3.58-8 8-8h176c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H168c-4.42 0-8-3.58-8-8V72zm-48 328c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm128-112H128c-17.67 0-32-14.33-32-32v-96c0-17.67 14.33-32 32-32h112v160zm32 0V128h112c17.67 0 32 14.33 32 32v96c0 17.67-14.33 32-32 32H272zm128 112c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"business-time\": [640, 512, [], \"f64a\", \"M496 224c-79.59 0-144 64.41-144 144s64.41 144 144 144 144-64.41 144-144-64.41-144-144-144zm64 150.29c0 5.34-4.37 9.71-9.71 9.71h-60.57c-5.34 0-9.71-4.37-9.71-9.71v-76.57c0-5.34 4.37-9.71 9.71-9.71h12.57c5.34 0 9.71 4.37 9.71 9.71V352h38.29c5.34 0 9.71 4.37 9.71 9.71v12.58zM496 192c5.4 0 10.72.33 16 .81V144c0-25.6-22.4-48-48-48h-80V48c0-25.6-22.4-48-48-48H176c-25.6 0-48 22.4-48 48v48H48c-25.6 0-48 22.4-48 48v80h395.12c28.6-20.09 63.35-32 100.88-32zM320 96H192V64h128v32zm6.82 224H208c-8.84 0-16-7.16-16-16v-48H0v144c0 25.6 22.4 48 48 48h291.43C327.1 423.96 320 396.82 320 368c0-16.66 2.48-32.72 6.82-48z\"],\n    \"calculator\": [448, 512, [], \"f1ec\", \"M400 0H48C22.4 0 0 22.4 0 48v416c0 25.6 22.4 48 48 48h352c25.6 0 48-22.4 48-48V48c0-25.6-22.4-48-48-48zM128 435.2c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm0-128c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm128 128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm0-128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm128 128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8V268.8c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v166.4zm0-256c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8V76.8C64 70.4 70.4 64 76.8 64h294.4c6.4 0 12.8 6.4 12.8 12.8v102.4z\"],\n    \"calendar\": [448, 512, [], \"f133\", \"M12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm436-44v-36c0-26.5-21.5-48-48-48h-48V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H160V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H48C21.5 64 0 85.5 0 112v36c0 6.6 5.4 12 12 12h424c6.6 0 12-5.4 12-12z\"],\n    \"calendar-alt\": [448, 512, [], \"f073\", \"M0 464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V192H0v272zm320-196c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zm0 128c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zM192 268c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zm0 128c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zM64 268c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H76c-6.6 0-12-5.4-12-12v-40zm0 128c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H76c-6.6 0-12-5.4-12-12v-40zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v48h448v-48c0-26.5-21.5-48-48-48z\"],\n    \"calendar-check\": [448, 512, [], \"f274\", \"M436 160H12c-6.627 0-12-5.373-12-12v-36c0-26.51 21.49-48 48-48h48V12c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v52h128V12c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v52h48c26.51 0 48 21.49 48 48v36c0 6.627-5.373 12-12 12zM12 192h424c6.627 0 12 5.373 12 12v260c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V204c0-6.627 5.373-12 12-12zm333.296 95.947l-28.169-28.398c-4.667-4.705-12.265-4.736-16.97-.068L194.12 364.665l-45.98-46.352c-4.667-4.705-12.266-4.736-16.971-.068l-28.397 28.17c-4.705 4.667-4.736 12.265-.068 16.97l82.601 83.269c4.667 4.705 12.265 4.736 16.97.068l142.953-141.805c4.705-4.667 4.736-12.265.068-16.97z\"],\n    \"calendar-day\": [448, 512, [], \"f783\", \"M0 464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V192H0v272zm64-192c0-8.8 7.2-16 16-16h96c8.8 0 16 7.2 16 16v96c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16v-96zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v48h448v-48c0-26.5-21.5-48-48-48z\"],\n    \"calendar-minus\": [448, 512, [], \"f272\", \"M436 160H12c-6.6 0-12-5.4-12-12v-36c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48v36c0 6.6-5.4 12-12 12zM12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm304 192c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H132c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h184z\"],\n    \"calendar-plus\": [448, 512, [], \"f271\", \"M436 160H12c-6.6 0-12-5.4-12-12v-36c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48v36c0 6.6-5.4 12-12 12zM12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm316 140c0-6.6-5.4-12-12-12h-60v-60c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v60h-60c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h60v60c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-60h60c6.6 0 12-5.4 12-12v-40z\"],\n    \"calendar-times\": [448, 512, [], \"f273\", \"M436 160H12c-6.6 0-12-5.4-12-12v-36c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48v36c0 6.6-5.4 12-12 12zM12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm257.3 160l48.1-48.1c4.7-4.7 4.7-12.3 0-17l-28.3-28.3c-4.7-4.7-12.3-4.7-17 0L224 306.7l-48.1-48.1c-4.7-4.7-12.3-4.7-17 0l-28.3 28.3c-4.7 4.7-4.7 12.3 0 17l48.1 48.1-48.1 48.1c-4.7 4.7-4.7 12.3 0 17l28.3 28.3c4.7 4.7 12.3 4.7 17 0l48.1-48.1 48.1 48.1c4.7 4.7 12.3 4.7 17 0l28.3-28.3c4.7-4.7 4.7-12.3 0-17L269.3 352z\"],\n    \"calendar-week\": [448, 512, [], \"f784\", \"M0 464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V192H0v272zm64-192c0-8.8 7.2-16 16-16h288c8.8 0 16 7.2 16 16v64c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16v-64zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v48h448v-48c0-26.5-21.5-48-48-48z\"],\n    \"camera\": [512, 512, [], \"f030\", \"M512 144v288c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V144c0-26.5 21.5-48 48-48h88l12.3-32.9c7-18.7 24.9-31.1 44.9-31.1h125.5c20 0 37.9 12.4 44.9 31.1L376 96h88c26.5 0 48 21.5 48 48zM376 288c0-66.2-53.8-120-120-120s-120 53.8-120 120 53.8 120 120 120 120-53.8 120-120zm-32 0c0 48.5-39.5 88-88 88s-88-39.5-88-88 39.5-88 88-88 88 39.5 88 88z\"],\n    \"camera-retro\": [512, 512, [], \"f083\", \"M48 32C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48H48zm0 32h106c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H38c-3.3 0-6-2.7-6-6V80c0-8.8 7.2-16 16-16zm426 96H38c-3.3 0-6-2.7-6-6v-36c0-3.3 2.7-6 6-6h138l30.2-45.3c1.1-1.7 3-2.7 5-2.7H464c8.8 0 16 7.2 16 16v74c0 3.3-2.7 6-6 6zM256 424c-66.2 0-120-53.8-120-120s53.8-120 120-120 120 53.8 120 120-53.8 120-120 120zm0-208c-48.5 0-88 39.5-88 88s39.5 88 88 88 88-39.5 88-88-39.5-88-88-88zm-48 104c-8.8 0-16-7.2-16-16 0-35.3 28.7-64 64-64 8.8 0 16 7.2 16 16s-7.2 16-16 16c-17.6 0-32 14.4-32 32 0 8.8-7.2 16-16 16z\"],\n    \"campground\": [640, 512, [], \"f6bb\", \"M624 448h-24.68L359.54 117.75l53.41-73.55c5.19-7.15 3.61-17.16-3.54-22.35l-25.9-18.79c-7.15-5.19-17.15-3.61-22.35 3.55L320 63.3 278.83 6.6c-5.19-7.15-15.2-8.74-22.35-3.55l-25.88 18.8c-7.15 5.19-8.74 15.2-3.54 22.35l53.41 73.55L40.68 448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h608c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM320 288l116.36 160H203.64L320 288z\"],\n    \"candy-cane\": [512, 512, [], \"f786\", \"M497.5 92C469.6 33.1 411.8 0 352.4 0c-27.9 0-56.2 7.3-81.8 22.6L243.1 39c-15.2 9.1-20.1 28.7-11 43.9l32.8 54.9c6 10 16.6 15.6 27.5 15.6 5.6 0 11.2-1.5 16.4-4.5l27.5-16.4c5.1-3.1 10.8-4.5 16.4-4.5 10.9 0 21.5 5.6 27.5 15.6 9.1 15.1 4.1 34.8-11 43.9L15.6 397.6c-15.2 9.1-20.1 28.7-11 43.9l32.8 54.9c6 10 16.6 15.6 27.5 15.6 5.6 0 11.2-1.5 16.4-4.5L428.6 301c71.7-42.9 104.6-133.5 68.9-209zm-177.7 13l-2.5 1.5L296.8 45c9.7-4.7 19.8-8.1 30.3-10.2l20.6 61.8c-9.8.8-19.4 3.3-27.9 8.4zM145.9 431.8l-60.5-38.5 30.8-18.3 60.5 38.5-30.8 18.3zm107.5-63.9l-60.5-38.5 30.8-18.3 60.5 38.5-30.8 18.3zM364.3 302l-60.5-38.5 30.8-18.3 60.5 38.5-30.8 18.3zm20.4-197.3l46-46c8.4 6.5 16 14.1 22.6 22.6L407.6 127c-5.7-9.3-13.7-16.9-22.9-22.3zm82.1 107.8l-59.5-19.8c3.2-5.3 5.8-10.9 7.4-17.1 1.1-4.5 1.7-9.1 1.8-13.6l60.4 20.1c-2.1 10.4-5.5 20.6-10.1 30.4z\"],\n    \"cannabis\": [512, 512, [], \"f55f\", \"M503.47 360.25c-1.56-.82-32.39-16.89-76.78-25.81 64.25-75.12 84.05-161.67 84.93-165.64 1.18-5.33-.44-10.9-4.3-14.77-3.03-3.04-7.12-4.7-11.32-4.7-1.14 0-2.29.12-3.44.38-3.88.85-86.54 19.59-160.58 79.76.01-1.46.01-2.93.01-4.4 0-118.79-59.98-213.72-62.53-217.7A15.973 15.973 0 0 0 256 0c-5.45 0-10.53 2.78-13.47 7.37-2.55 3.98-62.53 98.91-62.53 217.7 0 1.47.01 2.94.01 4.4-74.03-60.16-156.69-78.9-160.58-79.76-1.14-.25-2.29-.38-3.44-.38-4.2 0-8.29 1.66-11.32 4.7A15.986 15.986 0 0 0 .38 168.8c.88 3.97 20.68 90.52 84.93 165.64-44.39 8.92-75.21 24.99-76.78 25.81a16.003 16.003 0 0 0-.02 28.29c2.45 1.29 60.76 31.72 133.49 31.72 6.14 0 11.96-.1 17.5-.31-11.37 22.23-16.52 38.31-16.81 39.22-1.8 5.68-.29 11.89 3.91 16.11a16.019 16.019 0 0 0 16.1 3.99c1.83-.57 37.72-11.99 77.3-39.29V504c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8v-64.01c39.58 27.3 75.47 38.71 77.3 39.29a16.019 16.019 0 0 0 16.1-3.99c4.2-4.22 5.71-10.43 3.91-16.11-.29-.91-5.45-16.99-16.81-39.22 5.54.21 11.37.31 17.5.31 72.72 0 131.04-30.43 133.49-31.72 5.24-2.78 8.52-8.22 8.51-14.15-.01-5.94-3.29-11.39-8.53-14.15z\"],\n    \"capsules\": [576, 512, [], \"f46b\", \"M555.3 300.1L424.2 112.8C401.9 81 366.4 64 330.4 64c-22.6 0-45.5 6.7-65.5 20.7-19.7 13.8-33.7 32.8-41.5 53.8C220.5 79.2 172 32 112 32 50.1 32 0 82.1 0 144v224c0 61.9 50.1 112 112 112s112-50.1 112-112V218.9c3.3 8.6 7.3 17.1 12.8 25L368 431.2c22.2 31.8 57.7 48.8 93.8 48.8 22.7 0 45.5-6.7 65.5-20.7 51.7-36.2 64.2-107.5 28-159.2zM160 256H64V144c0-26.5 21.5-48 48-48s48 21.5 48 48v112zm194.8 44.9l-65.6-93.7c-7.7-11-10.7-24.4-8.3-37.6 2.3-13.2 9.7-24.8 20.7-32.5 8.5-6 18.5-9.1 28.8-9.1 16.5 0 31.9 8 41.3 21.5l65.6 93.7-82.5 57.7z\"],\n    \"car\": [512, 512, [], \"f1b9\", \"M499.99 176h-59.87l-16.64-41.6C406.38 91.63 365.57 64 319.5 64h-127c-46.06 0-86.88 27.63-103.99 70.4L71.87 176H12.01C4.2 176-1.53 183.34.37 190.91l6 24C7.7 220.25 12.5 224 18.01 224h20.07C24.65 235.73 16 252.78 16 272v48c0 16.12 6.16 30.67 16 41.93V416c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-32h256v32c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-54.07c9.84-11.25 16-25.8 16-41.93v-48c0-19.22-8.65-36.27-22.07-48H494c5.51 0 10.31-3.75 11.64-9.09l6-24c1.89-7.57-3.84-14.91-11.65-14.91zm-352.06-17.83c7.29-18.22 24.94-30.17 44.57-30.17h127c19.63 0 37.28 11.95 44.57 30.17L384 208H128l19.93-49.83zM96 319.8c-19.2 0-32-12.76-32-31.9S76.8 256 96 256s48 28.71 48 47.85-28.8 15.95-48 15.95zm320 0c-19.2 0-48 3.19-48-15.95S396.8 256 416 256s32 12.76 32 31.9-12.8 31.9-32 31.9z\"],\n    \"car-alt\": [480, 512, [], \"f5de\", \"M438.66 212.33l-11.24-28.1-19.93-49.83C390.38 91.63 349.57 64 303.5 64h-127c-46.06 0-86.88 27.63-103.99 70.4l-19.93 49.83-11.24 28.1C17.22 221.5 0 244.66 0 272v48c0 16.12 6.16 30.67 16 41.93V416c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-32h256v32c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-54.07c9.84-11.25 16-25.8 16-41.93v-48c0-27.34-17.22-50.5-41.34-59.67zm-306.73-54.16c7.29-18.22 24.94-30.17 44.57-30.17h127c19.63 0 37.28 11.95 44.57 30.17L368 208H112l19.93-49.83zM80 319.8c-19.2 0-32-12.76-32-31.9S60.8 256 80 256s48 28.71 48 47.85-28.8 15.95-48 15.95zm320 0c-19.2 0-48 3.19-48-15.95S380.8 256 400 256s32 12.76 32 31.9-12.8 31.9-32 31.9z\"],\n    \"car-battery\": [512, 512, [], \"f5df\", \"M480 128h-32V80c0-8.84-7.16-16-16-16h-96c-8.84 0-16 7.16-16 16v48H192V80c0-8.84-7.16-16-16-16H80c-8.84 0-16 7.16-16 16v48H32c-17.67 0-32 14.33-32 32v256c0 17.67 14.33 32 32 32h448c17.67 0 32-14.33 32-32V160c0-17.67-14.33-32-32-32zM192 264c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h112c4.42 0 8 3.58 8 8v16zm256 0c0 4.42-3.58 8-8 8h-40v40c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-40h-40c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h40v-40c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v40h40c4.42 0 8 3.58 8 8v16z\"],\n    \"car-crash\": [640, 512, [], \"f5e1\", \"M143.25 220.81l-12.42 46.37c-3.01 11.25-3.63 22.89-2.41 34.39l-35.2 28.98c-6.57 5.41-16.31-.43-14.62-8.77l15.44-76.68c1.06-5.26-2.66-10.28-8-10.79l-77.86-7.55c-8.47-.82-11.23-11.83-4.14-16.54l65.15-43.3c4.46-2.97 5.38-9.15 1.98-13.29L21.46 93.22c-5.41-6.57.43-16.3 8.78-14.62l76.68 15.44c5.26 1.06 10.28-2.66 10.8-8l7.55-77.86c.82-8.48 11.83-11.23 16.55-4.14l43.3 65.14c2.97 4.46 9.15 5.38 13.29 1.98l60.4-49.71c6.57-5.41 16.3.43 14.62 8.77L262.1 86.38c-2.71 3.05-5.43 6.09-7.91 9.4l-32.15 42.97-10.71 14.32c-32.73 8.76-59.18 34.53-68.08 67.74zm494.57 132.51l-12.42 46.36c-3.13 11.68-9.38 21.61-17.55 29.36a66.876 66.876 0 0 1-8.76 7l-13.99 52.23c-1.14 4.27-3.1 8.1-5.65 11.38-7.67 9.84-20.74 14.68-33.54 11.25L515 502.62c-17.07-4.57-27.2-22.12-22.63-39.19l8.28-30.91-247.28-66.26-8.28 30.91c-4.57 17.07-22.12 27.2-39.19 22.63l-30.91-8.28c-12.8-3.43-21.7-14.16-23.42-26.51-.57-4.12-.35-8.42.79-12.68l13.99-52.23a66.62 66.62 0 0 1-4.09-10.45c-3.2-10.79-3.65-22.52-.52-34.2l12.42-46.37c5.31-19.8 19.36-34.83 36.89-42.21a64.336 64.336 0 0 1 18.49-4.72l18.13-24.23 32.15-42.97c3.45-4.61 7.19-8.9 11.2-12.84 8-7.89 17.03-14.44 26.74-19.51 4.86-2.54 9.89-4.71 15.05-6.49 10.33-3.58 21.19-5.63 32.24-6.04 11.05-.41 22.31.82 33.43 3.8l122.68 32.87c11.12 2.98 21.48 7.54 30.85 13.43a111.11 111.11 0 0 1 34.69 34.5c8.82 13.88 14.64 29.84 16.68 46.99l6.36 53.29 3.59 30.05a64.49 64.49 0 0 1 22.74 29.93c4.39 11.88 5.29 25.19 1.75 38.39zM255.58 234.34c-18.55-4.97-34.21 4.04-39.17 22.53-4.96 18.49 4.11 34.12 22.65 39.09 18.55 4.97 45.54 15.51 50.49-2.98 4.96-18.49-15.43-53.67-33.97-58.64zm290.61 28.17l-6.36-53.29c-.58-4.87-1.89-9.53-3.82-13.86-5.8-12.99-17.2-23.01-31.42-26.82l-122.68-32.87a48.008 48.008 0 0 0-50.86 17.61l-32.15 42.97 172 46.08 75.29 20.18zm18.49 54.65c-18.55-4.97-53.8 15.31-58.75 33.79-4.95 18.49 23.69 22.86 42.24 27.83 18.55 4.97 34.21-4.04 39.17-22.53 4.95-18.48-4.11-34.12-22.66-39.09z\"],\n    \"car-side\": [640, 512, [], \"f5e4\", \"M544 192h-16L419.22 56.02A64.025 64.025 0 0 0 369.24 32H155.33c-26.17 0-49.7 15.93-59.42 40.23L48 194.26C20.44 201.4 0 226.21 0 256v112c0 8.84 7.16 16 16 16h48c0 53.02 42.98 96 96 96s96-42.98 96-96h128c0 53.02 42.98 96 96 96s96-42.98 96-96h48c8.84 0 16-7.16 16-16v-80c0-53.02-42.98-96-96-96zM160 432c-26.47 0-48-21.53-48-48s21.53-48 48-48 48 21.53 48 48-21.53 48-48 48zm72-240H116.93l38.4-96H232v96zm48 0V96h89.24l76.8 96H280zm200 240c-26.47 0-48-21.53-48-48s21.53-48 48-48 48 21.53 48 48-21.53 48-48 48z\"],\n    \"caravan\": [640, 512, [], \"f8ff\", \"M416,208a16,16,0,1,0,16,16A16,16,0,0,0,416,208ZM624,320H576V160A160,160,0,0,0,416,0H64A64,64,0,0,0,0,64V320a64,64,0,0,0,64,64H96a96,96,0,0,0,192,0H624a16,16,0,0,0,16-16V336A16,16,0,0,0,624,320ZM192,432a48,48,0,1,1,48-48A48.05,48.05,0,0,1,192,432Zm64-240a32,32,0,0,1-32,32H96a32,32,0,0,1-32-32V128A32,32,0,0,1,96,96H224a32,32,0,0,1,32,32ZM448,320H320V128a32,32,0,0,1,32-32h64a32,32,0,0,1,32,32Z\"],\n    \"caret-down\": [320, 512, [], \"f0d7\", \"M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z\"],\n    \"caret-left\": [192, 512, [], \"f0d9\", \"M192 127.338v257.324c0 17.818-21.543 26.741-34.142 14.142L29.196 270.142c-7.81-7.81-7.81-20.474 0-28.284l128.662-128.662c12.599-12.6 34.142-3.676 34.142 14.142z\"],\n    \"caret-right\": [192, 512, [], \"f0da\", \"M0 384.662V127.338c0-17.818 21.543-26.741 34.142-14.142l128.662 128.662c7.81 7.81 7.81 20.474 0 28.284L34.142 398.804C21.543 411.404 0 402.48 0 384.662z\"],\n    \"caret-square-down\": [448, 512, [], \"f150\", \"M448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zM92.5 220.5l123 123c4.7 4.7 12.3 4.7 17 0l123-123c7.6-7.6 2.2-20.5-8.5-20.5H101c-10.7 0-16.1 12.9-8.5 20.5z\"],\n    \"caret-square-left\": [448, 512, [], \"f191\", \"M400 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zM259.515 124.485l-123.03 123.03c-4.686 4.686-4.686 12.284 0 16.971l123.029 123.029c7.56 7.56 20.485 2.206 20.485-8.485V132.971c.001-10.691-12.925-16.045-20.484-8.486z\"],\n    \"caret-square-right\": [448, 512, [], \"f152\", \"M48 32h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48zm140.485 355.515l123.029-123.029c4.686-4.686 4.686-12.284 0-16.971l-123.029-123.03c-7.56-7.56-20.485-2.206-20.485 8.485v246.059c0 10.691 12.926 16.045 20.485 8.486z\"],\n    \"caret-square-up\": [448, 512, [], \"f151\", \"M0 432V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48zm355.515-140.485l-123.03-123.03c-4.686-4.686-12.284-4.686-16.971 0L92.485 291.515c-7.56 7.56-2.206 20.485 8.485 20.485h246.059c10.691 0 16.045-12.926 8.486-20.485z\"],\n    \"caret-up\": [320, 512, [], \"f0d8\", \"M288.662 352H31.338c-17.818 0-26.741-21.543-14.142-34.142l128.662-128.662c7.81-7.81 20.474-7.81 28.284 0l128.662 128.662c12.6 12.599 3.676 34.142-14.142 34.142z\"],\n    \"carrot\": [512, 512, [], \"f787\", \"M298.2 156.6c-52.7-25.7-114.5-10.5-150.2 32.8l55.2 55.2c6.3 6.3 6.3 16.4 0 22.6-3.1 3.1-7.2 4.7-11.3 4.7s-8.2-1.6-11.3-4.7L130.4 217 2.3 479.7c-2.9 6-3.1 13.3 0 19.7 5.4 11.1 18.9 15.7 30 10.3l133.6-65.2-49.2-49.2c-6.3-6.2-6.3-16.4 0-22.6 6.3-6.2 16.4-6.2 22.6 0l57 57 102-49.8c24-11.7 44.5-31.3 57.1-57.1 30.1-61.7 4.5-136.1-57.2-166.2zm92.1-34.9C409.8 81 399.7 32.9 360 0c-50.3 41.7-52.5 107.5-7.9 151.9l8 8c44.4 44.6 110.3 42.4 151.9-7.9-32.9-39.7-81-49.8-121.7-30.3z\"],\n    \"cart-arrow-down\": [576, 512, [], \"f218\", \"M504.717 320H211.572l6.545 32h268.418c15.401 0 26.816 14.301 23.403 29.319l-5.517 24.276C523.112 414.668 536 433.828 536 456c0 31.202-25.519 56.444-56.824 55.994-29.823-.429-54.35-24.631-55.155-54.447-.44-16.287 6.085-31.049 16.803-41.548H231.176C241.553 426.165 248 440.326 248 456c0 31.813-26.528 57.431-58.67 55.938-28.54-1.325-51.751-24.385-53.251-52.917-1.158-22.034 10.436-41.455 28.051-51.586L93.883 64H24C10.745 64 0 53.255 0 40V24C0 10.745 10.745 0 24 0h102.529c11.401 0 21.228 8.021 23.513 19.19L159.208 64H551.99c15.401 0 26.816 14.301 23.403 29.319l-47.273 208C525.637 312.246 515.923 320 504.717 320zM403.029 192H360v-60c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v60h-43.029c-10.691 0-16.045 12.926-8.485 20.485l67.029 67.029c4.686 4.686 12.284 4.686 16.971 0l67.029-67.029c7.559-7.559 2.205-20.485-8.486-20.485z\"],\n    \"cart-plus\": [576, 512, [], \"f217\", \"M504.717 320H211.572l6.545 32h268.418c15.401 0 26.816 14.301 23.403 29.319l-5.517 24.276C523.112 414.668 536 433.828 536 456c0 31.202-25.519 56.444-56.824 55.994-29.823-.429-54.35-24.631-55.155-54.447-.44-16.287 6.085-31.049 16.803-41.548H231.176C241.553 426.165 248 440.326 248 456c0 31.813-26.528 57.431-58.67 55.938-28.54-1.325-51.751-24.385-53.251-52.917-1.158-22.034 10.436-41.455 28.051-51.586L93.883 64H24C10.745 64 0 53.255 0 40V24C0 10.745 10.745 0 24 0h102.529c11.401 0 21.228 8.021 23.513 19.19L159.208 64H551.99c15.401 0 26.816 14.301 23.403 29.319l-47.273 208C525.637 312.246 515.923 320 504.717 320zM408 168h-48v-40c0-8.837-7.163-16-16-16h-16c-8.837 0-16 7.163-16 16v40h-48c-8.837 0-16 7.163-16 16v16c0 8.837 7.163 16 16 16h48v40c0 8.837 7.163 16 16 16h16c8.837 0 16-7.163 16-16v-40h48c8.837 0 16-7.163 16-16v-16c0-8.837-7.163-16-16-16z\"],\n    \"cash-register\": [512, 512, [], \"f788\", \"M511.1 378.8l-26.7-160c-2.6-15.4-15.9-26.7-31.6-26.7H208v-64h96c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16H48c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16h96v64H59.1c-15.6 0-29 11.3-31.6 26.7L.8 378.7c-.6 3.5-.9 7-.9 10.5V480c0 17.7 14.3 32 32 32h448c17.7 0 32-14.3 32-32v-90.7c.1-3.5-.2-7-.8-10.5zM280 248c0-8.8 7.2-16 16-16h16c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16h-16c-8.8 0-16-7.2-16-16v-16zm-32 64h16c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16h-16c-8.8 0-16-7.2-16-16v-16c0-8.8 7.2-16 16-16zm-32-80c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16h-16c-8.8 0-16-7.2-16-16v-16c0-8.8 7.2-16 16-16h16zM80 80V48h192v32H80zm40 200h-16c-8.8 0-16-7.2-16-16v-16c0-8.8 7.2-16 16-16h16c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16zm16 64v-16c0-8.8 7.2-16 16-16h16c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16h-16c-8.8 0-16-7.2-16-16zm216 112c0 4.4-3.6 8-8 8H168c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h176c4.4 0 8 3.6 8 8v16zm24-112c0 8.8-7.2 16-16 16h-16c-8.8 0-16-7.2-16-16v-16c0-8.8 7.2-16 16-16h16c8.8 0 16 7.2 16 16v16zm48-80c0 8.8-7.2 16-16 16h-16c-8.8 0-16-7.2-16-16v-16c0-8.8 7.2-16 16-16h16c8.8 0 16 7.2 16 16v16z\"],\n    \"cat\": [512, 512, [], \"f6be\", \"M290.59 192c-20.18 0-106.82 1.98-162.59 85.95V192c0-52.94-43.06-96-96-96-17.67 0-32 14.33-32 32s14.33 32 32 32c17.64 0 32 14.36 32 32v256c0 35.3 28.7 64 64 64h176c8.84 0 16-7.16 16-16v-16c0-17.67-14.33-32-32-32h-32l128-96v144c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V289.86c-10.29 2.67-20.89 4.54-32 4.54-61.81 0-113.52-44.05-125.41-102.4zM448 96h-64l-64-64v134.4c0 53.02 42.98 96 96 96s96-42.98 96-96V32l-64 64zm-72 80c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16zm80 0c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16z\"],\n    \"certificate\": [512, 512, [], \"f0a3\", \"M458.622 255.92l45.985-45.005c13.708-12.977 7.316-36.039-10.664-40.339l-62.65-15.99 17.661-62.015c4.991-17.838-11.829-34.663-29.661-29.671l-61.994 17.667-15.984-62.671C337.085.197 313.765-6.276 300.99 7.228L256 53.57 211.011 7.229c-12.63-13.351-36.047-7.234-40.325 10.668l-15.984 62.671-61.995-17.667C74.87 57.907 58.056 74.738 63.046 92.572l17.661 62.015-62.65 15.99C.069 174.878-6.31 197.944 7.392 210.915l45.985 45.005-45.985 45.004c-13.708 12.977-7.316 36.039 10.664 40.339l62.65 15.99-17.661 62.015c-4.991 17.838 11.829 34.663 29.661 29.671l61.994-17.667 15.984 62.671c4.439 18.575 27.696 24.018 40.325 10.668L256 458.61l44.989 46.001c12.5 13.488 35.987 7.486 40.325-10.668l15.984-62.671 61.994 17.667c17.836 4.994 34.651-11.837 29.661-29.671l-17.661-62.015 62.65-15.99c17.987-4.302 24.366-27.367 10.664-40.339l-45.984-45.004z\"],\n    \"chair\": [448, 512, [], \"f6c0\", \"M112 128c0-29.5 16.2-55 40-68.9V256h48V48h48v208h48V59.1c23.8 13.9 40 39.4 40 68.9v128h48V128C384 57.3 326.7 0 256 0h-64C121.3 0 64 57.3 64 128v128h48zm334.3 213.9l-10.7-32c-4.4-13.1-16.6-21.9-30.4-21.9H42.7c-13.8 0-26 8.8-30.4 21.9l-10.7 32C-5.2 362.6 10.2 384 32 384v112c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V384h256v112c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V384c21.8 0 37.2-21.4 30.3-42.1z\"],\n    \"chalkboard\": [640, 512, [], \"f51b\", \"M96 64h448v352h64V40c0-22.06-17.94-40-40-40H72C49.94 0 32 17.94 32 40v376h64V64zm528 384H480v-64H288v64H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h608c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z\"],\n    \"chalkboard-teacher\": [640, 512, [], \"f51c\", \"M208 352c-2.39 0-4.78.35-7.06 1.09C187.98 357.3 174.35 360 160 360c-14.35 0-27.98-2.7-40.95-6.91-2.28-.74-4.66-1.09-7.05-1.09C49.94 352-.33 402.48 0 464.62.14 490.88 21.73 512 48 512h224c26.27 0 47.86-21.12 48-47.38.33-62.14-49.94-112.62-112-112.62zm-48-32c53.02 0 96-42.98 96-96s-42.98-96-96-96-96 42.98-96 96 42.98 96 96 96zM592 0H208c-26.47 0-48 22.25-48 49.59V96c23.42 0 45.1 6.78 64 17.8V64h352v288h-64v-64H384v64h-76.24c19.1 16.69 33.12 38.73 39.69 64H592c26.47 0 48-22.25 48-49.59V49.59C640 22.25 618.47 0 592 0z\"],\n    \"charging-station\": [576, 512, [], \"f5e7\", \"M336 448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h320c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zm208-320V80c0-8.84-7.16-16-16-16s-16 7.16-16 16v48h-32V80c0-8.84-7.16-16-16-16s-16 7.16-16 16v48h-16c-8.84 0-16 7.16-16 16v32c0 35.76 23.62 65.69 56 75.93v118.49c0 13.95-9.5 26.92-23.26 29.19C431.22 402.5 416 388.99 416 372v-28c0-48.6-39.4-88-88-88h-8V64c0-35.35-28.65-64-64-64H96C60.65 0 32 28.65 32 64v352h288V304h8c22.09 0 40 17.91 40 40v24.61c0 39.67 28.92 75.16 68.41 79.01C481.71 452.05 520 416.41 520 372V251.93c32.38-10.24 56-40.17 56-75.93v-32c0-8.84-7.16-16-16-16h-16zm-283.91 47.76l-93.7 139c-2.2 3.33-6.21 5.24-10.39 5.24-7.67 0-13.47-6.28-11.67-12.92L167.35 224H108c-7.25 0-12.85-5.59-11.89-11.89l16-107C112.9 99.9 117.98 96 124 96h68c7.88 0 13.62 6.54 11.6 13.21L192 160h57.7c9.24 0 15.01 8.78 10.39 15.76z\"],\n    \"chart-area\": [512, 512, [], \"f1fe\", \"M500 384c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12V76c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v308h436zM372.7 159.5L288 216l-85.3-113.7c-5.1-6.8-15.5-6.3-19.9 1L96 248v104h384l-89.9-187.8c-3.2-6.5-11.4-8.7-17.4-4.7z\"],\n    \"chart-bar\": [512, 512, [], \"f080\", \"M332.8 320h38.4c6.4 0 12.8-6.4 12.8-12.8V172.8c0-6.4-6.4-12.8-12.8-12.8h-38.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h38.4c6.4 0 12.8-6.4 12.8-12.8V76.8c0-6.4-6.4-12.8-12.8-12.8h-38.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-288 0h38.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-38.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h38.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-38.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zM496 384H64V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z\"],\n    \"chart-line\": [512, 512, [], \"f201\", \"M496 384H64V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM464 96H345.94c-21.38 0-32.09 25.85-16.97 40.97l32.4 32.4L288 242.75l-73.37-73.37c-12.5-12.5-32.76-12.5-45.25 0l-68.69 68.69c-6.25 6.25-6.25 16.38 0 22.63l22.62 22.62c6.25 6.25 16.38 6.25 22.63 0L192 237.25l73.37 73.37c12.5 12.5 32.76 12.5 45.25 0l96-96 32.4 32.4c15.12 15.12 40.97 4.41 40.97-16.97V112c.01-8.84-7.15-16-15.99-16z\"],\n    \"chart-pie\": [544, 512, [], \"f200\", \"M527.79 288H290.5l158.03 158.03c6.04 6.04 15.98 6.53 22.19.68 38.7-36.46 65.32-85.61 73.13-140.86 1.34-9.46-6.51-17.85-16.06-17.85zm-15.83-64.8C503.72 103.74 408.26 8.28 288.8.04 279.68-.59 272 7.1 272 16.24V240h223.77c9.14 0 16.82-7.68 16.19-16.8zM224 288V50.71c0-9.55-8.39-17.4-17.84-16.06C86.99 51.49-4.1 155.6.14 280.37 4.5 408.51 114.83 513.59 243.03 511.98c50.4-.63 96.97-16.87 135.26-44.03 7.9-5.6 8.42-17.23 1.57-24.08L224 288z\"],\n    \"check\": [512, 512, [], \"f00c\", \"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\"],\n    \"check-circle\": [512, 512, [], \"f058\", \"M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z\"],\n    \"check-double\": [512, 512, [], \"f560\", \"M505 174.8l-39.6-39.6c-9.4-9.4-24.6-9.4-33.9 0L192 374.7 80.6 263.2c-9.4-9.4-24.6-9.4-33.9 0L7 302.9c-9.4 9.4-9.4 24.6 0 34L175 505c9.4 9.4 24.6 9.4 33.9 0l296-296.2c9.4-9.5 9.4-24.7.1-34zm-324.3 106c6.2 6.3 16.4 6.3 22.6 0l208-208.2c6.2-6.3 6.2-16.4 0-22.6L366.1 4.7c-6.2-6.3-16.4-6.3-22.6 0L192 156.2l-55.4-55.5c-6.2-6.3-16.4-6.3-22.6 0L68.7 146c-6.2 6.3-6.2 16.4 0 22.6l112 112.2z\"],\n    \"check-square\": [448, 512, [], \"f14a\", \"M400 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zm-204.686-98.059l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.248-16.379-6.249-22.628 0L184 302.745l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.25 16.379 6.25 22.628.001z\"],\n    \"cheese\": [512, 512, [], \"f7ef\", \"M0 288v160a32 32 0 0 0 32 32h448a32 32 0 0 0 32-32V288zM299.83 32a32 32 0 0 0-21.13 7L0 256h512c0-119.89-94-217.8-212.17-224z\"],\n    \"chess\": [512, 512, [], \"f439\", \"M74 208H64a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h15.94A535.78 535.78 0 0 1 64 384h128a535.78 535.78 0 0 1-15.94-128H192a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16h-10l33.89-90.38a16 16 0 0 0-15-21.62H144V64h24a8 8 0 0 0 8-8V40a8 8 0 0 0-8-8h-24V8a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v24H88a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h24v32H55.09a16 16 0 0 0-15 21.62zm173.16 251.58L224 448v-16a16 16 0 0 0-16-16H48a16 16 0 0 0-16 16v16L8.85 459.58A16 16 0 0 0 0 473.89V496a16 16 0 0 0 16 16h224a16 16 0 0 0 16-16v-22.11a16 16 0 0 0-8.84-14.31zm92.77-157.78l-3.29 82.2h126.72l-3.29-82.21 24.6-20.79A32 32 0 0 0 496 256.54V198a6 6 0 0 0-6-6h-26.38a6 6 0 0 0-6 6v26h-24.71v-26a6 6 0 0 0-6-6H373.1a6 6 0 0 0-6 6v26h-24.71v-26a6 6 0 0 0-6-6H310a6 6 0 0 0-6 6v58.6a32 32 0 0 0 11.36 24.4zM384 304a16 16 0 0 1 32 0v32h-32zm119.16 155.58L480 448v-16a16 16 0 0 0-16-16H336a16 16 0 0 0-16 16v16l-23.15 11.58a16 16 0 0 0-8.85 14.31V496a16 16 0 0 0 16 16h192a16 16 0 0 0 16-16v-22.11a16 16 0 0 0-8.84-14.31z\"],\n    \"chess-bishop\": [320, 512, [], \"f43a\", \"M8 287.88c0 51.64 22.14 73.83 56 84.6V416h192v-43.52c33.86-10.77 56-33 56-84.6 0-30.61-10.73-67.1-26.69-102.56L185 285.65a8 8 0 0 1-11.31 0l-11.31-11.31a8 8 0 0 1 0-11.31L270.27 155.1c-20.8-37.91-46.47-72.1-70.87-92.59C213.4 59.09 224 47.05 224 32a32 32 0 0 0-32-32h-64a32 32 0 0 0-32 32c0 15 10.6 27.09 24.6 30.51C67.81 106.8 8 214.5 8 287.88zM304 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\"],\n    \"chess-board\": [512, 512, [], \"f43c\", \"M255.9.2h-64v64h64zM0 64.17v64h64v-64zM128 .2H64v64h64zm64 255.9v64h64v-64zM0 192.12v64h64v-64zM383.85.2h-64v64h64zm128 0h-64v64h64zM128 256.1H64v64h64zM511.8 448v-64h-64v64zm0-128v-64h-64v64zM383.85 512h64v-64h-64zm128-319.88v-64h-64v64zM128 512h64v-64h-64zM0 512h64v-64H0zm255.9 0h64v-64h-64zM0 320.07v64h64v-64zm319.88-191.92v-64h-64v64zm-64 128h64v-64h-64zm-64 128v64h64v-64zm128-64h64v-64h-64zm0-127.95h64v-64h-64zm0 191.93v64h64v-64zM64 384.05v64h64v-64zm128-255.9v-64h-64v64zm191.92 255.9h64v-64h-64zm-128-191.93v-64h-64v64zm128-127.95v64h64v-64zm-128 255.9v64h64v-64zm-64-127.95H128v64h64zm191.92 64h64v-64h-64zM128 128.15H64v64h64zm0 191.92v64h64v-64z\"],\n    \"chess-king\": [448, 512, [], \"f43f\", \"M400 448H48a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm16-288H256v-48h40a8 8 0 0 0 8-8V56a8 8 0 0 0-8-8h-40V8a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v40h-40a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h40v48H32a32 32 0 0 0-30.52 41.54L74.56 416h298.88l73.08-214.46A32 32 0 0 0 416 160z\"],\n    \"chess-knight\": [384, 512, [], \"f441\", \"M19 272.47l40.63 18.06a32 32 0 0 0 24.88.47l12.78-5.12a32 32 0 0 0 18.76-20.5l9.22-30.65a24 24 0 0 1 12.55-15.65L159.94 208v50.33a48 48 0 0 1-26.53 42.94l-57.22 28.65A80 80 0 0 0 32 401.48V416h319.86V224c0-106-85.92-192-191.92-192H12A12 12 0 0 0 0 44a16.9 16.9 0 0 0 1.79 7.58L16 80l-9 9a24 24 0 0 0-7 17v137.21a32 32 0 0 0 19 29.26zM52 128a20 20 0 1 1-20 20 20 20 0 0 1 20-20zm316 320H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\"],\n    \"chess-pawn\": [320, 512, [], \"f443\", \"M105.1 224H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h16v5.49c0 44-4.14 86.6-24 122.51h176c-19.89-35.91-24-78.51-24-122.51V288h16a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-25.1c29.39-18.38 49.1-50.78 49.1-88a104 104 0 0 0-208 0c0 37.22 19.71 69.62 49.1 88zM304 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\"],\n    \"chess-queen\": [512, 512, [], \"f445\", \"M256 112a56 56 0 1 0-56-56 56 56 0 0 0 56 56zm176 336H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm72.87-263.84l-28.51-15.92c-7.44-5-16.91-2.46-22.29 4.68a47.59 47.59 0 0 1-47.23 18.23C383.7 186.86 368 164.93 368 141.4a13.4 13.4 0 0 0-13.4-13.4h-38.77c-6 0-11.61 4-12.86 9.91a48 48 0 0 1-93.94 0c-1.25-5.92-6.82-9.91-12.86-9.91H157.4a13.4 13.4 0 0 0-13.4 13.4c0 25.69-19 48.75-44.67 50.49a47.5 47.5 0 0 1-41.54-19.15c-5.28-7.09-14.73-9.45-22.09-4.54l-28.57 16a16 16 0 0 0-5.44 20.47L104.24 416h303.52l102.55-211.37a16 16 0 0 0-5.44-20.47z\"],\n    \"chess-rook\": [384, 512, [], \"f447\", \"M368 32h-56a16 16 0 0 0-16 16v48h-48V48a16 16 0 0 0-16-16h-80a16 16 0 0 0-16 16v48H88.1V48a16 16 0 0 0-16-16H16A16 16 0 0 0 0 48v176l64 32c0 48.33-1.54 95-13.21 160h282.42C321.54 351 320 303.72 320 256l64-32V48a16 16 0 0 0-16-16zM224 320h-64v-64a32 32 0 0 1 64 0zm144 128H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\"],\n    \"chevron-circle-down\": [512, 512, [], \"f13a\", \"M504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zM273 369.9l135.5-135.5c9.4-9.4 9.4-24.6 0-33.9l-17-17c-9.4-9.4-24.6-9.4-33.9 0L256 285.1 154.4 183.5c-9.4-9.4-24.6-9.4-33.9 0l-17 17c-9.4 9.4-9.4 24.6 0 33.9L239 369.9c9.4 9.4 24.6 9.4 34 0z\"],\n    \"chevron-circle-left\": [512, 512, [], \"f137\", \"M256 504C119 504 8 393 8 256S119 8 256 8s248 111 248 248-111 248-248 248zM142.1 273l135.5 135.5c9.4 9.4 24.6 9.4 33.9 0l17-17c9.4-9.4 9.4-24.6 0-33.9L226.9 256l101.6-101.6c9.4-9.4 9.4-24.6 0-33.9l-17-17c-9.4-9.4-24.6-9.4-33.9 0L142.1 239c-9.4 9.4-9.4 24.6 0 34z\"],\n    \"chevron-circle-right\": [512, 512, [], \"f138\", \"M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zm113.9 231L234.4 103.5c-9.4-9.4-24.6-9.4-33.9 0l-17 17c-9.4 9.4-9.4 24.6 0 33.9L285.1 256 183.5 357.6c-9.4 9.4-9.4 24.6 0 33.9l17 17c9.4 9.4 24.6 9.4 33.9 0L369.9 273c9.4-9.4 9.4-24.6 0-34z\"],\n    \"chevron-circle-up\": [512, 512, [], \"f139\", \"M8 256C8 119 119 8 256 8s248 111 248 248-111 248-248 248S8 393 8 256zm231-113.9L103.5 277.6c-9.4 9.4-9.4 24.6 0 33.9l17 17c9.4 9.4 24.6 9.4 33.9 0L256 226.9l101.6 101.6c9.4 9.4 24.6 9.4 33.9 0l17-17c9.4-9.4 9.4-24.6 0-33.9L273 142.1c-9.4-9.4-24.6-9.4-34 0z\"],\n    \"chevron-down\": [448, 512, [], \"f078\", \"M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z\"],\n    \"chevron-left\": [320, 512, [], \"f053\", \"M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z\"],\n    \"chevron-right\": [320, 512, [], \"f054\", \"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"],\n    \"chevron-up\": [448, 512, [], \"f077\", \"M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z\"],\n    \"child\": [384, 512, [], \"f1ae\", \"M120 72c0-39.765 32.235-72 72-72s72 32.235 72 72c0 39.764-32.235 72-72 72s-72-32.236-72-72zm254.627 1.373c-12.496-12.497-32.758-12.497-45.254 0L242.745 160H141.254L54.627 73.373c-12.496-12.497-32.758-12.497-45.254 0-12.497 12.497-12.497 32.758 0 45.255L104 213.254V480c0 17.673 14.327 32 32 32h16c17.673 0 32-14.327 32-32V368h16v112c0 17.673 14.327 32 32 32h16c17.673 0 32-14.327 32-32V213.254l94.627-94.627c12.497-12.497 12.497-32.757 0-45.254z\"],\n    \"church\": [640, 512, [], \"f51d\", \"M464.46 246.68L352 179.2V128h48c8.84 0 16-7.16 16-16V80c0-8.84-7.16-16-16-16h-48V16c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v48h-48c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h48v51.2l-112.46 67.48A31.997 31.997 0 0 0 160 274.12V512h96v-96c0-35.35 28.65-64 64-64s64 28.65 64 64v96h96V274.12c0-11.24-5.9-21.66-15.54-27.44zM0 395.96V496c0 8.84 7.16 16 16 16h112V320L19.39 366.54A32.024 32.024 0 0 0 0 395.96zm620.61-29.42L512 320v192h112c8.84 0 16-7.16 16-16V395.96c0-12.8-7.63-24.37-19.39-29.42z\"],\n    \"circle\": [512, 512, [], \"f111\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z\"],\n    \"circle-notch\": [512, 512, [], \"f1ce\", \"M288 39.056v16.659c0 10.804 7.281 20.159 17.686 23.066C383.204 100.434 440 171.518 440 256c0 101.689-82.295 184-184 184-101.689 0-184-82.295-184-184 0-84.47 56.786-155.564 134.312-177.219C216.719 75.874 224 66.517 224 55.712V39.064c0-15.709-14.834-27.153-30.046-23.234C86.603 43.482 7.394 141.206 8.003 257.332c.72 137.052 111.477 246.956 248.531 246.667C393.255 503.711 504 392.788 504 256c0-115.633-79.14-212.779-186.211-240.236C302.678 11.889 288 23.456 288 39.056z\"],\n    \"city\": [640, 512, [], \"f64f\", \"M616 192H480V24c0-13.26-10.74-24-24-24H312c-13.26 0-24 10.74-24 24v72h-64V16c0-8.84-7.16-16-16-16h-16c-8.84 0-16 7.16-16 16v80h-64V16c0-8.84-7.16-16-16-16H80c-8.84 0-16 7.16-16 16v80H24c-13.26 0-24 10.74-24 24v360c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V216c0-13.26-10.75-24-24-24zM128 404c0 6.63-5.37 12-12 12H76c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12H76c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12H76c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm128 192c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm160 96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12V76c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm160 288c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40z\"],\n    \"clinic-medical\": [576, 512, [], \"f7f2\", \"M288 115L69.47 307.71c-1.62 1.46-3.69 2.14-5.47 3.35V496a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V311.1c-1.7-1.16-3.72-1.82-5.26-3.2zm96 261a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8v-48a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8zm186.69-139.72l-255.94-226a39.85 39.85 0 0 0-53.45 0l-256 226a16 16 0 0 0-1.21 22.6L25.5 282.7a16 16 0 0 0 22.6 1.21L277.42 81.63a16 16 0 0 1 21.17 0L527.91 283.9a16 16 0 0 0 22.6-1.21l21.4-23.82a16 16 0 0 0-1.22-22.59z\"],\n    \"clipboard\": [384, 512, [], \"f328\", \"M384 112v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h80c0-35.29 28.71-64 64-64s64 28.71 64 64h80c26.51 0 48 21.49 48 48zM192 40c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24m96 114v-20a6 6 0 0 0-6-6H102a6 6 0 0 0-6 6v20a6 6 0 0 0 6 6h180a6 6 0 0 0 6-6z\"],\n    \"clipboard-check\": [384, 512, [], \"f46c\", \"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm121.2 231.8l-143 141.8c-4.7 4.7-12.3 4.6-17-.1l-82.6-83.3c-4.7-4.7-4.6-12.3.1-17L99.1 285c4.7-4.7 12.3-4.6 17 .1l46 46.4 106-105.2c4.7-4.7 12.3-4.6 17 .1l28.2 28.4c4.7 4.8 4.6 12.3-.1 17z\"],\n    \"clipboard-list\": [384, 512, [], \"f46d\", \"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM96 424c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24zm0-96c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24zm0-96c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24zm96-192c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm128 368c0 4.4-3.6 8-8 8H168c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16zm0-96c0 4.4-3.6 8-8 8H168c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16zm0-96c0 4.4-3.6 8-8 8H168c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16z\"],\n    \"clock\": [512, 512, [], \"f017\", \"M256,8C119,8,8,119,8,256S119,504,256,504,504,393,504,256,393,8,256,8Zm92.49,313h0l-20,25a16,16,0,0,1-22.49,2.5h0l-67-49.72a40,40,0,0,1-15-31.23V112a16,16,0,0,1,16-16h32a16,16,0,0,1,16,16V256l58,42.5A16,16,0,0,1,348.49,321Z\"],\n    \"clone\": [512, 512, [], \"f24d\", \"M464 0c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48H176c-26.51 0-48-21.49-48-48V48c0-26.51 21.49-48 48-48h288M176 416c-44.112 0-80-35.888-80-80V128H48c-26.51 0-48 21.49-48 48v288c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48v-48H176z\"],\n    \"closed-captioning\": [512, 512, [], \"f20a\", \"M464 64H48C21.5 64 0 85.5 0 112v288c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM218.1 287.7c2.8-2.5 7.1-2.1 9.2.9l19.5 27.7c1.7 2.4 1.5 5.6-.5 7.7-53.6 56.8-172.8 32.1-172.8-67.9 0-97.3 121.7-119.5 172.5-70.1 2.1 2 2.5 3.2 1 5.7l-17.5 30.5c-1.9 3.1-6.2 4-9.1 1.7-40.8-32-94.6-14.9-94.6 31.2.1 48 51.1 70.5 92.3 32.6zm190.4 0c2.8-2.5 7.1-2.1 9.2.9l19.5 27.7c1.7 2.4 1.5 5.6-.5 7.7-53.5 56.9-172.7 32.1-172.7-67.9 0-97.3 121.7-119.5 172.5-70.1 2.1 2 2.5 3.2 1 5.7L420 222.2c-1.9 3.1-6.2 4-9.1 1.7-40.8-32-94.6-14.9-94.6 31.2 0 48 51 70.5 92.2 32.6z\"],\n    \"cloud\": [640, 512, [], \"f0c2\", \"M537.6 226.6c4.1-10.7 6.4-22.4 6.4-34.6 0-53-43-96-96-96-19.7 0-38.1 6-53.3 16.2C367 64.2 315.3 32 256 32c-88.4 0-160 71.6-160 160 0 2.7.1 5.4.2 8.1C40.2 219.8 0 273.2 0 336c0 79.5 64.5 144 144 144h368c70.7 0 128-57.3 128-128 0-61.9-44-113.6-102.4-125.4z\"],\n    \"cloud-download-alt\": [640, 512, [], \"f381\", \"M537.6 226.6c4.1-10.7 6.4-22.4 6.4-34.6 0-53-43-96-96-96-19.7 0-38.1 6-53.3 16.2C367 64.2 315.3 32 256 32c-88.4 0-160 71.6-160 160 0 2.7.1 5.4.2 8.1C40.2 219.8 0 273.2 0 336c0 79.5 64.5 144 144 144h368c70.7 0 128-57.3 128-128 0-61.9-44-113.6-102.4-125.4zm-132.9 88.7L299.3 420.7c-6.2 6.2-16.4 6.2-22.6 0L171.3 315.3c-10.1-10.1-2.9-27.3 11.3-27.3H248V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16v112h65.4c14.2 0 21.4 17.2 11.3 27.3z\"],\n    \"cloud-meatball\": [512, 512, [], \"f73b\", \"M48 352c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm416 0c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm-119 11.1c4.6-14.5 1.6-30.8-9.8-42.3-11.5-11.5-27.8-14.4-42.3-9.9-7-13.5-20.7-23-36.9-23s-29.9 9.5-36.9 23c-14.5-4.6-30.8-1.6-42.3 9.9-11.5 11.5-14.4 27.8-9.9 42.3-13.5 7-23 20.7-23 36.9s9.5 29.9 23 36.9c-4.6 14.5-1.6 30.8 9.9 42.3 8.2 8.2 18.9 12.3 29.7 12.3 4.3 0 8.5-1.1 12.6-2.5 7 13.5 20.7 23 36.9 23s29.9-9.5 36.9-23c4.1 1.3 8.3 2.5 12.6 2.5 10.8 0 21.5-4.1 29.7-12.3 11.5-11.5 14.4-27.8 9.8-42.3 13.5-7 23-20.7 23-36.9s-9.5-29.9-23-36.9zM512 224c0-53-43-96-96-96-.6 0-1.1.2-1.6.2 1.1-5.2 1.6-10.6 1.6-16.2 0-44.2-35.8-80-80-80-24.6 0-46.3 11.3-61 28.8C256.4 24.8 219.3 0 176 0 114.1 0 64 50.1 64 112c0 7.3.8 14.3 2.1 21.2C27.8 145.8 0 181.5 0 224c0 53 43 96 96 96h43.4c3.6-8 8.4-15.4 14.8-21.8 13.5-13.5 31.5-21.1 50.8-21.3 13.5-13.2 31.7-20.9 51-20.9s37.5 7.7 51 20.9c19.3.2 37.3 7.8 50.8 21.3 6.4 6.4 11.3 13.8 14.8 21.8H416c53 0 96-43 96-96z\"],\n    \"cloud-moon\": [576, 512, [], \"f6c3\", \"M342.8 352.7c5.7-9.6 9.2-20.7 9.2-32.7 0-35.3-28.7-64-64-64-17.2 0-32.8 6.9-44.3 17.9-16.3-29.6-47.5-49.9-83.7-49.9-53 0-96 43-96 96 0 2 .5 3.8.6 5.7C27.1 338.8 0 374.1 0 416c0 53 43 96 96 96h240c44.2 0 80-35.8 80-80 0-41.9-32.3-75.8-73.2-79.3zm222.5-54.3c-93.1 17.7-178.5-53.7-178.5-147.7 0-54.2 29-104 76.1-130.8 7.3-4.1 5.4-15.1-2.8-16.7C448.4 1.1 436.7 0 425 0 319.1 0 233.1 85.9 233.1 192c0 8.5.7 16.8 1.8 25 5.9 4.3 11.6 8.9 16.7 14.2 11.4-4.7 23.7-7.2 36.4-7.2 52.9 0 96 43.1 96 96 0 3.6-.2 7.2-.6 10.7 23.6 10.8 42.4 29.5 53.5 52.6 54.4-3.4 103.7-29.3 137.1-70.4 5.3-6.5-.5-16.1-8.7-14.5z\"],\n    \"cloud-moon-rain\": [576, 512, [], \"f73c\", \"M350.5 225.5c-6.9-37.2-39.3-65.5-78.5-65.5-12.3 0-23.9 3-34.3 8-17.4-24.1-45.6-40-77.7-40-53 0-96 43-96 96 0 .5.2 1.1.2 1.6C27.6 232.9 0 265.2 0 304c0 44.2 35.8 80 80 80h256c44.2 0 80-35.8 80-80 0-39.2-28.2-71.7-65.5-78.5zm217.4-1.7c-70.4 13.3-135-40.3-135-110.8 0-40.6 21.9-78 57.5-98.1 5.5-3.1 4.1-11.4-2.1-12.5C479.6.8 470.7 0 461.8 0c-77.9 0-141.1 61.2-144.4 137.9 26.7 11.9 48.2 33.8 58.9 61.7 37.1 14.3 64 47.4 70.2 86.8 5.1.5 10 1.5 15.2 1.5 44.7 0 85.6-20.2 112.6-53.3 4.2-4.8-.2-12-6.4-10.8zM364.5 418.1c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8zm-96 0c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8zm-96 0c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8zm-96 0c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8z\"],\n    \"cloud-rain\": [512, 512, [], \"f73d\", \"M416 128c-.6 0-1.1.2-1.6.2 1.1-5.2 1.6-10.6 1.6-16.2 0-44.2-35.8-80-80-80-24.6 0-46.3 11.3-61 28.8C256.4 24.8 219.3 0 176 0 114.1 0 64 50.1 64 112c0 7.3.8 14.3 2.1 21.2C27.8 145.8 0 181.5 0 224c0 53 43 96 96 96h320c53 0 96-43 96-96s-43-96-96-96zM88 374.2c-12.8 44.4-40 56.4-40 87.7 0 27.7 21.5 50.1 48 50.1s48-22.4 48-50.1c0-31.4-27.2-43.1-40-87.7-2.2-8.1-13.5-8.5-16 0zm160 0c-12.8 44.4-40 56.4-40 87.7 0 27.7 21.5 50.1 48 50.1s48-22.4 48-50.1c0-31.4-27.2-43.1-40-87.7-2.2-8.1-13.5-8.5-16 0zm160 0c-12.8 44.4-40 56.4-40 87.7 0 27.7 21.5 50.1 48 50.1s48-22.4 48-50.1c0-31.4-27.2-43.1-40-87.7-2.2-8.1-13.5-8.5-16 0z\"],\n    \"cloud-showers-heavy\": [512, 512, [], \"f740\", \"M183.9 370.1c-7.6-4.4-17.4-1.8-21.8 6l-64 112c-4.4 7.7-1.7 17.5 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l64-112c4.4-7.6 1.7-17.4-6-21.8zm96 0c-7.6-4.4-17.4-1.8-21.8 6l-64 112c-4.4 7.7-1.7 17.5 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l64-112c4.4-7.6 1.7-17.4-6-21.8zm-192 0c-7.6-4.4-17.4-1.8-21.8 6l-64 112c-4.4 7.7-1.7 17.5 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l64-112c4.4-7.6 1.7-17.4-6-21.8zm384 0c-7.6-4.4-17.4-1.8-21.8 6l-64 112c-4.4 7.7-1.7 17.5 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l64-112c4.4-7.6 1.7-17.4-6-21.8zm-96 0c-7.6-4.4-17.4-1.8-21.8 6l-64 112c-4.4 7.7-1.7 17.5 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l64-112c4.4-7.6 1.7-17.4-6-21.8zM416 128c-.6 0-1.1.2-1.6.2 1.1-5.2 1.6-10.6 1.6-16.2 0-44.2-35.8-80-80-80-24.6 0-46.3 11.3-61 28.8C256.4 24.8 219.3 0 176 0 114.2 0 64 50.1 64 112c0 7.3.8 14.3 2.1 21.2C27.8 145.8 0 181.5 0 224c0 53 43 96 96 96h320c53 0 96-43 96-96s-43-96-96-96z\"],\n    \"cloud-sun\": [640, 512, [], \"f6c4\", \"M575.2 325.7c.2-1.9.8-3.7.8-5.6 0-35.3-28.7-64-64-64-12.6 0-24.2 3.8-34.1 10-17.6-38.8-56.5-66-101.9-66-61.8 0-112 50.1-112 112 0 3 .7 5.8.9 8.7-49.6 3.7-88.9 44.7-88.9 95.3 0 53 43 96 96 96h272c53 0 96-43 96-96 0-42.1-27.2-77.4-64.8-90.4zm-430.4-22.6c-43.7-43.7-43.7-114.7 0-158.3 43.7-43.7 114.7-43.7 158.4 0 9.7 9.7 16.9 20.9 22.3 32.7 9.8-3.7 20.1-6 30.7-7.5L386 81.1c4-11.9-7.3-23.1-19.2-19.2L279 91.2 237.5 8.4C232-2.8 216-2.8 210.4 8.4L169 91.2 81.1 61.9C69.3 58 58 69.3 61.9 81.1l29.3 87.8-82.8 41.5c-11.2 5.6-11.2 21.5 0 27.1l82.8 41.4-29.3 87.8c-4 11.9 7.3 23.1 19.2 19.2l76.1-25.3c6.1-12.4 14-23.7 23.6-33.5-13.1-5.4-25.4-13.4-36-24zm-4.8-79.2c0 40.8 29.3 74.8 67.9 82.3 8-4.7 16.3-8.8 25.2-11.7 5.4-44.3 31-82.5 67.4-105C287.3 160.4 258 140 224 140c-46.3 0-84 37.6-84 83.9z\"],\n    \"cloud-sun-rain\": [576, 512, [], \"f743\", \"M510.5 225.5c-6.9-37.2-39.3-65.5-78.5-65.5-12.3 0-23.9 3-34.3 8-17.4-24.1-45.6-40-77.7-40-53 0-96 43-96 96 0 .5.2 1.1.2 1.6C187.6 233 160 265.2 160 304c0 44.2 35.8 80 80 80h256c44.2 0 80-35.8 80-80 0-39.2-28.2-71.7-65.5-78.5zm-386.4 34.4c-37.4-37.4-37.4-98.3 0-135.8 34.6-34.6 89.1-36.8 126.7-7.4 20-12.9 43.6-20.7 69.2-20.7.7 0 1.3.2 2 .2l8.9-26.7c3.4-10.2-6.3-19.8-16.5-16.4l-75.3 25.1-35.5-71c-4.8-9.6-18.5-9.6-23.3 0l-35.5 71-75.3-25.1c-10.2-3.4-19.8 6.3-16.4 16.5l25.1 75.3-71 35.5c-9.6 4.8-9.6 18.5 0 23.3l71 35.5-25.1 75.3c-3.4 10.2 6.3 19.8 16.5 16.5l59.2-19.7c-.2-2.4-.7-4.7-.7-7.2 0-12.5 2.3-24.5 6.2-35.9-3.6-2.7-7.1-5.2-10.2-8.3zm69.8-58c4.3-24.5 15.8-46.4 31.9-64-9.8-6.2-21.4-9.9-33.8-9.9-35.3 0-64 28.7-64 64 0 18.7 8.2 35.4 21.1 47.1 11.3-15.9 26.6-28.9 44.8-37.2zm330.6 216.2c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8zm-96 0c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8zm-96 0c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8zm-96 0c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8z\"],\n    \"cloud-upload-alt\": [640, 512, [], \"f382\", \"M537.6 226.6c4.1-10.7 6.4-22.4 6.4-34.6 0-53-43-96-96-96-19.7 0-38.1 6-53.3 16.2C367 64.2 315.3 32 256 32c-88.4 0-160 71.6-160 160 0 2.7.1 5.4.2 8.1C40.2 219.8 0 273.2 0 336c0 79.5 64.5 144 144 144h368c70.7 0 128-57.3 128-128 0-61.9-44-113.6-102.4-125.4zM393.4 288H328v112c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V288h-65.4c-14.3 0-21.4-17.2-11.3-27.3l105.4-105.4c6.2-6.2 16.4-6.2 22.6 0l105.4 105.4c10.1 10.1 2.9 27.3-11.3 27.3z\"],\n    \"cocktail\": [576, 512, [], \"f561\", \"M296 464h-56V338.78l168.74-168.73c15.52-15.52 4.53-42.05-17.42-42.05H24.68c-21.95 0-32.94 26.53-17.42 42.05L176 338.78V464h-56c-22.09 0-40 17.91-40 40 0 4.42 3.58 8 8 8h240c4.42 0 8-3.58 8-8 0-22.09-17.91-40-40-40zM432 0c-62.61 0-115.35 40.2-135.18 96h52.54c16.65-28.55 47.27-48 82.64-48 52.93 0 96 43.06 96 96s-43.07 96-96 96c-14.04 0-27.29-3.2-39.32-8.64l-35.26 35.26C379.23 279.92 404.59 288 432 288c79.53 0 144-64.47 144-144S511.53 0 432 0z\"],\n    \"code\": [640, 512, [], \"f121\", \"M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z\"],\n    \"code-branch\": [384, 512, [], \"f126\", \"M384 144c0-44.2-35.8-80-80-80s-80 35.8-80 80c0 36.4 24.3 67.1 57.5 76.8-.6 16.1-4.2 28.5-11 36.9-15.4 19.2-49.3 22.4-85.2 25.7-28.2 2.6-57.4 5.4-81.3 16.9v-144c32.5-10.2 56-40.5 56-76.3 0-44.2-35.8-80-80-80S0 35.8 0 80c0 35.8 23.5 66.1 56 76.3v199.3C23.5 365.9 0 396.2 0 432c0 44.2 35.8 80 80 80s80-35.8 80-80c0-34-21.2-63.1-51.2-74.6 3.1-5.2 7.8-9.8 14.9-13.4 16.2-8.2 40.4-10.4 66.1-12.8 42.2-3.9 90-8.4 118.2-43.4 14-17.4 21.1-39.8 21.6-67.9 31.6-10.8 54.4-40.7 54.4-75.9zM80 64c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16zm0 384c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm224-320c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16z\"],\n    \"coffee\": [640, 512, [], \"f0f4\", \"M192 384h192c53 0 96-43 96-96h32c70.6 0 128-57.4 128-128S582.6 32 512 32H120c-13.3 0-24 10.7-24 24v232c0 53 43 96 96 96zM512 96c35.3 0 64 28.7 64 64s-28.7 64-64 64h-32V96h32zm47.7 384H48.3c-47.6 0-61-64-36-64h583.3c25 0 11.8 64-35.9 64z\"],\n    \"cog\": [512, 512, [], \"f013\", \"M487.4 315.7l-42.6-24.6c4.3-23.2 4.3-47 0-70.2l42.6-24.6c4.9-2.8 7.1-8.6 5.5-14-11.1-35.6-30-67.8-54.7-94.6-3.8-4.1-10-5.1-14.8-2.3L380.8 110c-17.9-15.4-38.5-27.3-60.8-35.1V25.8c0-5.6-3.9-10.5-9.4-11.7-36.7-8.2-74.3-7.8-109.2 0-5.5 1.2-9.4 6.1-9.4 11.7V75c-22.2 7.9-42.8 19.8-60.8 35.1L88.7 85.5c-4.9-2.8-11-1.9-14.8 2.3-24.7 26.7-43.6 58.9-54.7 94.6-1.7 5.4.6 11.2 5.5 14L67.3 221c-4.3 23.2-4.3 47 0 70.2l-42.6 24.6c-4.9 2.8-7.1 8.6-5.5 14 11.1 35.6 30 67.8 54.7 94.6 3.8 4.1 10 5.1 14.8 2.3l42.6-24.6c17.9 15.4 38.5 27.3 60.8 35.1v49.2c0 5.6 3.9 10.5 9.4 11.7 36.7 8.2 74.3 7.8 109.2 0 5.5-1.2 9.4-6.1 9.4-11.7v-49.2c22.2-7.9 42.8-19.8 60.8-35.1l42.6 24.6c4.9 2.8 11 1.9 14.8-2.3 24.7-26.7 43.6-58.9 54.7-94.6 1.5-5.5-.7-11.3-5.6-14.1zM256 336c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"],\n    \"cogs\": [640, 512, [], \"f085\", \"M512.1 191l-8.2 14.3c-3 5.3-9.4 7.5-15.1 5.4-11.8-4.4-22.6-10.7-32.1-18.6-4.6-3.8-5.8-10.5-2.8-15.7l8.2-14.3c-6.9-8-12.3-17.3-15.9-27.4h-16.5c-6 0-11.2-4.3-12.2-10.3-2-12-2.1-24.6 0-37.1 1-6 6.2-10.4 12.2-10.4h16.5c3.6-10.1 9-19.4 15.9-27.4l-8.2-14.3c-3-5.2-1.9-11.9 2.8-15.7 9.5-7.9 20.4-14.2 32.1-18.6 5.7-2.1 12.1.1 15.1 5.4l8.2 14.3c10.5-1.9 21.2-1.9 31.7 0L552 6.3c3-5.3 9.4-7.5 15.1-5.4 11.8 4.4 22.6 10.7 32.1 18.6 4.6 3.8 5.8 10.5 2.8 15.7l-8.2 14.3c6.9 8 12.3 17.3 15.9 27.4h16.5c6 0 11.2 4.3 12.2 10.3 2 12 2.1 24.6 0 37.1-1 6-6.2 10.4-12.2 10.4h-16.5c-3.6 10.1-9 19.4-15.9 27.4l8.2 14.3c3 5.2 1.9 11.9-2.8 15.7-9.5 7.9-20.4 14.2-32.1 18.6-5.7 2.1-12.1-.1-15.1-5.4l-8.2-14.3c-10.4 1.9-21.2 1.9-31.7 0zm-10.5-58.8c38.5 29.6 82.4-14.3 52.8-52.8-38.5-29.7-82.4 14.3-52.8 52.8zM386.3 286.1l33.7 16.8c10.1 5.8 14.5 18.1 10.5 29.1-8.9 24.2-26.4 46.4-42.6 65.8-7.4 8.9-20.2 11.1-30.3 5.3l-29.1-16.8c-16 13.7-34.6 24.6-54.9 31.7v33.6c0 11.6-8.3 21.6-19.7 23.6-24.6 4.2-50.4 4.4-75.9 0-11.5-2-20-11.9-20-23.6V418c-20.3-7.2-38.9-18-54.9-31.7L74 403c-10 5.8-22.9 3.6-30.3-5.3-16.2-19.4-33.3-41.6-42.2-65.7-4-10.9.4-23.2 10.5-29.1l33.3-16.8c-3.9-20.9-3.9-42.4 0-63.4L12 205.8c-10.1-5.8-14.6-18.1-10.5-29 8.9-24.2 26-46.4 42.2-65.8 7.4-8.9 20.2-11.1 30.3-5.3l29.1 16.8c16-13.7 34.6-24.6 54.9-31.7V57.1c0-11.5 8.2-21.5 19.6-23.5 24.6-4.2 50.5-4.4 76-.1 11.5 2 20 11.9 20 23.6v33.6c20.3 7.2 38.9 18 54.9 31.7l29.1-16.8c10-5.8 22.9-3.6 30.3 5.3 16.2 19.4 33.2 41.6 42.1 65.8 4 10.9.1 23.2-10 29.1l-33.7 16.8c3.9 21 3.9 42.5 0 63.5zm-117.6 21.1c59.2-77-28.7-164.9-105.7-105.7-59.2 77 28.7 164.9 105.7 105.7zm243.4 182.7l-8.2 14.3c-3 5.3-9.4 7.5-15.1 5.4-11.8-4.4-22.6-10.7-32.1-18.6-4.6-3.8-5.8-10.5-2.8-15.7l8.2-14.3c-6.9-8-12.3-17.3-15.9-27.4h-16.5c-6 0-11.2-4.3-12.2-10.3-2-12-2.1-24.6 0-37.1 1-6 6.2-10.4 12.2-10.4h16.5c3.6-10.1 9-19.4 15.9-27.4l-8.2-14.3c-3-5.2-1.9-11.9 2.8-15.7 9.5-7.9 20.4-14.2 32.1-18.6 5.7-2.1 12.1.1 15.1 5.4l8.2 14.3c10.5-1.9 21.2-1.9 31.7 0l8.2-14.3c3-5.3 9.4-7.5 15.1-5.4 11.8 4.4 22.6 10.7 32.1 18.6 4.6 3.8 5.8 10.5 2.8 15.7l-8.2 14.3c6.9 8 12.3 17.3 15.9 27.4h16.5c6 0 11.2 4.3 12.2 10.3 2 12 2.1 24.6 0 37.1-1 6-6.2 10.4-12.2 10.4h-16.5c-3.6 10.1-9 19.4-15.9 27.4l8.2 14.3c3 5.2 1.9 11.9-2.8 15.7-9.5 7.9-20.4 14.2-32.1 18.6-5.7 2.1-12.1-.1-15.1-5.4l-8.2-14.3c-10.4 1.9-21.2 1.9-31.7 0zM501.6 431c38.5 29.6 82.4-14.3 52.8-52.8-38.5-29.6-82.4 14.3-52.8 52.8z\"],\n    \"coins\": [512, 512, [], \"f51e\", \"M0 405.3V448c0 35.3 86 64 192 64s192-28.7 192-64v-42.7C342.7 434.4 267.2 448 192 448S41.3 434.4 0 405.3zM320 128c106 0 192-28.7 192-64S426 0 320 0 128 28.7 128 64s86 64 192 64zM0 300.4V352c0 35.3 86 64 192 64s192-28.7 192-64v-51.6c-41.3 34-116.9 51.6-192 51.6S41.3 334.4 0 300.4zm416 11c57.3-11.1 96-31.7 96-55.4v-42.7c-23.2 16.4-57.3 27.6-96 34.5v63.6zM192 160C86 160 0 195.8 0 240s86 80 192 80 192-35.8 192-80-86-80-192-80zm219.3 56.3c60-10.8 100.7-32 100.7-56.3v-42.7c-35.5 25.1-96.5 38.6-160.7 41.8 29.5 14.3 51.2 33.5 60 57.2z\"],\n    \"columns\": [512, 512, [], \"f0db\", \"M464 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 416H64V160h160v256zm224 0H288V160h160v256z\"],\n    \"comment\": [512, 512, [], \"f075\", \"M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5c-2.2 2.3-2.8 5.7-1.5 8.7S4.8 480 8 480c66.3 0 116-31.8 140.6-51.4 32.7 12.3 69 19.4 107.4 19.4 141.4 0 256-93.1 256-208S397.4 32 256 32z\"],\n    \"comment-alt\": [512, 512, [], \"f27a\", \"M448 0H64C28.7 0 0 28.7 0 64v288c0 35.3 28.7 64 64 64h96v84c0 9.8 11.2 15.5 19.1 9.7L304 416h144c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64z\"],\n    \"comment-dollar\": [512, 512, [], \"f651\", \"M256 32C114.62 32 0 125.12 0 240c0 49.56 21.41 95.01 57.02 130.74C44.46 421.05 2.7 465.97 2.2 466.5A7.995 7.995 0 0 0 8 480c66.26 0 115.99-31.75 140.6-51.38C181.29 440.93 217.59 448 256 448c141.38 0 256-93.12 256-208S397.38 32 256 32zm24 302.44V352c0 8.84-7.16 16-16 16h-16c-8.84 0-16-7.16-16-16v-17.73c-11.42-1.35-22.28-5.19-31.78-11.46-6.22-4.11-6.82-13.11-1.55-18.38l17.52-17.52c3.74-3.74 9.31-4.24 14.11-2.03 3.18 1.46 6.66 2.22 10.26 2.22h32.78c4.66 0 8.44-3.78 8.44-8.42 0-3.75-2.52-7.08-6.12-8.11l-50.07-14.3c-22.25-6.35-40.01-24.71-42.91-47.67-4.05-32.07 19.03-59.43 49.32-63.05V128c0-8.84 7.16-16 16-16h16c8.84 0 16 7.16 16 16v17.73c11.42 1.35 22.28 5.19 31.78 11.46 6.22 4.11 6.82 13.11 1.55 18.38l-17.52 17.52c-3.74 3.74-9.31 4.24-14.11 2.03a24.516 24.516 0 0 0-10.26-2.22h-32.78c-4.66 0-8.44 3.78-8.44 8.42 0 3.75 2.52 7.08 6.12 8.11l50.07 14.3c22.25 6.36 40.01 24.71 42.91 47.67 4.05 32.06-19.03 59.42-49.32 63.04z\"],\n    \"comment-dots\": [512, 512, [], \"f4ad\", \"M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5c-2.2 2.3-2.8 5.7-1.5 8.7S4.8 480 8 480c66.3 0 116-31.8 140.6-51.4 32.7 12.3 69 19.4 107.4 19.4 141.4 0 256-93.1 256-208S397.4 32 256 32zM128 272c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 0c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 0c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"comment-medical\": [512, 512, [], \"f7f5\", \"M256 32C114.62 32 0 125.12 0 240c0 49.56 21.41 95 57 130.74C44.46 421.05 2.7 466 2.2 466.5A8 8 0 0 0 8 480c66.26 0 116-31.75 140.6-51.38A304.66 304.66 0 0 0 256 448c141.39 0 256-93.12 256-208S397.39 32 256 32zm96 232a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8v-48a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8z\"],\n    \"comment-slash\": [640, 512, [], \"f4b3\", \"M64 240c0 49.6 21.4 95 57 130.7-12.6 50.3-54.3 95.2-54.8 95.8-2.2 2.3-2.8 5.7-1.5 8.7 1.3 2.9 4.1 4.8 7.3 4.8 66.3 0 116-31.8 140.6-51.4 32.7 12.3 69 19.4 107.4 19.4 27.4 0 53.7-3.6 78.4-10L72.9 186.4c-5.6 17.1-8.9 35-8.9 53.6zm569.8 218.1l-114.4-88.4C554.6 334.1 576 289.2 576 240c0-114.9-114.6-208-256-208-65.1 0-124.2 20.1-169.4 52.7L45.5 3.4C38.5-2 28.5-.8 23 6.2L3.4 31.4c-5.4 7-4.2 17 2.8 22.4l588.4 454.7c7 5.4 17 4.2 22.5-2.8l19.6-25.3c5.4-6.8 4.1-16.9-2.9-22.3z\"],\n    \"comments\": [576, 512, [], \"f086\", \"M416 192c0-88.4-93.1-160-208-160S0 103.6 0 192c0 34.3 14.1 65.9 38 92-13.4 30.2-35.5 54.2-35.8 54.5-2.2 2.3-2.8 5.7-1.5 8.7S4.8 352 8 352c36.6 0 66.9-12.3 88.7-25 32.2 15.7 70.3 25 111.3 25 114.9 0 208-71.6 208-160zm122 220c23.9-26 38-57.7 38-92 0-66.9-53.5-124.2-129.3-148.1.9 6.6 1.3 13.3 1.3 20.1 0 105.9-107.7 192-240 192-10.8 0-21.3-.8-31.7-1.9C207.8 439.6 281.8 480 368 480c41 0 79.1-9.2 111.3-25 21.8 12.7 52.1 25 88.7 25 3.2 0 6.1-1.9 7.3-4.8 1.3-2.9.7-6.3-1.5-8.7-.3-.3-22.4-24.2-35.8-54.5z\"],\n    \"comments-dollar\": [576, 512, [], \"f653\", \"M416 192c0-88.37-93.12-160-208-160S0 103.63 0 192c0 34.27 14.13 65.95 37.97 91.98C24.61 314.22 2.52 338.16 2.2 338.5A7.995 7.995 0 0 0 8 352c36.58 0 66.93-12.25 88.73-24.98C128.93 342.76 167.02 352 208 352c114.88 0 208-71.63 208-160zm-224 96v-16.29c-11.29-.58-22.27-4.52-31.37-11.35-3.9-2.93-4.1-8.77-.57-12.14l11.75-11.21c2.77-2.64 6.89-2.76 10.13-.73 3.87 2.42 8.26 3.72 12.82 3.72h28.11c6.5 0 11.8-5.92 11.8-13.19 0-5.95-3.61-11.19-8.77-12.73l-45-13.5c-18.59-5.58-31.58-23.42-31.58-43.39 0-24.52 19.05-44.44 42.67-45.07V96c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v16.29c11.29.58 22.27 4.51 31.37 11.35 3.9 2.93 4.1 8.77.57 12.14l-11.75 11.21c-2.77 2.64-6.89 2.76-10.13.73-3.87-2.43-8.26-3.72-12.82-3.72h-28.11c-6.5 0-11.8 5.92-11.8 13.19 0 5.95 3.61 11.19 8.77 12.73l45 13.5c18.59 5.58 31.58 23.42 31.58 43.39 0 24.53-19.05 44.44-42.67 45.07V288c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8zm346.01 123.99C561.87 385.96 576 354.27 576 320c0-66.94-53.49-124.2-129.33-148.07.86 6.6 1.33 13.29 1.33 20.07 0 105.87-107.66 192-240 192-10.78 0-21.32-.77-31.73-1.88C207.8 439.63 281.77 480 368 480c40.98 0 79.07-9.24 111.27-24.98C501.07 467.75 531.42 480 568 480c3.2 0 6.09-1.91 7.34-4.84 1.27-2.94.66-6.34-1.55-8.67-.31-.33-22.42-24.24-35.78-54.5z\"],\n    \"compact-disc\": [496, 512, [], \"f51f\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM88 256H56c0-105.9 86.1-192 192-192v32c-88.2 0-160 71.8-160 160zm160 96c-53 0-96-43-96-96s43-96 96-96 96 43 96 96-43 96-96 96zm0-128c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32z\"],\n    \"compass\": [496, 512, [], \"f14e\", \"M225.38 233.37c-12.5 12.5-12.5 32.76 0 45.25 12.49 12.5 32.76 12.5 45.25 0 12.5-12.5 12.5-32.76 0-45.25-12.5-12.49-32.76-12.49-45.25 0zM248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm126.14 148.05L308.17 300.4a31.938 31.938 0 0 1-15.77 15.77l-144.34 65.97c-16.65 7.61-33.81-9.55-26.2-26.2l65.98-144.35a31.938 31.938 0 0 1 15.77-15.77l144.34-65.97c16.65-7.6 33.8 9.55 26.19 26.2z\"],\n    \"compress\": [448, 512, [], \"f066\", \"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"],\n    \"compress-alt\": [448, 512, [], \"f422\", \"M4.686 427.314L104 328l-32.922-31.029C55.958 281.851 66.666 256 88.048 256h112C213.303 256 224 266.745 224 280v112c0 21.382-25.803 32.09-40.922 16.971L152 376l-99.314 99.314c-6.248 6.248-16.379 6.248-22.627 0L4.686 449.941c-6.248-6.248-6.248-16.379 0-22.627zM443.314 84.686L344 184l32.922 31.029c15.12 15.12 4.412 40.971-16.97 40.971h-112C234.697 256 224 245.255 224 232V120c0-21.382 25.803-32.09 40.922-16.971L296 136l99.314-99.314c6.248-6.248 16.379-6.248 22.627 0l25.373 25.373c6.248 6.248 6.248 16.379 0 22.627z\"],\n    \"compress-arrows-alt\": [512, 512, [], \"f78c\", \"M200 288H88c-21.4 0-32.1 25.8-17 41l32.9 31-99.2 99.3c-6.2 6.2-6.2 16.4 0 22.6l25.4 25.4c6.2 6.2 16.4 6.2 22.6 0L152 408l31.1 33c15.1 15.1 40.9 4.4 40.9-17V312c0-13.3-10.7-24-24-24zm112-64h112c21.4 0 32.1-25.9 17-41l-33-31 99.3-99.3c6.2-6.2 6.2-16.4 0-22.6L481.9 4.7c-6.2-6.2-16.4-6.2-22.6 0L360 104l-31.1-33C313.8 55.9 288 66.6 288 88v112c0 13.3 10.7 24 24 24zm96 136l33-31.1c15.1-15.1 4.4-40.9-17-40.9H312c-13.3 0-24 10.7-24 24v112c0 21.4 25.9 32.1 41 17l31-32.9 99.3 99.3c6.2 6.2 16.4 6.2 22.6 0l25.4-25.4c6.2-6.2 6.2-16.4 0-22.6L408 360zM183 71.1L152 104 52.7 4.7c-6.2-6.2-16.4-6.2-22.6 0L4.7 30.1c-6.2 6.2-6.2 16.4 0 22.6L104 152l-33 31.1C55.9 198.2 66.6 224 88 224h112c13.3 0 24-10.7 24-24V88c0-21.3-25.9-32-41-16.9z\"],\n    \"concierge-bell\": [512, 512, [], \"f562\", \"M288 130.54V112h16c8.84 0 16-7.16 16-16V80c0-8.84-7.16-16-16-16h-96c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h16v18.54C115.49 146.11 32 239.18 32 352h448c0-112.82-83.49-205.89-192-221.46zM496 384H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h480c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z\"],\n    \"cookie\": [512, 512, [], \"f563\", \"M510.37 254.79l-12.08-76.26a132.493 132.493 0 0 0-37.16-72.95l-54.76-54.75c-19.73-19.72-45.18-32.7-72.71-37.05l-76.7-12.15c-27.51-4.36-55.69.11-80.52 12.76L107.32 49.6a132.25 132.25 0 0 0-57.79 57.8l-35.1 68.88a132.602 132.602 0 0 0-12.82 80.94l12.08 76.27a132.493 132.493 0 0 0 37.16 72.95l54.76 54.75a132.087 132.087 0 0 0 72.71 37.05l76.7 12.14c27.51 4.36 55.69-.11 80.52-12.75l69.12-35.21a132.302 132.302 0 0 0 57.79-57.8l35.1-68.87c12.71-24.96 17.2-53.3 12.82-80.96zM176 368c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm32-160c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm160 128c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"cookie-bite\": [512, 512, [], \"f564\", \"M510.52 255.82c-69.97-.85-126.47-57.69-126.47-127.86-70.17 0-127-56.49-127.86-126.45-27.26-4.14-55.13.3-79.72 12.82l-69.13 35.22a132.221 132.221 0 0 0-57.79 57.81l-35.1 68.88a132.645 132.645 0 0 0-12.82 80.95l12.08 76.27a132.521 132.521 0 0 0 37.16 72.96l54.77 54.76a132.036 132.036 0 0 0 72.71 37.06l76.71 12.15c27.51 4.36 55.7-.11 80.53-12.76l69.13-35.21a132.273 132.273 0 0 0 57.79-57.81l35.1-68.88c12.56-24.64 17.01-52.58 12.91-79.91zM176 368c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm32-160c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm160 128c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"copy\": [448, 512, [], \"f0c5\", \"M320 448v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V120c0-13.255 10.745-24 24-24h72v296c0 30.879 25.121 56 56 56h168zm0-344V0H152c-13.255 0-24 10.745-24 24v368c0 13.255 10.745 24 24 24h272c13.255 0 24-10.745 24-24V128H344c-13.2 0-24-10.8-24-24zm120.971-31.029L375.029 7.029A24 24 0 0 0 358.059 0H352v96h96v-6.059a24 24 0 0 0-7.029-16.97z\"],\n    \"copyright\": [512, 512, [], \"f1f9\", \"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm117.134 346.753c-1.592 1.867-39.776 45.731-109.851 45.731-84.692 0-144.484-63.26-144.484-145.567 0-81.303 62.004-143.401 143.762-143.401 66.957 0 101.965 37.315 103.422 38.904a12 12 0 0 1 1.238 14.623l-22.38 34.655c-4.049 6.267-12.774 7.351-18.234 2.295-.233-.214-26.529-23.88-61.88-23.88-46.116 0-73.916 33.575-73.916 76.082 0 39.602 25.514 79.692 74.277 79.692 38.697 0 65.28-28.338 65.544-28.625 5.132-5.565 14.059-5.033 18.508 1.053l24.547 33.572a12.001 12.001 0 0 1-.553 14.866z\"],\n    \"couch\": [640, 512, [], \"f4b8\", \"M160 224v64h320v-64c0-35.3 28.7-64 64-64h32c0-53-43-96-96-96H160c-53 0-96 43-96 96h32c35.3 0 64 28.7 64 64zm416-32h-32c-17.7 0-32 14.3-32 32v96H128v-96c0-17.7-14.3-32-32-32H64c-35.3 0-64 28.7-64 64 0 23.6 13 44 32 55.1V432c0 8.8 7.2 16 16 16h64c8.8 0 16-7.2 16-16v-16h384v16c0 8.8 7.2 16 16 16h64c8.8 0 16-7.2 16-16V311.1c19-11.1 32-31.5 32-55.1 0-35.3-28.7-64-64-64z\"],\n    \"credit-card\": [576, 512, [], \"f09d\", \"M0 432c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V256H0v176zm192-68c0-6.6 5.4-12 12-12h136c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H204c-6.6 0-12-5.4-12-12v-40zm-128 0c0-6.6 5.4-12 12-12h72c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H76c-6.6 0-12-5.4-12-12v-40zM576 80v48H0V80c0-26.5 21.5-48 48-48h480c26.5 0 48 21.5 48 48z\"],\n    \"crop\": [512, 512, [], \"f125\", \"M488 352h-40V109.25l59.31-59.31c6.25-6.25 6.25-16.38 0-22.63L484.69 4.69c-6.25-6.25-16.38-6.25-22.63 0L402.75 64H192v96h114.75L160 306.75V24c0-13.26-10.75-24-24-24H88C74.75 0 64 10.74 64 24v40H24C10.75 64 0 74.74 0 88v48c0 13.25 10.75 24 24 24h40v264c0 13.25 10.75 24 24 24h232v-96H205.25L352 205.25V488c0 13.25 10.75 24 24 24h48c13.25 0 24-10.75 24-24v-40h40c13.25 0 24-10.75 24-24v-48c0-13.26-10.75-24-24-24z\"],\n    \"crop-alt\": [512, 512, [], \"f565\", \"M488 352h-40V96c0-17.67-14.33-32-32-32H192v96h160v328c0 13.25 10.75 24 24 24h48c13.25 0 24-10.75 24-24v-40h40c13.25 0 24-10.75 24-24v-48c0-13.26-10.75-24-24-24zM160 24c0-13.26-10.75-24-24-24H88C74.75 0 64 10.74 64 24v40H24C10.75 64 0 74.74 0 88v48c0 13.25 10.75 24 24 24h40v256c0 17.67 14.33 32 32 32h224v-96H160V24z\"],\n    \"cross\": [384, 512, [], \"f654\", \"M352 128h-96V32c0-17.67-14.33-32-32-32h-64c-17.67 0-32 14.33-32 32v96H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h96v224c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V256h96c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z\"],\n    \"crosshairs\": [512, 512, [], \"f05b\", \"M500 224h-30.364C455.724 130.325 381.675 56.276 288 42.364V12c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v30.364C130.325 56.276 56.276 130.325 42.364 224H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h30.364C56.276 381.675 130.325 455.724 224 469.636V500c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-30.364C381.675 455.724 455.724 381.675 469.636 288H500c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12zM288 404.634V364c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40.634C165.826 392.232 119.783 346.243 107.366 288H148c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-40.634C119.768 165.826 165.757 119.783 224 107.366V148c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40.634C346.174 119.768 392.217 165.757 404.634 224H364c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40.634C392.232 346.174 346.243 392.217 288 404.634zM288 256c0 17.673-14.327 32-32 32s-32-14.327-32-32c0-17.673 14.327-32 32-32s32 14.327 32 32z\"],\n    \"crow\": [640, 512, [], \"f520\", \"M544 32h-16.36C513.04 12.68 490.09 0 464 0c-44.18 0-80 35.82-80 80v20.98L12.09 393.57A30.216 30.216 0 0 0 0 417.74c0 22.46 23.64 37.07 43.73 27.03L165.27 384h96.49l44.41 120.1c2.27 6.23 9.15 9.44 15.38 7.17l22.55-8.21c6.23-2.27 9.44-9.15 7.17-15.38L312.94 384H352c1.91 0 3.76-.23 5.66-.29l44.51 120.38c2.27 6.23 9.15 9.44 15.38 7.17l22.55-8.21c6.23-2.27 9.44-9.15 7.17-15.38l-41.24-111.53C485.74 352.8 544 279.26 544 192v-80l96-16c0-35.35-42.98-64-96-64zm-80 72c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z\"],\n    \"crown\": [640, 512, [], \"f521\", \"M528 448H112c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h416c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm64-320c-26.5 0-48 21.5-48 48 0 7.1 1.6 13.7 4.4 19.8L476 239.2c-15.4 9.2-35.3 4-44.2-11.6L350.3 85C361 76.2 368 63 368 48c0-26.5-21.5-48-48-48s-48 21.5-48 48c0 15 7 28.2 17.7 37l-81.5 142.6c-8.9 15.6-28.9 20.8-44.2 11.6l-72.3-43.4c2.7-6 4.4-12.7 4.4-19.8 0-26.5-21.5-48-48-48S0 149.5 0 176s21.5 48 48 48c2.6 0 5.2-.4 7.7-.8L128 416h384l72.3-192.8c2.5.4 5.1.8 7.7.8 26.5 0 48-21.5 48-48s-21.5-48-48-48z\"],\n    \"crutch\": [512, 512, [], \"f7f7\", \"M507.31 185.71l-181-181a16 16 0 0 0-22.62 0L281 27.31a16 16 0 0 0 0 22.63l181 181a16 16 0 0 0 22.63 0l22.62-22.63a16 16 0 0 0 .06-22.6zm-179.54 66.41l-67.89-67.89 55.1-55.1-45.25-45.25-109.67 109.67a96.08 96.08 0 0 0-25.67 46.29L106.65 360.1l-102 102a16 16 0 0 0 0 22.63l22.62 22.62a16 16 0 0 0 22.63 0l102-102 120.25-27.75a95.88 95.88 0 0 0 46.29-25.65l109.68-109.68L382.87 197zm-54.57 54.57a32 32 0 0 1-15.45 8.54l-79.3 18.32 18.3-79.3a32.22 32.22 0 0 1 8.56-15.45l9.31-9.31 67.89 67.89z\"],\n    \"cube\": [512, 512, [], \"f1b2\", \"M239.1 6.3l-208 78c-18.7 7-31.1 25-31.1 45v225.1c0 18.2 10.3 34.8 26.5 42.9l208 104c13.5 6.8 29.4 6.8 42.9 0l208-104c16.3-8.1 26.5-24.8 26.5-42.9V129.3c0-20-12.4-37.9-31.1-44.9l-208-78C262 2.2 250 2.2 239.1 6.3zM256 68.4l192 72v1.1l-192 78-192-78v-1.1l192-72zm32 356V275.5l160-65v133.9l-160 80z\"],\n    \"cubes\": [512, 512, [], \"f1b3\", \"M488.6 250.2L392 214V105.5c0-15-9.3-28.4-23.4-33.7l-100-37.5c-8.1-3.1-17.1-3.1-25.3 0l-100 37.5c-14.1 5.3-23.4 18.7-23.4 33.7V214l-96.6 36.2C9.3 255.5 0 268.9 0 283.9V394c0 13.6 7.7 26.1 19.9 32.2l100 50c10.1 5.1 22.1 5.1 32.2 0l103.9-52 103.9 52c10.1 5.1 22.1 5.1 32.2 0l100-50c12.2-6.1 19.9-18.6 19.9-32.2V283.9c0-15-9.3-28.4-23.4-33.7zM358 214.8l-85 31.9v-68.2l85-37v73.3zM154 104.1l102-38.2 102 38.2v.6l-102 41.4-102-41.4v-.6zm84 291.1l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6zm240 112l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6z\"],\n    \"cut\": [448, 512, [], \"f0c4\", \"M278.06 256L444.48 89.57c4.69-4.69 4.69-12.29 0-16.97-32.8-32.8-85.99-32.8-118.79 0L210.18 188.12l-24.86-24.86c4.31-10.92 6.68-22.81 6.68-35.26 0-53.02-42.98-96-96-96S0 74.98 0 128s42.98 96 96 96c4.54 0 8.99-.32 13.36-.93L142.29 256l-32.93 32.93c-4.37-.61-8.83-.93-13.36-.93-53.02 0-96 42.98-96 96s42.98 96 96 96 96-42.98 96-96c0-12.45-2.37-24.34-6.68-35.26l24.86-24.86L325.69 439.4c32.8 32.8 85.99 32.8 118.79 0 4.69-4.68 4.69-12.28 0-16.97L278.06 256zM96 160c-17.64 0-32-14.36-32-32s14.36-32 32-32 32 14.36 32 32-14.36 32-32 32zm0 256c-17.64 0-32-14.36-32-32s14.36-32 32-32 32 14.36 32 32-14.36 32-32 32z\"],\n    \"database\": [448, 512, [], \"f1c0\", \"M448 73.143v45.714C448 159.143 347.667 192 224 192S0 159.143 0 118.857V73.143C0 32.857 100.333 0 224 0s224 32.857 224 73.143zM448 176v102.857C448 319.143 347.667 352 224 352S0 319.143 0 278.857V176c48.125 33.143 136.208 48.572 224 48.572S399.874 209.143 448 176zm0 160v102.857C448 479.143 347.667 512 224 512S0 479.143 0 438.857V336c48.125 33.143 136.208 48.572 224 48.572S399.874 369.143 448 336z\"],\n    \"deaf\": [512, 512, [], \"f2a4\", \"M216 260c0 15.464-12.536 28-28 28s-28-12.536-28-28c0-44.112 35.888-80 80-80s80 35.888 80 80c0 15.464-12.536 28-28 28s-28-12.536-28-28c0-13.234-10.767-24-24-24s-24 10.766-24 24zm24-176c-97.047 0-176 78.953-176 176 0 15.464 12.536 28 28 28s28-12.536 28-28c0-66.168 53.832-120 120-120s120 53.832 120 120c0 75.164-71.009 70.311-71.997 143.622L288 404c0 28.673-23.327 52-52 52-15.464 0-28 12.536-28 28s12.536 28 28 28c59.475 0 107.876-48.328 108-107.774.595-34.428 72-48.24 72-144.226 0-97.047-78.953-176-176-176zm268.485-52.201L480.2 3.515c-4.687-4.686-12.284-4.686-16.971 0L376.2 90.544c-4.686 4.686-4.686 12.284 0 16.971l28.285 28.285c4.686 4.686 12.284 4.686 16.97 0l87.03-87.029c4.687-4.688 4.687-12.286 0-16.972zM168.97 314.745c-4.686-4.686-12.284-4.686-16.97 0L3.515 463.23c-4.686 4.686-4.686 12.284 0 16.971L31.8 508.485c4.687 4.686 12.284 4.686 16.971 0L197.256 360c4.686-4.686 4.686-12.284 0-16.971l-28.286-28.284z\"],\n    \"democrat\": [640, 512, [], \"f747\", \"M637.3 256.9l-19.6-29.4c-28.2-42.3-75.3-67.5-126.1-67.5H256l-81.2-81.2c20.1-20.1 22.6-51.1 7.5-73.9-3.4-5.2-10.8-5.9-15.2-1.5l-41.8 41.8L82.4 2.4c-3.6-3.6-9.6-3-12.4 1.2-12.3 18.6-10.3 44 6.1 60.4 3.3 3.3 7.3 5.3 11.3 7.5-2.2 1.7-4.7 3.1-6.4 5.4L6.4 176.2c-7.3 9.7-8.4 22.7-3 33.5l14.3 28.6c5.4 10.8 16.5 17.7 28.6 17.7h31c8.5 0 16.6-3.4 22.6-9.4L138 212l54 108h352v-77.8c16.2 12.2 18.3 17.6 40.1 50.3 4.9 7.4 14.8 9.3 22.2 4.4l26.6-17.7c7.3-5 9.3-14.9 4.4-22.3zm-341.1-13.6l-16.5 16.1 3.9 22.7c.7 4.1-3.6 7.2-7.2 5.3L256 276.7l-20.4 10.7c-3.6 1.9-7.9-1.2-7.2-5.3l3.9-22.7-16.5-16.1c-3-2.9-1.3-7.9 2.8-8.5l22.8-3.3 10.2-20.7c1.8-3.7 7.1-3.7 9 0l10.2 20.7 22.8 3.3c4 .6 5.6 5.6 2.6 8.5zm112 0l-16.5 16.1 3.9 22.7c.7 4.1-3.6 7.2-7.2 5.3L368 276.7l-20.4 10.7c-3.6 1.9-7.9-1.2-7.2-5.3l3.9-22.7-16.5-16.1c-3-2.9-1.3-7.9 2.8-8.5l22.8-3.3 10.2-20.7c1.8-3.7 7.1-3.7 9 0l10.2 20.7 22.8 3.3c4 .6 5.6 5.6 2.6 8.5zm112 0l-16.5 16.1 3.9 22.7c.7 4.1-3.6 7.2-7.2 5.3L480 276.7l-20.4 10.7c-3.6 1.9-7.9-1.2-7.2-5.3l3.9-22.7-16.5-16.1c-3-2.9-1.3-7.9 2.8-8.5l22.8-3.3 10.2-20.7c1.8-3.7 7.1-3.7 9 0l10.2 20.7 22.8 3.3c4 .6 5.6 5.6 2.6 8.5zM192 496c0 8.8 7.2 16 16 16h64c8.8 0 16-7.2 16-16v-80h160v80c0 8.8 7.2 16 16 16h64c8.8 0 16-7.2 16-16V352H192v144z\"],\n    \"desktop\": [576, 512, [], \"f108\", \"M528 0H48C21.5 0 0 21.5 0 48v320c0 26.5 21.5 48 48 48h192l-16 48h-72c-13.3 0-24 10.7-24 24s10.7 24 24 24h272c13.3 0 24-10.7 24-24s-10.7-24-24-24h-72l-16-48h192c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zm-16 352H64V64h448v288z\"],\n    \"dharmachakra\": [512, 512, [], \"f655\", \"M495 225.06l-17.22 1.08c-5.27-39.49-20.79-75.64-43.86-105.84l12.95-11.43c6.92-6.11 7.25-16.79.73-23.31L426.44 64.4c-6.53-6.53-17.21-6.19-23.31.73L391.7 78.07c-30.2-23.06-66.35-38.58-105.83-43.86L286.94 17c.58-9.21-6.74-17-15.97-17h-29.94c-9.23 0-16.54 7.79-15.97 17l1.08 17.22c-39.49 5.27-75.64 20.79-105.83 43.86l-11.43-12.95c-6.11-6.92-16.79-7.25-23.31-.73L64.4 85.56c-6.53 6.53-6.19 17.21.73 23.31l12.95 11.43c-23.06 30.2-38.58 66.35-43.86 105.84L17 225.06c-9.21-.58-17 6.74-17 15.97v29.94c0 9.23 7.79 16.54 17 15.97l17.22-1.08c5.27 39.49 20.79 75.64 43.86 105.83l-12.95 11.43c-6.92 6.11-7.25 16.79-.73 23.31l21.17 21.17c6.53 6.53 17.21 6.19 23.31-.73l11.43-12.95c30.2 23.06 66.35 38.58 105.84 43.86L225.06 495c-.58 9.21 6.74 17 15.97 17h29.94c9.23 0 16.54-7.79 15.97-17l-1.08-17.22c39.49-5.27 75.64-20.79 105.84-43.86l11.43 12.95c6.11 6.92 16.79 7.25 23.31.73l21.17-21.17c6.53-6.53 6.19-17.21-.73-23.31l-12.95-11.43c23.06-30.2 38.58-66.35 43.86-105.83l17.22 1.08c9.21.58 17-6.74 17-15.97v-29.94c-.01-9.23-7.8-16.54-17.01-15.97zM281.84 98.61c24.81 4.07 47.63 13.66 67.23 27.78l-42.62 48.29c-8.73-5.44-18.32-9.54-28.62-11.95l4.01-64.12zm-51.68 0l4.01 64.12c-10.29 2.41-19.89 6.52-28.62 11.95l-42.62-48.29c19.6-14.12 42.42-23.71 67.23-27.78zm-103.77 64.33l48.3 42.61c-5.44 8.73-9.54 18.33-11.96 28.62l-64.12-4.01c4.07-24.81 13.66-47.62 27.78-67.22zm-27.78 118.9l64.12-4.01c2.41 10.29 6.52 19.89 11.95 28.62l-48.29 42.62c-14.12-19.6-23.71-42.42-27.78-67.23zm131.55 131.55c-24.81-4.07-47.63-13.66-67.23-27.78l42.61-48.3c8.73 5.44 18.33 9.54 28.62 11.96l-4 64.12zM256 288c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm25.84 125.39l-4.01-64.12c10.29-2.41 19.89-6.52 28.62-11.96l42.61 48.3c-19.6 14.12-42.41 23.71-67.22 27.78zm103.77-64.33l-48.29-42.62c5.44-8.73 9.54-18.32 11.95-28.62l64.12 4.01c-4.07 24.82-13.66 47.64-27.78 67.23zm-36.34-114.89c-2.41-10.29-6.52-19.89-11.96-28.62l48.3-42.61c14.12 19.6 23.71 42.42 27.78 67.23l-64.12 4z\"],\n    \"diagnoses\": [640, 512, [], \"f470\", \"M496 256c8.8 0 16-7.2 16-16s-7.2-16-16-16-16 7.2-16 16 7.2 16 16 16zm-176-80c48.5 0 88-39.5 88-88S368.5 0 320 0s-88 39.5-88 88 39.5 88 88 88zM59.8 364c10.2 15.3 29.3 17.8 42.9 9.8 16.2-9.6 56.2-31.7 105.3-48.6V416h224v-90.7c49.1 16.8 89.1 39 105.3 48.6 13.6 8 32.7 5.3 42.9-9.8l17.8-26.7c8.8-13.2 7.6-34.6-10-45.1-11.9-7.1-29.7-17-51.1-27.4-28.1 46.1-99.4 17.8-87.7-35.1C409.3 217.2 365.1 208 320 208c-57 0-112.9 14.5-160 32.2-.2 40.2-47.6 63.3-79.2 36-11.2 6-21.3 11.6-28.7 16-17.6 10.5-18.8 31.8-10 45.1L59.8 364zM368 344c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm-96-96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm-160 8c8.8 0 16-7.2 16-16s-7.2-16-16-16-16 7.2-16 16 7.2 16 16 16zm512 192H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h608c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16z\"],\n    \"dice\": [640, 512, [], \"f522\", \"M592 192H473.26c12.69 29.59 7.12 65.2-17 89.32L320 417.58V464c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48V240c0-26.51-21.49-48-48-48zM480 376c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm-46.37-186.7L258.7 14.37c-19.16-19.16-50.23-19.16-69.39 0L14.37 189.3c-19.16 19.16-19.16 50.23 0 69.39L189.3 433.63c19.16 19.16 50.23 19.16 69.39 0L433.63 258.7c19.16-19.17 19.16-50.24 0-69.4zM96 248c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm128 128c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm0-128c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm0-128c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm128 128c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z\"],\n    \"dice-d20\": [480, 512, [], \"f6cf\", \"M106.75 215.06L1.2 370.95c-3.08 5 .1 11.5 5.93 12.14l208.26 22.07-108.64-190.1zM7.41 315.43L82.7 193.08 6.06 147.1c-2.67-1.6-6.06.32-6.06 3.43v162.81c0 4.03 5.29 5.53 7.41 2.09zM18.25 423.6l194.4 87.66c5.3 2.45 11.35-1.43 11.35-7.26v-65.67l-203.55-22.3c-4.45-.5-6.23 5.59-2.2 7.57zm81.22-257.78L179.4 22.88c4.34-7.06-3.59-15.25-10.78-11.14L17.81 110.35c-2.47 1.62-2.39 5.26.13 6.78l81.53 48.69zM240 176h109.21L253.63 7.62C250.5 2.54 245.25 0 240 0s-10.5 2.54-13.63 7.62L130.79 176H240zm233.94-28.9l-76.64 45.99 75.29 122.35c2.11 3.44 7.41 1.94 7.41-2.1V150.53c0-3.11-3.39-5.03-6.06-3.43zm-93.41 18.72l81.53-48.7c2.53-1.52 2.6-5.16.13-6.78l-150.81-98.6c-7.19-4.11-15.12 4.08-10.78 11.14l79.93 142.94zm79.02 250.21L256 438.32v65.67c0 5.84 6.05 9.71 11.35 7.26l194.4-87.66c4.03-1.97 2.25-8.06-2.2-7.56zm-86.3-200.97l-108.63 190.1 208.26-22.07c5.83-.65 9.01-7.14 5.93-12.14L373.25 215.06zM240 208H139.57L240 383.75 340.43 208H240z\"],\n    \"dice-d6\": [448, 512, [], \"f6d1\", \"M422.19 109.95L256.21 9.07c-19.91-12.1-44.52-12.1-64.43 0L25.81 109.95c-5.32 3.23-5.29 11.27.06 14.46L224 242.55l198.14-118.14c5.35-3.19 5.38-11.22.05-14.46zm13.84 44.63L240 271.46v223.82c0 12.88 13.39 20.91 24.05 14.43l152.16-92.48c19.68-11.96 31.79-33.94 31.79-57.7v-197.7c0-6.41-6.64-10.43-11.97-7.25zM0 161.83v197.7c0 23.77 12.11 45.74 31.79 57.7l152.16 92.47c10.67 6.48 24.05-1.54 24.05-14.43V271.46L11.97 154.58C6.64 151.4 0 155.42 0 161.83z\"],\n    \"dice-five\": [448, 512, [], \"f523\", \"M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM128 384c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm96 96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm96 96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"dice-four\": [448, 512, [], \"f524\", \"M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM128 384c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm192 192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"dice-one\": [448, 512, [], \"f525\", \"M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM224 288c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"dice-six\": [448, 512, [], \"f526\", \"M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM128 384c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm192 192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"dice-three\": [448, 512, [], \"f527\", \"M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM128 192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm96 96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm96 96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"dice-two\": [448, 512, [], \"f528\", \"M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM128 192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm192 192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"digital-tachograph\": [640, 512, [], \"f566\", \"M608 96H32c-17.67 0-32 14.33-32 32v256c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V128c0-17.67-14.33-32-32-32zM304 352c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-8c0-4.42 3.58-8 8-8h224c4.42 0 8 3.58 8 8v8zM72 288v-16c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H80c-4.42 0-8-3.58-8-8zm64 0v-16c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8zm64 0v-16c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8zm64 0v-16c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8zm40-64c0 8.84-7.16 16-16 16H80c-8.84 0-16-7.16-16-16v-48c0-8.84 7.16-16 16-16h208c8.84 0 16 7.16 16 16v48zm272 128c0 4.42-3.58 8-8 8H344c-4.42 0-8-3.58-8-8v-8c0-4.42 3.58-8 8-8h224c4.42 0 8 3.58 8 8v8z\"],\n    \"directions\": [512, 512, [], \"f5eb\", \"M502.61 233.32L278.68 9.39c-12.52-12.52-32.83-12.52-45.36 0L9.39 233.32c-12.52 12.53-12.52 32.83 0 45.36l223.93 223.93c12.52 12.53 32.83 12.53 45.36 0l223.93-223.93c12.52-12.53 12.52-32.83 0-45.36zm-100.98 12.56l-84.21 77.73c-5.12 4.73-13.43 1.1-13.43-5.88V264h-96v64c0 4.42-3.58 8-8 8h-32c-4.42 0-8-3.58-8-8v-80c0-17.67 14.33-32 32-32h112v-53.73c0-6.97 8.3-10.61 13.43-5.88l84.21 77.73c3.43 3.17 3.43 8.59 0 11.76z\"],\n    \"disease\": [512, 512, [], \"f7fa\", \"M472.29 195.9l-67.06-23c-19.28-6.6-33.54-20.92-38.14-38.31l-16-60.45c-11.58-43.77-76.57-57.13-110-22.62L195 99.24c-13.26 13.71-33.54 20.93-54.2 19.31l-71.9-5.62c-52-4.07-86.93 44.89-59 82.84l38.54 52.42c11.08 15.07 12.82 33.86 4.64 50.24l-28.43 57C4 396.67 47.46 440.29 98.11 429.23l70-15.28c20.11-4.39 41.45 0 57.07 11.73l54.32 40.83c39.32 29.56 101 7.57 104.45-37.22l4.7-61.86c1.35-17.8 12.8-33.87 30.63-43l62-31.74c44.84-22.96 39.55-80.17-8.99-96.79zM160 256a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm128 96a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm16-128a16 16 0 1 1 16-16 16 16 0 0 1-16 16z\"],\n    \"divide\": [448, 512, [], \"f529\", \"M224 352c-35.35 0-64 28.65-64 64s28.65 64 64 64 64-28.65 64-64-28.65-64-64-64zm0-192c35.35 0 64-28.65 64-64s-28.65-64-64-64-64 28.65-64 64 28.65 64 64 64zm192 48H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"],\n    \"dizzy\": [496, 512, [], \"f567\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm-96 206.6l-28.7 28.7c-14.8 14.8-37.8-7.5-22.6-22.6l28.7-28.7-28.7-28.7c-15-15 7.7-37.6 22.6-22.6l28.7 28.7 28.7-28.7c15-15 37.6 7.7 22.6 22.6L174.6 192l28.7 28.7c15.2 15.2-7.9 37.4-22.6 22.6L152 214.6zM248 416c-35.3 0-64-28.7-64-64s28.7-64 64-64 64 28.7 64 64-28.7 64-64 64zm147.3-195.3c15.2 15.2-7.9 37.4-22.6 22.6L344 214.6l-28.7 28.7c-14.8 14.8-37.8-7.5-22.6-22.6l28.7-28.7-28.7-28.7c-15-15 7.7-37.6 22.6-22.6l28.7 28.7 28.7-28.7c15-15 37.6 7.7 22.6 22.6L366.6 192l28.7 28.7z\"],\n    \"dna\": [448, 512, [], \"f471\", \"M.1 494.1c-1.1 9.5 6.3 17.8 15.9 17.8l32.3.1c8.1 0 14.9-5.9 16-13.9.7-4.9 1.8-11.1 3.4-18.1H380c1.6 6.9 2.9 13.2 3.5 18.1 1.1 8 7.9 14 16 13.9l32.3-.1c9.6 0 17.1-8.3 15.9-17.8-4.6-37.9-25.6-129-118.9-207.7-17.6 12.4-37.1 24.2-58.5 35.4 6.2 4.6 11.4 9.4 17 14.2H159.7c21.3-18.1 47-35.6 78.7-51.4C410.5 199.1 442.1 65.8 447.9 17.9 449 8.4 441.6.1 432 .1L399.6 0c-8.1 0-14.9 5.9-16 13.9-.7 4.9-1.8 11.1-3.4 18.1H67.8c-1.6-7-2.7-13.1-3.4-18.1-1.1-8-7.9-14-16-13.9L16.1.1C6.5.1-1 8.4.1 17.9 5.3 60.8 31.4 171.8 160 256 31.5 340.2 5.3 451.2.1 494.1zM224 219.6c-25.1-13.7-46.4-28.4-64.3-43.6h128.5c-17.8 15.2-39.1 30-64.2 43.6zM355.1 96c-5.8 10.4-12.8 21.1-21 32H114c-8.3-10.9-15.3-21.6-21-32h262.1zM92.9 416c5.8-10.4 12.8-21.1 21-32h219.4c8.3 10.9 15.4 21.6 21.2 32H92.9z\"],\n    \"dog\": [576, 512, [], \"f6d3\", \"M298.06,224,448,277.55V496a16,16,0,0,1-16,16H368a16,16,0,0,1-16-16V384H192V496a16,16,0,0,1-16,16H112a16,16,0,0,1-16-16V282.09C58.84,268.84,32,233.66,32,192a32,32,0,0,1,64,0,32.06,32.06,0,0,0,32,32ZM544,112v32a64,64,0,0,1-64,64H448v35.58L320,197.87V48c0-14.25,17.22-21.39,27.31-11.31L374.59,64h53.63c10.91,0,23.75,7.92,28.62,17.69L464,96h64A16,16,0,0,1,544,112Zm-112,0a16,16,0,1,0-16,16A16,16,0,0,0,432,112Z\"],\n    \"dollar-sign\": [288, 512, [], \"f155\", \"M209.2 233.4l-108-31.6C88.7 198.2 80 186.5 80 173.5c0-16.3 13.2-29.5 29.5-29.5h66.3c12.2 0 24.2 3.7 34.2 10.5 6.1 4.1 14.3 3.1 19.5-2l34.8-34c7.1-6.9 6.1-18.4-1.8-24.5C238 74.8 207.4 64.1 176 64V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48h-2.5C45.8 64-5.4 118.7.5 183.6c4.2 46.1 39.4 83.6 83.8 96.6l102.5 30c12.5 3.7 21.2 15.3 21.2 28.3 0 16.3-13.2 29.5-29.5 29.5h-66.3C100 368 88 364.3 78 357.5c-6.1-4.1-14.3-3.1-19.5 2l-34.8 34c-7.1 6.9-6.1 18.4 1.8 24.5 24.5 19.2 55.1 29.9 86.5 30v48c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-48.2c46.6-.9 90.3-28.6 105.7-72.7 21.5-61.6-14.6-124.8-72.5-141.7z\"],\n    \"dolly\": [576, 512, [], \"f472\", \"M294.2 277.7c18 5 34.7 13.4 49.5 24.7l161.5-53.8c8.4-2.8 12.9-11.9 10.1-20.2L454.9 47.2c-2.8-8.4-11.9-12.9-20.2-10.1l-61.1 20.4 33.1 99.4L346 177l-33.1-99.4-61.6 20.5c-8.4 2.8-12.9 11.9-10.1 20.2l53 159.4zm281 48.7L565 296c-2.8-8.4-11.9-12.9-20.2-10.1l-213.5 71.2c-17.2-22-43.6-36.4-73.5-37L158.4 21.9C154 8.8 141.8 0 128 0H16C7.2 0 0 7.2 0 16v32c0 8.8 7.2 16 16 16h88.9l92.2 276.7c-26.1 20.4-41.7 53.6-36 90.5 6.1 39.4 37.9 72.3 77.3 79.2 60.2 10.7 112.3-34.8 113.4-92.6l213.3-71.2c8.3-2.8 12.9-11.8 10.1-20.2zM256 464c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z\"],\n    \"dolly-flatbed\": [640, 512, [], \"f474\", \"M208 320h384c8.8 0 16-7.2 16-16V48c0-8.8-7.2-16-16-16H448v128l-48-32-48 32V32H208c-8.8 0-16 7.2-16 16v256c0 8.8 7.2 16 16 16zm416 64H128V16c0-8.8-7.2-16-16-16H16C7.2 0 0 7.2 0 16v32c0 8.8 7.2 16 16 16h48v368c0 8.8 7.2 16 16 16h82.9c-1.8 5-2.9 10.4-2.9 16 0 26.5 21.5 48 48 48s48-21.5 48-48c0-5.6-1.2-11-2.9-16H451c-1.8 5-2.9 10.4-2.9 16 0 26.5 21.5 48 48 48s48-21.5 48-48c0-5.6-1.2-11-2.9-16H624c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16z\"],\n    \"donate\": [512, 512, [], \"f4b9\", \"M256 416c114.9 0 208-93.1 208-208S370.9 0 256 0 48 93.1 48 208s93.1 208 208 208zM233.8 97.4V80.6c0-9.2 7.4-16.6 16.6-16.6h11.1c9.2 0 16.6 7.4 16.6 16.6v17c15.5.8 30.5 6.1 43 15.4 5.6 4.1 6.2 12.3 1.2 17.1L306 145.6c-3.8 3.7-9.5 3.8-14 1-5.4-3.4-11.4-5.1-17.8-5.1h-38.9c-9 0-16.3 8.2-16.3 18.3 0 8.2 5 15.5 12.1 17.6l62.3 18.7c25.7 7.7 43.7 32.4 43.7 60.1 0 34-26.4 61.5-59.1 62.4v16.8c0 9.2-7.4 16.6-16.6 16.6h-11.1c-9.2 0-16.6-7.4-16.6-16.6v-17c-15.5-.8-30.5-6.1-43-15.4-5.6-4.1-6.2-12.3-1.2-17.1l16.3-15.5c3.8-3.7 9.5-3.8 14-1 5.4 3.4 11.4 5.1 17.8 5.1h38.9c9 0 16.3-8.2 16.3-18.3 0-8.2-5-15.5-12.1-17.6l-62.3-18.7c-25.7-7.7-43.7-32.4-43.7-60.1.1-34 26.4-61.5 59.1-62.4zM480 352h-32.5c-19.6 26-44.6 47.7-73 64h63.8c5.3 0 9.6 3.6 9.6 8v16c0 4.4-4.3 8-9.6 8H73.6c-5.3 0-9.6-3.6-9.6-8v-16c0-4.4 4.3-8 9.6-8h63.8c-28.4-16.3-53.3-38-73-64H32c-17.7 0-32 14.3-32 32v96c0 17.7 14.3 32 32 32h448c17.7 0 32-14.3 32-32v-96c0-17.7-14.3-32-32-32z\"],\n    \"door-closed\": [640, 512, [], \"f52a\", \"M624 448H512V50.8C512 22.78 490.47 0 464 0H175.99c-26.47 0-48 22.78-48 50.8V448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h608c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM415.99 288c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32c.01 17.67-14.32 32-32 32z\"],\n    \"door-open\": [640, 512, [], \"f52b\", \"M624 448h-80V113.45C544 86.19 522.47 64 496 64H384v64h96v384h144c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM312.24 1.01l-192 49.74C105.99 54.44 96 67.7 96 82.92V448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h336V33.18c0-21.58-19.56-37.41-39.76-32.17zM264 288c-13.25 0-24-14.33-24-32s10.75-32 24-32 24 14.33 24 32-10.75 32-24 32z\"],\n    \"dot-circle\": [512, 512, [], \"f192\", \"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm80 248c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80z\"],\n    \"dove\": [512, 512, [], \"f4ba\", \"M288 167.2v-28.1c-28.2-36.3-47.1-79.3-54.1-125.2-2.1-13.5-19-18.8-27.8-8.3-21.1 24.9-37.7 54.1-48.9 86.5 34.2 38.3 80 64.6 130.8 75.1zM400 64c-44.2 0-80 35.9-80 80.1v59.4C215.6 197.3 127 133 87 41.8c-5.5-12.5-23.2-13.2-29-.9C41.4 76 32 115.2 32 156.6c0 70.8 34.1 136.9 85.1 185.9 13.2 12.7 26.1 23.2 38.9 32.8l-143.9 36C1.4 414-3.4 426.4 2.6 435.7 20 462.6 63 508.2 155.8 512c8 .3 16-2.6 22.1-7.9l65.2-56.1H320c88.4 0 160-71.5 160-159.9V128l32-64H400zm0 96.1c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16z\"],\n    \"download\": [512, 512, [], \"f019\", \"M216 0h80c13.3 0 24 10.7 24 24v168h87.7c17.8 0 26.7 21.5 14.1 34.1L269.7 378.3c-7.5 7.5-19.8 7.5-27.3 0L90.1 226.1c-12.6-12.6-3.7-34.1 14.1-34.1H192V24c0-13.3 10.7-24 24-24zm296 376v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h146.7l49 49c20.1 20.1 52.5 20.1 72.6 0l49-49H488c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z\"],\n    \"drafting-compass\": [512, 512, [], \"f568\", \"M457.01 344.42c-25.05 20.33-52.63 37.18-82.54 49.05l54.38 94.19 53.95 23.04c9.81 4.19 20.89-2.21 22.17-12.8l7.02-58.25-54.98-95.23zm42.49-94.56c4.86-7.67 1.89-17.99-6.05-22.39l-28.07-15.57c-7.48-4.15-16.61-1.46-21.26 5.72C403.01 281.15 332.25 320 256 320c-23.93 0-47.23-4.25-69.41-11.53l67.36-116.68c.7.02 1.34.21 2.04.21s1.35-.19 2.04-.21l51.09 88.5c31.23-8.96 59.56-25.75 82.61-48.92l-51.79-89.71C347.39 128.03 352 112.63 352 96c0-53.02-42.98-96-96-96s-96 42.98-96 96c0 16.63 4.61 32.03 12.05 45.66l-68.3 118.31c-12.55-11.61-23.96-24.59-33.68-39-4.79-7.1-13.97-9.62-21.38-5.33l-27.75 16.07c-7.85 4.54-10.63 14.9-5.64 22.47 15.57 23.64 34.69 44.21 55.98 62.02L0 439.66l7.02 58.25c1.28 10.59 12.36 16.99 22.17 12.8l53.95-23.04 70.8-122.63C186.13 377.28 220.62 384 256 384c99.05 0 190.88-51.01 243.5-134.14zM256 64c17.67 0 32 14.33 32 32s-14.33 32-32 32-32-14.33-32-32 14.33-32 32-32z\"],\n    \"dragon\": [640, 512, [], \"f6d5\", \"M18.32 255.78L192 223.96l-91.28 68.69c-10.08 10.08-2.94 27.31 11.31 27.31h222.7c-9.44-26.4-14.73-54.47-14.73-83.38v-42.27l-119.73-87.6c-23.82-15.88-55.29-14.01-77.06 4.59L5.81 227.64c-12.38 10.33-3.45 30.42 12.51 28.14zm556.87 34.1l-100.66-50.31A47.992 47.992 0 0 1 448 196.65v-36.69h64l28.09 22.63c6 6 14.14 9.37 22.63 9.37h30.97a32 32 0 0 0 28.62-17.69l14.31-28.62a32.005 32.005 0 0 0-3.02-33.51l-74.53-99.38C553.02 4.7 543.54 0 533.47 0H296.02c-7.13 0-10.7 8.57-5.66 13.61L352 63.96 292.42 88.8c-5.9 2.95-5.9 11.36 0 14.31L352 127.96v108.62c0 72.08 36.03 139.39 96 179.38-195.59 6.81-344.56 41.01-434.1 60.91C5.78 478.67 0 485.88 0 494.2 0 504 7.95 512 17.76 512h499.08c63.29.01 119.61-47.56 122.99-110.76 2.52-47.28-22.73-90.4-64.64-111.36zM489.18 66.25l45.65 11.41c-2.75 10.91-12.47 18.89-24.13 18.26-12.96-.71-25.85-12.53-21.52-29.67z\"],\n    \"draw-polygon\": [448, 512, [], \"f5ee\", \"M384 352c-.35 0-.67.1-1.02.1l-39.2-65.32c5.07-9.17 8.22-19.56 8.22-30.78s-3.14-21.61-8.22-30.78l39.2-65.32c.35.01.67.1 1.02.1 35.35 0 64-28.65 64-64s-28.65-64-64-64c-23.63 0-44.04 12.95-55.12 32H119.12C108.04 44.95 87.63 32 64 32 28.65 32 0 60.65 0 96c0 23.63 12.95 44.04 32 55.12v209.75C12.95 371.96 0 392.37 0 416c0 35.35 28.65 64 64 64 23.63 0 44.04-12.95 55.12-32h209.75c11.09 19.05 31.49 32 55.12 32 35.35 0 64-28.65 64-64 .01-35.35-28.64-64-63.99-64zm-288 8.88V151.12A63.825 63.825 0 0 0 119.12 128h208.36l-38.46 64.1c-.35-.01-.67-.1-1.02-.1-35.35 0-64 28.65-64 64s28.65 64 64 64c.35 0 .67-.1 1.02-.1l38.46 64.1H119.12A63.748 63.748 0 0 0 96 360.88zM272 256c0-8.82 7.18-16 16-16s16 7.18 16 16-7.18 16-16 16-16-7.18-16-16zM400 96c0 8.82-7.18 16-16 16s-16-7.18-16-16 7.18-16 16-16 16 7.18 16 16zM64 80c8.82 0 16 7.18 16 16s-7.18 16-16 16-16-7.18-16-16 7.18-16 16-16zM48 416c0-8.82 7.18-16 16-16s16 7.18 16 16-7.18 16-16 16-16-7.18-16-16zm336 16c-8.82 0-16-7.18-16-16s7.18-16 16-16 16 7.18 16 16-7.18 16-16 16z\"],\n    \"drum\": [512, 512, [], \"f569\", \"M431.34 122.05l73.53-47.42a16 16 0 0 0 4.44-22.19l-8.87-13.31a16 16 0 0 0-22.19-4.44l-110.06 71C318.43 96.91 271.22 96 256 96 219.55 96 0 100.55 0 208.15v160.23c0 30.27 27.5 57.68 72 77.86v-101.9a24 24 0 1 1 48 0v118.93c33.05 9.11 71.07 15.06 112 16.73V376.39a24 24 0 1 1 48 0V480c40.93-1.67 78.95-7.62 112-16.73V344.34a24 24 0 1 1 48 0v101.9c44.5-20.18 72-47.59 72-77.86V208.15c0-43.32-35.76-69.76-80.66-86.1zM256 272.24c-114.88 0-208-28.69-208-64.09s93.12-64.08 208-64.08c17.15 0 33.73.71 49.68 1.91l-72.81 47a16 16 0 0 0-4.43 22.19l8.87 13.31a16 16 0 0 0 22.19 4.44l118.64-76.52C430.09 168 464 186.84 464 208.15c0 35.4-93.13 64.09-208 64.09z\"],\n    \"drum-steelpan\": [576, 512, [], \"f56a\", \"M288 32C128.94 32 0 89.31 0 160v192c0 70.69 128.94 128 288 128s288-57.31 288-128V160c0-70.69-128.94-128-288-128zm-82.99 158.36c-4.45 16.61-14.54 30.57-28.31 40.48C100.23 217.46 48 190.78 48 160c0-30.16 50.11-56.39 124.04-70.03l25.6 44.34c9.86 17.09 12.48 36.99 7.37 56.05zM288 240c-21.08 0-41.41-1-60.89-2.7 8.06-26.13 32.15-45.3 60.89-45.3s52.83 19.17 60.89 45.3C329.41 239 309.08 240 288 240zm64-144c0 35.29-28.71 64-64 64s-64-28.71-64-64V82.96c20.4-1.88 41.8-2.96 64-2.96s43.6 1.08 64 2.96V96zm46.93 134.9c-13.81-9.91-23.94-23.9-28.4-40.54-5.11-19.06-2.49-38.96 7.38-56.04l25.65-44.42C477.72 103.5 528 129.79 528 160c0 30.83-52.4 57.54-129.07 70.9z\"],\n    \"drumstick-bite\": [512, 512, [], \"f6d7\", \"M462.8 49.57a169.44 169.44 0 0 0-239.5 0C187.82 85 160.13 128 160.13 192v85.83l-40.62 40.59c-9.7 9.69-24 11.07-36.78 6a60.33 60.33 0 0 0-65 98.72C33 438.39 54.24 442.7 73.85 438.21c-4.5 19.6-.18 40.83 15.1 56.1a60.35 60.35 0 0 0 98.8-65c-5.09-12.73-3.72-27 6-36.75L234.36 352h85.89a187.87 187.87 0 0 0 61.89-10c-39.64-43.89-39.83-110.23 1.05-151.07 34.38-34.36 86.76-39.46 128.74-16.8 1.3-44.96-14.81-90.28-49.13-124.56z\"],\n    \"dumbbell\": [640, 512, [], \"f44b\", \"M104 96H56c-13.3 0-24 10.7-24 24v104H8c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h24v104c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24V120c0-13.3-10.7-24-24-24zm528 128h-24V120c0-13.3-10.7-24-24-24h-48c-13.3 0-24 10.7-24 24v272c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24V288h24c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zM456 32h-48c-13.3 0-24 10.7-24 24v168H256V56c0-13.3-10.7-24-24-24h-48c-13.3 0-24 10.7-24 24v400c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24V288h128v168c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24V56c0-13.3-10.7-24-24-24z\"],\n    \"dumpster\": [576, 512, [], \"f793\", \"M560 160c10.4 0 18-9.8 15.5-19.9l-24-96C549.7 37 543.3 32 536 32h-98.9l25.6 128H560zM272 32H171.5l-25.6 128H272V32zm132.5 0H304v128h126.1L404.5 32zM16 160h97.3l25.6-128H40c-7.3 0-13.7 5-15.5 12.1l-24 96C-2 150.2 5.6 160 16 160zm544 64h-20l4-32H32l4 32H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h28l20 160v16c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-16h320v16c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-16l20-160h28c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16z\"],\n    \"dumpster-fire\": [640, 512, [], \"f794\", \"M418.7 104.1l.2-.2-14.4-72H304v128h60.8c16.2-19.3 34.2-38.2 53.9-55.8zM272 32H171.5l-25.6 128H272V32zm189.3 72.1c18.2 16.3 35.5 33.7 51.1 51.5 5.7-5.6 11.4-11.1 17.3-16.3l21.3-19 21.3 19c1.1.9 2.1 2.1 3.1 3.1-.1-.8.2-1.5 0-2.3l-24-96C549.7 37 543.3 32 536 32h-98.9l12.3 61.5 11.9 10.6zM16 160h97.3l25.6-128H40c-7.3 0-13.7 5-15.5 12.1l-24 96C-2 150.2 5.6 160 16 160zm324.6 32H32l4 32H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h28l20 160v16c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-16h208.8c-30.2-33.7-48.8-77.9-48.8-126.4 0-35.9 19.9-82.9 52.6-129.6zm210.5-28.8c-14.9 13.3-28.3 27.2-40.2 41.2-19.5-25.8-43.6-52-71-76.4-70.2 62.7-120 144.3-120 193.6 0 87.5 71.6 158.4 160 158.4s160-70.9 160-158.4c.1-36.6-37-112.2-88.8-158.4zm-18.6 229.4c-14.7 10.7-32.9 17-52.5 17-49 0-88.9-33.5-88.9-88 0-27.1 16.5-51 49.4-91.9 4.7 5.6 67.1 88.1 67.1 88.1l39.8-47c2.8 4.8 5.4 9.5 7.7 14 18.6 36.7 10.8 83.6-22.6 107.8z\"],\n    \"dungeon\": [512, 512, [], \"f6d9\", \"M128.73 195.32l-82.81-51.76c-8.04-5.02-18.99-2.17-22.93 6.45A254.19 254.19 0 0 0 .54 239.28C-.05 248.37 7.59 256 16.69 256h97.13c7.96 0 14.08-6.25 15.01-14.16 1.09-9.33 3.24-18.33 6.24-26.94 2.56-7.34.25-15.46-6.34-19.58zM319.03 8C298.86 2.82 277.77 0 256 0s-42.86 2.82-63.03 8c-9.17 2.35-13.91 12.6-10.39 21.39l37.47 104.03A16.003 16.003 0 0 0 235.1 144h41.8c6.75 0 12.77-4.23 15.05-10.58l37.47-104.03c3.52-8.79-1.22-19.03-10.39-21.39zM112 288H16c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h96c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16zm0 128H16c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h96c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16zm77.31-283.67l-36.32-90.8c-3.53-8.83-14.13-12.99-22.42-8.31a257.308 257.308 0 0 0-71.61 59.89c-6.06 7.32-3.85 18.48 4.22 23.52l82.93 51.83c6.51 4.07 14.66 2.62 20.11-2.79 5.18-5.15 10.79-9.85 16.79-14.05 6.28-4.41 9.15-12.17 6.3-19.29zM398.18 256h97.13c9.1 0 16.74-7.63 16.15-16.72a254.135 254.135 0 0 0-22.45-89.27c-3.94-8.62-14.89-11.47-22.93-6.45l-82.81 51.76c-6.59 4.12-8.9 12.24-6.34 19.58 3.01 8.61 5.15 17.62 6.24 26.94.93 7.91 7.05 14.16 15.01 14.16zm54.85-162.89a257.308 257.308 0 0 0-71.61-59.89c-8.28-4.68-18.88-.52-22.42 8.31l-36.32 90.8c-2.85 7.12.02 14.88 6.3 19.28 6 4.2 11.61 8.9 16.79 14.05 5.44 5.41 13.6 6.86 20.11 2.79l82.93-51.83c8.07-5.03 10.29-16.19 4.22-23.51zM496 288h-96c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h96c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16zm0 128h-96c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h96c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16zM240 177.62V472c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8V177.62c-5.23-.89-10.52-1.62-16-1.62s-10.77.73-16 1.62zm-64 41.51V472c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8V189.36c-12.78 7.45-23.84 17.47-32 29.77zm128-29.77V472c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8V219.13c-8.16-12.3-19.22-22.32-32-29.77z\"],\n    \"edit\": [576, 512, [], \"f044\", \"M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z\"],\n    \"egg\": [384, 512, [], \"f7fb\", \"M192 0C86 0 0 214 0 320s86 192 192 192 192-86 192-192S298 0 192 0z\"],\n    \"eject\": [448, 512, [], \"f052\", \"M448 384v64c0 17.673-14.327 32-32 32H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h384c17.673 0 32 14.327 32 32zM48.053 320h351.886c41.651 0 63.581-49.674 35.383-80.435L259.383 47.558c-19.014-20.743-51.751-20.744-70.767 0L12.67 239.565C-15.475 270.268 6.324 320 48.053 320z\"],\n    \"ellipsis-h\": [512, 512, [], \"f141\", \"M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z\"],\n    \"ellipsis-v\": [192, 512, [], \"f142\", \"M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z\"],\n    \"envelope\": [512, 512, [], \"f0e0\", \"M502.3 190.8c3.9-3.1 9.7-.2 9.7 4.7V400c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V195.6c0-5 5.7-7.8 9.7-4.7 22.4 17.4 52.1 39.5 154.1 113.6 21.1 15.4 56.7 47.8 92.2 47.6 35.7.3 72-32.8 92.3-47.6 102-74.1 131.6-96.3 154-113.7zM256 320c23.2.4 56.6-29.2 73.4-41.4 132.7-96.3 142.8-104.7 173.4-128.7 5.8-4.5 9.2-11.5 9.2-18.9v-19c0-26.5-21.5-48-48-48H48C21.5 64 0 85.5 0 112v19c0 7.4 3.4 14.3 9.2 18.9 30.6 23.9 40.7 32.4 173.4 128.7 16.8 12.2 50.2 41.8 73.4 41.4z\"],\n    \"envelope-open\": [512, 512, [], \"f2b6\", \"M512 464c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V200.724a48 48 0 0 1 18.387-37.776c24.913-19.529 45.501-35.365 164.2-121.511C199.412 29.17 232.797-.347 256 .003c23.198-.354 56.596 29.172 73.413 41.433 118.687 86.137 139.303 101.995 164.2 121.512A48 48 0 0 1 512 200.724V464zm-65.666-196.605c-2.563-3.728-7.7-4.595-11.339-1.907-22.845 16.873-55.462 40.705-105.582 77.079-16.825 12.266-50.21 41.781-73.413 41.43-23.211.344-56.559-29.143-73.413-41.43-50.114-36.37-82.734-60.204-105.582-77.079-3.639-2.688-8.776-1.821-11.339 1.907l-9.072 13.196a7.998 7.998 0 0 0 1.839 10.967c22.887 16.899 55.454 40.69 105.303 76.868 20.274 14.781 56.524 47.813 92.264 47.573 35.724.242 71.961-32.771 92.263-47.573 49.85-36.179 82.418-59.97 105.303-76.868a7.998 7.998 0 0 0 1.839-10.967l-9.071-13.196z\"],\n    \"envelope-open-text\": [512, 512, [], \"f658\", \"M176 216h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16H176c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16zm-16 80c0 8.84 7.16 16 16 16h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16H176c-8.84 0-16 7.16-16 16v16zm96 121.13c-16.42 0-32.84-5.06-46.86-15.19L0 250.86V464c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V250.86L302.86 401.94c-14.02 10.12-30.44 15.19-46.86 15.19zm237.61-254.18c-8.85-6.94-17.24-13.47-29.61-22.81V96c0-26.51-21.49-48-48-48h-77.55c-3.04-2.2-5.87-4.26-9.04-6.56C312.6 29.17 279.2-.35 256 0c-23.2-.35-56.59 29.17-73.41 41.44-3.17 2.3-6 4.36-9.04 6.56H96c-26.51 0-48 21.49-48 48v44.14c-12.37 9.33-20.76 15.87-29.61 22.81A47.995 47.995 0 0 0 0 200.72v10.65l96 69.35V96h320v184.72l96-69.35v-10.65c0-14.74-6.78-28.67-18.39-37.77z\"],\n    \"envelope-square\": [448, 512, [], \"f199\", \"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM178.117 262.104C87.429 196.287 88.353 196.121 64 177.167V152c0-13.255 10.745-24 24-24h272c13.255 0 24 10.745 24 24v25.167c-24.371 18.969-23.434 19.124-114.117 84.938-10.5 7.655-31.392 26.12-45.883 25.894-14.503.218-35.367-18.227-45.883-25.895zM384 217.775V360c0 13.255-10.745 24-24 24H88c-13.255 0-24-10.745-24-24V217.775c13.958 10.794 33.329 25.236 95.303 70.214 14.162 10.341 37.975 32.145 64.694 32.01 26.887.134 51.037-22.041 64.72-32.025 61.958-44.965 81.325-59.406 95.283-70.199z\"],\n    \"equals\": [448, 512, [], \"f52c\", \"M416 304H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32zm0-192H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"],\n    \"eraser\": [512, 512, [], \"f12d\", \"M497.941 273.941c18.745-18.745 18.745-49.137 0-67.882l-160-160c-18.745-18.745-49.136-18.746-67.883 0l-256 256c-18.745 18.745-18.745 49.137 0 67.882l96 96A48.004 48.004 0 0 0 144 480h356c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12H355.883l142.058-142.059zm-302.627-62.627l137.373 137.373L265.373 416H150.628l-80-80 124.686-124.686z\"],\n    \"ethernet\": [512, 512, [], \"f796\", \"M496 192h-48v-48c0-8.8-7.2-16-16-16h-48V80c0-8.8-7.2-16-16-16H144c-8.8 0-16 7.2-16 16v48H80c-8.8 0-16 7.2-16 16v48H16c-8.8 0-16 7.2-16 16v224c0 8.8 7.2 16 16 16h80V320h32v128h64V320h32v128h64V320h32v128h64V320h32v128h80c8.8 0 16-7.2 16-16V208c0-8.8-7.2-16-16-16z\"],\n    \"euro-sign\": [320, 512, [], \"f153\", \"M310.706 413.765c-1.314-6.63-7.835-10.872-14.424-9.369-10.692 2.439-27.422 5.413-45.426 5.413-56.763 0-101.929-34.79-121.461-85.449h113.689a12 12 0 0 0 11.708-9.369l6.373-28.36c1.686-7.502-4.019-14.631-11.708-14.631H115.22c-1.21-14.328-1.414-28.287.137-42.245H261.95a12 12 0 0 0 11.723-9.434l6.512-29.755c1.638-7.484-4.061-14.566-11.723-14.566H130.184c20.633-44.991 62.69-75.03 117.619-75.03 14.486 0 28.564 2.25 37.851 4.145 6.216 1.268 12.347-2.498 14.002-8.623l11.991-44.368c1.822-6.741-2.465-13.616-9.326-14.917C290.217 34.912 270.71 32 249.635 32 152.451 32 74.03 92.252 45.075 176H12c-6.627 0-12 5.373-12 12v29.755c0 6.627 5.373 12 12 12h21.569c-1.009 13.607-1.181 29.287-.181 42.245H12c-6.627 0-12 5.373-12 12v28.36c0 6.627 5.373 12 12 12h30.114C67.139 414.692 145.264 480 249.635 480c26.301 0 48.562-4.544 61.101-7.788 6.167-1.595 10.027-7.708 8.788-13.957l-8.818-44.49z\"],\n    \"exchange-alt\": [512, 512, [], \"f362\", \"M0 168v-16c0-13.255 10.745-24 24-24h360V80c0-21.367 25.899-32.042 40.971-16.971l80 80c9.372 9.373 9.372 24.569 0 33.941l-80 80C409.956 271.982 384 261.456 384 240v-48H24c-13.255 0-24-10.745-24-24zm488 152H128v-48c0-21.314-25.862-32.08-40.971-16.971l-80 80c-9.372 9.373-9.372 24.569 0 33.941l80 80C102.057 463.997 128 453.437 128 432v-48h360c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24z\"],\n    \"exclamation\": [192, 512, [], \"f12a\", \"M176 432c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80zM25.26 25.199l13.6 272C39.499 309.972 50.041 320 62.83 320h66.34c12.789 0 23.331-10.028 23.97-22.801l13.6-272C167.425 11.49 156.496 0 142.77 0H49.23C35.504 0 24.575 11.49 25.26 25.199z\"],\n    \"exclamation-circle\": [512, 512, [], \"f06a\", \"M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"],\n    \"exclamation-triangle\": [576, 512, [], \"f071\", \"M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"],\n    \"expand\": [448, 512, [], \"f065\", \"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"],\n    \"expand-alt\": [448, 512, [], \"f424\", \"M212.686 315.314L120 408l32.922 31.029c15.12 15.12 4.412 40.971-16.97 40.971h-112C10.697 480 0 469.255 0 456V344c0-21.382 25.803-32.09 40.922-16.971L72 360l92.686-92.686c6.248-6.248 16.379-6.248 22.627 0l25.373 25.373c6.249 6.248 6.249 16.378 0 22.627zm22.628-118.628L328 104l-32.922-31.029C279.958 57.851 290.666 32 312.048 32h112C437.303 32 448 42.745 448 56v112c0 21.382-25.803 32.09-40.922 16.971L376 152l-92.686 92.686c-6.248 6.248-16.379 6.248-22.627 0l-25.373-25.373c-6.249-6.248-6.249-16.378 0-22.627z\"],\n    \"expand-arrows-alt\": [448, 512, [], \"f31e\", \"M448 344v112a23.94 23.94 0 0 1-24 24H312c-21.39 0-32.09-25.9-17-41l36.2-36.2L224 295.6 116.77 402.9 153 439c15.09 15.1 4.39 41-17 41H24a23.94 23.94 0 0 1-24-24V344c0-21.4 25.89-32.1 41-17l36.19 36.2L184.46 256 77.18 148.7 41 185c-15.1 15.1-41 4.4-41-17V56a23.94 23.94 0 0 1 24-24h112c21.39 0 32.09 25.9 17 41l-36.2 36.2L224 216.4l107.23-107.3L295 73c-15.09-15.1-4.39-41 17-41h112a23.94 23.94 0 0 1 24 24v112c0 21.4-25.89 32.1-41 17l-36.19-36.2L263.54 256l107.28 107.3L407 327.1c15.1-15.2 41-4.5 41 16.9z\"],\n    \"external-link-alt\": [512, 512, [], \"f35d\", \"M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z\"],\n    \"external-link-square-alt\": [448, 512, [], \"f360\", \"M448 80v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48zm-88 16H248.029c-21.313 0-32.08 25.861-16.971 40.971l31.984 31.987L67.515 364.485c-4.686 4.686-4.686 12.284 0 16.971l31.029 31.029c4.687 4.686 12.285 4.686 16.971 0l195.526-195.526 31.988 31.991C358.058 263.977 384 253.425 384 231.979V120c0-13.255-10.745-24-24-24z\"],\n    \"eye\": [576, 512, [], \"f06e\", \"M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z\"],\n    \"eye-dropper\": [512, 512, [], \"f1fb\", \"M50.75 333.25c-12 12-18.75 28.28-18.75 45.26V424L0 480l32 32 56-32h45.49c16.97 0 33.25-6.74 45.25-18.74l126.64-126.62-128-128L50.75 333.25zM483.88 28.12c-37.47-37.5-98.28-37.5-135.75 0l-77.09 77.09-13.1-13.1c-9.44-9.44-24.65-9.31-33.94 0l-40.97 40.97c-9.37 9.37-9.37 24.57 0 33.94l161.94 161.94c9.44 9.44 24.65 9.31 33.94 0L419.88 288c9.37-9.37 9.37-24.57 0-33.94l-13.1-13.1 77.09-77.09c37.51-37.48 37.51-98.26.01-135.75z\"],\n    \"eye-slash\": [640, 512, [], \"f070\", \"M320 400c-75.85 0-137.25-58.71-142.9-133.11L72.2 185.82c-13.79 17.3-26.48 35.59-36.72 55.59a32.35 32.35 0 0 0 0 29.19C89.71 376.41 197.07 448 320 448c26.91 0 52.87-4 77.89-10.46L346 397.39a144.13 144.13 0 0 1-26 2.61zm313.82 58.1l-110.55-85.44a331.25 331.25 0 0 0 81.25-102.07 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64a308.15 308.15 0 0 0-147.32 37.7L45.46 3.37A16 16 0 0 0 23 6.18L3.37 31.45A16 16 0 0 0 6.18 53.9l588.36 454.73a16 16 0 0 0 22.46-2.81l19.64-25.27a16 16 0 0 0-2.82-22.45zm-183.72-142l-39.3-30.38A94.75 94.75 0 0 0 416 256a94.76 94.76 0 0 0-121.31-92.21A47.65 47.65 0 0 1 304 192a46.64 46.64 0 0 1-1.54 10l-73.61-56.89A142.31 142.31 0 0 1 320 112a143.92 143.92 0 0 1 144 144c0 21.63-5.29 41.79-13.9 60.11z\"],\n    \"fan\": [512, 512, [], \"f863\", \"M352.57 128c-28.09 0-54.09 4.52-77.06 12.86l12.41-123.11C289 7.31 279.81-1.18 269.33.13 189.63 10.13 128 77.64 128 159.43c0 28.09 4.52 54.09 12.86 77.06L17.75 224.08C7.31 223-1.18 232.19.13 242.67c10 79.7 77.51 141.33 159.3 141.33 28.09 0 54.09-4.52 77.06-12.86l-12.41 123.11c-1.05 10.43 8.11 18.93 18.59 17.62 79.7-10 141.33-77.51 141.33-159.3 0-28.09-4.52-54.09-12.86-77.06l123.11 12.41c10.44 1.05 18.93-8.11 17.62-18.59-10-79.7-77.51-141.33-159.3-141.33zM256 288a32 32 0 1 1 32-32 32 32 0 0 1-32 32z\"],\n    \"fast-backward\": [512, 512, [], \"f049\", \"M0 436V76c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v151.9L235.5 71.4C256.1 54.3 288 68.6 288 96v131.9L459.5 71.4C480.1 54.3 512 68.6 512 96v320c0 27.4-31.9 41.7-52.5 24.6L288 285.3V416c0 27.4-31.9 41.7-52.5 24.6L64 285.3V436c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12z\"],\n    \"fast-forward\": [512, 512, [], \"f050\", \"M512 76v360c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12V284.1L276.5 440.6c-20.6 17.2-52.5 2.8-52.5-24.6V284.1L52.5 440.6C31.9 457.8 0 443.4 0 416V96c0-27.4 31.9-41.7 52.5-24.6L224 226.8V96c0-27.4 31.9-41.7 52.5-24.6L448 226.8V76c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12z\"],\n    \"faucet\": [512, 512, [], \"e005\", \"M352,256H313.39c-15.71-13.44-35.46-23.07-57.39-28V180.44l-32-3.38-32,3.38V228c-21.93,5-41.68,14.6-57.39,28H16A16,16,0,0,0,0,272v96a16,16,0,0,0,16,16h92.79C129.38,421.73,173,448,224,448s94.62-26.27,115.21-64H352a32,32,0,0,1,32,32,32,32,0,0,0,32,32h64a32,32,0,0,0,32-32A160,160,0,0,0,352,256ZM81.59,159.91l142.41-15,142.41,15c9.42,1,17.59-6.81,17.59-16.8V112.89c0-10-8.17-17.8-17.59-16.81L256,107.74V80a16,16,0,0,0-16-16H208a16,16,0,0,0-16,16v27.74L81.59,96.08C72.17,95.09,64,102.9,64,112.89v30.22C64,153.1,72.17,160.91,81.59,159.91Z\"],\n    \"fax\": [512, 512, [], \"f1ac\", \"M480 160V77.25a32 32 0 0 0-9.38-22.63L425.37 9.37A32 32 0 0 0 402.75 0H160a32 32 0 0 0-32 32v448a32 32 0 0 0 32 32h320a32 32 0 0 0 32-32V192a32 32 0 0 0-32-32zM288 432a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16zm0-128a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16zm128 128a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16zm0-128a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16zm0-112H192V64h160v48a16 16 0 0 0 16 16h48zM64 128H32a32 32 0 0 0-32 32v320a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32V160a32 32 0 0 0-32-32z\"],\n    \"feather\": [512, 512, [], \"f52d\", \"M467.14 44.84c-62.55-62.48-161.67-64.78-252.28 25.73-78.61 78.52-60.98 60.92-85.75 85.66-60.46 60.39-70.39 150.83-63.64 211.17l178.44-178.25c6.26-6.25 16.4-6.25 22.65 0s6.25 16.38 0 22.63L7.04 471.03c-9.38 9.37-9.38 24.57 0 33.94 9.38 9.37 24.6 9.37 33.98 0l66.1-66.03C159.42 454.65 279 457.11 353.95 384h-98.19l147.57-49.14c49.99-49.93 36.38-36.18 46.31-46.86h-97.78l131.54-43.8c45.44-74.46 34.31-148.84-16.26-199.36z\"],\n    \"feather-alt\": [512, 512, [], \"f56b\", \"M512 0C460.22 3.56 96.44 38.2 71.01 287.61c-3.09 26.66-4.84 53.44-5.99 80.24l178.87-178.69c6.25-6.25 16.4-6.25 22.65 0s6.25 16.38 0 22.63L7.04 471.03c-9.38 9.37-9.38 24.57 0 33.94 9.38 9.37 24.59 9.37 33.98 0l57.13-57.07c42.09-.14 84.15-2.53 125.96-7.36 53.48-5.44 97.02-26.47 132.58-56.54H255.74l146.79-48.88c11.25-14.89 21.37-30.71 30.45-47.12h-81.14l106.54-53.21C500.29 132.86 510.19 26.26 512 0z\"],\n    \"female\": [256, 512, [], \"f182\", \"M128 0c35.346 0 64 28.654 64 64s-28.654 64-64 64c-35.346 0-64-28.654-64-64S92.654 0 128 0m119.283 354.179l-48-192A24 24 0 0 0 176 144h-11.36c-22.711 10.443-49.59 10.894-73.28 0H80a24 24 0 0 0-23.283 18.179l-48 192C4.935 369.305 16.383 384 32 384h56v104c0 13.255 10.745 24 24 24h32c13.255 0 24-10.745 24-24V384h56c15.591 0 27.071-14.671 23.283-29.821z\"],\n    \"fighter-jet\": [640, 512, [], \"f0fb\", \"M544 224l-128-16-48-16h-24L227.158 44h39.509C278.333 44 288 41.375 288 38s-9.667-6-21.333-6H152v12h16v164h-48l-66.667-80H18.667L8 138.667V208h8v16h48v2.666l-64 8v42.667l64 8V288H16v16H8v69.333L18.667 384h34.667L120 304h48v164h-16v12h114.667c11.667 0 21.333-2.625 21.333-6s-9.667-6-21.333-6h-39.509L344 320h24l48-16 128-16c96-21.333 96-26.583 96-32 0-5.417 0-10.667-96-32z\"],\n    \"file\": [384, 512, [], \"f15b\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm160-14.1v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"],\n    \"file-alt\": [384, 512, [], \"f15c\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm64 236c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12v8zm0-64c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12v8zm0-72v8c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm96-114.1v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"],\n    \"file-archive\": [384, 512, [], \"f1c6\", \"M377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zM128.4 336c-17.9 0-32.4 12.1-32.4 27 0 15 14.6 27 32.5 27s32.4-12.1 32.4-27-14.6-27-32.5-27zM224 136V0h-63.6v32h-32V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zM95.9 32h32v32h-32zm32.3 384c-33.2 0-58-30.4-51.4-62.9L96.4 256v-32h32v-32h-32v-32h32v-32h-32V96h32V64h32v32h-32v32h32v32h-32v32h32v32h-32v32h22.1c5.7 0 10.7 4.1 11.8 9.7l17.3 87.7c6.4 32.4-18.4 62.6-51.4 62.6z\"],\n    \"file-audio\": [384, 512, [], \"f1c7\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm-64 268c0 10.7-12.9 16-20.5 8.5L104 376H76c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h28l35.5-36.5c7.6-7.6 20.5-2.2 20.5 8.5v136zm33.2-47.6c9.1-9.3 9.1-24.1 0-33.4-22.1-22.8 12.2-56.2 34.4-33.5 27.2 27.9 27.2 72.4 0 100.4-21.8 22.3-56.9-10.4-34.4-33.5zm86-117.1c54.4 55.9 54.4 144.8 0 200.8-21.8 22.4-57-10.3-34.4-33.5 36.2-37.2 36.3-96.5 0-133.8-22.1-22.8 12.3-56.3 34.4-33.5zM384 121.9v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"],\n    \"file-code\": [384, 512, [], \"f1c9\", \"M384 121.941V128H256V0h6.059c6.365 0 12.47 2.529 16.971 7.029l97.941 97.941A24.005 24.005 0 0 1 384 121.941zM248 160c-13.2 0-24-10.8-24-24V0H24C10.745 0 0 10.745 0 24v464c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V160H248zM123.206 400.505a5.4 5.4 0 0 1-7.633.246l-64.866-60.812a5.4 5.4 0 0 1 0-7.879l64.866-60.812a5.4 5.4 0 0 1 7.633.246l19.579 20.885a5.4 5.4 0 0 1-.372 7.747L101.65 336l40.763 35.874a5.4 5.4 0 0 1 .372 7.747l-19.579 20.884zm51.295 50.479l-27.453-7.97a5.402 5.402 0 0 1-3.681-6.692l61.44-211.626a5.402 5.402 0 0 1 6.692-3.681l27.452 7.97a5.4 5.4 0 0 1 3.68 6.692l-61.44 211.626a5.397 5.397 0 0 1-6.69 3.681zm160.792-111.045l-64.866 60.812a5.4 5.4 0 0 1-7.633-.246l-19.58-20.885a5.4 5.4 0 0 1 .372-7.747L284.35 336l-40.763-35.874a5.4 5.4 0 0 1-.372-7.747l19.58-20.885a5.4 5.4 0 0 1 7.633-.246l64.866 60.812a5.4 5.4 0 0 1-.001 7.879z\"],\n    \"file-contract\": [384, 512, [], \"f56c\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zM64 72c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8V72zm0 64c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-16zm192.81 248H304c8.84 0 16 7.16 16 16s-7.16 16-16 16h-47.19c-16.45 0-31.27-9.14-38.64-23.86-2.95-5.92-8.09-6.52-10.17-6.52s-7.22.59-10.02 6.19l-7.67 15.34a15.986 15.986 0 0 1-14.31 8.84c-.38 0-.75-.02-1.14-.05-6.45-.45-12-4.75-14.03-10.89L144 354.59l-10.61 31.88c-5.89 17.66-22.38 29.53-41 29.53H80c-8.84 0-16-7.16-16-16s7.16-16 16-16h12.39c4.83 0 9.11-3.08 10.64-7.66l18.19-54.64c3.3-9.81 12.44-16.41 22.78-16.41s19.48 6.59 22.77 16.41l13.88 41.64c19.77-16.19 54.05-9.7 66 14.16 2.02 4.06 5.96 6.5 10.16 6.5zM377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9z\"],\n    \"file-csv\": [384, 512, [], \"f6dd\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm-96 144c0 4.42-3.58 8-8 8h-8c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h8c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8h-8c-26.51 0-48-21.49-48-48v-32c0-26.51 21.49-48 48-48h8c4.42 0 8 3.58 8 8v16zm44.27 104H160c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h12.27c5.95 0 10.41-3.5 10.41-6.62 0-1.3-.75-2.66-2.12-3.84l-21.89-18.77c-8.47-7.22-13.33-17.48-13.33-28.14 0-21.3 19.02-38.62 42.41-38.62H200c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8h-12.27c-5.95 0-10.41 3.5-10.41 6.62 0 1.3.75 2.66 2.12 3.84l21.89 18.77c8.47 7.22 13.33 17.48 13.33 28.14.01 21.29-19 38.62-42.39 38.62zM256 264v20.8c0 20.27 5.7 40.17 16 56.88 10.3-16.7 16-36.61 16-56.88V264c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v20.8c0 35.48-12.88 68.89-36.28 94.09-3.02 3.25-7.27 5.11-11.72 5.11s-8.7-1.86-11.72-5.11c-23.4-25.2-36.28-58.61-36.28-94.09V264c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8zm121-159L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9z\"],\n    \"file-download\": [384, 512, [], \"f56d\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm76.45 211.36l-96.42 95.7c-6.65 6.61-17.39 6.61-24.04 0l-96.42-95.7C73.42 337.29 80.54 320 94.82 320H160v-80c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v80h65.18c14.28 0 21.4 17.29 11.27 27.36zM377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9z\"],\n    \"file-excel\": [384, 512, [], \"f1c3\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm60.1 106.5L224 336l60.1 93.5c5.1 8-.6 18.5-10.1 18.5h-34.9c-4.4 0-8.5-2.4-10.6-6.3C208.9 405.5 192 373 192 373c-6.4 14.8-10 20-36.6 68.8-2.1 3.9-6.1 6.3-10.5 6.3H110c-9.5 0-15.2-10.5-10.1-18.5l60.3-93.5-60.3-93.5c-5.2-8 .6-18.5 10.1-18.5h34.8c4.4 0 8.5 2.4 10.6 6.3 26.1 48.8 20 33.6 36.6 68.5 0 0 6.1-11.7 36.6-68.5 2.1-3.9 6.2-6.3 10.6-6.3H274c9.5-.1 15.2 10.4 10.1 18.4zM384 121.9v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"],\n    \"file-export\": [576, 512, [], \"f56e\", \"M384 121.9c0-6.3-2.5-12.4-7-16.9L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128zM571 308l-95.7-96.4c-10.1-10.1-27.4-3-27.4 11.3V288h-64v64h64v65.2c0 14.3 17.3 21.4 27.4 11.3L571 332c6.6-6.6 6.6-17.4 0-24zm-379 28v-32c0-8.8 7.2-16 16-16h176V160H248c-13.2 0-24-10.8-24-24V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V352H208c-8.8 0-16-7.2-16-16z\"],\n    \"file-image\": [384, 512, [], \"f1c5\", \"M384 121.941V128H256V0h6.059a24 24 0 0 1 16.97 7.029l97.941 97.941a24.002 24.002 0 0 1 7.03 16.971zM248 160c-13.2 0-24-10.8-24-24V0H24C10.745 0 0 10.745 0 24v464c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V160H248zm-135.455 16c26.51 0 48 21.49 48 48s-21.49 48-48 48-48-21.49-48-48 21.491-48 48-48zm208 240h-256l.485-48.485L104.545 328c4.686-4.686 11.799-4.201 16.485.485L160.545 368 264.06 264.485c4.686-4.686 12.284-4.686 16.971 0L320.545 304v112z\"],\n    \"file-import\": [512, 512, [], \"f56f\", \"M16 288c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h112v-64zm489-183L407.1 7c-4.5-4.5-10.6-7-17-7H384v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-153 31V0H152c-13.3 0-24 10.7-24 24v264h128v-65.2c0-14.3 17.3-21.4 27.4-11.3L379 308c6.6 6.7 6.6 17.4 0 24l-95.7 96.4c-10.1 10.1-27.4 3-27.4-11.3V352H128v136c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H376c-13.2 0-24-10.8-24-24z\"],\n    \"file-invoice\": [384, 512, [], \"f570\", \"M288 256H96v64h192v-64zm89-151L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-153 31V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zM64 72c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8V72zm0 64c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-16zm256 304c0 4.42-3.58 8-8 8h-80c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16zm0-200v96c0 8.84-7.16 16-16 16H80c-8.84 0-16-7.16-16-16v-96c0-8.84 7.16-16 16-16h224c8.84 0 16 7.16 16 16z\"],\n    \"file-invoice-dollar\": [384, 512, [], \"f571\", \"M377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-153 31V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zM64 72c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8V72zm0 80v-16c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8zm144 263.88V440c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-24.29c-11.29-.58-22.27-4.52-31.37-11.35-3.9-2.93-4.1-8.77-.57-12.14l11.75-11.21c2.77-2.64 6.89-2.76 10.13-.73 3.87 2.42 8.26 3.72 12.82 3.72h28.11c6.5 0 11.8-5.92 11.8-13.19 0-5.95-3.61-11.19-8.77-12.73l-45-13.5c-18.59-5.58-31.58-23.42-31.58-43.39 0-24.52 19.05-44.44 42.67-45.07V232c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v24.29c11.29.58 22.27 4.51 31.37 11.35 3.9 2.93 4.1 8.77.57 12.14l-11.75 11.21c-2.77 2.64-6.89 2.76-10.13.73-3.87-2.43-8.26-3.72-12.82-3.72h-28.11c-6.5 0-11.8 5.92-11.8 13.19 0 5.95 3.61 11.19 8.77 12.73l45 13.5c18.59 5.58 31.58 23.42 31.58 43.39 0 24.53-19.05 44.44-42.67 45.07z\"],\n    \"file-medical\": [384, 512, [], \"f477\", \"M377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-153 31V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm64 160v48c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8z\"],\n    \"file-medical-alt\": [448, 512, [], \"f478\", \"M288 136V0H88C74.7 0 64 10.7 64 24v232H8c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h140.9c3 0 5.8 1.7 7.2 4.4l19.9 39.8 56.8-113.7c2.9-5.9 11.4-5.9 14.3 0l34.7 69.5H352c8.8 0 16 7.2 16 16s-7.2 16-16 16h-89.9L240 275.8l-56.8 113.7c-2.9 5.9-11.4 5.9-14.3 0L134.1 320H64v168c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H312c-13.2 0-24-10.8-24-24zm153-31L343.1 7c-4.5-4.5-10.6-7-17-7H320v128h128v-6.1c0-6.3-2.5-12.4-7-16.9z\"],\n    \"file-pdf\": [384, 512, [], \"f1c1\", \"M181.9 256.1c-5-16-4.9-46.9-2-46.9 8.4 0 7.6 36.9 2 46.9zm-1.7 47.2c-7.7 20.2-17.3 43.3-28.4 62.7 18.3-7 39-17.2 62.9-21.9-12.7-9.6-24.9-23.4-34.5-40.8zM86.1 428.1c0 .8 13.2-5.4 34.9-40.2-6.7 6.3-29.1 24.5-34.9 40.2zM248 160h136v328c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V24C0 10.7 10.7 0 24 0h200v136c0 13.2 10.8 24 24 24zm-8 171.8c-20-12.2-33.3-29-42.7-53.8 4.5-18.5 11.6-46.6 6.2-64.2-4.7-29.4-42.4-26.5-47.8-6.8-5 18.3-.4 44.1 8.1 77-11.6 27.6-28.7 64.6-40.8 85.8-.1 0-.1.1-.2.1-27.1 13.9-73.6 44.5-54.5 68 5.6 6.9 16 10 21.5 10 17.9 0 35.7-18 61.1-61.8 25.8-8.5 54.1-19.1 79-23.2 21.7 11.8 47.1 19.5 64 19.5 29.2 0 31.2-32 19.7-43.4-13.9-13.6-54.3-9.7-73.6-7.2zM377 105L279 7c-4.5-4.5-10.6-7-17-7h-6v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-74.1 255.3c4.1-2.7-2.5-11.9-42.8-9 37.1 15.8 42.8 9 42.8 9z\"],\n    \"file-powerpoint\": [384, 512, [], \"f1c4\", \"M193.7 271.2c8.8 0 15.5 2.7 20.3 8.1 9.6 10.9 9.8 32.7-.2 44.1-4.9 5.6-11.9 8.5-21.1 8.5h-26.9v-60.7h27.9zM377 105L279 7c-4.5-4.5-10.6-7-17-7h-6v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-153 31V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm53 165.2c0 90.3-88.8 77.6-111.1 77.6V436c0 6.6-5.4 12-12 12h-30.8c-6.6 0-12-5.4-12-12V236.2c0-6.6 5.4-12 12-12h81c44.5 0 72.9 32.8 72.9 77z\"],\n    \"file-prescription\": [384, 512, [], \"f572\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm68.53 179.48l11.31 11.31c6.25 6.25 6.25 16.38 0 22.63l-29.9 29.9L304 409.38c6.25 6.25 6.25 16.38 0 22.63l-11.31 11.31c-6.25 6.25-16.38 6.25-22.63 0L240 413.25l-30.06 30.06c-6.25 6.25-16.38 6.25-22.63 0L176 432c-6.25-6.25-6.25-16.38 0-22.63l30.06-30.06L146.74 320H128v48c0 8.84-7.16 16-16 16H96c-8.84 0-16-7.16-16-16V208c0-8.84 7.16-16 16-16h80c35.35 0 64 28.65 64 64 0 24.22-13.62 45.05-33.46 55.92L240 345.38l29.9-29.9c6.25-6.25 16.38-6.25 22.63 0zM176 272h-48v-32h48c8.82 0 16 7.18 16 16s-7.18 16-16 16zm208-150.1v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"],\n    \"file-signature\": [576, 512, [], \"f573\", \"M218.17 424.14c-2.95-5.92-8.09-6.52-10.17-6.52s-7.22.59-10.02 6.19l-7.67 15.34c-6.37 12.78-25.03 11.37-29.48-2.09L144 386.59l-10.61 31.88c-5.89 17.66-22.38 29.53-41 29.53H80c-8.84 0-16-7.16-16-16s7.16-16 16-16h12.39c4.83 0 9.11-3.08 10.64-7.66l18.19-54.64c3.3-9.81 12.44-16.41 22.78-16.41s19.48 6.59 22.77 16.41l13.88 41.64c19.75-16.19 54.06-9.7 66 14.16 1.89 3.78 5.49 5.95 9.36 6.26v-82.12l128-127.09V160H248c-13.2 0-24-10.8-24-24V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24v-40l-128-.11c-16.12-.31-30.58-9.28-37.83-23.75zM384 121.9c0-6.3-2.5-12.4-7-16.9L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1zm-96 225.06V416h68.99l161.68-162.78-67.88-67.88L288 346.96zm280.54-179.63l-31.87-31.87c-9.94-9.94-26.07-9.94-36.01 0l-27.25 27.25 67.88 67.88 27.25-27.25c9.95-9.94 9.95-26.07 0-36.01z\"],\n    \"file-upload\": [384, 512, [], \"f574\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm65.18 216.01H224v80c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-80H94.82c-14.28 0-21.41-17.29-11.27-27.36l96.42-95.7c6.65-6.61 17.39-6.61 24.04 0l96.42 95.7c10.15 10.07 3.03 27.36-11.25 27.36zM377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9z\"],\n    \"file-video\": [384, 512, [], \"f1c8\", \"M384 121.941V128H256V0h6.059c6.365 0 12.47 2.529 16.971 7.029l97.941 97.941A24.005 24.005 0 0 1 384 121.941zM224 136V0H24C10.745 0 0 10.745 0 24v464c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V160H248c-13.2 0-24-10.8-24-24zm96 144.016v111.963c0 21.445-25.943 31.998-40.971 16.971L224 353.941V392c0 13.255-10.745 24-24 24H88c-13.255 0-24-10.745-24-24V280c0-13.255 10.745-24 24-24h112c13.255 0 24 10.745 24 24v38.059l55.029-55.013c15.011-15.01 40.971-4.491 40.971 16.97z\"],\n    \"file-word\": [384, 512, [], \"f1c2\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm57.1 120H305c7.7 0 13.4 7.1 11.7 14.7l-38 168c-1.2 5.5-6.1 9.3-11.7 9.3h-38c-5.5 0-10.3-3.8-11.6-9.1-25.8-103.5-20.8-81.2-25.6-110.5h-.5c-1.1 14.3-2.4 17.4-25.6 110.5-1.3 5.3-6.1 9.1-11.6 9.1H117c-5.6 0-10.5-3.9-11.7-9.4l-37.8-168c-1.7-7.5 4-14.6 11.7-14.6h24.5c5.7 0 10.7 4 11.8 9.7 15.6 78 20.1 109.5 21 122.2 1.6-10.2 7.3-32.7 29.4-122.7 1.3-5.4 6.1-9.1 11.7-9.1h29.1c5.6 0 10.4 3.8 11.7 9.2 24 100.4 28.8 124 29.6 129.4-.2-11.2-2.6-17.8 21.6-129.2 1-5.6 5.9-9.5 11.5-9.5zM384 121.9v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"],\n    \"fill\": [512, 512, [], \"f575\", \"M502.63 217.06L294.94 9.37C288.69 3.12 280.5 0 272.31 0s-16.38 3.12-22.62 9.37l-81.58 81.58L81.93 4.77c-6.24-6.25-16.38-6.25-22.62 0L36.69 27.38c-6.24 6.25-6.24 16.38 0 22.63l86.19 86.18-94.76 94.76c-37.49 37.49-37.49 98.26 0 135.75l117.19 117.19c18.75 18.74 43.31 28.12 67.87 28.12 24.57 0 49.13-9.37 67.88-28.12l221.57-221.57c12.49-12.5 12.49-32.76 0-45.26zm-116.22 70.97H65.93c1.36-3.84 3.57-7.98 7.43-11.83l13.15-13.15 81.61-81.61 58.61 58.6c12.49 12.49 32.75 12.49 45.24 0 12.49-12.49 12.49-32.75 0-45.24l-58.61-58.6 58.95-58.95 162.45 162.44-48.35 48.34z\"],\n    \"fill-drip\": [576, 512, [], \"f576\", \"M512 320s-64 92.65-64 128c0 35.35 28.66 64 64 64s64-28.65 64-64-64-128-64-128zm-9.37-102.94L294.94 9.37C288.69 3.12 280.5 0 272.31 0s-16.38 3.12-22.62 9.37l-81.58 81.58L81.93 4.76c-6.25-6.25-16.38-6.25-22.62 0L36.69 27.38c-6.24 6.25-6.24 16.38 0 22.62l86.19 86.18-94.76 94.76c-37.49 37.48-37.49 98.26 0 135.75l117.19 117.19c18.74 18.74 43.31 28.12 67.87 28.12 24.57 0 49.13-9.37 67.87-28.12l221.57-221.57c12.5-12.5 12.5-32.75.01-45.25zm-116.22 70.97H65.93c1.36-3.84 3.57-7.98 7.43-11.83l13.15-13.15 81.61-81.61 58.6 58.6c12.49 12.49 32.75 12.49 45.24 0s12.49-32.75 0-45.24l-58.6-58.6 58.95-58.95 162.44 162.44-48.34 48.34z\"],\n    \"film\": [512, 512, [], \"f008\", \"M488 64h-8v20c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12V64H96v20c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12V64h-8C10.7 64 0 74.7 0 88v336c0 13.3 10.7 24 24 24h8v-20c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v20h320v-20c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v20h8c13.3 0 24-10.7 24-24V88c0-13.3-10.7-24-24-24zM96 372c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm272 208c0 6.6-5.4 12-12 12H156c-6.6 0-12-5.4-12-12v-96c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v96zm0-168c0 6.6-5.4 12-12 12H156c-6.6 0-12-5.4-12-12v-96c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v96zm112 152c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40z\"],\n    \"filter\": [512, 512, [], \"f0b0\", \"M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z\"],\n    \"fingerprint\": [512, 512, [], \"f577\", \"M256.12 245.96c-13.25 0-24 10.74-24 24 1.14 72.25-8.14 141.9-27.7 211.55-2.73 9.72 2.15 30.49 23.12 30.49 10.48 0 20.11-6.92 23.09-17.52 13.53-47.91 31.04-125.41 29.48-224.52.01-13.25-10.73-24-23.99-24zm-.86-81.73C194 164.16 151.25 211.3 152.1 265.32c.75 47.94-3.75 95.91-13.37 142.55-2.69 12.98 5.67 25.69 18.64 28.36 13.05 2.67 25.67-5.66 28.36-18.64 10.34-50.09 15.17-101.58 14.37-153.02-.41-25.95 19.92-52.49 54.45-52.34 31.31.47 57.15 25.34 57.62 55.47.77 48.05-2.81 96.33-10.61 143.55-2.17 13.06 6.69 25.42 19.76 27.58 19.97 3.33 26.81-15.1 27.58-19.77 8.28-50.03 12.06-101.21 11.27-152.11-.88-55.8-47.94-101.88-104.91-102.72zm-110.69-19.78c-10.3-8.34-25.37-6.8-33.76 3.48-25.62 31.5-39.39 71.28-38.75 112 .59 37.58-2.47 75.27-9.11 112.05-2.34 13.05 6.31 25.53 19.36 27.89 20.11 3.5 27.07-14.81 27.89-19.36 7.19-39.84 10.5-80.66 9.86-121.33-.47-29.88 9.2-57.88 28-80.97 8.35-10.28 6.79-25.39-3.49-33.76zm109.47-62.33c-15.41-.41-30.87 1.44-45.78 4.97-12.89 3.06-20.87 15.98-17.83 28.89 3.06 12.89 16 20.83 28.89 17.83 11.05-2.61 22.47-3.77 34-3.69 75.43 1.13 137.73 61.5 138.88 134.58.59 37.88-1.28 76.11-5.58 113.63-1.5 13.17 7.95 25.08 21.11 26.58 16.72 1.95 25.51-11.88 26.58-21.11a929.06 929.06 0 0 0 5.89-119.85c-1.56-98.75-85.07-180.33-186.16-181.83zm252.07 121.45c-2.86-12.92-15.51-21.2-28.61-18.27-12.94 2.86-21.12 15.66-18.26 28.61 4.71 21.41 4.91 37.41 4.7 61.6-.11 13.27 10.55 24.09 23.8 24.2h.2c13.17 0 23.89-10.61 24-23.8.18-22.18.4-44.11-5.83-72.34zm-40.12-90.72C417.29 43.46 337.6 1.29 252.81.02 183.02-.82 118.47 24.91 70.46 72.94 24.09 119.37-.9 181.04.14 246.65l-.12 21.47c-.39 13.25 10.03 24.31 23.28 24.69.23.02.48.02.72.02 12.92 0 23.59-10.3 23.97-23.3l.16-23.64c-.83-52.5 19.16-101.86 56.28-139 38.76-38.8 91.34-59.67 147.68-58.86 69.45 1.03 134.73 35.56 174.62 92.39 7.61 10.86 22.56 13.45 33.42 5.86 10.84-7.62 13.46-22.59 5.84-33.43z\"],\n    \"fire\": [384, 512, [], \"f06d\", \"M216 23.86c0-23.8-30.65-32.77-44.15-13.04C48 191.85 224 200 224 288c0 35.63-29.11 64.46-64.85 63.99-35.17-.45-63.15-29.77-63.15-64.94v-85.51c0-21.7-26.47-32.23-41.43-16.5C27.8 213.16 0 261.33 0 320c0 105.87 86.13 192 192 192s192-86.13 192-192c0-170.29-168-193-168-296.14z\"],\n    \"fire-alt\": [448, 512, [], \"f7e4\", \"M323.56 51.2c-20.8 19.3-39.58 39.59-56.22 59.97C240.08 73.62 206.28 35.53 168 0 69.74 91.17 0 209.96 0 281.6 0 408.85 100.29 512 224 512s224-103.15 224-230.4c0-53.27-51.98-163.14-124.44-230.4zm-19.47 340.65C282.43 407.01 255.72 416 226.86 416 154.71 416 96 368.26 96 290.75c0-38.61 24.31-72.63 72.79-130.75 6.93 7.98 98.83 125.34 98.83 125.34l58.63-66.88c4.14 6.85 7.91 13.55 11.27 19.97 27.35 52.19 15.81 118.97-33.43 153.42z\"],\n    \"fire-extinguisher\": [448, 512, [], \"f134\", \"M434.027 26.329l-168 28C254.693 56.218 256 67.8 256 72h-58.332C208.353 36.108 181.446 0 144 0c-39.435 0-66.368 39.676-52.228 76.203-52.039 13.051-75.381 54.213-90.049 90.884-4.923 12.307 1.063 26.274 13.37 31.197 12.317 4.926 26.279-1.075 31.196-13.37C75.058 112.99 106.964 120 168 120v27.076c-41.543 10.862-72 49.235-72 94.129V488c0 13.255 10.745 24 24 24h144c13.255 0 24-10.745 24-24V240c0-44.731-30.596-82.312-72-92.97V120h40c0 2.974-1.703 15.716 10.027 17.671l168 28C441.342 166.89 448 161.25 448 153.834V38.166c0-7.416-6.658-13.056-13.973-11.837zM144 72c-8.822 0-16-7.178-16-16s7.178-16 16-16 16 7.178 16 16-7.178 16-16 16z\"],\n    \"first-aid\": [576, 512, [], \"f479\", \"M0 80v352c0 26.5 21.5 48 48 48h48V32H48C21.5 32 0 53.5 0 80zm128 400h320V32H128v448zm64-248c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8v48c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48zM528 32h-48v448h48c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z\"],\n    \"fish\": [576, 512, [], \"f578\", \"M327.1 96c-89.97 0-168.54 54.77-212.27 101.63L27.5 131.58c-12.13-9.18-30.24.6-27.14 14.66L24.54 256 .35 365.77c-3.1 14.06 15.01 23.83 27.14 14.66l87.33-66.05C158.55 361.23 237.13 416 327.1 416 464.56 416 576 288 576 256S464.56 96 327.1 96zm87.43 184c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24 13.26 0 24 10.74 24 24 0 13.25-10.75 24-24 24z\"],\n    \"fist-raised\": [384, 512, [], \"f6de\", \"M255.98 160V16c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v146.93c5.02-1.78 10.34-2.93 15.97-2.93h48.03zm128 95.99c-.01-35.34-28.66-63.99-63.99-63.99H207.85c-8.78 0-15.9 7.07-15.9 15.85v.56c0 26.27 21.3 47.59 47.57 47.59h35.26c9.68 0 13.2 3.58 13.2 8v16.2c0 4.29-3.59 7.78-7.88 8-44.52 2.28-64.16 24.71-96.05 72.55l-6.31 9.47a7.994 7.994 0 0 1-11.09 2.22l-13.31-8.88a7.994 7.994 0 0 1-2.22-11.09l6.31-9.47c15.73-23.6 30.2-43.26 47.31-58.08-17.27-5.51-31.4-18.12-38.87-34.45-6.59 3.41-13.96 5.52-21.87 5.52h-32c-12.34 0-23.49-4.81-32-12.48C71.48 251.19 60.33 256 48 256H16c-5.64 0-10.97-1.15-16-2.95v77.93c0 33.95 13.48 66.5 37.49 90.51L63.99 448v64h255.98v-63.96l35.91-35.92A96.035 96.035 0 0 0 384 344.21l-.02-88.22zm-32.01-90.09V48c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v112h32c11.28 0 21.94 2.31 32 5.9zM16 224h32c8.84 0 16-7.16 16-16V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v128c0 8.84 7.16 16 16 16zm95.99 0h32c8.84 0 16-7.16 16-16V48c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v160c0 8.84 7.16 16 16 16z\"],\n    \"flag\": [512, 512, [], \"f024\", \"M349.565 98.783C295.978 98.783 251.721 64 184.348 64c-24.955 0-47.309 4.384-68.045 12.013a55.947 55.947 0 0 0 3.586-23.562C118.117 24.015 94.806 1.206 66.338.048 34.345-1.254 8 24.296 8 56c0 19.026 9.497 35.825 24 45.945V488c0 13.255 10.745 24 24 24h16c13.255 0 24-10.745 24-24v-94.4c28.311-12.064 63.582-22.122 114.435-22.122 53.588 0 97.844 34.783 165.217 34.783 48.169 0 86.667-16.294 122.505-40.858C506.84 359.452 512 349.571 512 339.045v-243.1c0-23.393-24.269-38.87-45.485-29.016-34.338 15.948-76.454 31.854-116.95 31.854z\"],\n    \"flag-checkered\": [512, 512, [], \"f11e\", \"M243.2 189.9V258c26.1 5.9 49.3 15.6 73.6 22.3v-68.2c-26-5.8-49.4-15.5-73.6-22.2zm223.3-123c-34.3 15.9-76.5 31.9-117 31.9C296 98.8 251.7 64 184.3 64c-25 0-47.3 4.4-68 12 2.8-7.3 4.1-15.2 3.6-23.6C118.1 24 94.8 1.2 66.3 0 34.3-1.3 8 24.3 8 56c0 19 9.5 35.8 24 45.9V488c0 13.3 10.7 24 24 24h16c13.3 0 24-10.7 24-24v-94.4c28.3-12.1 63.6-22.1 114.4-22.1 53.6 0 97.8 34.8 165.2 34.8 48.2 0 86.7-16.3 122.5-40.9 8.7-6 13.8-15.8 13.8-26.4V95.9c.1-23.3-24.2-38.8-45.4-29zM169.6 325.5c-25.8 2.7-50 8.2-73.6 16.6v-70.5c26.2-9.3 47.5-15 73.6-17.4zM464 191c-23.6 9.8-46.3 19.5-73.6 23.9V286c24.8-3.4 51.4-11.8 73.6-26v70.5c-25.1 16.1-48.5 24.7-73.6 27.1V286c-27 3.7-47.9 1.5-73.6-5.6v67.4c-23.9-7.4-47.3-16.7-73.6-21.3V258c-19.7-4.4-40.8-6.8-73.6-3.8v-70c-22.4 3.1-44.6 10.2-73.6 20.9v-70.5c33.2-12.2 50.1-19.8 73.6-22v71.6c27-3.7 48.4-1.3 73.6 5.7v-67.4c23.7 7.4 47.2 16.7 73.6 21.3v68.4c23.7 5.3 47.6 6.9 73.6 2.7V143c27-4.8 52.3-13.6 73.6-22.5z\"],\n    \"flag-usa\": [512, 512, [], \"f74d\", \"M32 0C14.3 0 0 14.3 0 32v464c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V32C64 14.3 49.7 0 32 0zm267.9 303.6c-57.2-15.1-111.7-28.8-203.9 11.1V384c185.7-92.2 221.7 53.3 397.5-23.1 11.4-5 18.5-16.5 18.5-28.8v-36c-43.6 17.3-80.2 24.1-112.1 24.1-37.4-.1-68.9-8.4-100-16.6zm0-96c-57.2-15.1-111.7-28.8-203.9 11.1v61.5c94.8-37.6 154.6-22.7 212.1-7.6 57.2 15.1 111.7 28.8 203.9-11.1V200c-43.6 17.3-80.2 24.1-112.1 24.1-37.4 0-68.9-8.3-100-16.5zm9.5-125.9c51.8 15.6 97.4 29 202.6-20.1V30.8c0-25.1-26.8-38.1-49.4-26.6C291.3 91.5 305.4-62.2 96 32.4v151.9c94.8-37.5 154.6-22.7 212.1-7.6 57.2 15 111.7 28.7 203.9-11.1V96.7c-53.6 23.5-93.3 31.4-126.1 31.4s-59-7.8-85.7-15.9c-4-1.2-8.1-2.4-12.1-3.5V75.5c7.2 2 14.3 4.1 21.3 6.2zM160 128.1c-8.8 0-16-7.1-16-16 0-8.8 7.2-16 16-16s16 7.1 16 16-7.2 16-16 16zm0-55.8c-8.8 0-16-7.1-16-16 0-8.8 7.2-16 16-16s16 7.1 16 16c0 8.8-7.2 16-16 16zm64 47.9c-8.8 0-16-7.1-16-16 0-8.8 7.2-16 16-16s16 7.1 16 16c0 8.8-7.2 16-16 16zm0-55.9c-8.8 0-16-7.1-16-16 0-8.8 7.2-16 16-16s16 7.1 16 16c0 8.8-7.2 16-16 16z\"],\n    \"flask\": [448, 512, [], \"f0c3\", \"M437.2 403.5L320 215V64h8c13.3 0 24-10.7 24-24V24c0-13.3-10.7-24-24-24H120c-13.3 0-24 10.7-24 24v16c0 13.3 10.7 24 24 24h8v151L10.8 403.5C-18.5 450.6 15.3 512 70.9 512h306.2c55.7 0 89.4-61.5 60.1-108.5zM137.9 320l48.2-77.6c3.7-5.2 5.8-11.6 5.8-18.4V64h64v160c0 6.9 2.2 13.2 5.8 18.4l48.2 77.6h-172z\"],\n    \"flushed\": [496, 512, [], \"f579\", \"M344 200c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zm-192 0c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zM248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM80 224c0-39.8 32.2-72 72-72s72 32.2 72 72-32.2 72-72 72-72-32.2-72-72zm232 176H184c-21.2 0-21.2-32 0-32h128c21.2 0 21.2 32 0 32zm32-104c-39.8 0-72-32.2-72-72s32.2-72 72-72 72 32.2 72 72-32.2 72-72 72z\"],\n    \"folder\": [512, 512, [], \"f07b\", \"M464 128H272l-64-64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48z\"],\n    \"folder-minus\": [512, 512, [], \"f65d\", \"M464 128H272l-64-64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48zm-96 168c0 8.84-7.16 16-16 16H160c-8.84 0-16-7.16-16-16v-16c0-8.84 7.16-16 16-16h192c8.84 0 16 7.16 16 16v16z\"],\n    \"folder-open\": [576, 512, [], \"f07c\", \"M572.694 292.093L500.27 416.248A63.997 63.997 0 0 1 444.989 448H45.025c-18.523 0-30.064-20.093-20.731-36.093l72.424-124.155A64 64 0 0 1 152 256h399.964c18.523 0 30.064 20.093 20.73 36.093zM152 224h328v-48c0-26.51-21.49-48-48-48H272l-64-64H48C21.49 64 0 85.49 0 112v278.046l69.077-118.418C86.214 242.25 117.989 224 152 224z\"],\n    \"folder-plus\": [512, 512, [], \"f65e\", \"M464,128H272L208,64H48A48,48,0,0,0,0,112V400a48,48,0,0,0,48,48H464a48,48,0,0,0,48-48V176A48,48,0,0,0,464,128ZM359.5,296a16,16,0,0,1-16,16h-64v64a16,16,0,0,1-16,16h-16a16,16,0,0,1-16-16V312h-64a16,16,0,0,1-16-16V280a16,16,0,0,1,16-16h64V200a16,16,0,0,1,16-16h16a16,16,0,0,1,16,16v64h64a16,16,0,0,1,16,16Z\"],\n    \"font\": [448, 512, [], \"f031\", \"M432 416h-23.41L277.88 53.69A32 32 0 0 0 247.58 32h-47.16a32 32 0 0 0-30.3 21.69L39.41 416H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-19.58l23.3-64h152.56l23.3 64H304a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM176.85 272L224 142.51 271.15 272z\"],\n    \"font-awesome-logo-full\": [3992, 512, [\"Font Awesome\"], \"f4e6\", \"M454.6 0H57.4C25.9 0 0 25.9 0 57.4v397.3C0 486.1 25.9 512 57.4 512h397.3c31.4 0 57.4-25.9 57.4-57.4V57.4C512 25.9 486.1 0 454.6 0zm-58.9 324.9c0 4.8-4.1 6.9-8.9 8.9-19.2 8.1-39.7 15.7-61.5 15.7-40.5 0-68.7-44.8-163.2 2.5v51.8c0 30.3-45.7 30.2-45.7 0v-250c-9-7-15-17.9-15-30.3 0-21 17.1-38.2 38.2-38.2 21 0 38.2 17.1 38.2 38.2 0 12.2-5.8 23.2-14.9 30.2v21c37.1-12 65.5-34.4 146.1-3.4 26.6 11.4 68.7-15.7 76.5-15.7 5.5 0 10.3 4.1 10.3 8.9v160.4zm432.9-174.2h-137v70.1H825c39.8 0 40.4 62.2 0 62.2H691.6v105.6c0 45.5-70.7 46.4-70.7 0V128.3c0-22 18-39.8 39.8-39.8h167.8c39.6 0 40.5 62.2.1 62.2zm191.1 23.4c-169.3 0-169.1 252.4 0 252.4 169.9 0 169.9-252.4 0-252.4zm0 196.1c-81.6 0-82.1-139.8 0-139.8 82.5 0 82.4 139.8 0 139.8zm372.4 53.4c-17.5 0-31.4-13.9-31.4-31.4v-117c0-62.4-72.6-52.5-99.1-16.4v133.4c0 41.5-63.3 41.8-63.3 0V208c0-40 63.1-41.6 63.1 0v3.4c43.3-51.6 162.4-60.4 162.4 39.3v141.5c.3 30.4-31.5 31.4-31.7 31.4zm179.7 2.9c-44.3 0-68.3-22.9-68.3-65.8V235.2H1488c-35.6 0-36.7-55.3 0-55.3h15.5v-37.3c0-41.3 63.8-42.1 63.8 0v37.5h24.9c35.4 0 35.7 55.3 0 55.3h-24.9v108.5c0 29.6 26.1 26.3 27.4 26.3 31.4 0 52.6 56.3-22.9 56.3zM1992 123c-19.5-50.2-95.5-50-114.5 0-107.3 275.7-99.5 252.7-99.5 262.8 0 42.8 58.3 51.2 72.1 14.4l13.5-35.9H2006l13 35.9c14.2 37.7 72.1 27.2 72.1-14.4 0-10.1 5.3 6.8-99.1-262.8zm-108.9 179.1l51.7-142.9 51.8 142.9h-103.5zm591.3-85.6l-53.7 176.3c-12.4 41.2-72 41-84 0l-42.3-135.9-42.3 135.9c-12.4 40.9-72 41.2-84.5 0l-54.2-176.3c-12.5-39.4 49.8-56.1 60.2-16.9L2213 342l45.3-139.5c10.9-32.7 59.6-34.7 71.2 0l45.3 139.5 39.3-142.4c10.3-38.3 72.6-23.8 60.3 16.9zm275.4 75.1c0-42.4-33.9-117.5-119.5-117.5-73.2 0-124.4 56.3-124.4 126 0 77.2 55.3 126.4 128.5 126.4 31.7 0 93-11.5 93-39.8 0-18.3-21.1-31.5-39.3-22.4-49.4 26.2-109 8.4-115.9-43.8h148.3c16.3 0 29.3-13.4 29.3-28.9zM2571 277.7c9.5-73.4 113.9-68.6 118.6 0H2571zm316.7 148.8c-31.4 0-81.6-10.5-96.6-31.9-12.4-17 2.5-39.8 21.8-39.8 16.3 0 36.8 22.9 77.7 22.9 27.4 0 40.4-11 40.4-25.8 0-39.8-142.9-7.4-142.9-102 0-40.4 35.3-75.7 98.6-75.7 31.4 0 74.1 9.9 87.6 29.4 10.8 14.8-1.4 36.2-20.9 36.2-15.1 0-26.7-17.3-66.2-17.3-22.9 0-37.8 10.5-37.8 23.8 0 35.9 142.4 6 142.4 103.1-.1 43.7-37.4 77.1-104.1 77.1zm266.8-252.4c-169.3 0-169.1 252.4 0 252.4 170.1 0 169.6-252.4 0-252.4zm0 196.1c-81.8 0-82-139.8 0-139.8 82.5 0 82.4 139.8 0 139.8zm476.9 22V268.7c0-53.8-61.4-45.8-85.7-10.5v134c0 41.3-63.8 42.1-63.8 0V268.7c0-52.1-59.5-47.4-85.7-10.1v133.6c0 41.5-63.3 41.8-63.3 0V208c0-40 63.1-41.6 63.1 0v3.4c9.9-14.4 41.8-37.3 78.6-37.3 35.3 0 57.7 16.4 66.7 43.8 13.9-21.8 45.8-43.8 82.6-43.8 44.3 0 70.7 23.4 70.7 72.7v145.3c.5 17.3-13.5 31.4-31.9 31.4 3.5.1-31.3 1.1-31.3-31.3zM3992 291.6c0-42.4-32.4-117.5-117.9-117.5-73.2 0-127.5 56.3-127.5 126 0 77.2 58.3 126.4 131.6 126.4 31.7 0 91.5-11.5 91.5-39.8 0-18.3-21.1-31.5-39.3-22.4-49.4 26.2-110.5 8.4-117.5-43.8h149.8c16.3 0 29.1-13.4 29.3-28.9zm-180.5-13.9c9.7-74.4 115.9-68.3 120.1 0h-120.1z\"],\n    \"football-ball\": [496, 512, [], \"f44e\", \"M481.5 60.3c-4.8-18.2-19.1-32.5-37.3-37.4C420.3 16.5 383 8.9 339.4 8L496 164.8c-.8-43.5-8.2-80.6-14.5-104.5zm-467 391.4c4.8 18.2 19.1 32.5 37.3 37.4 23.9 6.4 61.2 14 104.8 14.9L0 347.2c.8 43.5 8.2 80.6 14.5 104.5zM4.2 283.4L220.4 500c132.5-19.4 248.8-118.7 271.5-271.4L275.6 12C143.1 31.4 26.8 130.7 4.2 283.4zm317.3-123.6c3.1-3.1 8.2-3.1 11.3 0l11.3 11.3c3.1 3.1 3.1 8.2 0 11.3l-28.3 28.3 28.3 28.3c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-28.3-28.3-22.6 22.7 28.3 28.3c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0L248 278.6l-22.6 22.6 28.3 28.3c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-28.3-28.3-28.3 28.3c-3.1 3.1-8.2 3.1-11.3 0l-11.3-11.3c-3.1-3.1-3.1-8.2 0-11.3l28.3-28.3-28.3-28.2c-3.1-3.1-3.1-8.2 0-11.3l11.3-11.3c3.1-3.1 8.2-3.1 11.3 0l28.3 28.3 22.6-22.6-28.3-28.3c-3.1-3.1-3.1-8.2 0-11.3l11.3-11.3c3.1-3.1 8.2-3.1 11.3 0l28.3 28.3 22.6-22.6-28.3-28.3c-3.1-3.1-3.1-8.2 0-11.3l11.3-11.3c3.1-3.1 8.2-3.1 11.3 0l28.3 28.3 28.3-28.5z\"],\n    \"forward\": [512, 512, [], \"f04e\", \"M500.5 231.4l-192-160C287.9 54.3 256 68.6 256 96v320c0 27.4 31.9 41.8 52.5 24.6l192-160c15.3-12.8 15.3-36.4 0-49.2zm-256 0l-192-160C31.9 54.3 0 68.6 0 96v320c0 27.4 31.9 41.8 52.5 24.6l192-160c15.3-12.8 15.3-36.4 0-49.2z\"],\n    \"frog\": [576, 512, [], \"f52e\", \"M446.53 97.43C439.67 60.23 407.19 32 368 32c-39.23 0-71.72 28.29-78.54 65.54C126.75 112.96-.5 250.12 0 416.98.11 451.9 29.08 480 64 480h304c8.84 0 16-7.16 16-16 0-17.67-14.33-32-32-32h-79.49l35.8-48.33c24.14-36.23 10.35-88.28-33.71-106.6-23.89-9.93-51.55-4.65-72.24 10.88l-32.76 24.59c-7.06 5.31-17.09 3.91-22.41-3.19-5.3-7.08-3.88-17.11 3.19-22.41l34.78-26.09c36.84-27.66 88.28-27.62 125.13 0 10.87 8.15 45.87 39.06 40.8 93.21L469.62 480H560c8.84 0 16-7.16 16-16 0-17.67-14.33-32-32-32h-53.63l-98.52-104.68 154.44-86.65A58.16 58.16 0 0 0 576 189.94c0-21.4-11.72-40.95-30.48-51.23-40.56-22.22-98.99-41.28-98.99-41.28zM368 136c-13.26 0-24-10.75-24-24 0-13.26 10.74-24 24-24 13.25 0 24 10.74 24 24 0 13.25-10.75 24-24 24z\"],\n    \"frown\": [496, 512, [], \"f119\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm80 168c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm-160 0c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm170.2 218.2C315.8 367.4 282.9 352 248 352s-67.8 15.4-90.2 42.2c-13.5 16.3-38.1-4.2-24.6-20.5C161.7 339.6 203.6 320 248 320s86.3 19.6 114.7 53.8c13.6 16.2-11 36.7-24.5 20.4z\"],\n    \"frown-open\": [496, 512, [], \"f57a\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM136 208c0-17.7 14.3-32 32-32s32 14.3 32 32-14.3 32-32 32-32-14.3-32-32zm187.3 183.3c-31.2-9.6-59.4-15.3-75.3-15.3s-44.1 5.7-75.3 15.3c-11.5 3.5-22.5-6.3-20.5-18.1 7-40 60.1-61.2 95.8-61.2s88.8 21.3 95.8 61.2c2 11.9-9.1 21.6-20.5 18.1zM328 240c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"funnel-dollar\": [640, 512, [], \"f662\", \"M433.46 165.94l101.2-111.87C554.61 34.12 540.48 0 512.26 0H31.74C3.52 0-10.61 34.12 9.34 54.07L192 256v155.92c0 12.59 5.93 24.44 16 32l79.99 60c20.86 15.64 48.47 6.97 59.22-13.57C310.8 455.38 288 406.35 288 352c0-89.79 62.05-165.17 145.46-186.06zM480 192c-88.37 0-160 71.63-160 160s71.63 160 160 160 160-71.63 160-160-71.63-160-160-160zm16 239.88V448c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-16.29c-11.29-.58-22.27-4.52-31.37-11.35-3.9-2.93-4.1-8.77-.57-12.14l11.75-11.21c2.77-2.64 6.89-2.76 10.13-.73 3.87 2.42 8.26 3.72 12.82 3.72h28.11c6.5 0 11.8-5.92 11.8-13.19 0-5.95-3.61-11.19-8.77-12.73l-45-13.5c-18.59-5.58-31.58-23.42-31.58-43.39 0-24.52 19.05-44.44 42.67-45.07V256c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v16.29c11.29.58 22.27 4.51 31.37 11.35 3.9 2.93 4.1 8.77.57 12.14l-11.75 11.21c-2.77 2.64-6.89 2.76-10.13.73-3.87-2.43-8.26-3.72-12.82-3.72h-28.11c-6.5 0-11.8 5.92-11.8 13.19 0 5.95 3.61 11.19 8.77 12.73l45 13.5c18.59 5.58 31.58 23.42 31.58 43.39 0 24.53-19.04 44.44-42.67 45.07z\"],\n    \"futbol\": [512, 512, [], \"f1e3\", \"M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zm-48 0l-.003-.282-26.064 22.741-62.679-58.5 16.454-84.355 34.303 3.072c-24.889-34.216-60.004-60.089-100.709-73.141l13.651 31.939L256 139l-74.953-41.525 13.651-31.939c-40.631 13.028-75.78 38.87-100.709 73.141l34.565-3.073 16.192 84.355-62.678 58.5-26.064-22.741-.003.282c0 43.015 13.497 83.952 38.472 117.991l7.704-33.897 85.138 10.447 36.301 77.826-29.902 17.786c40.202 13.122 84.29 13.148 124.572 0l-29.902-17.786 36.301-77.826 85.138-10.447 7.704 33.897C442.503 339.952 456 299.015 456 256zm-248.102 69.571l-29.894-91.312L256 177.732l77.996 56.527-29.622 91.312h-96.476z\"],\n    \"gamepad\": [640, 512, [], \"f11b\", \"M480.07 96H160a160 160 0 1 0 114.24 272h91.52A160 160 0 1 0 480.07 96zM248 268a12 12 0 0 1-12 12h-52v52a12 12 0 0 1-12 12h-24a12 12 0 0 1-12-12v-52H84a12 12 0 0 1-12-12v-24a12 12 0 0 1 12-12h52v-52a12 12 0 0 1 12-12h24a12 12 0 0 1 12 12v52h52a12 12 0 0 1 12 12zm216 76a40 40 0 1 1 40-40 40 40 0 0 1-40 40zm64-96a40 40 0 1 1 40-40 40 40 0 0 1-40 40z\"],\n    \"gas-pump\": [512, 512, [], \"f52f\", \"M336 448H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h320c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm157.2-340.7l-81-81c-6.2-6.2-16.4-6.2-22.6 0l-11.3 11.3c-6.2 6.2-6.2 16.4 0 22.6L416 97.9V160c0 28.1 20.9 51.3 48 55.2V376c0 13.2-10.8 24-24 24s-24-10.8-24-24v-32c0-48.6-39.4-88-88-88h-8V64c0-35.3-28.7-64-64-64H96C60.7 0 32 28.7 32 64v352h288V304h8c22.1 0 40 17.9 40 40v27.8c0 37.7 27 72 64.5 75.9 43 4.3 79.5-29.5 79.5-71.7V152.6c0-17-6.8-33.3-18.8-45.3zM256 192H96V64h160v128z\"],\n    \"gavel\": [512, 512, [], \"f0e3\", \"M504.971 199.362l-22.627-22.627c-9.373-9.373-24.569-9.373-33.941 0l-5.657 5.657L329.608 69.255l5.657-5.657c9.373-9.373 9.373-24.569 0-33.941L312.638 7.029c-9.373-9.373-24.569-9.373-33.941 0L154.246 131.48c-9.373 9.373-9.373 24.569 0 33.941l22.627 22.627c9.373 9.373 24.569 9.373 33.941 0l5.657-5.657 39.598 39.598-81.04 81.04-5.657-5.657c-12.497-12.497-32.758-12.497-45.255 0L9.373 412.118c-12.497 12.497-12.497 32.758 0 45.255l45.255 45.255c12.497 12.497 32.758 12.497 45.255 0l114.745-114.745c12.497-12.497 12.497-32.758 0-45.255l-5.657-5.657 81.04-81.04 39.598 39.598-5.657 5.657c-9.373 9.373-9.373 24.569 0 33.941l22.627 22.627c9.373 9.373 24.569 9.373 33.941 0l124.451-124.451c9.372-9.372 9.372-24.568 0-33.941z\"],\n    \"gem\": [576, 512, [], \"f3a5\", \"M485.5 0L576 160H474.9L405.7 0h79.8zm-128 0l69.2 160H149.3L218.5 0h139zm-267 0h79.8l-69.2 160H0L90.5 0zM0 192h100.7l123 251.7c1.5 3.1-2.7 5.9-5 3.3L0 192zm148.2 0h279.6l-137 318.2c-1 2.4-4.5 2.4-5.5 0L148.2 192zm204.1 251.7l123-251.7H576L357.3 446.9c-2.3 2.7-6.5-.1-5-3.2z\"],\n    \"genderless\": [288, 512, [], \"f22d\", \"M144 176c44.1 0 80 35.9 80 80s-35.9 80-80 80-80-35.9-80-80 35.9-80 80-80m0-64C64.5 112 0 176.5 0 256s64.5 144 144 144 144-64.5 144-144-64.5-144-144-144z\"],\n    \"ghost\": [384, 512, [], \"f6e2\", \"M186.1.09C81.01 3.24 0 94.92 0 200.05v263.92c0 14.26 17.23 21.39 27.31 11.31l24.92-18.53c6.66-4.95 16-3.99 21.51 2.21l42.95 48.35c6.25 6.25 16.38 6.25 22.63 0l40.72-45.85c6.37-7.17 17.56-7.17 23.92 0l40.72 45.85c6.25 6.25 16.38 6.25 22.63 0l42.95-48.35c5.51-6.2 14.85-7.17 21.51-2.21l24.92 18.53c10.08 10.08 27.31 2.94 27.31-11.31V192C384 84 294.83-3.17 186.1.09zM128 224c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm128 0c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"gift\": [512, 512, [], \"f06b\", \"M32 448c0 17.7 14.3 32 32 32h160V320H32v128zm256 32h160c17.7 0 32-14.3 32-32V320H288v160zm192-320h-42.1c6.2-12.1 10.1-25.5 10.1-40 0-48.5-39.5-88-88-88-41.6 0-68.5 21.3-103 68.3-34.5-47-61.4-68.3-103-68.3-48.5 0-88 39.5-88 88 0 14.5 3.8 27.9 10.1 40H32c-17.7 0-32 14.3-32 32v80c0 8.8 7.2 16 16 16h480c8.8 0 16-7.2 16-16v-80c0-17.7-14.3-32-32-32zm-326.1 0c-22.1 0-40-17.9-40-40s17.9-40 40-40c19.9 0 34.6 3.3 86.1 80h-86.1zm206.1 0h-86.1c51.4-76.5 65.7-80 86.1-80 22.1 0 40 17.9 40 40s-17.9 40-40 40z\"],\n    \"gifts\": [640, 512, [], \"f79c\", \"M240.6 194.1c1.9-30.8 17.3-61.2 44-79.8C279.4 103.5 268.7 96 256 96h-29.4l30.7-22c7.2-5.1 8.9-15.1 3.7-22.3l-9.3-13c-5.1-7.2-15.1-8.9-22.3-3.7l-32 22.9 11.5-30.6c3.1-8.3-1.1-17.5-9.4-20.6l-15-5.6c-8.3-3.1-17.5 1.1-20.6 9.4l-19.9 53-19.9-53.1C121 2.1 111.8-2.1 103.5 1l-15 5.6C80.2 9.7 76 19 79.2 27.2l11.5 30.6L58.6 35c-7.2-5.1-17.2-3.5-22.3 3.7l-9.3 13c-5.1 7.2-3.5 17.2 3.7 22.3l30.7 22H32c-17.7 0-32 14.3-32 32v352c0 17.7 14.3 32 32 32h168.9c-5.5-9.5-8.9-20.3-8.9-32V256c0-29.9 20.8-55 48.6-61.9zM224 480c0 17.7 14.3 32 32 32h160V384H224v96zm224 32h160c17.7 0 32-14.3 32-32v-96H448v128zm160-288h-20.4c2.6-7.6 4.4-15.5 4.4-23.8 0-35.5-27-72.2-72.1-72.2-48.1 0-75.9 47.7-87.9 75.3-12.1-27.6-39.9-75.3-87.9-75.3-45.1 0-72.1 36.7-72.1 72.2 0 8.3 1.7 16.2 4.4 23.8H256c-17.7 0-32 14.3-32 32v96h192V224h15.3l.7-.2.7.2H448v128h192v-96c0-17.7-14.3-32-32-32zm-272 0c-2.7-1.4-5.1-3-7.2-4.8-7.3-6.4-8.8-13.8-8.8-19 0-9.7 6.4-24.2 24.1-24.2 18.7 0 35.6 27.4 44.5 48H336zm199.2-4.8c-2.1 1.8-4.5 3.4-7.2 4.8h-52.6c8.8-20.3 25.8-48 44.5-48 17.7 0 24.1 14.5 24.1 24.2 0 5.2-1.5 12.6-8.8 19z\"],\n    \"glass-cheers\": [640, 512, [], \"f79f\", \"M639.4 433.6c-8.4-20.4-31.8-30.1-52.2-21.6l-22.1 9.2-38.7-101.9c47.9-35 64.8-100.3 34.5-152.8L474.3 16c-8-13.9-25.1-19.7-40-13.6L320 49.8 205.7 2.4c-14.9-6.2-32-.3-40 13.6L79.1 166.5C48.9 219 65.7 284.3 113.6 319.2L74.9 421.1l-22.1-9.2c-20.4-8.5-43.7 1.2-52.2 21.6-1.7 4.1.2 8.8 4.3 10.5l162.3 67.4c4.1 1.7 8.7-.2 10.4-4.3 8.4-20.4-1.2-43.8-21.6-52.3l-22.1-9.2L173.3 342c4.4.5 8.8 1.3 13.1 1.3 51.7 0 99.4-33.1 113.4-85.3l20.2-75.4 20.2 75.4c14 52.2 61.7 85.3 113.4 85.3 4.3 0 8.7-.8 13.1-1.3L506 445.6l-22.1 9.2c-20.4 8.5-30.1 31.9-21.6 52.3 1.7 4.1 6.4 6 10.4 4.3L635.1 444c4-1.7 6-6.3 4.3-10.4zM275.9 162.1l-112.1-46.5 36.5-63.4 94.5 39.2-18.9 70.7zm88.2 0l-18.9-70.7 94.5-39.2 36.5 63.4-112.1 46.5z\"],\n    \"glass-martini\": [512, 512, [], \"f000\", \"M502.05 57.6C523.3 36.34 508.25 0 478.2 0H33.8C3.75 0-11.3 36.34 9.95 57.6L224 271.64V464h-56c-22.09 0-40 17.91-40 40 0 4.42 3.58 8 8 8h240c4.42 0 8-3.58 8-8 0-22.09-17.91-40-40-40h-56V271.64L502.05 57.6z\"],\n    \"glass-martini-alt\": [512, 512, [], \"f57b\", \"M502.05 57.6C523.3 36.34 508.25 0 478.2 0H33.8C3.75 0-11.3 36.34 9.95 57.6L224 271.64V464h-56c-22.09 0-40 17.91-40 40 0 4.42 3.58 8 8 8h240c4.42 0 8-3.58 8-8 0-22.09-17.91-40-40-40h-56V271.64L502.05 57.6zM443.77 48l-48 48H116.24l-48-48h375.53z\"],\n    \"glass-whiskey\": [512, 512, [], \"f7a0\", \"M480 32H32C12.5 32-2.4 49.2.3 68.5l56 356.5c4.5 31.5 31.5 54.9 63.4 54.9h273c31.8 0 58.9-23.4 63.4-54.9l55.6-356.5C514.4 49.2 499.5 32 480 32zm-37.4 64l-30 192h-313L69.4 96h373.2z\"],\n    \"glasses\": [576, 512, [], \"f530\", \"M574.1 280.37L528.75 98.66c-5.91-23.7-21.59-44.05-43-55.81-21.44-11.73-46.97-14.11-70.19-6.33l-15.25 5.08c-8.39 2.79-12.92 11.86-10.12 20.24l5.06 15.18c2.79 8.38 11.85 12.91 20.23 10.12l13.18-4.39c10.87-3.62 23-3.57 33.16 1.73 10.29 5.37 17.57 14.56 20.37 25.82l38.46 153.82c-22.19-6.81-49.79-12.46-81.2-12.46-34.77 0-73.98 7.02-114.85 26.74h-73.18c-40.87-19.74-80.08-26.75-114.86-26.75-31.42 0-59.02 5.65-81.21 12.46l38.46-153.83c2.79-11.25 10.09-20.45 20.38-25.81 10.16-5.3 22.28-5.35 33.15-1.73l13.17 4.39c8.38 2.79 17.44-1.74 20.23-10.12l5.06-15.18c2.8-8.38-1.73-17.45-10.12-20.24l-15.25-5.08c-23.22-7.78-48.75-5.41-70.19 6.33-21.41 11.77-37.09 32.11-43 55.8L1.9 280.37A64.218 64.218 0 0 0 0 295.86v70.25C0 429.01 51.58 480 115.2 480h37.12c60.28 0 110.37-45.94 114.88-105.37l2.93-38.63h35.75l2.93 38.63C313.31 434.06 363.4 480 423.68 480h37.12c63.62 0 115.2-50.99 115.2-113.88v-70.25c0-5.23-.64-10.43-1.9-15.5zm-370.72 89.42c-1.97 25.91-24.4 46.21-51.06 46.21H115.2C86.97 416 64 393.62 64 366.11v-37.54c18.12-6.49 43.42-12.92 72.58-12.92 23.86 0 47.26 4.33 69.93 12.92l-3.13 41.22zM512 366.12c0 27.51-22.97 49.88-51.2 49.88h-37.12c-26.67 0-49.1-20.3-51.06-46.21l-3.13-41.22c22.67-8.59 46.08-12.92 69.95-12.92 29.12 0 54.43 6.44 72.55 12.93v37.54z\"],\n    \"globe\": [496, 512, [], \"f0ac\", \"M336.5 160C322 70.7 287.8 8 248 8s-74 62.7-88.5 152h177zM152 256c0 22.2 1.2 43.5 3.3 64h185.3c2.1-20.5 3.3-41.8 3.3-64s-1.2-43.5-3.3-64H155.3c-2.1 20.5-3.3 41.8-3.3 64zm324.7-96c-28.6-67.9-86.5-120.4-158-141.6 24.4 33.8 41.2 84.7 50 141.6h108zM177.2 18.4C105.8 39.6 47.8 92.1 19.3 160h108c8.7-56.9 25.5-107.8 49.9-141.6zM487.4 192H372.7c2.1 21 3.3 42.5 3.3 64s-1.2 43-3.3 64h114.6c5.5-20.5 8.6-41.8 8.6-64s-3.1-43.5-8.5-64zM120 256c0-21.5 1.2-43 3.3-64H8.6C3.2 212.5 0 233.8 0 256s3.2 43.5 8.6 64h114.6c-2-21-3.2-42.5-3.2-64zm39.5 96c14.5 89.3 48.7 152 88.5 152s74-62.7 88.5-152h-177zm159.3 141.6c71.4-21.2 129.4-73.7 158-141.6h-108c-8.8 56.9-25.6 107.8-50 141.6zM19.3 352c28.6 67.9 86.5 120.4 158 141.6-24.4-33.8-41.2-84.7-50-141.6h-108z\"],\n    \"globe-africa\": [496, 512, [], \"f57c\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm160 215.5v6.93c0 5.87-3.32 11.24-8.57 13.86l-15.39 7.7a15.485 15.485 0 0 1-15.53-.97l-18.21-12.14a15.52 15.52 0 0 0-13.5-1.81l-2.65.88c-9.7 3.23-13.66 14.79-7.99 23.3l13.24 19.86c2.87 4.31 7.71 6.9 12.89 6.9h8.21c8.56 0 15.5 6.94 15.5 15.5v11.34c0 3.35-1.09 6.62-3.1 9.3l-18.74 24.98c-1.42 1.9-2.39 4.1-2.83 6.43l-4.3 22.83c-.62 3.29-2.29 6.29-4.76 8.56a159.608 159.608 0 0 0-25 29.16l-13.03 19.55a27.756 27.756 0 0 1-23.09 12.36c-10.51 0-20.12-5.94-24.82-15.34a78.902 78.902 0 0 1-8.33-35.29V367.5c0-8.56-6.94-15.5-15.5-15.5h-25.88c-14.49 0-28.38-5.76-38.63-16a54.659 54.659 0 0 1-16-38.63v-14.06c0-17.19 8.1-33.38 21.85-43.7l27.58-20.69a54.663 54.663 0 0 1 32.78-10.93h.89c8.48 0 16.85 1.97 24.43 5.77l14.72 7.36c3.68 1.84 7.93 2.14 11.83.84l47.31-15.77c6.33-2.11 10.6-8.03 10.6-14.7 0-8.56-6.94-15.5-15.5-15.5h-10.09c-4.11 0-8.05-1.63-10.96-4.54l-6.92-6.92a15.493 15.493 0 0 0-10.96-4.54H199.5c-8.56 0-15.5-6.94-15.5-15.5v-4.4c0-7.11 4.84-13.31 11.74-15.04l14.45-3.61c3.74-.94 7-3.23 9.14-6.44l8.08-12.11c2.87-4.31 7.71-6.9 12.89-6.9h24.21c8.56 0 15.5-6.94 15.5-15.5v-21.7C359.23 71.63 422.86 131.02 441.93 208H423.5c-8.56 0-15.5 6.94-15.5 15.5z\"],\n    \"globe-americas\": [496, 512, [], \"f57d\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm82.29 357.6c-3.9 3.88-7.99 7.95-11.31 11.28-2.99 3-5.1 6.7-6.17 10.71-1.51 5.66-2.73 11.38-4.77 16.87l-17.39 46.85c-13.76 3-28 4.69-42.65 4.69v-27.38c1.69-12.62-7.64-36.26-22.63-51.25-6-6-9.37-14.14-9.37-22.63v-32.01c0-11.64-6.27-22.34-16.46-27.97-14.37-7.95-34.81-19.06-48.81-26.11-11.48-5.78-22.1-13.14-31.65-21.75l-.8-.72a114.792 114.792 0 0 1-18.06-20.74c-9.38-13.77-24.66-36.42-34.59-51.14 20.47-45.5 57.36-82.04 103.2-101.89l24.01 12.01C203.48 89.74 216 82.01 216 70.11v-11.3c7.99-1.29 16.12-2.11 24.39-2.42l28.3 28.3c6.25 6.25 6.25 16.38 0 22.63L264 112l-10.34 10.34c-3.12 3.12-3.12 8.19 0 11.31l4.69 4.69c3.12 3.12 3.12 8.19 0 11.31l-8 8a8.008 8.008 0 0 1-5.66 2.34h-8.99c-2.08 0-4.08.81-5.58 2.27l-9.92 9.65a8.008 8.008 0 0 0-1.58 9.31l15.59 31.19c2.66 5.32-1.21 11.58-7.15 11.58h-5.64c-1.93 0-3.79-.7-5.24-1.96l-9.28-8.06a16.017 16.017 0 0 0-15.55-3.1l-31.17 10.39a11.95 11.95 0 0 0-8.17 11.34c0 4.53 2.56 8.66 6.61 10.69l11.08 5.54c9.41 4.71 19.79 7.16 30.31 7.16s22.59 27.29 32 32h66.75c8.49 0 16.62 3.37 22.63 9.37l13.69 13.69a30.503 30.503 0 0 1 8.93 21.57 46.536 46.536 0 0 1-13.72 32.98zM417 274.25c-5.79-1.45-10.84-5-14.15-9.97l-17.98-26.97a23.97 23.97 0 0 1 0-26.62l19.59-29.38c2.32-3.47 5.5-6.29 9.24-8.15l12.98-6.49C440.2 193.59 448 223.87 448 256c0 8.67-.74 17.16-1.82 25.54L417 274.25z\"],\n    \"globe-asia\": [496, 512, [], \"f57e\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm-11.34 240.23c-2.89 4.82-8.1 7.77-13.72 7.77h-.31c-4.24 0-8.31 1.69-11.31 4.69l-5.66 5.66c-3.12 3.12-3.12 8.19 0 11.31l5.66 5.66c3 3 4.69 7.07 4.69 11.31V304c0 8.84-7.16 16-16 16h-6.11c-6.06 0-11.6-3.42-14.31-8.85l-22.62-45.23c-2.44-4.88-8.95-5.94-12.81-2.08l-19.47 19.46c-3 3-7.07 4.69-11.31 4.69H50.81C49.12 277.55 48 266.92 48 256c0-110.28 89.72-200 200-200 21.51 0 42.2 3.51 61.63 9.82l-50.16 38.53c-5.11 3.41-4.63 11.06.86 13.81l10.83 5.41c5.42 2.71 8.84 8.25 8.84 14.31V216c0 4.42-3.58 8-8 8h-3.06c-3.03 0-5.8-1.71-7.15-4.42-1.56-3.12-5.96-3.29-7.76-.3l-17.37 28.95zM408 358.43c0 4.24-1.69 8.31-4.69 11.31l-9.57 9.57c-3 3-7.07 4.69-11.31 4.69h-15.16c-4.24 0-8.31-1.69-11.31-4.69l-13.01-13.01a26.767 26.767 0 0 0-25.42-7.04l-21.27 5.32c-1.27.32-2.57.48-3.88.48h-10.34c-4.24 0-8.31-1.69-11.31-4.69l-11.91-11.91a8.008 8.008 0 0 1-2.34-5.66v-10.2c0-3.27 1.99-6.21 5.03-7.43l39.34-15.74c1.98-.79 3.86-1.82 5.59-3.05l23.71-16.89a7.978 7.978 0 0 1 4.64-1.48h12.09c3.23 0 6.15 1.94 7.39 4.93l5.35 12.85a4 4 0 0 0 3.69 2.46h3.8c1.78 0 3.35-1.18 3.84-2.88l4.2-14.47c.5-1.71 2.06-2.88 3.84-2.88h6.06c2.21 0 4 1.79 4 4v12.93c0 2.12.84 4.16 2.34 5.66l11.91 11.91c3 3 4.69 7.07 4.69 11.31v24.6z\"],\n    \"globe-europe\": [496, 512, [], \"f7a2\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm200 248c0 22.5-3.9 44.2-10.8 64.4h-20.3c-4.3 0-8.4-1.7-11.4-4.8l-32-32.6c-4.5-4.6-4.5-12.1.1-16.7l12.5-12.5v-8.7c0-3-1.2-5.9-3.3-8l-9.4-9.4c-2.1-2.1-5-3.3-8-3.3h-16c-6.2 0-11.3-5.1-11.3-11.3 0-3 1.2-5.9 3.3-8l9.4-9.4c2.1-2.1 5-3.3 8-3.3h32c6.2 0 11.3-5.1 11.3-11.3v-9.4c0-6.2-5.1-11.3-11.3-11.3h-36.7c-8.8 0-16 7.2-16 16v4.5c0 6.9-4.4 13-10.9 15.2l-31.6 10.5c-3.3 1.1-5.5 4.1-5.5 7.6v2.2c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8s-3.6-8-8-8H247c-3 0-5.8 1.7-7.2 4.4l-9.4 18.7c-2.7 5.4-8.2 8.8-14.3 8.8H194c-8.8 0-16-7.2-16-16V199c0-4.2 1.7-8.3 4.7-11.3l20.1-20.1c4.6-4.6 7.2-10.9 7.2-17.5 0-3.4 2.2-6.5 5.5-7.6l40-13.3c1.7-.6 3.2-1.5 4.4-2.7l26.8-26.8c2.1-2.1 3.3-5 3.3-8 0-6.2-5.1-11.3-11.3-11.3H258l-16 16v8c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8v-20c0-2.5 1.2-4.9 3.2-6.4l28.9-21.7c1.9-.1 3.8-.3 5.7-.3C358.3 56 448 145.7 448 256zM130.1 149.1c0-3 1.2-5.9 3.3-8l25.4-25.4c2.1-2.1 5-3.3 8-3.3 6.2 0 11.3 5.1 11.3 11.3v16c0 3-1.2 5.9-3.3 8l-9.4 9.4c-2.1 2.1-5 3.3-8 3.3h-16c-6.2 0-11.3-5.1-11.3-11.3zm128 306.4v-7.1c0-8.8-7.2-16-16-16h-20.2c-10.8 0-26.7-5.3-35.4-11.8l-22.2-16.7c-11.5-8.6-18.2-22.1-18.2-36.4v-23.9c0-16 8.4-30.8 22.1-39l42.9-25.7c7.1-4.2 15.2-6.5 23.4-6.5h31.2c10.9 0 21.4 3.9 29.6 10.9l43.2 37.1h18.3c8.5 0 16.6 3.4 22.6 9.4l17.3 17.3c3.4 3.4 8.1 5.3 12.9 5.3H423c-32.4 58.9-93.8 99.5-164.9 103.1z\"],\n    \"golf-ball\": [416, 512, [], \"f450\", \"M96 416h224c0 17.7-14.3 32-32 32h-16c-17.7 0-32 14.3-32 32v20c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-20c0-17.7-14.3-32-32-32h-16c-17.7 0-32-14.3-32-32zm320-208c0 74.2-39 139.2-97.5 176h-221C39 347.2 0 282.2 0 208 0 93.1 93.1 0 208 0s208 93.1 208 208zm-180.1 43.9c18.3 0 33.1-14.8 33.1-33.1 0-14.4-9.3-26.3-22.1-30.9 9.6 26.8-15.6 51.3-41.9 41.9 4.6 12.8 16.5 22.1 30.9 22.1zm49.1 46.9c0-14.4-9.3-26.3-22.1-30.9 9.6 26.8-15.6 51.3-41.9 41.9 4.6 12.8 16.5 22.1 30.9 22.1 18.3 0 33.1-14.9 33.1-33.1zm64-64c0-14.4-9.3-26.3-22.1-30.9 9.6 26.8-15.6 51.3-41.9 41.9 4.6 12.8 16.5 22.1 30.9 22.1 18.3 0 33.1-14.9 33.1-33.1z\"],\n    \"gopuram\": [512, 512, [], \"f664\", \"M496 352h-16V240c0-8.8-7.2-16-16-16h-16v-80c0-8.8-7.2-16-16-16h-16V16c0-8.8-7.2-16-16-16s-16 7.2-16 16v16h-64V16c0-8.8-7.2-16-16-16s-16 7.2-16 16v16h-64V16c0-8.8-7.2-16-16-16s-16 7.2-16 16v16h-64V16c0-8.8-7.2-16-16-16S96 7.2 96 16v112H80c-8.8 0-16 7.2-16 16v80H48c-8.8 0-16 7.2-16 16v112H16c-8.8 0-16 7.2-16 16v128c0 8.8 7.2 16 16 16h80V352h32V224h32v-96h32v96h-32v128h-32v160h80v-80c0-8.8 7.2-16 16-16h64c8.8 0 16 7.2 16 16v80h80V352h-32V224h-32v-96h32v96h32v128h32v160h80c8.8 0 16-7.2 16-16V368c0-8.8-7.2-16-16-16zM232 176c0-8.8 7.2-16 16-16h16c8.8 0 16 7.2 16 16v48h-48zm56 176h-64v-64c0-8.8 7.2-16 16-16h32c8.8 0 16 7.2 16 16z\"],\n    \"graduation-cap\": [640, 512, [], \"f19d\", \"M622.34 153.2L343.4 67.5c-15.2-4.67-31.6-4.67-46.79 0L17.66 153.2c-23.54 7.23-23.54 38.36 0 45.59l48.63 14.94c-10.67 13.19-17.23 29.28-17.88 46.9C38.78 266.15 32 276.11 32 288c0 10.78 5.68 19.85 13.86 25.65L20.33 428.53C18.11 438.52 25.71 448 35.94 448h56.11c10.24 0 17.84-9.48 15.62-19.47L82.14 313.65C90.32 307.85 96 298.78 96 288c0-11.57-6.47-21.25-15.66-26.87.76-15.02 8.44-28.3 20.69-36.72L296.6 284.5c9.06 2.78 26.44 6.25 46.79 0l278.95-85.7c23.55-7.24 23.55-38.36 0-45.6zM352.79 315.09c-28.53 8.76-52.84 3.92-65.59 0l-145.02-44.55L128 384c0 35.35 85.96 64 192 64s192-28.65 192-64l-14.18-113.47-145.03 44.56z\"],\n    \"greater-than\": [384, 512, [], \"f531\", \"M365.52 209.85L59.22 67.01c-16.06-7.49-35.15-.54-42.64 15.52L3.01 111.61c-7.49 16.06-.54 35.15 15.52 42.64L236.96 256.1 18.49 357.99C2.47 365.46-4.46 384.5 3.01 400.52l13.52 29C24 445.54 43.04 452.47 59.06 445l306.47-142.91a32.003 32.003 0 0 0 18.48-29v-34.23c-.01-12.45-7.21-23.76-18.49-29.01z\"],\n    \"greater-than-equal\": [448, 512, [], \"f532\", \"M55.22 107.69l175.56 68.09-175.44 68.05c-18.39 6.03-27.88 24.39-21.2 41l12.09 30.08c6.68 16.61 26.99 25.19 45.38 19.15L393.02 214.2c13.77-4.52 22.98-16.61 22.98-30.17v-15.96c0-13.56-9.21-25.65-22.98-30.17L91.3 17.92c-18.29-6-38.51 2.53-45.15 19.06L34.12 66.9c-6.64 16.53 2.81 34.79 21.1 40.79zM424 400H24c-13.25 0-24 10.74-24 24v48c0 13.25 10.75 24 24 24h400c13.25 0 24-10.75 24-24v-48c0-13.26-10.75-24-24-24z\"],\n    \"grimace\": [496, 512, [], \"f57f\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM144 400h-8c-17.7 0-32-14.3-32-32v-8h40v40zm0-56h-40v-8c0-17.7 14.3-32 32-32h8v40zm-8-136c0-17.7 14.3-32 32-32s32 14.3 32 32-14.3 32-32 32-32-14.3-32-32zm72 192h-48v-40h48v40zm0-56h-48v-40h48v40zm64 56h-48v-40h48v40zm0-56h-48v-40h48v40zm64 56h-48v-40h48v40zm0-56h-48v-40h48v40zm-8-104c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm64 128c0 17.7-14.3 32-32 32h-8v-40h40v8zm0-24h-40v-40h8c17.7 0 32 14.3 32 32v8z\"],\n    \"grin\": [496, 512, [], \"f580\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm80 168c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm-160 0c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm80 256c-60.6 0-134.5-38.3-143.8-93.3-2-11.8 9.3-21.6 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.3-3.7 22.6 6.1 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3z\"],\n    \"grin-alt\": [496, 512, [], \"f581\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm63.7 128.7c7.6-11.4 24.7-11.7 32.7 0 12.4 18.4 15.1 36.9 15.7 55.3-.5 18.4-3.3 36.9-15.7 55.3-7.6 11.4-24.7 11.7-32.7 0-12.4-18.4-15.1-36.9-15.7-55.3.5-18.4 3.3-36.9 15.7-55.3zm-160 0c7.6-11.4 24.7-11.7 32.7 0 12.4 18.4 15.1 36.9 15.7 55.3-.5 18.4-3.3 36.9-15.7 55.3-7.6 11.4-24.7 11.7-32.7 0-12.4-18.4-15.1-36.9-15.7-55.3.5-18.4 3.3-36.9 15.7-55.3zM248 432c-60.6 0-134.5-38.3-143.8-93.3-2-11.8 9.3-21.6 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.4-3.7 22.6 6.1 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3z\"],\n    \"grin-beam\": [496, 512, [], \"f582\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm80 144c23.8 0 52.7 29.3 56 71.4.7 8.6-10.8 11.9-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.1 7.3-15.6 4-14.9-4.5 3.1-42.1 32-71.4 55.8-71.4zm-160 0c23.8 0 52.7 29.3 56 71.4.7 8.6-10.8 11.9-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.2 7.4-15.6 4-14.9-4.5 3.1-42.1 32-71.4 55.8-71.4zm80 280c-60.6 0-134.5-38.3-143.8-93.3-2-11.9 9.4-21.6 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.4-3.7 22.6 6.1 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3z\"],\n    \"grin-beam-sweat\": [504, 512, [], \"f583\", \"M456 128c26.5 0 48-21 48-47 0-20-28.5-60.4-41.6-77.8-3.2-4.3-9.6-4.3-12.8 0C436.5 20.6 408 61 408 81c0 26 21.5 47 48 47zm0 32c-44.1 0-80-35.4-80-79 0-4.4.3-14.2 8.1-32.2C345 23.1 298.3 8 248 8 111 8 0 119 0 256s111 248 248 248 248-111 248-248c0-35.1-7.4-68.4-20.5-98.6-6.3 1.5-12.7 2.6-19.5 2.6zm-128-8c23.8 0 52.7 29.3 56 71.4.7 8.6-10.8 12-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.1 7.4-15.6 4-14.9-4.5 3.1-42.1 32-71.4 55.8-71.4zm-160 0c23.8 0 52.7 29.3 56 71.4.7 8.6-10.8 12-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.2 7.4-15.6 4-14.9-4.5 3.1-42.1 32-71.4 55.8-71.4zm80 280c-60.6 0-134.5-38.3-143.8-93.3-2-11.8 9.3-21.6 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.5-3.7 22.6 6.2 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3z\"],\n    \"grin-hearts\": [496, 512, [], \"f584\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM90.4 183.6c6.7-17.6 26.7-26.7 44.9-21.9l7.1 1.9 2-7.1c5-18.1 22.8-30.9 41.5-27.9 21.4 3.4 34.4 24.2 28.8 44.5L195.3 243c-1.2 4.5-5.9 7.2-10.5 6l-70.2-18.2c-20.4-5.4-31.9-27-24.2-47.2zM248 432c-60.6 0-134.5-38.3-143.8-93.3-2-11.8 9.2-21.5 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.4-3.6 22.6 6.1 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3zm133.4-201.3l-70.2 18.2c-4.5 1.2-9.2-1.5-10.5-6L281.3 173c-5.6-20.3 7.4-41.1 28.8-44.5 18.6-3 36.4 9.8 41.5 27.9l2 7.1 7.1-1.9c18.2-4.7 38.2 4.3 44.9 21.9 7.7 20.3-3.8 41.9-24.2 47.2z\"],\n    \"grin-squint\": [496, 512, [], \"f585\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm33.8 189.7l80-48c11.6-6.9 24 7.7 15.4 18L343.6 208l33.6 40.3c8.7 10.4-3.9 24.8-15.4 18l-80-48c-7.7-4.7-7.7-15.9 0-20.6zm-163-30c-8.6-10.3 3.8-24.9 15.4-18l80 48c7.8 4.7 7.8 15.9 0 20.6l-80 48c-11.5 6.8-24-7.6-15.4-18l33.6-40.3-33.6-40.3zM248 432c-60.6 0-134.5-38.3-143.8-93.3-2-11.9 9.4-21.6 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.5-3.7 22.6 6.2 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3z\"],\n    \"grin-squint-tears\": [512, 512, [], \"f586\", \"M409.6 111.9c22.6-3.2 73.5-12 88.3-26.8 19.2-19.2 18.9-50.6-.7-70.2S446-5 426.9 14.2c-14.8 14.8-23.5 65.7-26.8 88.3-.8 5.5 3.9 10.2 9.5 9.4zM102.4 400.1c-22.6 3.2-73.5 12-88.3 26.8-19.1 19.1-18.8 50.6.8 70.2s51 19.9 70.2.7c14.8-14.8 23.5-65.7 26.8-88.3.8-5.5-3.9-10.2-9.5-9.4zm311.7-256.5c-33 3.9-48.6-25.1-45.7-45.7 3.4-24 7.4-42.1 11.5-56.5C285.1-13.4 161.8-.5 80.6 80.6-.5 161.7-13.4 285 41.4 379.9c14.4-4.1 32.4-8 56.5-11.5 33.2-3.9 48.6 25.2 45.7 45.7-3.4 24-7.4 42.1-11.5 56.5 94.8 54.8 218.1 41.9 299.3-39.2s94-204.4 39.2-299.3c-14.4 4.1-32.5 8-56.5 11.5zM255.7 106c3.3-13.2 22.4-11.5 23.6 1.8l4.8 52.3 52.3 4.8c13.4 1.2 14.9 20.3 1.8 23.6l-90.5 22.6c-8.9 2.2-16.7-5.9-14.5-14.5l22.5-90.6zm-90.9 230.3L160 284l-52.3-4.8c-13.4-1.2-14.9-20.3-1.8-23.6l90.5-22.6c8.8-2.2 16.7 5.8 14.5 14.5L188.3 338c-3.1 13.2-22.2 11.7-23.5-1.7zm215.7 44.2c-29.3 29.3-75.7 50.4-116.7 50.4-18.9 0-36.6-4.5-51-14.7-9.8-6.9-8.7-21.8 2-27.2 28.3-14.6 63.9-42.4 97.8-76.3s61.7-69.6 76.3-97.8c5.4-10.5 20.2-11.9 27.3-2 32.3 45.3 7.1 124.7-35.7 167.6z\"],\n    \"grin-stars\": [496, 512, [], \"f587\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM94.6 168.9l34.9-5 15.5-31.6c2.9-5.8 11-5.8 13.9 0l15.5 31.6 34.9 5c6.2 1 8.9 8.6 4.3 13.2l-25.4 24.6 6 34.9c1 6.2-5.3 11-11 7.9L152 233.3l-31.3 16.3c-5.7 3.1-12-1.7-11-7.9l6-34.9-25.4-24.6c-4.6-4.7-1.9-12.3 4.3-13.3zM248 432c-60.6 0-134.5-38.3-143.8-93.3-2-11.8 9.3-21.5 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.5-3.7 22.6 6.1 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3zm157.7-249.9l-25.4 24.6 6 34.9c1 6.2-5.3 11-11 7.9L344 233.3l-31.3 16.3c-5.7 3.1-12-1.7-11-7.9l6-34.9-25.4-24.6c-4.5-4.6-1.9-12.2 4.3-13.2l34.9-5 15.5-31.6c2.9-5.8 11-5.8 13.9 0l15.5 31.6 34.9 5c6.3.9 9 8.5 4.4 13.1z\"],\n    \"grin-tears\": [640, 512, [], \"f588\", \"M102.4 256.1c-22.6 3.2-73.5 12-88.3 26.8-19.1 19.1-18.8 50.6.8 70.2s51 19.9 70.2.7c14.8-14.8 23.5-65.7 26.8-88.3.8-5.5-3.9-10.2-9.5-9.4zm523.4 26.8c-14.8-14.8-65.7-23.5-88.3-26.8-5.5-.8-10.3 3.9-9.5 9.5 3.2 22.6 12 73.5 26.8 88.3 19.2 19.2 50.6 18.9 70.2-.7s20-51.2.8-70.3zm-129.4-12.8c-3.8-26.6 19.1-49.5 45.7-45.7 8.9 1.3 16.8 2.7 24.3 4.1C552.7 104.5 447.7 8 320 8S87.3 104.5 73.6 228.5c7.5-1.4 15.4-2.8 24.3-4.1 33.2-3.9 48.6 25.3 45.7 45.7-11.8 82.3-29.9 100.4-35.8 106.4-.9.9-2 1.6-3 2.5 42.7 74.6 123 125 215.2 125s172.5-50.4 215.2-125.1c-1-.9-2.1-1.5-3-2.5-5.9-5.9-24-24-35.8-106.3zM400 152c23.8 0 52.7 29.3 56 71.4.7 8.6-10.8 12-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.2 7.4-15.6 4-14.9-4.5 3.1-42.1 32-71.4 55.8-71.4zm-160 0c23.8 0 52.7 29.3 56 71.4.7 8.6-10.8 12-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.2 7.4-15.6 4-14.9-4.5 3.1-42.1 32-71.4 55.8-71.4zm80 280c-60.6 0-134.5-38.3-143.8-93.3-2-11.7 9.2-21.6 20.7-17.9C227.1 330.5 272 336 320 336s92.9-5.5 123.1-15.2c11.4-3.7 22.6 6.1 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3z\"],\n    \"grin-tongue\": [496, 512, [], \"f589\", \"M248 8C111 8 0 119 0 256c0 106.3 67 196.7 161 232-5.6-12.2-9-25.7-9-40v-45.5c-24.7-16.2-43.5-38.1-47.8-63.8-2-11.8 9.3-21.5 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.4-3.6 22.6 6.1 20.7 17.9-4.3 25.7-23.1 47.6-47.8 63.8V448c0 14.3-3.4 27.8-9 40 94-35.3 161-125.7 161-232C496 119 385 8 248 8zm-80 232c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm160 0c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm-34.9 134.6c-14.4-6.5-31.1 2.2-34.6 17.6l-1.8 7.8c-2.1 9.2-15.2 9.2-17.3 0l-1.8-7.8c-3.5-15.4-20.2-24.1-34.6-17.6-.9.4.3-.2-18.9 9.4v63c0 35.2 28 64.5 63.1 64.9 35.7.5 64.9-28.4 64.9-64v-64c-19.5-9.6-18.2-8.9-19-9.3z\"],\n    \"grin-tongue-squint\": [496, 512, [], \"f58a\", \"M293.1 374.6c-14.4-6.5-31.1 2.2-34.6 17.6l-1.8 7.8c-2.1 9.2-15.2 9.2-17.3 0l-1.8-7.8c-3.5-15.4-20.2-24.1-34.6-17.6-.9.4.3-.2-18.9 9.4v63c0 35.2 28 64.5 63.1 64.9 35.7.5 64.9-28.4 64.9-64v-64c-19.5-9.6-18.2-8.9-19-9.3zM248 8C111 8 0 119 0 256c0 106.3 67 196.7 161 232-5.6-12.2-9-25.7-9-40v-45.5c-24.7-16.2-43.5-38.1-47.8-63.8-2-11.8 9.2-21.5 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.4-3.7 22.6 6.1 20.7 17.9-4.3 25.7-23.1 47.6-47.8 63.8V448c0 14.3-3.4 27.8-9 40 94-35.3 161-125.7 161-232C496 119 385 8 248 8zm-33.8 210.3l-80 48c-11.5 6.8-24-7.6-15.4-18l33.6-40.3-33.6-40.3c-8.6-10.3 3.8-24.9 15.4-18l80 48c7.7 4.7 7.7 15.9 0 20.6zm163 30c8.7 10.4-3.9 24.8-15.4 18l-80-48c-7.8-4.7-7.8-15.9 0-20.6l80-48c11.7-6.9 23.9 7.7 15.4 18L343.6 208l33.6 40.3z\"],\n    \"grin-tongue-wink\": [496, 512, [], \"f58b\", \"M344 184c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zM248 8C111 8 0 119 0 256c0 106.3 67 196.7 161 232-5.6-12.2-9-25.7-9-40v-45.5c-24.7-16.2-43.5-38.1-47.8-63.8-2-11.8 9.3-21.5 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.5-3.7 22.6 6.1 20.7 17.9-4.3 25.7-23.1 47.6-47.8 63.8V448c0 14.3-3.4 27.8-9 40 94-35.3 161-125.7 161-232C496 119 385 8 248 8zm-56 225l-9.5-8.5c-14.8-13.2-46.2-13.2-61 0L112 233c-8.5 7.4-21.6.3-19.8-10.8 4-25.2 34.2-42.1 59.9-42.1S208 197 212 222.2c1.6 11.1-11.6 18.2-20 10.8zm152 39c-35.3 0-64-28.7-64-64s28.7-64 64-64 64 28.7 64 64-28.7 64-64 64zm-50.9 102.6c-14.4-6.5-31.1 2.2-34.6 17.6l-1.8 7.8c-2.1 9.2-15.2 9.2-17.3 0l-1.8-7.8c-3.5-15.4-20.2-24.1-34.6-17.6-.9.4.3-.2-18.9 9.4v63c0 35.2 28 64.5 63.1 64.9 35.7.5 64.9-28.4 64.9-64v-64c-19.5-9.6-18.2-8.9-19-9.3z\"],\n    \"grin-wink\": [496, 512, [], \"f58c\", \"M0 256c0 137 111 248 248 248s248-111 248-248S385 8 248 8 0 119 0 256zm200-48c0 17.7-14.3 32-32 32s-32-14.3-32-32 14.3-32 32-32 32 14.3 32 32zm168 25l-9.5-8.5c-14.8-13.2-46.2-13.2-61 0L288 233c-8.3 7.4-21.6.4-19.8-10.8 4-25.2 34.2-42.1 59.9-42.1S384 197 388 222.2c1.6 11-11.5 18.2-20 10.8zm-243.1 87.8C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.3-3.7 22.6 6 20.7 17.9-9.2 55-83.2 93.3-143.8 93.3s-134.5-38.3-143.8-93.3c-2-11.9 9.3-21.6 20.7-17.9z\"],\n    \"grip-horizontal\": [448, 512, [], \"f58d\", \"M96 288H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm160 0h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm160 0h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM96 96H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm160 0h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm160 0h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z\"],\n    \"grip-lines\": [512, 512, [], \"f7a4\", \"M496 288H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h480c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm0-128H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h480c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16z\"],\n    \"grip-lines-vertical\": [256, 512, [], \"f7a5\", \"M96 496V16c0-8.8-7.2-16-16-16H48c-8.8 0-16 7.2-16 16v480c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16zm128 0V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v480c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16z\"],\n    \"grip-vertical\": [320, 512, [], \"f58e\", \"M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z\"],\n    \"guitar\": [512, 512, [], \"f7a6\", \"M502.63 39L473 9.37a32 32 0 0 0-45.26 0L381.46 55.7a35.14 35.14 0 0 0-8.53 13.79L360.77 106l-76.26 76.26c-12.16-8.76-25.5-15.74-40.1-19.14-33.45-7.78-67-.88-89.88 22a82.45 82.45 0 0 0-20.24 33.47c-6 18.56-23.21 32.69-42.15 34.46-23.7 2.27-45.73 11.45-62.61 28.44C-16.11 327-7.9 409 47.58 464.45S185 528 230.56 482.52c17-16.88 26.16-38.9 28.45-62.71 1.76-18.85 15.89-36.13 34.43-42.14a82.6 82.6 0 0 0 33.48-20.25c22.87-22.88 29.74-56.36 22-89.75-3.39-14.64-10.37-28-19.16-40.2L406 151.23l36.48-12.16a35.14 35.14 0 0 0 13.79-8.53l46.33-46.32a32 32 0 0 0 .03-45.22zM208 352a48 48 0 1 1 48-48 48 48 0 0 1-48 48z\"],\n    \"h-square\": [448, 512, [], \"f0fd\", \"M448 80v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48zm-112 48h-32c-8.837 0-16 7.163-16 16v80H160v-80c0-8.837-7.163-16-16-16h-32c-8.837 0-16 7.163-16 16v224c0 8.837 7.163 16 16 16h32c8.837 0 16-7.163 16-16v-80h128v80c0 8.837 7.163 16 16 16h32c8.837 0 16-7.163 16-16V144c0-8.837-7.163-16-16-16z\"],\n    \"hamburger\": [512, 512, [], \"f805\", \"M464 256H48a48 48 0 0 0 0 96h416a48 48 0 0 0 0-96zm16 128H32a16 16 0 0 0-16 16v16a64 64 0 0 0 64 64h352a64 64 0 0 0 64-64v-16a16 16 0 0 0-16-16zM58.64 224h394.72c34.57 0 54.62-43.9 34.82-75.88C448 83.2 359.55 32.1 256 32c-103.54.1-192 51.2-232.18 116.11C4 180.09 24.07 224 58.64 224zM384 112a16 16 0 1 1-16 16 16 16 0 0 1 16-16zM256 80a16 16 0 1 1-16 16 16 16 0 0 1 16-16zm-128 32a16 16 0 1 1-16 16 16 16 0 0 1 16-16z\"],\n    \"hammer\": [576, 512, [], \"f6e3\", \"M571.31 193.94l-22.63-22.63c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31-28.9-28.9c5.63-21.31.36-44.9-16.35-61.61l-45.25-45.25c-62.48-62.48-163.79-62.48-226.28 0l90.51 45.25v18.75c0 16.97 6.74 33.25 18.75 45.25l49.14 49.14c16.71 16.71 40.3 21.98 61.61 16.35l28.9 28.9-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0l90.51-90.51c6.23-6.24 6.23-16.37-.02-22.62zm-286.72-15.2c-3.7-3.7-6.84-7.79-9.85-11.95L19.64 404.96c-25.57 23.88-26.26 64.19-1.53 88.93s65.05 24.05 88.93-1.53l238.13-255.07c-3.96-2.91-7.9-5.87-11.44-9.41l-49.14-49.14z\"],\n    \"hamsa\": [512, 512, [], \"f665\", \"M509.34 307.25C504.28 295.56 492.75 288 480 288h-64V80c0-22-18-40-40-40s-40 18-40 40v134c0 5.52-4.48 10-10 10h-20c-5.52 0-10-4.48-10-10V40c0-22-18-40-40-40s-40 18-40 40v174c0 5.52-4.48 10-10 10h-20c-5.52 0-10-4.48-10-10V80c0-22-18-40-40-40S96 58 96 80v208H32c-12.75 0-24.28 7.56-29.34 19.25a31.966 31.966 0 0 0 5.94 34.58l102.69 110.03C146.97 490.08 199.69 512 256 512s109.03-21.92 144.72-60.14L503.4 341.83a31.966 31.966 0 0 0 5.94-34.58zM256 416c-53.02 0-96-64-96-64s42.98-64 96-64 96 64 96 64-42.98 64-96 64zm0-96c-17.67 0-32 14.33-32 32s14.33 32 32 32 32-14.33 32-32-14.33-32-32-32z\"],\n    \"hand-holding\": [576, 512, [], \"f4bd\", \"M565.3 328.1c-11.8-10.7-30.2-10-42.6 0L430.3 402c-11.3 9.1-25.4 14-40 14H272c-8.8 0-16-7.2-16-16s7.2-16 16-16h78.3c15.9 0 30.7-10.9 33.3-26.6 3.3-20-12.1-37.4-31.6-37.4H192c-27 0-53.1 9.3-74.1 26.3L71.4 384H16c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16h356.8c14.5 0 28.6-4.9 40-14L564 377c15.2-12.1 16.4-35.3 1.3-48.9z\"],\n    \"hand-holding-heart\": [576, 512, [], \"f4be\", \"M275.3 250.5c7 7.4 18.4 7.4 25.5 0l108.9-114.2c31.6-33.2 29.8-88.2-5.6-118.8-30.8-26.7-76.7-21.9-104.9 7.7L288 36.9l-11.1-11.6C248.7-4.4 202.8-9.2 172 17.5c-35.3 30.6-37.2 85.6-5.6 118.8l108.9 114.2zm290 77.6c-11.8-10.7-30.2-10-42.6 0L430.3 402c-11.3 9.1-25.4 14-40 14H272c-8.8 0-16-7.2-16-16s7.2-16 16-16h78.3c15.9 0 30.7-10.9 33.3-26.6 3.3-20-12.1-37.4-31.6-37.4H192c-27 0-53.1 9.3-74.1 26.3L71.4 384H16c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16h356.8c14.5 0 28.6-4.9 40-14L564 377c15.2-12.1 16.4-35.3 1.3-48.9z\"],\n    \"hand-holding-medical\": [576, 512, [], \"e05c\", \"M159.88,175.82h64v64a16,16,0,0,0,16,16h64a16,16,0,0,0,16-16v-64h64a16,16,0,0,0,16-16v-64a16,16,0,0,0-16-16h-64v-64a16,16,0,0,0-16-16h-64a16,16,0,0,0-16,16v64h-64a16,16,0,0,0-16,16v64A16,16,0,0,0,159.88,175.82ZM568.07,336.13a39.91,39.91,0,0,0-55.93-8.47L392.47,415.84H271.86a16,16,0,0,1,0-32H350.1c16,0,30.75-10.87,33.37-26.61a32.06,32.06,0,0,0-31.62-37.38h-160a117.7,117.7,0,0,0-74.12,26.25l-46.5,37.74H15.87a16.11,16.11,0,0,0-16,16v96a16.11,16.11,0,0,0,16,16h347a104.8,104.8,0,0,0,61.7-20.27L559.6,392A40,40,0,0,0,568.07,336.13Z\"],\n    \"hand-holding-usd\": [576, 512, [], \"f4c0\", \"M271.06,144.3l54.27,14.3a8.59,8.59,0,0,1,6.63,8.1c0,4.6-4.09,8.4-9.12,8.4h-35.6a30,30,0,0,1-11.19-2.2c-5.24-2.2-11.28-1.7-15.3,2l-19,17.5a11.68,11.68,0,0,0-2.25,2.66,11.42,11.42,0,0,0,3.88,15.74,83.77,83.77,0,0,0,34.51,11.5V240c0,8.8,7.83,16,17.37,16h17.37c9.55,0,17.38-7.2,17.38-16V222.4c32.93-3.6,57.84-31,53.5-63-3.15-23-22.46-41.3-46.56-47.7L282.68,97.4a8.59,8.59,0,0,1-6.63-8.1c0-4.6,4.09-8.4,9.12-8.4h35.6A30,30,0,0,1,332,83.1c5.23,2.2,11.28,1.7,15.3-2l19-17.5A11.31,11.31,0,0,0,368.47,61a11.43,11.43,0,0,0-3.84-15.78,83.82,83.82,0,0,0-34.52-11.5V16c0-8.8-7.82-16-17.37-16H295.37C285.82,0,278,7.2,278,16V33.6c-32.89,3.6-57.85,31-53.51,63C227.63,119.6,247,137.9,271.06,144.3ZM565.27,328.1c-11.8-10.7-30.2-10-42.6,0L430.27,402a63.64,63.64,0,0,1-40,14H272a16,16,0,0,1,0-32h78.29c15.9,0,30.71-10.9,33.25-26.6a31.2,31.2,0,0,0,.46-5.46A32,32,0,0,0,352,320H192a117.66,117.66,0,0,0-74.1,26.29L71.4,384H16A16,16,0,0,0,0,400v96a16,16,0,0,0,16,16H372.77a64,64,0,0,0,40-14L564,377a32,32,0,0,0,1.28-48.9Z\"],\n    \"hand-holding-water\": [576, 512, [], \"f4c1\", \"M288 256c53 0 96-42.1 96-94 0-40-57.1-120.7-83.2-155.6-6.4-8.5-19.2-8.5-25.6 0C249.1 41.3 192 122 192 162c0 51.9 43 94 96 94zm277.3 72.1c-11.8-10.7-30.2-10-42.6 0L430.3 402c-11.3 9.1-25.4 14-40 14H272c-8.8 0-16-7.2-16-16s7.2-16 16-16h78.3c15.9 0 30.7-10.9 33.3-26.6 3.3-20-12.1-37.4-31.6-37.4H192c-27 0-53.1 9.3-74.1 26.3L71.4 384H16c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16h356.8c14.5 0 28.6-4.9 40-14L564 377c15.2-12.1 16.4-35.3 1.3-48.9z\"],\n    \"hand-lizard\": [576, 512, [], \"f258\", \"M384 480h192V363.778a95.998 95.998 0 0 0-14.833-51.263L398.127 54.368A48 48 0 0 0 357.544 32H24C10.745 32 0 42.745 0 56v16c0 30.928 25.072 56 56 56h229.981c12.844 0 21.556 13.067 16.615 24.923l-21.41 51.385A32 32 0 0 1 251.648 224H128c-35.346 0-64 28.654-64 64v8c0 13.255 10.745 24 24 24h147.406a47.995 47.995 0 0 1 25.692 7.455l111.748 70.811A24.001 24.001 0 0 1 384 418.539V480z\"],\n    \"hand-middle-finger\": [512, 512, [], \"f806\", \"M479.93 317.12a37.33 37.33 0 0 0-28.28-36.19L416 272v-49.59c0-11.44-9.69-21.29-23.15-23.54l-38.4-6.4C336.63 189.5 320 200.86 320 216v32a8 8 0 0 1-16 0V50c0-26.28-20.25-49.2-46.52-50A48 48 0 0 0 208 48v200a8 8 0 0 1-16 0v-32c0-15.15-16.63-26.51-34.45-23.54l-30.68 5.12c-18 3-30.87 16.12-30.87 31.38V376a8 8 0 0 1-16 0v-76l-27.36 15A37.34 37.34 0 0 0 32 348.4v73.47a37.31 37.31 0 0 0 10.93 26.39l30.93 30.93A112 112 0 0 0 153.05 512h215A112 112 0 0 0 480 400z\"],\n    \"hand-paper\": [448, 512, [], \"f256\", \"M408.781 128.007C386.356 127.578 368 146.36 368 168.79V256h-8V79.79c0-22.43-18.356-41.212-40.781-40.783C297.488 39.423 280 57.169 280 79v177h-8V40.79C272 18.36 253.644-.422 231.219.007 209.488.423 192 18.169 192 40v216h-8V80.79c0-22.43-18.356-41.212-40.781-40.783C121.488 40.423 104 58.169 104 80v235.992l-31.648-43.519c-12.993-17.866-38.009-21.817-55.877-8.823-17.865 12.994-21.815 38.01-8.822 55.877l125.601 172.705A48 48 0 0 0 172.073 512h197.59c22.274 0 41.622-15.324 46.724-37.006l26.508-112.66a192.011 192.011 0 0 0 5.104-43.975V168c.001-21.831-17.487-39.577-39.218-39.993z\"],\n    \"hand-peace\": [448, 512, [], \"f25b\", \"M408 216c-22.092 0-40 17.909-40 40h-8v-32c0-22.091-17.908-40-40-40s-40 17.909-40 40v32h-8V48c0-26.51-21.49-48-48-48s-48 21.49-48 48v208h-13.572L92.688 78.449C82.994 53.774 55.134 41.63 30.461 51.324 5.787 61.017-6.356 88.877 3.337 113.551l74.765 190.342-31.09 24.872c-15.381 12.306-19.515 33.978-9.741 51.081l64 112A39.998 39.998 0 0 0 136 512h240c18.562 0 34.686-12.77 38.937-30.838l32-136A39.97 39.97 0 0 0 448 336v-80c0-22.091-17.908-40-40-40z\"],\n    \"hand-point-down\": [384, 512, [], \"f0a7\", \"M91.826 467.2V317.966c-8.248 5.841-16.558 10.57-24.918 14.153C35.098 345.752-.014 322.222 0 288c.008-18.616 10.897-32.203 29.092-40 28.286-12.122 64.329-78.648 77.323-107.534 7.956-17.857 25.479-28.453 43.845-28.464l.001-.002h171.526c11.812 0 21.897 8.596 23.703 20.269 7.25 46.837 38.483 61.76 38.315 123.731-.007 2.724.195 13.254.195 16 0 50.654-22.122 81.574-71.263 72.6-9.297 18.597-39.486 30.738-62.315 16.45-21.177 24.645-53.896 22.639-70.944 6.299V467.2c0 24.15-20.201 44.8-43.826 44.8-23.283 0-43.826-21.35-43.826-44.8zM112 72V24c0-13.255 10.745-24 24-24h192c13.255 0 24 10.745 24 24v48c0 13.255-10.745 24-24 24H136c-13.255 0-24-10.745-24-24zm212-24c0-11.046-8.954-20-20-20s-20 8.954-20 20 8.954 20 20 20 20-8.954 20-20z\"],\n    \"hand-point-left\": [512, 512, [], \"f0a5\", \"M44.8 155.826h149.234c-5.841-8.248-10.57-16.558-14.153-24.918C166.248 99.098 189.778 63.986 224 64c18.616.008 32.203 10.897 40 29.092 12.122 28.286 78.648 64.329 107.534 77.323 17.857 7.956 28.453 25.479 28.464 43.845l.002.001v171.526c0 11.812-8.596 21.897-20.269 23.703-46.837 7.25-61.76 38.483-123.731 38.315-2.724-.007-13.254.195-16 .195-50.654 0-81.574-22.122-72.6-71.263-18.597-9.297-30.738-39.486-16.45-62.315-24.645-21.177-22.639-53.896-6.299-70.944H44.8c-24.15 0-44.8-20.201-44.8-43.826 0-23.283 21.35-43.826 44.8-43.826zM440 176h48c13.255 0 24 10.745 24 24v192c0 13.255-10.745 24-24 24h-48c-13.255 0-24-10.745-24-24V200c0-13.255 10.745-24 24-24zm24 212c11.046 0 20-8.954 20-20s-8.954-20-20-20-20 8.954-20 20 8.954 20 20 20z\"],\n    \"hand-point-right\": [512, 512, [], \"f0a4\", \"M512 199.652c0 23.625-20.65 43.826-44.8 43.826h-99.851c16.34 17.048 18.346 49.766-6.299 70.944 14.288 22.829 2.147 53.017-16.45 62.315C353.574 425.878 322.654 448 272 448c-2.746 0-13.276-.203-16-.195-61.971.168-76.894-31.065-123.731-38.315C120.596 407.683 112 397.599 112 385.786V214.261l.002-.001c.011-18.366 10.607-35.889 28.464-43.845 28.886-12.994 95.413-49.038 107.534-77.323 7.797-18.194 21.384-29.084 40-29.092 34.222-.014 57.752 35.098 44.119 66.908-3.583 8.359-8.312 16.67-14.153 24.918H467.2c23.45 0 44.8 20.543 44.8 43.826zM96 200v192c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V200c0-13.255 10.745-24 24-24h48c13.255 0 24 10.745 24 24zM68 368c0-11.046-8.954-20-20-20s-20 8.954-20 20 8.954 20 20 20 20-8.954 20-20z\"],\n    \"hand-point-up\": [384, 512, [], \"f0a6\", \"M135.652 0c23.625 0 43.826 20.65 43.826 44.8v99.851c17.048-16.34 49.766-18.346 70.944 6.299 22.829-14.288 53.017-2.147 62.315 16.45C361.878 158.426 384 189.346 384 240c0 2.746-.203 13.276-.195 16 .168 61.971-31.065 76.894-38.315 123.731C343.683 391.404 333.599 400 321.786 400H150.261l-.001-.002c-18.366-.011-35.889-10.607-43.845-28.464C93.421 342.648 57.377 276.122 29.092 264 10.897 256.203.008 242.616 0 224c-.014-34.222 35.098-57.752 66.908-44.119 8.359 3.583 16.67 8.312 24.918 14.153V44.8c0-23.45 20.543-44.8 43.826-44.8zM136 416h192c13.255 0 24 10.745 24 24v48c0 13.255-10.745 24-24 24H136c-13.255 0-24-10.745-24-24v-48c0-13.255 10.745-24 24-24zm168 28c-11.046 0-20 8.954-20 20s8.954 20 20 20 20-8.954 20-20-8.954-20-20-20z\"],\n    \"hand-pointer\": [448, 512, [], \"f25a\", \"M448 240v96c0 3.084-.356 6.159-1.063 9.162l-32 136C410.686 499.23 394.562 512 376 512H168a40.004 40.004 0 0 1-32.35-16.473l-127.997-176c-12.993-17.866-9.043-42.883 8.822-55.876 17.867-12.994 42.884-9.043 55.877 8.823L104 315.992V40c0-22.091 17.908-40 40-40s40 17.909 40 40v200h8v-40c0-22.091 17.908-40 40-40s40 17.909 40 40v40h8v-24c0-22.091 17.908-40 40-40s40 17.909 40 40v24h8c0-22.091 17.908-40 40-40s40 17.909 40 40zm-256 80h-8v96h8v-96zm88 0h-8v96h8v-96zm88 0h-8v96h8v-96z\"],\n    \"hand-rock\": [512, 512, [], \"f255\", \"M464.8 80c-26.9-.4-48.8 21.2-48.8 48h-8V96.8c0-26.3-20.9-48.3-47.2-48.8-26.9-.4-48.8 21.2-48.8 48v32h-8V80.8c0-26.3-20.9-48.3-47.2-48.8-26.9-.4-48.8 21.2-48.8 48v48h-8V96.8c0-26.3-20.9-48.3-47.2-48.8-26.9-.4-48.8 21.2-48.8 48v136l-8-7.1v-48.1c0-26.3-20.9-48.3-47.2-48.8C21.9 127.6 0 149.2 0 176v66.4c0 27.4 11.7 53.5 32.2 71.8l111.7 99.3c10.2 9.1 16.1 22.2 16.1 35.9v6.7c0 13.3 10.7 24 24 24h240c13.3 0 24-10.7 24-24v-2.9c0-12.8 2.6-25.5 7.5-37.3l49-116.3c5-11.8 7.5-24.5 7.5-37.3V128.8c0-26.3-20.9-48.4-47.2-48.8z\"],\n    \"hand-scissors\": [512, 512, [], \"f257\", \"M216 440c0-22.092 17.909-40 40-40v-8h-32c-22.091 0-40-17.908-40-40s17.909-40 40-40h32v-8H48c-26.51 0-48-21.49-48-48s21.49-48 48-48h208v-13.572l-177.551-69.74c-24.674-9.694-36.818-37.555-27.125-62.228 9.693-24.674 37.554-36.817 62.228-27.124l190.342 74.765 24.872-31.09c12.306-15.381 33.978-19.515 51.081-9.741l112 64A40.002 40.002 0 0 1 512 168v240c0 18.562-12.77 34.686-30.838 38.937l-136 32A39.982 39.982 0 0 1 336 480h-80c-22.091 0-40-17.908-40-40z\"],\n    \"hand-sparkles\": [640, 512, [], \"e05d\", \"M106.66,170.64l.09,0,49.55-20.65a7.32,7.32,0,0,0,3.68-6h0a7.29,7.29,0,0,0-3.68-6l-49.57-20.67-.07,0L86,67.68a6.66,6.66,0,0,0-11.92,0l-20.7,49.63-.05,0L3.7,138A7.29,7.29,0,0,0,0,144H0a7.32,7.32,0,0,0,3.68,6L53.27,170.6l.07,0L74,220.26a6.65,6.65,0,0,0,11.92,0l20.69-49.62ZM471.38,467.41l-1-.42-1-.5a38.67,38.67,0,0,1,0-69.14l1-.49,1-.43,37.49-15.63,15.63-37.48.41-1,.47-.95c3.85-7.74,10.58-13.63,18.35-17.34,0-1.33.25-2.69.27-4V144a32,32,0,0,0-64,0v72a8,8,0,0,1-8,8H456a8,8,0,0,1-8-8V64a32,32,0,0,0-64,0V216a8,8,0,0,1-8,8H360a8,8,0,0,1-8-8V32a32,32,0,0,0-64,0V216a8,8,0,0,1-8,8H264a8,8,0,0,1-8-8V64a32,32,0,0,0-64,0v241l-23.59-32.49a40,40,0,0,0-64.71,47.09L229.3,492.21A48.07,48.07,0,0,0,268.09,512H465.7c19.24,0,35.65-11.73,43.24-28.79l-.07-.17ZM349.79,339.52,320,351.93l-12.42,29.78a4,4,0,0,1-7.15,0L288,351.93l-29.79-12.41a4,4,0,0,1,0-7.16L288,319.94l12.42-29.78a4,4,0,0,1,7.15,0L320,319.94l29.79,12.42a4,4,0,0,1,0,7.16ZM640,431.91a7.28,7.28,0,0,0-3.68-6l-49.57-20.67-.07,0L566,355.63a6.66,6.66,0,0,0-11.92,0l-20.7,49.63-.05,0L483.7,426a7.28,7.28,0,0,0-3.68,6h0a7.29,7.29,0,0,0,3.68,5.95l49.57,20.67.07,0L554,508.21a6.65,6.65,0,0,0,11.92,0l20.69-49.62h0l.09,0,49.55-20.66a7.29,7.29,0,0,0,3.68-5.95h0Z\"],\n    \"hand-spock\": [512, 512, [], \"f259\", \"M510.9005,145.27027,442.604,432.09391A103.99507,103.99507,0,0,1,341.43745,512H214.074a135.96968,135.96968,0,0,1-93.18489-36.95291L12.59072,373.12723a39.992,39.992,0,0,1,54.8122-58.24988l60.59342,57.02528v0a283.24849,283.24849,0,0,0-11.6703-80.46734L73.63726,147.36011a40.00575,40.00575,0,1,1,76.71833-22.7187l37.15458,125.39477a8.33113,8.33113,0,0,0,16.05656-4.4414L153.26183,49.95406A39.99638,39.99638,0,1,1,230.73015,30.0166l56.09491,218.15825a10.42047,10.42047,0,0,0,20.30018-.501L344.80766,63.96966a40.052,40.052,0,0,1,51.30245-30.0893c19.86073,6.2998,30.86262,27.67378,26.67564,48.08487l-33.83869,164.966a7.55172,7.55172,0,0,0,14.74406,3.2666l29.3973-123.45874a39.99414,39.99414,0,1,1,77.81208,18.53121Z\"],\n    \"hands\": [640, 512, [], \"f4c2\", \"M204.8 230.4c-10.6-14.1-30.7-17-44.8-6.4-14.1 10.6-17 30.7-6.4 44.8l38.1 50.8c4.8 6.4 4.1 15.3-1.5 20.9l-12.8 12.8c-6.7 6.7-17.6 6.2-23.6-1.1L64 244.4V96c0-17.7-14.3-32-32-32S0 78.3 0 96v218.4c0 10.9 3.7 21.5 10.5 30l104.1 134.3c5 6.5 8.4 13.9 10.4 21.7 1.8 6.9 8.1 11.6 15.3 11.6H272c8.8 0 16-7.2 16-16V384c0-27.7-9-54.6-25.6-76.8l-57.6-76.8zM608 64c-17.7 0-32 14.3-32 32v148.4l-89.8 107.8c-6 7.2-17 7.7-23.6 1.1l-12.8-12.8c-5.6-5.6-6.3-14.5-1.5-20.9l38.1-50.8c10.6-14.1 7.7-34.2-6.4-44.8-14.1-10.6-34.2-7.7-44.8 6.4l-57.6 76.8C361 329.4 352 356.3 352 384v112c0 8.8 7.2 16 16 16h131.7c7.1 0 13.5-4.7 15.3-11.6 2-7.8 5.4-15.2 10.4-21.7l104.1-134.3c6.8-8.5 10.5-19.1 10.5-30V96c0-17.7-14.3-32-32-32z\"],\n    \"hands-helping\": [640, 512, [], \"f4c4\", \"M488 192H336v56c0 39.7-32.3 72-72 72s-72-32.3-72-72V126.4l-64.9 39C107.8 176.9 96 197.8 96 220.2v47.3l-80 46.2C.7 322.5-4.6 342.1 4.3 357.4l80 138.6c8.8 15.3 28.4 20.5 43.7 11.7L231.4 448H368c35.3 0 64-28.7 64-64h16c17.7 0 32-14.3 32-32v-64h8c13.3 0 24-10.7 24-24v-48c0-13.3-10.7-24-24-24zm147.7-37.4L555.7 16C546.9.7 527.3-4.5 512 4.3L408.6 64H306.4c-12 0-23.7 3.4-33.9 9.7L239 94.6c-9.4 5.8-15 16.1-15 27.1V248c0 22.1 17.9 40 40 40s40-17.9 40-40v-88h184c30.9 0 56 25.1 56 56v28.5l80-46.2c15.3-8.9 20.5-28.4 11.7-43.7z\"],\n    \"hands-wash\": [576, 512, [], \"e05e\", \"M496,224a48,48,0,1,0-48-48A48,48,0,0,0,496,224ZM311.47,178.45A56.77,56.77,0,0,1,328,176a56,56,0,0,1,19,3.49l15.35-48.61A24,24,0,0,0,342,99.74c-11.53-1.35-22.21,6.44-25.71,17.51l-20.9,66.17ZM93.65,386.33c.8-.19,1.54-.54,2.35-.71V359.93a156,156,0,0,1,107.06-148l73.7-22.76L310.92,81.05a24,24,0,0,0-20.33-31.11c-11.53-1.34-22.22,6.45-25.72,17.52L231.42,173.88a8,8,0,0,1-15.26-4.83L259.53,31.26A24,24,0,0,0,239.2.15C227.67-1.19,217,6.6,213.49,17.66L165.56,169.37a8,8,0,1,1-15.26-4.82l38.56-122a24,24,0,0,0-20.33-31.11C157,10,146.32,17.83,142.82,28.9l-60,189.85L80.76,168.7A24,24,0,0,0,56.9,144.55c-13.23-.05-24.72,10.54-24.9,23.86V281.14A123.69,123.69,0,0,0,93.65,386.33ZM519.1,336H360a8,8,0,0,1,0-16H488a24,24,0,0,0,23.54-28.76C509.35,279.84,498.71,272,487.1,272H288l47.09-17.06a24,24,0,0,0-14.18-45.88L213.19,242.31A123.88,123.88,0,0,0,128,360v25.65a79.78,79.78,0,0,1,58,108.63A118.9,118.9,0,0,0,248,512H456a24,24,0,0,0,23.54-28.76C477.35,471.84,466.71,464,455.1,464H360a8,8,0,0,1,0-16H488a24,24,0,0,0,23.54-28.76C509.35,407.84,498.71,400,487.1,400H360a8,8,0,0,1,0-16H520a24,24,0,0,0,23.54-28.76C541.35,343.84,530.71,336,519.1,336ZM416,64a32,32,0,1,0-32-32A32,32,0,0,0,416,64ZM112,416a48,48,0,1,0,48,48A48,48,0,0,0,112,416Z\"],\n    \"handshake\": [640, 512, [], \"f2b5\", \"M434.7 64h-85.9c-8 0-15.7 3-21.6 8.4l-98.3 90c-.1.1-.2.3-.3.4-16.6 15.6-16.3 40.5-2.1 56 12.7 13.9 39.4 17.6 56.1 2.7.1-.1.3-.1.4-.2l79.9-73.2c6.5-5.9 16.7-5.5 22.6 1 6 6.5 5.5 16.6-1 22.6l-26.1 23.9L504 313.8c2.9 2.4 5.5 5 7.9 7.7V128l-54.6-54.6c-5.9-6-14.1-9.4-22.6-9.4zM544 128.2v223.9c0 17.7 14.3 32 32 32h64V128.2h-96zm48 223.9c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zM0 384h64c17.7 0 32-14.3 32-32V128.2H0V384zm48-63.9c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16c0-8.9 7.2-16 16-16zm435.9 18.6L334.6 217.5l-30 27.5c-29.7 27.1-75.2 24.5-101.7-4.4-26.9-29.4-24.8-74.9 4.4-101.7L289.1 64h-83.8c-8.5 0-16.6 3.4-22.6 9.4L128 128v223.9h18.3l90.5 81.9c27.4 22.3 67.7 18.1 90-9.3l.2-.2 17.9 15.5c15.9 13 39.4 10.5 52.3-5.4l31.4-38.6 5.4 4.4c13.7 11.1 33.9 9.1 45-4.7l9.5-11.7c11.2-13.8 9.1-33.9-4.6-45.1z\"],\n    \"handshake-alt-slash\": [640, 512, [], \"e05f\", \"M358.59,195.6,504.2,313.8a63.4,63.4,0,0,1,22.21,37.91H624a16.05,16.05,0,0,0,16-16V143.91A16,16,0,0,0,624,128H512L457.41,73.41A32,32,0,0,0,434.8,64H348.91a32,32,0,0,0-21.61,8.41l-88.12,80.68-25.69-19.85L289.09,64H205.3a32,32,0,0,0-22.6,9.41l-20.34,20.3L45.47,3.38A16,16,0,0,0,23,6.19L3.38,31.46A16,16,0,0,0,6.19,53.91L594.54,508.63A16,16,0,0,0,617,505.82l19.64-25.27a16,16,0,0,0-2.81-22.45L303.4,202.72l32.69-29.92,27-24.7a16,16,0,0,1,21.61,23.61ZM16,128A16.05,16.05,0,0,0,0,144V335.91a16,16,0,0,0,16,16H146.3l90.5,81.89a64,64,0,0,0,90-9.3l.2-.2,17.91,15.5a37.16,37.16,0,0,0,52.29-5.39l8.8-10.82L23.56,128Z\"],\n    \"handshake-slash\": [640, 512, [], \"e060\", \"M0,128.21V384H64a32,32,0,0,0,32-32V184L23.83,128.21ZM48,320.1a16,16,0,1,1-16,16A16,16,0,0,1,48,320.1Zm80,31.81h18.3l90.5,81.89a64,64,0,0,0,90-9.3l.2-.2,17.91,15.5a37.16,37.16,0,0,0,52.29-5.39l8.8-10.82L128,208.72Zm416-223.7V352.1a32,32,0,0,0,32,32h64V128.21ZM592,352.1a16,16,0,1,1,16-16A16,16,0,0,1,592,352.1ZM303.33,202.67l59.58-54.57a16,16,0,0,1,21.59,23.61L358.41,195.6,504,313.8a73.08,73.08,0,0,1,7.91,7.7V128L457.3,73.41A31.76,31.76,0,0,0,434.7,64H348.8a31.93,31.93,0,0,0-21.6,8.41l-88.07,80.64-25.64-19.81L289.09,64H205.3a32,32,0,0,0-22.6,9.41L162.36,93.72,45.47,3.38A16,16,0,0,0,23,6.19L3.38,31.46A16,16,0,0,0,6.19,53.91L594.53,508.63A16,16,0,0,0,617,505.82l19.65-25.27a16,16,0,0,0-2.82-22.45Z\"],\n    \"hanukiah\": [640, 512, [], \"f6e6\", \"M232 160c-4.42 0-8 3.58-8 8v120h32V168c0-4.42-3.58-8-8-8h-16zm-64 0c-4.42 0-8 3.58-8 8v120h32V168c0-4.42-3.58-8-8-8h-16zm224 0c-4.42 0-8 3.58-8 8v120h32V168c0-4.42-3.58-8-8-8h-16zm64 0c-4.42 0-8 3.58-8 8v120h32V168c0-4.42-3.58-8-8-8h-16zm88 8c0-4.42-3.58-8-8-8h-16c-4.42 0-8 3.58-8 8v120h32V168zm-440-8c-4.42 0-8 3.58-8 8v120h32V168c0-4.42-3.58-8-8-8h-16zm520 0h-32c-8.84 0-16 7.16-16 16v112c0 17.67-14.33 32-32 32H352V128c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v192H96c-17.67 0-32-14.33-32-32V176c0-8.84-7.16-16-16-16H16c-8.84 0-16 7.16-16 16v112c0 53.02 42.98 96 96 96h192v64H112c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h416c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16H352v-64h192c53.02 0 96-42.98 96-96V176c0-8.84-7.16-16-16-16zm-16-32c13.25 0 24-11.94 24-26.67S608 48 608 48s-24 38.61-24 53.33S594.75 128 608 128zm-576 0c13.25 0 24-11.94 24-26.67S32 48 32 48 8 86.61 8 101.33 18.75 128 32 128zm288-48c13.25 0 24-11.94 24-26.67S320 0 320 0s-24 38.61-24 53.33S306.75 80 320 80zm-208 48c13.25 0 24-11.94 24-26.67S112 48 112 48s-24 38.61-24 53.33S98.75 128 112 128zm64 0c13.25 0 24-11.94 24-26.67S176 48 176 48s-24 38.61-24 53.33S162.75 128 176 128zm64 0c13.25 0 24-11.94 24-26.67S240 48 240 48s-24 38.61-24 53.33S226.75 128 240 128zm160 0c13.25 0 24-11.94 24-26.67S400 48 400 48s-24 38.61-24 53.33S386.75 128 400 128zm64 0c13.25 0 24-11.94 24-26.67S464 48 464 48s-24 38.61-24 53.33S450.75 128 464 128zm64 0c13.25 0 24-11.94 24-26.67S528 48 528 48s-24 38.61-24 53.33S514.75 128 528 128z\"],\n    \"hard-hat\": [512, 512, [], \"f807\", \"M480 288c0-80.25-49.28-148.92-119.19-177.62L320 192V80a16 16 0 0 0-16-16h-96a16 16 0 0 0-16 16v112l-40.81-81.62C81.28 139.08 32 207.75 32 288v64h448zm16 96H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h480a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\"],\n    \"hashtag\": [448, 512, [], \"f292\", \"M440.667 182.109l7.143-40c1.313-7.355-4.342-14.109-11.813-14.109h-74.81l14.623-81.891C377.123 38.754 371.468 32 363.997 32h-40.632a12 12 0 0 0-11.813 9.891L296.175 128H197.54l14.623-81.891C213.477 38.754 207.822 32 200.35 32h-40.632a12 12 0 0 0-11.813 9.891L132.528 128H53.432a12 12 0 0 0-11.813 9.891l-7.143 40C33.163 185.246 38.818 192 46.289 192h74.81L98.242 320H19.146a12 12 0 0 0-11.813 9.891l-7.143 40C-1.123 377.246 4.532 384 12.003 384h74.81L72.19 465.891C70.877 473.246 76.532 480 84.003 480h40.632a12 12 0 0 0 11.813-9.891L151.826 384h98.634l-14.623 81.891C234.523 473.246 240.178 480 247.65 480h40.632a12 12 0 0 0 11.813-9.891L315.472 384h79.096a12 12 0 0 0 11.813-9.891l7.143-40c1.313-7.355-4.342-14.109-11.813-14.109h-74.81l22.857-128h79.096a12 12 0 0 0 11.813-9.891zM261.889 320h-98.634l22.857-128h98.634l-22.857 128z\"],\n    \"hat-cowboy\": [640, 512, [], \"f8c0\", \"M490 296.9C480.51 239.51 450.51 64 392.3 64c-14 0-26.49 5.93-37 14a58.21 58.21 0 0 1-70.58 0c-10.51-8-23-14-37-14-58.2 0-88.2 175.47-97.71 232.88C188.81 309.47 243.73 320 320 320s131.23-10.51 170-23.1zm142.9-37.18a16 16 0 0 0-19.75 1.5c-1 .9-101.27 90.78-293.16 90.78-190.82 0-292.22-89.94-293.24-90.84A16 16 0 0 0 1 278.53C1.73 280.55 78.32 480 320 480s318.27-199.45 319-201.47a16 16 0 0 0-6.09-18.81z\"],\n    \"hat-cowboy-side\": [640, 512, [], \"f8c1\", \"M260.8 291.06c-28.63-22.94-62-35.06-96.4-35.06C87 256 21.47 318.72 1.43 412.06c-3.55 16.6-.43 33.83 8.57 47.3C18.75 472.47 31.83 480 45.88 480H592c-103.21 0-155-37.07-233.19-104.46zm234.65-18.29L468.4 116.2A64 64 0 0 0 392 64.41L200.85 105a64 64 0 0 0-50.35 55.79L143.61 226c6.9-.83 13.7-2 20.79-2 41.79 0 82 14.55 117.29 42.82l98 84.48C450.76 412.54 494.9 448 592 448a48 48 0 0 0 48-48c0-25.39-29.6-119.33-144.55-127.23z\"],\n    \"hat-wizard\": [512, 512, [], \"f6e8\", \"M496 448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h480c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zm-304-64l-64-32 64-32 32-64 32 64 64 32-64 32-16 32h208l-86.41-201.63a63.955 63.955 0 0 1-1.89-45.45L416 0 228.42 107.19a127.989 127.989 0 0 0-53.46 59.15L64 416h144l-16-32zm64-224l16-32 16 32 32 16-32 16-16 32-16-32-32-16 32-16z\"],\n    \"hdd\": [576, 512, [], \"f0a0\", \"M576 304v96c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48v-96c0-26.51 21.49-48 48-48h480c26.51 0 48 21.49 48 48zm-48-80a79.557 79.557 0 0 1 30.777 6.165L462.25 85.374A48.003 48.003 0 0 0 422.311 64H153.689a48 48 0 0 0-39.938 21.374L17.223 230.165A79.557 79.557 0 0 1 48 224h480zm-48 96c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm-96 0c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32z\"],\n    \"head-side-cough\": [640, 512, [], \"e061\", \"M616,304a24,24,0,1,0-24-24A24,24,0,0,0,616,304ZM552,416a24,24,0,1,0,24,24A24,24,0,0,0,552,416Zm-64-56a24,24,0,1,0,24,24A24,24,0,0,0,488,360ZM616,464a24,24,0,1,0,24,24A24,24,0,0,0,616,464Zm0-104a24,24,0,1,0,24,24A24,24,0,0,0,616,360Zm-64-40a24,24,0,1,0,24,24A24,24,0,0,0,552,320Zm-74.78-45c-21-47.12-48.5-151.75-73.12-186.75A208.13,208.13,0,0,0,234.1,0H192C86,0,0,86,0,192c0,56.75,24.75,107.62,64,142.88V512H288V480h64a64,64,0,0,0,64-64H320a32,32,0,0,1,0-64h96V320h32A32,32,0,0,0,477.22,275ZM288,224a32,32,0,1,1,32-32A32.07,32.07,0,0,1,288,224Z\"],\n    \"head-side-cough-slash\": [640, 512, [], \"e062\", \"M454.11,319.21c19.56-3.81,31.62-25,23.11-44.21-21-47.12-48.5-151.75-73.12-186.75A208.13,208.13,0,0,0,234.1,0H192A190.64,190.64,0,0,0,84.18,33.3L45.46,3.38A16,16,0,0,0,23,6.19L3.37,31.46A16,16,0,0,0,6.18,53.91L594.53,508.63A16,16,0,0,0,617,505.82l19.64-25.27a16,16,0,0,0-2.81-22.45ZM313.39,210.45,263.61,172c5.88-7.14,14.43-12,24.36-12a32.06,32.06,0,0,1,32,32C320,199,317.24,205.17,313.39,210.45ZM616,304a24,24,0,1,0-24-24A24,24,0,0,0,616,304Zm-64,64a24,24,0,1,0-24-24A24,24,0,0,0,552,368ZM288,384a32,32,0,0,1,32-32h19.54L20.73,105.59A190.86,190.86,0,0,0,0,192c0,56.75,24.75,107.62,64,142.88V512H288V480h64a64,64,0,0,0,64-64H320A32,32,0,0,1,288,384Zm328-24a24,24,0,1,0,24,24A24,24,0,0,0,616,360Z\"],\n    \"head-side-mask\": [512, 512, [], \"e063\", \"M.15,184.42C-2.17,244.21,23,298.06,64,334.88V512H224V316.51L3.67,156.25A182.28,182.28,0,0,0,.15,184.42ZM509.22,275c-21-47.12-48.5-151.75-73.12-186.75A208.11,208.11,0,0,0,266.11,0H200C117,0,42.48,50.57,13.25,123.65L239.21,288H511.76A31.35,31.35,0,0,0,509.22,275ZM320,224a32,32,0,1,1,32-32A32.07,32.07,0,0,1,320,224Zm16,144H496l16-48H256V512H401.88a64,64,0,0,0,60.71-43.76L464,464H336a16,16,0,0,1,0-32H474.67l10.67-32H336a16,16,0,0,1,0-32Z\"],\n    \"head-side-virus\": [512, 512, [], \"e064\", \"M272,240a16,16,0,1,0,16,16A16,16,0,0,0,272,240Zm-64-64a16,16,0,1,0,16,16A16,16,0,0,0,208,176Zm301.2,99c-20.93-47.12-48.43-151.73-73.07-186.75A207.9,207.9,0,0,0,266.09,0H192C86,0,0,86,0,192A191.23,191.23,0,0,0,64,334.81V512H320V448h64a64,64,0,0,0,64-64V320H480A32,32,0,0,0,509.2,275ZM368,240H355.88c-28.51,0-42.79,34.47-22.63,54.63l8.58,8.57a16,16,0,1,1-22.63,22.63l-8.57-8.58C290.47,297.09,256,311.37,256,339.88V352a16,16,0,0,1-32,0V339.88c0-28.51-34.47-42.79-54.63-22.63l-8.57,8.58a16,16,0,0,1-22.63-22.63l8.58-8.57c20.16-20.16,5.88-54.63-22.63-54.63H112a16,16,0,0,1,0-32h12.12c28.51,0,42.79-34.47,22.63-54.63l-8.58-8.57a16,16,0,0,1,22.63-22.63l8.57,8.58c20.16,20.16,54.63,5.88,54.63-22.63V96a16,16,0,0,1,32,0v12.12c0,28.51,34.47,42.79,54.63,22.63l8.57-8.58a16,16,0,0,1,22.63,22.63l-8.58,8.57C313.09,173.53,327.37,208,355.88,208H368a16,16,0,0,1,0,32Z\"],\n    \"heading\": [512, 512, [], \"f1dc\", \"M448 96v320h32a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16H320a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h32V288H160v128h32a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16H32a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h32V96H32a16 16 0 0 1-16-16V48a16 16 0 0 1 16-16h160a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16h-32v128h192V96h-32a16 16 0 0 1-16-16V48a16 16 0 0 1 16-16h160a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16z\"],\n    \"headphones\": [512, 512, [], \"f025\", \"M256 32C114.52 32 0 146.496 0 288v48a32 32 0 0 0 17.689 28.622l14.383 7.191C34.083 431.903 83.421 480 144 480h24c13.255 0 24-10.745 24-24V280c0-13.255-10.745-24-24-24h-24c-31.342 0-59.671 12.879-80 33.627V288c0-105.869 86.131-192 192-192s192 86.131 192 192v1.627C427.671 268.879 399.342 256 368 256h-24c-13.255 0-24 10.745-24 24v176c0 13.255 10.745 24 24 24h24c60.579 0 109.917-48.098 111.928-108.187l14.382-7.191A32 32 0 0 0 512 336v-48c0-141.479-114.496-256-256-256z\"],\n    \"headphones-alt\": [512, 512, [], \"f58f\", \"M160 288h-16c-35.35 0-64 28.7-64 64.12v63.76c0 35.41 28.65 64.12 64 64.12h16c17.67 0 32-14.36 32-32.06V320.06c0-17.71-14.33-32.06-32-32.06zm208 0h-16c-17.67 0-32 14.35-32 32.06v127.88c0 17.7 14.33 32.06 32 32.06h16c35.35 0 64-28.71 64-64.12v-63.76c0-35.41-28.65-64.12-64-64.12zM256 32C112.91 32 4.57 151.13 0 288v112c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16V288c0-114.67 93.33-207.8 208-207.82 114.67.02 208 93.15 208 207.82v112c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16V288C507.43 151.13 399.09 32 256 32z\"],\n    \"headset\": [512, 512, [], \"f590\", \"M192 208c0-17.67-14.33-32-32-32h-16c-35.35 0-64 28.65-64 64v48c0 35.35 28.65 64 64 64h16c17.67 0 32-14.33 32-32V208zm176 144c35.35 0 64-28.65 64-64v-48c0-35.35-28.65-64-64-64h-16c-17.67 0-32 14.33-32 32v112c0 17.67 14.33 32 32 32h16zM256 0C113.18 0 4.58 118.83 0 256v16c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-16c0-114.69 93.31-208 208-208s208 93.31 208 208h-.12c.08 2.43.12 165.72.12 165.72 0 23.35-18.93 42.28-42.28 42.28H320c0-26.51-21.49-48-48-48h-32c-26.51 0-48 21.49-48 48s21.49 48 48 48h181.72c49.86 0 90.28-40.42 90.28-90.28V256C507.42 118.83 398.82 0 256 0z\"],\n    \"heart\": [512, 512, [], \"f004\", \"M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z\"],\n    \"heart-broken\": [512, 512, [], \"f7a9\", \"M473.7 73.8l-2.4-2.5c-46-47-118-51.7-169.6-14.8L336 159.9l-96 64 48 128-144-144 96-64-28.6-86.5C159.7 19.6 87 24 40.7 71.4l-2.4 2.4C-10.4 123.6-12.5 202.9 31 256l212.1 218.6c7.1 7.3 18.6 7.3 25.7 0L481 255.9c43.5-53 41.4-132.3-7.3-182.1z\"],\n    \"heartbeat\": [512, 512, [], \"f21e\", \"M320.2 243.8l-49.7 99.4c-6 12.1-23.4 11.7-28.9-.6l-56.9-126.3-30 71.7H60.6l182.5 186.5c7.1 7.3 18.6 7.3 25.7 0L451.4 288H342.3l-22.1-44.2zM473.7 73.9l-2.4-2.5c-51.5-52.6-135.8-52.6-187.4 0L256 100l-27.9-28.5c-51.5-52.7-135.9-52.7-187.4 0l-2.4 2.4C-10.4 123.7-12.5 203 31 256h102.4l35.9-86.2c5.4-12.9 23.6-13.2 29.4-.4l58.2 129.3 49-97.9c5.9-11.8 22.7-11.8 28.6 0l27.6 55.2H481c43.5-53 41.4-132.3-7.3-182.1z\"],\n    \"helicopter\": [640, 512, [], \"f533\", \"M304 384h272c17.67 0 32-14.33 32-32 0-123.71-100.29-224-224-224V64h176c8.84 0 16-7.16 16-16V16c0-8.84-7.16-16-16-16H144c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h176v64H112L68.8 70.4C65.78 66.37 61.03 64 56 64H16.01C5.6 64-2.04 73.78.49 83.88L32 192l160 64 86.4 115.2A31.992 31.992 0 0 0 304 384zm112-188.49C478.55 208.3 528.03 257.44 540.79 320H416V195.51zm219.37 263.3l-22.15-22.2c-6.25-6.26-16.24-6.1-22.64.01-7.09 6.77-13.84 11.25-24.64 11.25H240c-8.84 0-16 7.18-16 16.03v32.06c0 8.85 7.16 16.03 16 16.03h325.94c14.88 0 35.3-.47 68.45-29.52 7.02-6.14 7.57-17.05.98-23.66z\"],\n    \"highlighter\": [544, 512, [], \"f591\", \"M0 479.98L99.92 512l35.45-35.45-67.04-67.04L0 479.98zm124.61-240.01a36.592 36.592 0 0 0-10.79 38.1l13.05 42.83-50.93 50.94 96.23 96.23 50.86-50.86 42.74 13.08c13.73 4.2 28.65-.01 38.15-10.78l35.55-41.64-173.34-173.34-41.52 35.44zm403.31-160.7l-63.2-63.2c-20.49-20.49-53.38-21.52-75.12-2.35L190.55 183.68l169.77 169.78L530.27 154.4c19.18-21.74 18.15-54.63-2.35-75.13z\"],\n    \"hiking\": [384, 512, [], \"f6ec\", \"M80.95 472.23c-4.28 17.16 6.14 34.53 23.28 38.81 2.61.66 5.22.95 7.8.95 14.33 0 27.37-9.7 31.02-24.23l25.24-100.97-52.78-52.78-34.56 138.22zm14.89-196.12L137 117c2.19-8.42-3.14-16.95-11.92-19.06-43.88-10.52-88.35 15.07-99.32 57.17L.49 253.24c-2.19 8.42 3.14 16.95 11.92 19.06l63.56 15.25c8.79 2.1 17.68-3.02 19.87-11.44zM368 160h-16c-8.84 0-16 7.16-16 16v16h-34.75l-46.78-46.78C243.38 134.11 228.61 128 212.91 128c-27.02 0-50.47 18.3-57.03 44.52l-26.92 107.72a32.012 32.012 0 0 0 8.42 30.39L224 397.25V480c0 17.67 14.33 32 32 32s32-14.33 32-32v-82.75c0-17.09-6.66-33.16-18.75-45.25l-46.82-46.82c.15-.5.49-.89.62-1.41l19.89-79.57 22.43 22.43c6 6 14.14 9.38 22.62 9.38h48v240c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16V176c.01-8.84-7.15-16-15.99-16zM240 96c26.51 0 48-21.49 48-48S266.51 0 240 0s-48 21.49-48 48 21.49 48 48 48z\"],\n    \"hippo\": [640, 512, [], \"f6ed\", \"M581.12 96.2c-27.67-.15-52.5 17.58-76.6 26.62C489.98 88.27 455.83 64 416 64c-11.28 0-21.95 2.3-32 5.88V56c0-13.26-10.75-24-24-24h-16c-13.25 0-24 10.74-24 24v48.98C286.01 79.58 241.24 64 192 64 85.96 64 0 135.64 0 224v240c0 8.84 7.16 16 16 16h64c8.84 0 16-7.16 16-16v-70.79C128.35 407.57 166.72 416 208 416s79.65-8.43 112-22.79V464c0 8.84 7.16 16 16 16h64c8.84 0 16-7.16 16-16V288h128v32c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-32c17.67 0 32-14.33 32-32v-92.02c0-34.09-24.79-67.59-58.88-67.78zM448 176c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16z\"],\n    \"history\": [512, 512, [], \"f1da\", \"M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z\"],\n    \"hockey-puck\": [512, 512, [], \"f453\", \"M0 160c0-53 114.6-96 256-96s256 43 256 96-114.6 96-256 96S0 213 0 160zm0 82.2V352c0 53 114.6 96 256 96s256-43 256-96V242.2c-113.4 82.3-398.5 82.4-512 0z\"],\n    \"holly-berry\": [448, 512, [], \"f7aa\", \"M144 192c26.5 0 48-21.5 48-48s-21.5-48-48-48-48 21.5-48 48 21.5 48 48 48zm112-48c0 26.5 21.5 48 48 48s48-21.5 48-48-21.5-48-48-48-48 21.5-48 48zm-32-48c26.5 0 48-21.5 48-48S250.5 0 224 0s-48 21.5-48 48 21.5 48 48 48zm-16.2 139.1c.1-12.4-13.1-20.1-23.8-13.7-34.3 20.3-71.4 32.7-108.7 36.2-9.7.9-15.6 11.3-11.6 20.2 6.2 13.9 11.1 28.6 14.7 43.8 3.6 15.2-5.3 30.6-20.2 35.1-14.9 4.5-30.1 7.6-45.3 9.1-9.7 1-15.7 11.3-11.7 20.2 15 32.8 22.9 69.5 23 107.7.1 14.4 15.2 23.1 27.6 16 33.2-19 68.9-30.5 104.8-33.9 9.7-.9 15.6-11.3 11.6-20.2-6.2-13.9-11.1-28.6-14.7-43.8-3.6-15.2 5.3-30.6 20.2-35.1 14.9-4.5 30.1-7.6 45.3-9.1 9.7-1 15.7-11.3 11.7-20.2-15.5-34.2-23.3-72.5-22.9-112.3zM435 365.6c-15.2-1.6-30.3-4.7-45.3-9.1-14.9-4.5-23.8-19.9-20.2-35.1 3.6-15.2 8.5-29.8 14.7-43.8 4-8.9-1.9-19.3-11.6-20.2-37.3-3.5-74.4-15.9-108.7-36.2-10.7-6.3-23.9 1.4-23.8 13.7 0 1.6-.2 3.2-.2 4.9.2 33.3 7 65.7 19.9 94 5.7 12.4 5.2 26.6-.6 38.9 4.9 1.2 9.9 2.2 14.8 3.7 14.9 4.5 23.8 19.9 20.2 35.1-3.6 15.2-8.5 29.8-14.7 43.8-4 8.9 1.9 19.3 11.6 20.2 35.9 3.4 71.6 14.9 104.8 33.9 12.5 7.1 27.6-1.6 27.6-16 .2-38.2 8-75 23-107.7 4.3-8.7-1.8-19.1-11.5-20.1z\"],\n    \"home\": [576, 512, [], \"f015\", \"M280.37 148.26L96 300.11V464a16 16 0 0 0 16 16l112.06-.29a16 16 0 0 0 15.92-16V368a16 16 0 0 1 16-16h64a16 16 0 0 1 16 16v95.64a16 16 0 0 0 16 16.05L464 480a16 16 0 0 0 16-16V300L295.67 148.26a12.19 12.19 0 0 0-15.3 0zM571.6 251.47L488 182.56V44.05a12 12 0 0 0-12-12h-56a12 12 0 0 0-12 12v72.61L318.47 43a48 48 0 0 0-61 0L4.34 251.47a12 12 0 0 0-1.6 16.9l25.5 31A12 12 0 0 0 45.15 301l235.22-193.74a12.19 12.19 0 0 1 15.3 0L530.9 301a12 12 0 0 0 16.9-1.6l25.5-31a12 12 0 0 0-1.7-16.93z\"],\n    \"horse\": [576, 512, [], \"f6f0\", \"M575.92 76.6c-.01-8.13-3.02-15.87-8.58-21.8-3.78-4.03-8.58-9.12-13.69-14.5 11.06-6.84 19.5-17.49 22.18-30.66C576.85 4.68 572.96 0 567.9 0H447.92c-70.69 0-128 57.31-128 128H160c-28.84 0-54.4 12.98-72 33.11V160c-48.53 0-88 39.47-88 88v56c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-56c0-13.22 6.87-24.39 16.78-31.68-.21 2.58-.78 5.05-.78 7.68 0 27.64 11.84 52.36 30.54 69.88l-25.72 68.6a63.945 63.945 0 0 0-2.16 37.99l24.85 99.41A15.982 15.982 0 0 0 107.02 512h65.96c10.41 0 18.05-9.78 15.52-19.88l-26.31-105.26 23.84-63.59L320 345.6V496c0 8.84 7.16 16 16 16h64c8.84 0 16-7.16 16-16V318.22c19.74-20.19 32-47.75 32-78.22 0-.22-.07-.42-.08-.64V136.89l16 7.11 18.9 37.7c7.45 14.87 25.05 21.55 40.49 15.37l32.55-13.02a31.997 31.997 0 0 0 20.12-29.74l-.06-77.71zm-64 19.4c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16z\"],\n    \"horse-head\": [512, 512, [], \"f7ab\", \"M509.8 332.5l-69.9-164.3c-14.9-41.2-50.4-71-93-79.2 18-10.6 46.3-35.9 34.2-82.3-1.3-5-7.1-7.9-12-6.1L166.9 76.3C35.9 123.4 0 238.9 0 398.8V480c0 17.7 14.3 32 32 32h236.2c23.8 0 39.3-25 28.6-46.3L256 384v-.7c-45.6-3.5-84.6-30.7-104.3-69.6-1.6-3.1-.9-6.9 1.6-9.3l12.1-12.1c3.9-3.9 10.6-2.7 12.9 2.4 14.8 33.7 48.2 57.4 87.4 57.4 17.2 0 33-5.1 46.8-13.2l46 63.9c6 8.4 15.7 13.3 26 13.3h50.3c8.5 0 16.6-3.4 22.6-9.4l45.3-39.8c8.9-9.1 11.7-22.6 7.1-34.4zM328 224c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24z\"],\n    \"hospital\": [448, 512, [], \"f0f8\", \"M448 492v20H0v-20c0-6.627 5.373-12 12-12h20V120c0-13.255 10.745-24 24-24h88V24c0-13.255 10.745-24 24-24h112c13.255 0 24 10.745 24 24v72h88c13.255 0 24 10.745 24 24v360h20c6.627 0 12 5.373 12 12zM308 192h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12zm-168 64h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12zm104 128h-40c-6.627 0-12 5.373-12 12v84h64v-84c0-6.627-5.373-12-12-12zm64-96h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12zm-116 12c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40zM182 96h26v26a6 6 0 0 0 6 6h20a6 6 0 0 0 6-6V96h26a6 6 0 0 0 6-6V70a6 6 0 0 0-6-6h-26V38a6 6 0 0 0-6-6h-20a6 6 0 0 0-6 6v26h-26a6 6 0 0 0-6 6v20a6 6 0 0 0 6 6z\"],\n    \"hospital-alt\": [576, 512, [], \"f47d\", \"M544 96H416V32c0-17.7-14.3-32-32-32H192c-17.7 0-32 14.3-32 32v64H32c-17.7 0-32 14.3-32 32v368c0 8.8 7.2 16 16 16h544c8.8 0 16-7.2 16-16V128c0-17.7-14.3-32-32-32zM160 436c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-128c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm160 128c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-128c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm16-170c0 3.3-2.7 6-6 6h-26v26c0 3.3-2.7 6-6 6h-20c-3.3 0-6-2.7-6-6v-26h-26c-3.3 0-6-2.7-6-6v-20c0-3.3 2.7-6 6-6h26V86c0-3.3 2.7-6 6-6h20c3.3 0 6 2.7 6 6v26h26c3.3 0 6 2.7 6 6v20zm144 298c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-128c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40z\"],\n    \"hospital-symbol\": [512, 512, [], \"f47e\", \"M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256 256-114.6 256-256S397.4 0 256 0zm112 376c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-88h-96v88c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V136c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v88h96v-88c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v240z\"],\n    \"hospital-user\": [640, 512, [], \"f80d\", \"M480 320a96 96 0 1 0-96-96 96 96 0 0 0 96 96zm48 32a22.88 22.88 0 0 0-7.06 1.09 124.76 124.76 0 0 1-81.89 0A22.82 22.82 0 0 0 432 352a112 112 0 0 0-112 112.62c.14 26.26 21.73 47.38 48 47.38h224c26.27 0 47.86-21.12 48-47.38A112 112 0 0 0 528 352zm-198.09 10.45A145.19 145.19 0 0 1 352 344.62V128a32 32 0 0 0-32-32h-32V32a32 32 0 0 0-32-32H96a32 32 0 0 0-32 32v64H32a32 32 0 0 0-32 32v368a16 16 0 0 0 16 16h288.31A78.62 78.62 0 0 1 288 464.79a143.06 143.06 0 0 1 41.91-102.34zM144 404a12 12 0 0 1-12 12H92a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-128a12 12 0 0 1-12 12H92a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm48-122a6 6 0 0 1-6 6h-20a6 6 0 0 1-6-6v-26h-26a6 6 0 0 1-6-6v-20a6 6 0 0 1 6-6h26V70a6 6 0 0 1 6-6h20a6 6 0 0 1 6 6v26h26a6 6 0 0 1 6 6v20a6 6 0 0 1-6 6h-26zm80 250a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-128a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12z\"],\n    \"hot-tub\": [512, 512, [], \"f593\", \"M414.21 177.65c1.02 8.21 7.75 14.35 15.75 14.35h16.12c9.51 0 17.08-8.57 16-18.35-4.34-39.11-22.4-74.53-50.13-97.16-17.37-14.17-28.82-36.75-31.98-62.15C378.96 6.14 372.22 0 364.23 0h-16.12c-9.51 0-17.09 8.57-16 18.35 4.34 39.11 22.4 74.53 50.13 97.16 17.36 14.17 28.82 36.75 31.97 62.14zm-108 0c1.02 8.21 7.75 14.35 15.75 14.35h16.12c9.51 0 17.08-8.57 16-18.35-4.34-39.11-22.4-74.53-50.13-97.16-17.37-14.17-28.82-36.75-31.98-62.15C270.96 6.14 264.22 0 256.23 0h-16.12c-9.51 0-17.09 8.57-16 18.35 4.34 39.11 22.4 74.53 50.13 97.16 17.36 14.17 28.82 36.75 31.97 62.14zM480 256H256l-110.93-83.2a63.99 63.99 0 0 0-38.4-12.8H64c-35.35 0-64 28.65-64 64v224c0 35.35 28.65 64 64 64h384c35.35 0 64-28.65 64-64V288c0-17.67-14.33-32-32-32zM128 440c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8V328c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v112zm96 0c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8V328c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v112zm96 0c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8V328c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v112zm96 0c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8V328c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v112zM64 128c35.35 0 64-28.65 64-64S99.35 0 64 0 0 28.65 0 64s28.65 64 64 64z\"],\n    \"hotdog\": [512, 512, [], \"f80f\", \"M488.56 23.44a80 80 0 0 0-113.12 0l-352 352a80 80 0 1 0 113.12 113.12l352-352a80 80 0 0 0 0-113.12zm-49.93 95.19c-19.6 19.59-37.52 22.67-51.93 25.14C373.76 146 364.4 147.6 352 160s-14 21.76-16.23 34.71c-2.48 14.4-5.55 32.33-25.15 51.92s-37.52 22.67-51.92 25.15C245.75 274 236.4 275.6 224 288s-14 21.75-16.23 34.7c-2.47 14.4-5.54 32.33-25.14 51.92s-37.53 22.68-51.93 25.15C117.76 402 108.4 403.6 96 416a16 16 0 0 1-22.63-22.63c19.6-19.59 37.52-22.67 51.92-25.14 13-2.22 22.3-3.82 34.71-16.23s14-21.75 16.22-34.7c2.48-14.4 5.55-32.33 25.15-51.92s37.52-22.67 51.92-25.14c13-2.22 22.3-3.83 34.7-16.23s14-21.76 16.24-34.71c2.47-14.4 5.54-32.33 25.14-51.92s37.52-22.68 51.92-25.15C394.24 110 403.59 108.41 416 96a16 16 0 0 1 22.63 22.63zM31.44 322.18L322.18 31.44l-11.54-11.55c-25-25-63.85-26.66-86.79-3.72L16.17 223.85c-22.94 22.94-21.27 61.79 3.72 86.78zm449.12-132.36L189.82 480.56l11.54 11.55c25 25 63.85 26.66 86.79 3.72l207.68-207.68c22.94-22.94 21.27-61.79-3.72-86.79z\"],\n    \"hotel\": [576, 512, [], \"f594\", \"M560 64c8.84 0 16-7.16 16-16V16c0-8.84-7.16-16-16-16H16C7.16 0 0 7.16 0 16v32c0 8.84 7.16 16 16 16h15.98v384H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h240v-80c0-8.8 7.2-16 16-16h32c8.8 0 16 7.2 16 16v80h240c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16h-16V64h16zm-304 44.8c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4zm0 96c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4zm-128-96c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4zM179.2 256h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4c0 6.4-6.4 12.8-12.8 12.8zM192 384c0-53.02 42.98-96 96-96s96 42.98 96 96H192zm256-140.8c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm0-96c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4z\"],\n    \"hourglass\": [384, 512, [], \"f254\", \"M360 64c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24 0 90.965 51.016 167.734 120.842 192C75.016 280.266 24 357.035 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24 0-90.965-51.016-167.734-120.842-192C308.984 231.734 360 154.965 360 64z\"],\n    \"hourglass-end\": [384, 512, [], \"f253\", \"M360 64c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24 0 90.965 51.016 167.734 120.842 192C75.016 280.266 24 357.035 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24 0-90.965-51.016-167.734-120.842-192C308.984 231.734 360 154.965 360 64zM192 208c-57.787 0-104-66.518-104-144h208c0 77.945-46.51 144-104 144z\"],\n    \"hourglass-half\": [384, 512, [], \"f252\", \"M360 0H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24 0 90.965 51.016 167.734 120.842 192C75.016 280.266 24 357.035 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24 0-90.965-51.016-167.734-120.842-192C308.984 231.734 360 154.965 360 64c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24zm-75.078 384H99.08c17.059-46.797 52.096-80 92.92-80 40.821 0 75.862 33.196 92.922 80zm.019-256H99.078C91.988 108.548 88 86.748 88 64h208c0 22.805-3.987 44.587-11.059 64z\"],\n    \"hourglass-start\": [384, 512, [], \"f251\", \"M360 0H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24 0 90.965 51.016 167.734 120.842 192C75.016 280.266 24 357.035 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24 0-90.965-51.016-167.734-120.842-192C308.984 231.734 360 154.965 360 64c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24zm-64 448H88c0-77.458 46.204-144 104-144 57.786 0 104 66.517 104 144z\"],\n    \"house-damage\": [576, 512, [], \"f6f1\", \"M288 114.96L69.47 307.71c-1.62 1.46-3.69 2.14-5.47 3.35V496c0 8.84 7.16 16 16 16h149.23L192 439.19l104.11-64-60.16-119.22L384 392.75l-104.11 64L319.81 512H496c8.84 0 16-7.16 16-16V311.1c-1.7-1.16-3.72-1.82-5.26-3.2L288 114.96zm282.69 121.32L512 184.45V48c0-8.84-7.16-16-16-16h-64c-8.84 0-16 7.16-16 16v51.69L314.75 10.31C307.12 3.45 297.56.01 288 0s-19.1 3.41-26.7 10.27L5.31 236.28c-6.57 5.91-7.12 16.02-1.21 22.6l21.4 23.82c5.9 6.57 16.02 7.12 22.6 1.21L277.42 81.63c6.05-5.33 15.12-5.33 21.17 0L527.91 283.9c6.57 5.9 16.69 5.36 22.6-1.21l21.4-23.82c5.9-6.57 5.36-16.69-1.22-22.59z\"],\n    \"house-user\": [576, 512, [], \"e065\", \"M570.69,236.27,512,184.44V48a16,16,0,0,0-16-16H432a16,16,0,0,0-16,16V99.67L314.78,10.3C308.5,4.61,296.53,0,288,0s-20.46,4.61-26.74,10.3l-256,226A18.27,18.27,0,0,0,0,248.2a18.64,18.64,0,0,0,4.09,10.71L25.5,282.7a21.14,21.14,0,0,0,12,5.3,21.67,21.67,0,0,0,10.69-4.11l15.9-14V480a32,32,0,0,0,32,32H480a32,32,0,0,0,32-32V269.88l15.91,14A21.94,21.94,0,0,0,538.63,288a20.89,20.89,0,0,0,11.87-5.31l21.41-23.81A21.64,21.64,0,0,0,576,248.19,21,21,0,0,0,570.69,236.27ZM288,176a64,64,0,1,1-64,64A64,64,0,0,1,288,176ZM400,448H176a16,16,0,0,1-16-16,96,96,0,0,1,96-96h64a96,96,0,0,1,96,96A16,16,0,0,1,400,448Z\"],\n    \"hryvnia\": [384, 512, [], \"f6f2\", \"M368 240c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16h-41.86c13.41-28.63 13.74-63.33-4.13-94.05C303.34 49.84 267.1 32 229.96 32h-78.82c-24.32 0-47.86 8.53-66.54 24.09L72.83 65.9c-10.18 8.49-11.56 23.62-3.07 33.8l20.49 24.59c8.49 10.19 23.62 11.56 33.81 3.07l11.73-9.78c4.32-3.6 9.77-5.57 15.39-5.57h83.62c11.69 0 21.2 9.52 21.2 21.2 0 5.91-2.48 11.58-6.81 15.58L219.7 176H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h134.37l-34.67 32H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h41.86c-13.41 28.63-13.74 63.33 4.13 94.05C80.66 462.15 116.9 480 154.04 480h78.82c24.32 0 47.86-8.53 66.54-24.09l11.77-9.81c10.18-8.49 11.56-23.62 3.07-33.8l-20.49-24.59c-8.49-10.19-23.62-11.56-33.81-3.07l-11.75 9.8a23.992 23.992 0 0 1-15.36 5.56H149.2c-11.69 0-21.2-9.52-21.2-21.2 0-5.91 2.48-11.58 6.81-15.58L164.3 336H368c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16H233.63l34.67-32H368z\"],\n    \"i-cursor\": [256, 512, [], \"f246\", \"M256 52.048V12.065C256 5.496 250.726.148 244.158.066 211.621-.344 166.469.011 128 37.959 90.266.736 46.979-.114 11.913.114 5.318.157 0 5.519 0 12.114v39.645c0 6.687 5.458 12.078 12.145 11.998C38.111 63.447 96 67.243 96 112.182V224H60c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h36v112c0 44.932-56.075 48.031-83.95 47.959C5.404 447.942 0 453.306 0 459.952v39.983c0 6.569 5.274 11.917 11.842 11.999 32.537.409 77.689.054 116.158-37.894 37.734 37.223 81.021 38.073 116.087 37.845 6.595-.043 11.913-5.405 11.913-12V460.24c0-6.687-5.458-12.078-12.145-11.998C217.889 448.553 160 444.939 160 400V288h36c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-36V112.182c0-44.932 56.075-48.213 83.95-48.142 6.646.018 12.05-5.346 12.05-11.992z\"],\n    \"ice-cream\": [448, 512, [], \"f810\", \"M368 160h-.94a144 144 0 1 0-286.12 0H80a48 48 0 0 0 0 96h288a48 48 0 0 0 0-96zM195.38 493.69a31.52 31.52 0 0 0 57.24 0L352 288H96z\"],\n    \"icicles\": [512, 512, [], \"f7ad\", \"M511.4 37.9C515.1 18.2 500 0 480 0H32C10.6 0-4.8 20.7 1.4 41.2l87.1 273.4c2.5 7.2 12.7 7.2 15.1 0L140 190.5l44.2 187.3c1.9 8.3 13.7 8.3 15.6 0l46.5-196.9 34.1 133.4c2.3 7.6 13 7.6 15.3 0l45.8-172.5 66.7 363.8c1.7 8.6 14 8.6 15.7 0l87.5-467.7z\"],\n    \"icons\": [512, 512, [], \"f86d\", \"M116.65 219.35a15.68 15.68 0 0 0 22.65 0l96.75-99.83c28.15-29 26.5-77.1-4.91-103.88C203.75-7.7 163-3.5 137.86 22.44L128 32.58l-9.85-10.14C93.05-3.5 52.25-7.7 24.86 15.64c-31.41 26.78-33 74.85-5 103.88zm143.92 100.49h-48l-7.08-14.24a27.39 27.39 0 0 0-25.66-17.78h-71.71a27.39 27.39 0 0 0-25.66 17.78l-7 14.24h-48A27.45 27.45 0 0 0 0 347.3v137.25A27.44 27.44 0 0 0 27.43 512h233.14A27.45 27.45 0 0 0 288 484.55V347.3a27.45 27.45 0 0 0-27.43-27.46zM144 468a52 52 0 1 1 52-52 52 52 0 0 1-52 52zm355.4-115.9h-60.58l22.36-50.75c2.1-6.65-3.93-13.21-12.18-13.21h-75.59c-6.3 0-11.66 3.9-12.5 9.1l-16.8 106.93c-1 6.3 4.88 11.89 12.5 11.89h62.31l-24.2 83c-1.89 6.65 4.2 12.9 12.23 12.9a13.26 13.26 0 0 0 10.92-5.25l92.4-138.91c4.88-6.91-1.16-15.7-10.87-15.7zM478.08.33L329.51 23.17C314.87 25.42 304 38.92 304 54.83V161.6a83.25 83.25 0 0 0-16-1.7c-35.35 0-64 21.48-64 48s28.65 48 64 48c35.2 0 63.73-21.32 64-47.66V99.66l112-17.22v47.18a83.25 83.25 0 0 0-16-1.7c-35.35 0-64 21.48-64 48s28.65 48 64 48c35.2 0 63.73-21.32 64-47.66V32c0-19.48-16-34.42-33.92-31.67z\"],\n    \"id-badge\": [384, 512, [], \"f2c1\", \"M336 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM144 32h96c8.8 0 16 7.2 16 16s-7.2 16-16 16h-96c-8.8 0-16-7.2-16-16s7.2-16 16-16zm48 128c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zm112 236.8c0 10.6-10 19.2-22.4 19.2H102.4C90 416 80 407.4 80 396.8v-19.2c0-31.8 30.1-57.6 67.2-57.6h5c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h5c37.1 0 67.2 25.8 67.2 57.6v19.2z\"],\n    \"id-card\": [576, 512, [], \"f2c2\", \"M528 32H48C21.5 32 0 53.5 0 80v16h576V80c0-26.5-21.5-48-48-48zM0 432c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V128H0v304zm352-232c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16zm0 64c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16zm0 64c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16zM176 192c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zM67.1 396.2C75.5 370.5 99.6 352 128 352h8.2c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h8.2c28.4 0 52.5 18.5 60.9 44.2 3.2 9.9-5.2 19.8-15.6 19.8H82.7c-10.4 0-18.8-10-15.6-19.8z\"],\n    \"id-card-alt\": [576, 512, [], \"f47f\", \"M528 64H384v96H192V64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM288 224c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zm93.3 224H194.7c-10.4 0-18.8-10-15.6-19.8 8.3-25.6 32.4-44.2 60.9-44.2h8.2c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h8.2c28.4 0 52.5 18.5 60.9 44.2 3.2 9.8-5.2 19.8-15.6 19.8zM352 32c0-17.7-14.3-32-32-32h-64c-17.7 0-32 14.3-32 32v96h128V32z\"],\n    \"igloo\": [576, 512, [], \"f7ae\", \"M320 33.9c-10.5-1.2-21.2-1.9-32-1.9-99.8 0-187.8 50.8-239.4 128H320V33.9zM96 192H30.3C11.1 230.6 0 274 0 320h96V192zM352 39.4V160h175.4C487.2 99.9 424.8 55.9 352 39.4zM480 320h96c0-46-11.1-89.4-30.3-128H480v128zm-64 64v96h128c17.7 0 32-14.3 32-32v-96H411.5c2.6 10.3 4.5 20.9 4.5 32zm32-192H128v128h49.8c22.2-38.1 63-64 110.2-64s88 25.9 110.2 64H448V192zM0 448c0 17.7 14.3 32 32 32h128v-96c0-11.1 1.9-21.7 4.5-32H0v96zm288-160c-53 0-96 43-96 96v96h192v-96c0-53-43-96-96-96z\"],\n    \"image\": [512, 512, [], \"f03e\", \"M464 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48zM112 120c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56zM64 384h384V272l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L208 320l-55.515-55.515c-4.686-4.686-12.284-4.686-16.971 0L64 336v48z\"],\n    \"images\": [576, 512, [], \"f302\", \"M480 416v16c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V176c0-26.51 21.49-48 48-48h16v208c0 44.112 35.888 80 80 80h336zm96-80V80c0-26.51-21.49-48-48-48H144c-26.51 0-48 21.49-48 48v256c0 26.51 21.49 48 48 48h384c26.51 0 48-21.49 48-48zM256 128c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-96 144l55.515-55.515c4.686-4.686 12.284-4.686 16.971 0L272 256l135.515-135.515c4.686-4.686 12.284-4.686 16.971 0L512 208v112H160v-48z\"],\n    \"inbox\": [576, 512, [], \"f01c\", \"M567.938 243.908L462.25 85.374A48.003 48.003 0 0 0 422.311 64H153.689a48 48 0 0 0-39.938 21.374L8.062 243.908A47.994 47.994 0 0 0 0 270.533V400c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V270.533a47.994 47.994 0 0 0-8.062-26.625zM162.252 128h251.497l85.333 128H376l-32 64H232l-32-64H76.918l85.334-128z\"],\n    \"indent\": [448, 512, [], \"f03c\", \"M27.31 363.3l96-96a16 16 0 0 0 0-22.62l-96-96C17.27 138.66 0 145.78 0 160v192c0 14.31 17.33 21.3 27.31 11.3zM432 416H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm3.17-128H204.83A12.82 12.82 0 0 0 192 300.83v38.34A12.82 12.82 0 0 0 204.83 352h230.34A12.82 12.82 0 0 0 448 339.17v-38.34A12.82 12.82 0 0 0 435.17 288zm0-128H204.83A12.82 12.82 0 0 0 192 172.83v38.34A12.82 12.82 0 0 0 204.83 224h230.34A12.82 12.82 0 0 0 448 211.17v-38.34A12.82 12.82 0 0 0 435.17 160zM432 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"],\n    \"industry\": [512, 512, [], \"f275\", \"M475.115 163.781L336 252.309v-68.28c0-18.916-20.931-30.399-36.885-20.248L160 252.309V56c0-13.255-10.745-24-24-24H24C10.745 32 0 42.745 0 56v400c0 13.255 10.745 24 24 24h464c13.255 0 24-10.745 24-24V184.029c0-18.917-20.931-30.399-36.885-20.248z\"],\n    \"infinity\": [640, 512, [], \"f534\", \"M471.1 96C405 96 353.3 137.3 320 174.6 286.7 137.3 235 96 168.9 96 75.8 96 0 167.8 0 256s75.8 160 168.9 160c66.1 0 117.8-41.3 151.1-78.6 33.3 37.3 85 78.6 151.1 78.6 93.1 0 168.9-71.8 168.9-160S564.2 96 471.1 96zM168.9 320c-40.2 0-72.9-28.7-72.9-64s32.7-64 72.9-64c38.2 0 73.4 36.1 94 64-20.4 27.6-55.9 64-94 64zm302.2 0c-38.2 0-73.4-36.1-94-64 20.4-27.6 55.9-64 94-64 40.2 0 72.9 28.7 72.9 64s-32.7 64-72.9 64z\"],\n    \"info\": [192, 512, [], \"f129\", \"M20 424.229h20V279.771H20c-11.046 0-20-8.954-20-20V212c0-11.046 8.954-20 20-20h112c11.046 0 20 8.954 20 20v212.229h20c11.046 0 20 8.954 20 20V492c0 11.046-8.954 20-20 20H20c-11.046 0-20-8.954-20-20v-47.771c0-11.046 8.954-20 20-20zM96 0C56.235 0 24 32.235 24 72s32.235 72 72 72 72-32.235 72-72S135.764 0 96 0z\"],\n    \"info-circle\": [512, 512, [], \"f05a\", \"M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z\"],\n    \"italic\": [320, 512, [], \"f033\", \"M320 48v32a16 16 0 0 1-16 16h-62.76l-80 320H208a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h62.76l80-320H112a16 16 0 0 1-16-16V48a16 16 0 0 1 16-16h192a16 16 0 0 1 16 16z\"],\n    \"jedi\": [576, 512, [], \"f669\", \"M535.95308,352c-42.64069,94.17188-137.64086,160-247.9848,160q-6.39844,0-12.84377-.29688C171.15558,506.9375,81.26481,442.23438,40.01474,352H79.93668L21.3272,293.40625a264.82522,264.82522,0,0,1-5.10938-39.42187,273.6653,273.6653,0,0,1,.5-29.98438H63.93665L22.546,182.625A269.79782,269.79782,0,0,1,130.51489,20.54688a16.06393,16.06393,0,0,1,9.28127-3,16.36332,16.36332,0,0,1,13.5,7.25,16.02739,16.02739,0,0,1,1.625,15.09374,138.387,138.387,0,0,0-9.84376,51.26563c0,45.10937,21.04691,86.57813,57.71884,113.73437a16.29989,16.29989,0,0,1,1.20313,25.39063c-26.54692,23.98437-41.17194,56.5-41.17194,91.57813,0,60.03124,42.95319,110.28124,99.89079,121.92187l2.5-65.26563L238.062,397a8.33911,8.33911,0,0,1-10-.75,8.025,8.025,0,0,1-1.39063-9.9375l20.125-33.76562-42.06257-8.73438a7.9898,7.9898,0,0,1,0-15.65625l42.06257-8.71875-20.10941-33.73438a7.99122,7.99122,0,0,1,11.35939-10.71874L268.437,295.64062,279.95265,7.67188a7.97138,7.97138,0,0,1,8-7.67188h.04687a8.02064,8.02064,0,0,1,7.95314,7.70312L307.48394,295.625l30.39068-20.67188a8.08327,8.08327,0,0,1,10,.8125,7.99866,7.99866,0,0,1,1.39062,9.90626L329.12461,319.4375l42.07819,8.73438a7.99373,7.99373,0,0,1,0,15.65624l-42.07819,8.71876,20.1094,33.73437a7.97791,7.97791,0,0,1-1.32812,9.92187A8.25739,8.25739,0,0,1,337.87462,397L310.7027,378.53125l2.5,65.34375c48.48446-9.40625,87.57828-48.15625,97.31267-96.5A123.52652,123.52652,0,0,0,371.9528,230.29688a16.30634,16.30634,0,0,1,1.20313-25.42188c36.65631-27.17188,57.6876-68.60938,57.6876-113.73438a138.01689,138.01689,0,0,0-9.85939-51.3125,15.98132,15.98132,0,0,1,1.60937-15.09374,16.36914,16.36914,0,0,1,13.5-7.23438,16.02453,16.02453,0,0,1,9.25,2.98438A271.26947,271.26947,0,0,1,553.25,182.76562L511.99992,224h46.9532C559.3125,229.76562,560,235.45312,560,241.26562a270.092,270.092,0,0,1-5.125,51.85938L495.98427,352Z\"],\n    \"joint\": [640, 512, [], \"f595\", \"M444.34 181.1c22.38 15.68 35.66 41.16 35.66 68.59V280c0 4.42 3.58 8 8 8h48c4.42 0 8-3.58 8-8v-30.31c0-43.24-21.01-83.41-56.34-108.06C463.85 125.02 448 99.34 448 70.31V8c0-4.42-3.58-8-8-8h-48c-4.42 0-8 3.58-8 8v66.4c0 43.69 24.56 81.63 60.34 106.7zM194.97 358.98C126.03 370.07 59.69 394.69 0 432c83.65 52.28 180.3 80 278.94 80h88.57L254.79 380.49c-14.74-17.2-37.45-25.11-59.82-21.51zM553.28 87.09c-5.67-3.8-9.28-9.96-9.28-16.78V8c0-4.42-3.58-8-8-8h-48c-4.42 0-8 3.58-8 8v62.31c0 22.02 10.17 43.41 28.64 55.39C550.79 153.04 576 199.54 576 249.69V280c0 4.42 3.58 8 8 8h48c4.42 0 8-3.58 8-8v-30.31c0-65.44-32.41-126.19-86.72-162.6zM360.89 352.05c-34.4.06-86.81.15-88.21.17l117.8 137.43A63.987 63.987 0 0 0 439.07 512h88.45L409.57 374.4a63.955 63.955 0 0 0-48.68-22.35zM616 352H432l117.99 137.65A63.987 63.987 0 0 0 598.58 512H616c13.25 0 24-10.75 24-24V376c0-13.26-10.75-24-24-24z\"],\n    \"journal-whills\": [448, 512, [], \"f66a\", \"M438.40625,377.59375c-3.20313,12.8125-3.20313,57.60937,0,73.60937Q447.9922,460.78907,448,470.40625v16c0,16-12.79688,25.59375-25.59375,25.59375H96c-54.40625,0-96-41.59375-96-96V96C0,41.59375,41.59375,0,96,0H422.40625C438.40625,0,448,9.59375,448,25.59375v332.8125Q448,372.79688,438.40625,377.59375ZM380.79688,384H96c-16,0-32,12.79688-32,32s12.79688,32,32,32H380.79688ZM128.01562,176.01562c0,.51563.14063.98438.14063,1.5l37.10937,32.46876A7.99954,7.99954,0,0,1,160,224h-.01562a9.17678,9.17678,0,0,1-5.25-1.98438L131.14062,201.375C142.6875,250.95312,186.90625,288,240,288s97.3125-37.04688,108.875-86.625l-23.59375,20.64062a8.02516,8.02516,0,0,1-5.26563,1.96876H320a9.14641,9.14641,0,0,1-6.01562-2.71876A9.26508,9.26508,0,0,1,312,216a9.097,9.097,0,0,1,2.73438-6.01562l37.10937-32.46876c.01563-.53124.15625-1,.15625-1.51562,0-11.04688-2.09375-21.51562-5.06251-31.59375l-21.26562,21.25a8.00467,8.00467,0,0,1-11.32812-11.3125l26.42187-26.40625a111.81517,111.81517,0,0,0-46.35937-49.26562,63.02336,63.02336,0,0,1-14.0625,82.64062A55.83846,55.83846,0,0,1,251.625,254.73438l-1.42188-34.28126,12.67188,8.625a3.967,3.967,0,0,0,2.25.6875,3.98059,3.98059,0,0,0,3.43749-6.03124l-8.53124-14.3125,17.90625-3.71876a4.00647,4.00647,0,0,0,0-7.84374l-17.90625-3.71876,8.53124-14.3125a3.98059,3.98059,0,0,0-3.43749-6.03124,4.726,4.726,0,0,0-2.25.67187L248.6875,184.125,244,71.82812a4.00386,4.00386,0,0,0-8,0l-4.625,110.8125-12-8.15624a4.003,4.003,0,0,0-5.68751,5.35937l8.53126,14.3125L204.3125,197.875a3.99686,3.99686,0,0,0,0,7.82812l17.90625,3.73438-8.53126,14.29688a4.72469,4.72469,0,0,0-.56249,2.04687,4.59547,4.59547,0,0,0,1.25,2.90625,4.01059,4.01059,0,0,0,2.75,1.09375,4.09016,4.09016,0,0,0,2.25-.6875l10.35937-7.04687L228.375,254.76562a55.86414,55.86414,0,0,1-28.71875-93.45312,63.01119,63.01119,0,0,1-14.04688-82.65625,111.93158,111.93158,0,0,0-46.375,49.26563l26.42187,26.42187a7.99917,7.99917,0,0,1-11.3125,11.3125l-21.26563-21.26563C130.09375,154.48438,128,164.95312,128.01562,176.01562Z\"],\n    \"kaaba\": [576, 512, [], \"f66b\", \"M554.12 83.51L318.36 4.93a95.962 95.962 0 0 0-60.71 0L21.88 83.51A32.006 32.006 0 0 0 0 113.87v49.01l265.02-79.51c15.03-4.5 30.92-4.5 45.98 0l265 79.51v-49.01c0-13.77-8.81-26-21.88-30.36zm-279.9 30.52L0 196.3v228.38c0 15 10.42 27.98 25.06 31.24l242.12 53.8a95.937 95.937 0 0 0 41.65 0l242.12-53.8c14.64-3.25 25.06-16.24 25.06-31.24V196.29l-274.2-82.26c-9.04-2.72-18.59-2.72-27.59 0zM128 230.11c0 3.61-2.41 6.77-5.89 7.72l-80 21.82C37.02 261.03 32 257.2 32 251.93v-16.58c0-3.61 2.41-6.77 5.89-7.72l80-21.82c5.09-1.39 10.11 2.44 10.11 7.72v16.58zm144-39.28c0 3.61-2.41 6.77-5.89 7.72l-96 26.18c-5.09 1.39-10.11-2.44-10.11-7.72v-16.58c0-3.61 2.41-6.77 5.89-7.72l96-26.18c5.09-1.39 10.11 2.44 10.11 7.72v16.58zm176 22.7c0-5.28 5.02-9.11 10.11-7.72l80 21.82c3.48.95 5.89 4.11 5.89 7.72v16.58c0 5.28-5.02 9.11-10.11 7.72l-80-21.82a7.997 7.997 0 0 1-5.89-7.72v-16.58zm-144-39.27c0-5.28 5.02-9.11 10.11-7.72l96 26.18c3.48.95 5.89 4.11 5.89 7.72v16.58c0 5.28-5.02 9.11-10.11 7.72l-96-26.18a7.997 7.997 0 0 1-5.89-7.72v-16.58z\"],\n    \"key\": [512, 512, [], \"f084\", \"M512 176.001C512 273.203 433.202 352 336 352c-11.22 0-22.19-1.062-32.827-3.069l-24.012 27.014A23.999 23.999 0 0 1 261.223 384H224v40c0 13.255-10.745 24-24 24h-40v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24v-78.059c0-6.365 2.529-12.47 7.029-16.971l161.802-161.802C163.108 213.814 160 195.271 160 176 160 78.798 238.797.001 335.999 0 433.488-.001 512 78.511 512 176.001zM336 128c0 26.51 21.49 48 48 48s48-21.49 48-48-21.49-48-48-48-48 21.49-48 48z\"],\n    \"keyboard\": [576, 512, [], \"f11c\", \"M528 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h480c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48zM128 180v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm288 0v-40c0-6.627-5.373-12-12-12H172c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h232c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12z\"],\n    \"khanda\": [512, 512, [], \"f66d\", \"M415.81 66c-6.37-3.5-14.37-2.33-19.36 3.02a15.974 15.974 0 0 0-1.91 19.52c16.49 26.16 25.2 56.39 25.2 87.41-.19 53.25-26.77 102.69-71.27 132.41l-76.63 53.35v-20.1l44.05-36.09c3.92-4.2 5-10.09 2.81-15.28L310.85 273c33.84-19.26 56.94-55.25 56.94-96.99 0-40.79-22.02-76.13-54.59-95.71l5.22-11.44c2.34-5.53.93-11.83-3.57-16.04L255.86 0l-58.99 52.81c-4.5 4.21-5.9 10.51-3.57 16.04l5.22 11.44c-32.57 19.58-54.59 54.93-54.59 95.72 0 41.75 23.09 77.73 56.94 96.99l-7.85 17.24c-2.19 5.18-1.1 11.07 2.81 15.28l44.05 36.09v19.9l-76.59-53.33C119.02 278.62 92.44 229.19 92.26 176c0-31.08 8.71-61.31 25.2-87.47 3.87-6.16 2.4-13.77-2.59-19.08-5-5.34-13.68-6.2-20.02-2.7C16.32 109.6-22.3 205.3 13.36 295.99c7.07 17.99 17.89 34.38 30.46 49.06l55.97 65.36c4.87 5.69 13.04 7.24 19.65 3.72l79.35-42.23L228 392.23l-47.08 32.78c-1.67-.37-3.23-1.01-5.01-1.01-13.25 0-23.99 10.74-23.99 24 0 13.25 10.74 24 23.99 24 12.1 0 21.69-9.11 23.33-20.76l40.63-28.28v29.95c-9.39 5.57-15.99 15.38-15.99 27.1 0 17.67 14.32 32 31.98 32s31.98-14.33 31.98-32c0-11.71-6.61-21.52-15.99-27.1v-30.15l40.91 28.48C314.41 462.89 324 472 336.09 472c13.25 0 23.99-10.75 23.99-24 0-13.26-10.74-24-23.99-24-1.78 0-3.34.64-5.01 1.01L284 392.23l29.21-20.34 79.35 42.23c6.61 3.52 14.78 1.97 19.65-3.71l52.51-61.31c18.87-22.02 34-47.5 41.25-75.59 21.62-83.66-16.45-167.27-90.16-207.51zm-95.99 110c0 22.3-11.49 41.92-28.83 53.38l-5.65-12.41c-8.75-24.52-8.75-51.04 0-75.56l7.83-17.18c16.07 11.65 26.65 30.45 26.65 51.77zm-127.93 0c0-21.32 10.58-40.12 26.66-51.76l7.83 17.18c8.75 24.52 8.75 51.03 0 75.56l-5.65 12.41c-17.34-11.46-28.84-31.09-28.84-53.39z\"],\n    \"kiss\": [496, 512, [], \"f596\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm-80 232c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm136 156c0 19.2-28.7 41.5-71.5 44-8.5.8-12.1-11.8-3.6-15.4l17-7.2c13-5.5 20.8-13.5 20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-6-2.5-6.1-12.2 0-14.8l17-7.2c13-5.5 20.8-13.5 20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-8.6-3.6-4.8-16.5 3.6-15.4 42.8 2.5 71.5 24.8 71.5 44 0 13-13.4 27.3-35.2 36C290.6 368.7 304 383 304 396zm24-156c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"kiss-beam\": [496, 512, [], \"f597\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm-39 219.9l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.2 7.4-15.6 4-14.9-4.5 3.3-42.1 32.2-71.4 56-71.4s52.7 29.3 56 71.4c.5 8.5-10.9 12-15.1 4.5zM304 396c0 19.2-28.7 41.5-71.5 44-8.5.8-12.1-11.8-3.6-15.4l17-7.2c13-5.5 20.8-13.5 20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-6-2.5-6.1-12.2 0-14.8l17-7.2c13-5.5 20.8-13.5 20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-8.6-3.6-4.8-16.5 3.6-15.4 42.8 2.5 71.5 24.8 71.5 44 0 13-13.4 27.3-35.2 36C290.6 368.7 304 383 304 396zm65-168.1l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.1 7.3-15.6 4-14.9-4.5 3.3-42.1 32.2-71.4 56-71.4s52.7 29.3 56 71.4c.5 8.5-10.9 12-15.1 4.5z\"],\n    \"kiss-wink-heart\": [504, 512, [], \"f598\", \"M501.1 402.5c-8-20.8-31.5-31.5-53.1-25.9l-8.4 2.2-2.3-8.4c-5.9-21.4-27-36.5-49-33-25.2 4-40.6 28.6-34 52.6l22.9 82.6c1.5 5.3 7 8.5 12.4 7.1l83-21.5c24.1-6.3 37.7-31.8 28.5-55.7zm-177.6-4c-5.6-20.3-2.3-42 9-59.7 29.7-46.3 98.7-45.5 127.8 4.3 6.4.1 12.6 1.4 18.6 2.9 10.9-27.9 17.1-58.2 17.1-90C496 119 385 8 248 8S0 119 0 256s111 248 248 248c35.4 0 68.9-7.5 99.4-20.9-.3-.7-23.9-84.6-23.9-84.6zM168 240c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm120 156c0 19.2-28.7 41.5-71.5 44-8.5.8-12.1-11.8-3.6-15.4l17-7.2c13-5.5 20.8-13.5 20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-6-2.5-5.7-12.3 0-14.8l17-7.2c13-5.5 20.8-13.5 20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-8.8-3.7-4.6-16.6 3.6-15.4 42.8 2.5 71.5 24.8 71.5 44 0 13-13.4 27.3-35.2 36C274.6 368.7 288 383 288 396zm16-179c-8.3 7.4-21.6.4-19.8-10.8 4-25.2 34.2-42.1 59.9-42.1S400 181 404 206.2c1.7 11.1-11.3 18.3-19.8 10.8l-9.5-8.5c-14.8-13.2-46.2-13.2-61 0L304 217z\"],\n    \"kiwi-bird\": [576, 512, [], \"f535\", \"M575.81 217.98C572.64 157.41 518.28 112 457.63 112h-9.37c-52.82 0-104.25-16.25-147.74-46.24-41.99-28.96-96.04-41.62-153.21-28.7C129.3 41.12-.08 78.24 0 224c.04 70.95 38.68 132.8 95.99 166.01V464c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-54.26c15.36 3.96 31.4 6.26 48 6.26 5.44 0 10.68-.73 16-1.18V464c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-59.43c14.24-5.06 27.88-11.39 40.34-19.51C342.07 355.25 393.86 336 448.46 336c25.48 0 16.01-.31 23.05-.78l74.41 136.44c2.86 5.23 8.3 8.34 14.05 8.34 1.31 0 2.64-.16 3.95-.5 7.09-1.8 12.05-8.19 12.05-15.5 0 0 .14-240.24-.16-246.02zM463.97 248c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm80 153.25l-39.86-73.08c15.12-5.83 28.73-14.6 39.86-25.98v99.06z\"],\n    \"landmark\": [512, 512, [], \"f66f\", \"M501.62 92.11L267.24 2.04a31.958 31.958 0 0 0-22.47 0L10.38 92.11A16.001 16.001 0 0 0 0 107.09V144c0 8.84 7.16 16 16 16h480c8.84 0 16-7.16 16-16v-36.91c0-6.67-4.14-12.64-10.38-14.98zM64 192v160H48c-8.84 0-16 7.16-16 16v48h448v-48c0-8.84-7.16-16-16-16h-16V192h-64v160h-96V192h-64v160h-96V192H64zm432 256H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h480c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z\"],\n    \"language\": [640, 512, [], \"f1ab\", \"M152.1 236.2c-3.5-12.1-7.8-33.2-7.8-33.2h-.5s-4.3 21.1-7.8 33.2l-11.1 37.5H163zM616 96H336v320h280c13.3 0 24-10.7 24-24V120c0-13.3-10.7-24-24-24zm-24 120c0 6.6-5.4 12-12 12h-11.4c-6.9 23.6-21.7 47.4-42.7 69.9 8.4 6.4 17.1 12.5 26.1 18 5.5 3.4 7.3 10.5 4.1 16.2l-7.9 13.9c-3.4 5.9-10.9 7.8-16.7 4.3-12.6-7.8-24.5-16.1-35.4-24.9-10.9 8.7-22.7 17.1-35.4 24.9-5.8 3.5-13.3 1.6-16.7-4.3l-7.9-13.9c-3.2-5.6-1.4-12.8 4.2-16.2 9.3-5.7 18-11.7 26.1-18-7.9-8.4-14.9-17-21-25.7-4-5.7-2.2-13.6 3.7-17.1l6.5-3.9 7.3-4.3c5.4-3.2 12.4-1.7 16 3.4 5 7 10.8 14 17.4 20.9 13.5-14.2 23.8-28.9 30-43.2H412c-6.6 0-12-5.4-12-12v-16c0-6.6 5.4-12 12-12h64v-16c0-6.6 5.4-12 12-12h16c6.6 0 12 5.4 12 12v16h64c6.6 0 12 5.4 12 12zM0 120v272c0 13.3 10.7 24 24 24h280V96H24c-13.3 0-24 10.7-24 24zm58.9 216.1L116.4 167c1.7-4.9 6.2-8.1 11.4-8.1h32.5c5.1 0 9.7 3.3 11.4 8.1l57.5 169.1c2.6 7.8-3.1 15.9-11.4 15.9h-22.9a12 12 0 0 1-11.5-8.6l-9.4-31.9h-60.2l-9.1 31.8c-1.5 5.1-6.2 8.7-11.5 8.7H70.3c-8.2 0-14-8.1-11.4-15.9z\"],\n    \"laptop\": [640, 512, [], \"f109\", \"M624 416H381.54c-.74 19.81-14.71 32-32.74 32H288c-18.69 0-33.02-17.47-32.77-32H16c-8.8 0-16 7.2-16 16v16c0 35.2 28.8 64 64 64h512c35.2 0 64-28.8 64-64v-16c0-8.8-7.2-16-16-16zM576 48c0-26.4-21.6-48-48-48H112C85.6 0 64 21.6 64 48v336h512V48zm-64 272H128V64h384v256z\"],\n    \"laptop-code\": [640, 512, [], \"f5fc\", \"M255.03 261.65c6.25 6.25 16.38 6.25 22.63 0l11.31-11.31c6.25-6.25 6.25-16.38 0-22.63L253.25 192l35.71-35.72c6.25-6.25 6.25-16.38 0-22.63l-11.31-11.31c-6.25-6.25-16.38-6.25-22.63 0l-58.34 58.34c-6.25 6.25-6.25 16.38 0 22.63l58.35 58.34zm96.01-11.3l11.31 11.31c6.25 6.25 16.38 6.25 22.63 0l58.34-58.34c6.25-6.25 6.25-16.38 0-22.63l-58.34-58.34c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63L386.75 192l-35.71 35.72c-6.25 6.25-6.25 16.38 0 22.63zM624 416H381.54c-.74 19.81-14.71 32-32.74 32H288c-18.69 0-33.02-17.47-32.77-32H16c-8.8 0-16 7.2-16 16v16c0 35.2 28.8 64 64 64h512c35.2 0 64-28.8 64-64v-16c0-8.8-7.2-16-16-16zM576 48c0-26.4-21.6-48-48-48H112C85.6 0 64 21.6 64 48v336h512V48zm-64 272H128V64h384v256z\"],\n    \"laptop-house\": [640, 512, [], \"e066\", \"M272,288H208a16,16,0,0,1-16-16V208a16,16,0,0,1,16-16h64a16,16,0,0,1,16,16v37.12C299.11,232.24,315,224,332.8,224H469.74l6.65-7.53A16.51,16.51,0,0,0,480,207a16.31,16.31,0,0,0-4.75-10.61L416,144V48a16,16,0,0,0-16-16H368a16,16,0,0,0-16,16V87.3L263.5,8.92C258,4,247.45,0,240.05,0s-17.93,4-23.47,8.92L4.78,196.42A16.15,16.15,0,0,0,0,207a16.4,16.4,0,0,0,3.55,9.39L22.34,237.7A16.22,16.22,0,0,0,33,242.48,16.51,16.51,0,0,0,42.34,239L64,219.88V384a32,32,0,0,0,32,32H272ZM629.33,448H592V288c0-17.67-12.89-32-28.8-32H332.8c-15.91,0-28.8,14.33-28.8,32V448H266.67A10.67,10.67,0,0,0,256,458.67v10.66A42.82,42.82,0,0,0,298.6,512H597.4A42.82,42.82,0,0,0,640,469.33V458.67A10.67,10.67,0,0,0,629.33,448ZM544,448H352V304H544Z\"],\n    \"laptop-medical\": [640, 512, [], \"f812\", \"M232 224h56v56a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8v-56h56a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8h-56v-56a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v56h-56a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8zM576 48a48.14 48.14 0 0 0-48-48H112a48.14 48.14 0 0 0-48 48v336h512zm-64 272H128V64h384zm112 96H381.54c-.74 19.81-14.71 32-32.74 32H288c-18.69 0-33-17.47-32.77-32H16a16 16 0 0 0-16 16v16a64.19 64.19 0 0 0 64 64h512a64.19 64.19 0 0 0 64-64v-16a16 16 0 0 0-16-16z\"],\n    \"laugh\": [496, 512, [], \"f599\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm80 152c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm-160 0c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm88 272h-16c-73.4 0-134-55-142.9-126-1.2-9.5 6.3-18 15.9-18h270c9.6 0 17.1 8.4 15.9 18-8.9 71-69.5 126-142.9 126z\"],\n    \"laugh-beam\": [496, 512, [], \"f59a\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm24 199.4c3.3-42.1 32.2-71.4 56-71.4s52.7 29.3 56 71.4c.7 8.6-10.8 11.9-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.2 7.4-15.8 4.1-15.1-4.5zm-160 0c3.3-42.1 32.2-71.4 56-71.4s52.7 29.3 56 71.4c.7 8.6-10.8 11.9-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.3 7.4-15.8 4-15.1-4.5zM398.9 306C390 377 329.4 432 256 432h-16c-73.4 0-134-55-142.9-126-1.2-9.5 6.3-18 15.9-18h270c9.6 0 17.1 8.4 15.9 18z\"],\n    \"laugh-squint\": [496, 512, [], \"f59b\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm33.8 161.7l80-48c11.6-6.9 24 7.7 15.4 18L343.6 180l33.6 40.3c8.7 10.4-3.9 24.8-15.4 18l-80-48c-7.7-4.7-7.7-15.9 0-20.6zm-163-30c-8.6-10.3 3.8-24.9 15.4-18l80 48c7.8 4.7 7.8 15.9 0 20.6l-80 48c-11.5 6.8-24-7.6-15.4-18l33.6-40.3-33.6-40.3zM398.9 306C390 377 329.4 432 256 432h-16c-73.4 0-134-55-142.9-126-1.2-9.5 6.3-18 15.9-18h270c9.6 0 17.1 8.4 15.9 18z\"],\n    \"laugh-wink\": [496, 512, [], \"f59c\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm20.1 198.1c4-25.2 34.2-42.1 59.9-42.1s55.9 16.9 59.9 42.1c1.7 11.1-11.4 18.3-19.8 10.8l-9.5-8.5c-14.8-13.2-46.2-13.2-61 0L288 217c-8.4 7.4-21.6.3-19.9-10.9zM168 160c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm230.9 146C390 377 329.4 432 256 432h-16c-73.4 0-134-55-142.9-126-1.2-9.5 6.3-18 15.9-18h270c9.6 0 17.1 8.4 15.9 18z\"],\n    \"layer-group\": [512, 512, [], \"f5fd\", \"M12.41 148.02l232.94 105.67c6.8 3.09 14.49 3.09 21.29 0l232.94-105.67c16.55-7.51 16.55-32.52 0-40.03L266.65 2.31a25.607 25.607 0 0 0-21.29 0L12.41 107.98c-16.55 7.51-16.55 32.53 0 40.04zm487.18 88.28l-58.09-26.33-161.64 73.27c-7.56 3.43-15.59 5.17-23.86 5.17s-16.29-1.74-23.86-5.17L70.51 209.97l-58.1 26.33c-16.55 7.5-16.55 32.5 0 40l232.94 105.59c6.8 3.08 14.49 3.08 21.29 0L499.59 276.3c16.55-7.5 16.55-32.5 0-40zm0 127.8l-57.87-26.23-161.86 73.37c-7.56 3.43-15.59 5.17-23.86 5.17s-16.29-1.74-23.86-5.17L70.29 337.87 12.41 364.1c-16.55 7.5-16.55 32.5 0 40l232.94 105.59c6.8 3.08 14.49 3.08 21.29 0L499.59 404.1c16.55-7.5 16.55-32.5 0-40z\"],\n    \"leaf\": [576, 512, [], \"f06c\", \"M546.2 9.7c-5.6-12.5-21.6-13-28.3-1.2C486.9 62.4 431.4 96 368 96h-80C182 96 96 182 96 288c0 7 .8 13.7 1.5 20.5C161.3 262.8 253.4 224 384 224c8.8 0 16 7.2 16 16s-7.2 16-16 16C132.6 256 26 410.1 2.4 468c-6.6 16.3 1.2 34.9 17.5 41.6 16.4 6.8 35-1.1 41.8-17.3 1.5-3.6 20.9-47.9 71.9-90.6 32.4 43.9 94 85.8 174.9 77.2C465.5 467.5 576 326.7 576 154.3c0-50.2-10.8-102.2-29.8-144.6z\"],\n    \"lemon\": [512, 512, [], \"f094\", \"M489.038 22.963C465.944-.13 434.648-5.93 413.947 6.129c-58.906 34.312-181.25-53.077-321.073 86.746S40.441 355.041 6.129 413.945c-12.059 20.702-6.26 51.999 16.833 75.093 23.095 23.095 54.392 28.891 75.095 16.832 58.901-34.31 181.246 53.079 321.068-86.743S471.56 156.96 505.871 98.056c12.059-20.702 6.261-51.999-16.833-75.093zM243.881 95.522c-58.189 14.547-133.808 90.155-148.358 148.358-1.817 7.27-8.342 12.124-15.511 12.124-1.284 0-2.59-.156-3.893-.481-8.572-2.144-13.784-10.83-11.642-19.403C81.901 166.427 166.316 81.93 236.119 64.478c8.575-2.143 17.261 3.069 19.403 11.642s-3.069 17.259-11.641 19.402z\"],\n    \"less-than\": [384, 512, [], \"f536\", \"M365.46 357.74L147.04 255.89l218.47-101.88c16.02-7.47 22.95-26.51 15.48-42.53l-13.52-29C360 66.46 340.96 59.53 324.94 67L18.48 209.91a32.014 32.014 0 0 0-18.48 29v34.24c0 12.44 7.21 23.75 18.48 29l306.31 142.83c16.06 7.49 35.15.54 42.64-15.52l13.56-29.08c7.49-16.06.54-35.15-15.53-42.64z\"],\n    \"less-than-equal\": [448, 512, [], \"f537\", \"M54.98 214.2l301.41 119.87c18.39 6.03 38.71-2.54 45.38-19.15l12.09-30.08c6.68-16.61-2.82-34.97-21.21-41l-175.44-68.05 175.56-68.09c18.29-6 27.74-24.27 21.1-40.79l-12.03-29.92c-6.64-16.53-26.86-25.06-45.15-19.06L54.98 137.89C41.21 142.41 32 154.5 32 168.07v15.96c0 13.56 9.21 25.65 22.98 30.17zM424 400H24c-13.25 0-24 10.74-24 24v48c0 13.25 10.75 24 24 24h400c13.25 0 24-10.75 24-24v-48c0-13.26-10.75-24-24-24z\"],\n    \"level-down-alt\": [320, 512, [], \"f3be\", \"M313.553 392.331L209.587 504.334c-9.485 10.214-25.676 10.229-35.174 0L70.438 392.331C56.232 377.031 67.062 352 88.025 352H152V80H68.024a11.996 11.996 0 0 1-8.485-3.515l-56-56C-4.021 12.926 1.333 0 12.024 0H208c13.255 0 24 10.745 24 24v328h63.966c20.878 0 31.851 24.969 17.587 40.331z\"],\n    \"level-up-alt\": [320, 512, [], \"f3bf\", \"M313.553 119.669L209.587 7.666c-9.485-10.214-25.676-10.229-35.174 0L70.438 119.669C56.232 134.969 67.062 160 88.025 160H152v272H68.024a11.996 11.996 0 0 0-8.485 3.515l-56 56C-4.021 499.074 1.333 512 12.024 512H208c13.255 0 24-10.745 24-24V160h63.966c20.878 0 31.851-24.969 17.587-40.331z\"],\n    \"life-ring\": [512, 512, [], \"f1cd\", \"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm173.696 119.559l-63.399 63.399c-10.987-18.559-26.67-34.252-45.255-45.255l63.399-63.399a218.396 218.396 0 0 1 45.255 45.255zM256 352c-53.019 0-96-42.981-96-96s42.981-96 96-96 96 42.981 96 96-42.981 96-96 96zM127.559 82.304l63.399 63.399c-18.559 10.987-34.252 26.67-45.255 45.255l-63.399-63.399a218.372 218.372 0 0 1 45.255-45.255zM82.304 384.441l63.399-63.399c10.987 18.559 26.67 34.252 45.255 45.255l-63.399 63.399a218.396 218.396 0 0 1-45.255-45.255zm302.137 45.255l-63.399-63.399c18.559-10.987 34.252-26.67 45.255-45.255l63.399 63.399a218.403 218.403 0 0 1-45.255 45.255z\"],\n    \"lightbulb\": [352, 512, [], \"f0eb\", \"M96.06 454.35c.01 6.29 1.87 12.45 5.36 17.69l17.09 25.69a31.99 31.99 0 0 0 26.64 14.28h61.71a31.99 31.99 0 0 0 26.64-14.28l17.09-25.69a31.989 31.989 0 0 0 5.36-17.69l.04-38.35H96.01l.05 38.35zM0 176c0 44.37 16.45 84.85 43.56 115.78 16.52 18.85 42.36 58.23 52.21 91.45.04.26.07.52.11.78h160.24c.04-.26.07-.51.11-.78 9.85-33.22 35.69-72.6 52.21-91.45C335.55 260.85 352 220.37 352 176 352 78.61 272.91-.3 175.45 0 73.44.31 0 82.97 0 176zm176-80c-44.11 0-80 35.89-80 80 0 8.84-7.16 16-16 16s-16-7.16-16-16c0-61.76 50.24-112 112-112 8.84 0 16 7.16 16 16s-7.16 16-16 16z\"],\n    \"link\": [512, 512, [], \"f0c1\", \"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"],\n    \"lira-sign\": [384, 512, [], \"f195\", \"M371.994 256h-48.019C317.64 256 312 260.912 312 267.246 312 368 230.179 416 144 416V256.781l134.603-29.912A12 12 0 0 0 288 215.155v-40.976c0-7.677-7.109-13.38-14.603-11.714L144 191.219V160.78l134.603-29.912A12 12 0 0 0 288 119.154V78.179c0-7.677-7.109-13.38-14.603-11.714L144 95.219V44c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v68.997L9.397 125.131A12 12 0 0 0 0 136.845v40.976c0 7.677 7.109 13.38 14.603 11.714L64 178.558v30.439L9.397 221.131A12 12 0 0 0 0 232.845v40.976c0 7.677 7.109 13.38 14.603 11.714L64 274.558V468c0 6.627 5.373 12 12 12h79.583c134.091 0 223.255-77.834 228.408-211.592.261-6.782-5.211-12.408-11.997-12.408z\"],\n    \"list\": [512, 512, [], \"f03a\", \"M80 368H16a16 16 0 0 0-16 16v64a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-64a16 16 0 0 0-16-16zm0-320H16A16 16 0 0 0 0 64v64a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16V64a16 16 0 0 0-16-16zm0 160H16a16 16 0 0 0-16 16v64a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-64a16 16 0 0 0-16-16zm416 176H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\"],\n    \"list-alt\": [512, 512, [], \"f022\", \"M464 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zM128 120c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zm0 96c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zm0 96c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zm288-136v-32c0-6.627-5.373-12-12-12H204c-6.627 0-12 5.373-12 12v32c0 6.627 5.373 12 12 12h200c6.627 0 12-5.373 12-12zm0 96v-32c0-6.627-5.373-12-12-12H204c-6.627 0-12 5.373-12 12v32c0 6.627 5.373 12 12 12h200c6.627 0 12-5.373 12-12zm0 96v-32c0-6.627-5.373-12-12-12H204c-6.627 0-12 5.373-12 12v32c0 6.627 5.373 12 12 12h200c6.627 0 12-5.373 12-12z\"],\n    \"list-ol\": [512, 512, [], \"f0cb\", \"M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z\"],\n    \"list-ul\": [512, 512, [], \"f0ca\", \"M48 48a48 48 0 1 0 48 48 48 48 0 0 0-48-48zm0 160a48 48 0 1 0 48 48 48 48 0 0 0-48-48zm0 160a48 48 0 1 0 48 48 48 48 0 0 0-48-48zm448 16H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\"],\n    \"location-arrow\": [512, 512, [], \"f124\", \"M444.52 3.52L28.74 195.42c-47.97 22.39-31.98 92.75 19.19 92.75h175.91v175.91c0 51.17 70.36 67.17 92.75 19.19l191.9-415.78c15.99-38.39-25.59-79.97-63.97-63.97z\"],\n    \"lock\": [448, 512, [], \"f023\", \"M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z\"],\n    \"lock-open\": [576, 512, [], \"f3c1\", \"M423.5 0C339.5.3 272 69.5 272 153.5V224H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48h-48v-71.1c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v80c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-80C576 68 507.5-.3 423.5 0z\"],\n    \"long-arrow-alt-down\": [256, 512, [], \"f309\", \"M168 345.941V44c0-6.627-5.373-12-12-12h-56c-6.627 0-12 5.373-12 12v301.941H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.569 9.373 33.941 0l86.059-86.059c15.119-15.119 4.411-40.971-16.971-40.971H168z\"],\n    \"long-arrow-alt-left\": [448, 512, [], \"f30a\", \"M134.059 296H436c6.627 0 12-5.373 12-12v-56c0-6.627-5.373-12-12-12H134.059v-46.059c0-21.382-25.851-32.09-40.971-16.971L7.029 239.029c-9.373 9.373-9.373 24.569 0 33.941l86.059 86.059c15.119 15.119 40.971 4.411 40.971-16.971V296z\"],\n    \"long-arrow-alt-right\": [448, 512, [], \"f30b\", \"M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z\"],\n    \"long-arrow-alt-up\": [256, 512, [], \"f30c\", \"M88 166.059V468c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12V166.059h46.059c21.382 0 32.09-25.851 16.971-40.971l-86.059-86.059c-9.373-9.373-24.569-9.373-33.941 0l-86.059 86.059c-15.119 15.119-4.411 40.971 16.971 40.971H88z\"],\n    \"low-vision\": [576, 512, [], \"f2a8\", \"M569.344 231.631C512.96 135.949 407.81 72 288 72c-28.468 0-56.102 3.619-82.451 10.409L152.778 10.24c-7.601-10.858-22.564-13.5-33.423-5.9l-13.114 9.178c-10.86 7.601-13.502 22.566-5.9 33.426l43.131 58.395C89.449 131.73 40.228 174.683 6.682 231.581c-.01.017-.023.033-.034.05-8.765 14.875-8.964 33.528 0 48.739 38.5 65.332 99.742 115.862 172.859 141.349L55.316 244.302A272.194 272.194 0 0 1 83.61 208.39l119.4 170.58h.01l40.63 58.04a330.055 330.055 0 0 0 78.94 1.17l-189.98-271.4a277.628 277.628 0 0 1 38.777-21.563l251.836 356.544c7.601 10.858 22.564 13.499 33.423 5.9l13.114-9.178c10.86-7.601 13.502-22.567 5.9-33.426l-43.12-58.377-.007-.009c57.161-27.978 104.835-72.04 136.81-126.301a47.938 47.938 0 0 0 .001-48.739zM390.026 345.94l-19.066-27.23c24.682-32.567 27.711-76.353 8.8-111.68v.03c0 23.65-19.17 42.82-42.82 42.82-23.828 0-42.82-19.349-42.82-42.82 0-23.65 19.17-42.82 42.82-42.82h.03c-24.75-13.249-53.522-15.643-79.51-7.68l-19.068-27.237C253.758 123.306 270.488 120 288 120c75.162 0 136 60.826 136 136 0 34.504-12.833 65.975-33.974 89.94z\"],\n    \"luggage-cart\": [640, 512, [], \"f59d\", \"M224 320h32V96h-32c-17.67 0-32 14.33-32 32v160c0 17.67 14.33 32 32 32zm352-32V128c0-17.67-14.33-32-32-32h-32v224h32c17.67 0 32-14.33 32-32zm48 96H128V16c0-8.84-7.16-16-16-16H16C7.16 0 0 7.16 0 16v32c0 8.84 7.16 16 16 16h48v368c0 8.84 7.16 16 16 16h82.94c-1.79 5.03-2.94 10.36-2.94 16 0 26.51 21.49 48 48 48s48-21.49 48-48c0-5.64-1.15-10.97-2.94-16h197.88c-1.79 5.03-2.94 10.36-2.94 16 0 26.51 21.49 48 48 48s48-21.49 48-48c0-5.64-1.15-10.97-2.94-16H624c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM480 96V48c0-26.51-21.49-48-48-48h-96c-26.51 0-48 21.49-48 48v272h192V96zm-48 0h-96V48h96v48z\"],\n    \"lungs\": [640, 512, [], \"f604\", \"M636.11 390.15C614.44 308.85 580.07 231 534.1 159.13 511.98 124.56 498.03 96 454.05 96 415.36 96 384 125.42 384 161.71v60.11l-32.88-21.92a15.996 15.996 0 0 1-7.12-13.31V16c0-8.84-7.16-16-16-16h-16c-8.84 0-16 7.16-16 16v170.59c0 5.35-2.67 10.34-7.12 13.31L256 221.82v-60.11C256 125.42 224.64 96 185.95 96c-43.98 0-57.93 28.56-80.05 63.13C59.93 231 25.56 308.85 3.89 390.15 1.3 399.84 0 409.79 0 419.78c0 61.23 62.48 105.44 125.24 88.62l59.5-15.95c42.18-11.3 71.26-47.47 71.26-88.62v-87.49l-85.84 57.23a7.992 7.992 0 0 1-11.09-2.22l-8.88-13.31a7.992 7.992 0 0 1 2.22-11.09L320 235.23l167.59 111.72a7.994 7.994 0 0 1 2.22 11.09l-8.88 13.31a7.994 7.994 0 0 1-11.09 2.22L384 316.34v87.49c0 41.15 29.08 77.31 71.26 88.62l59.5 15.95C577.52 525.22 640 481.01 640 419.78c0-9.99-1.3-19.94-3.89-29.63z\"],\n    \"lungs-virus\": [640, 512, [], \"e067\", \"M344,150.68V16A16,16,0,0,0,328,0H312a16,16,0,0,0-16,16V150.68a46.45,46.45,0,0,1,48,0ZM195.54,444.46a48.06,48.06,0,0,1,0-67.88l8.58-8.58H192a48,48,0,0,1,0-96h12.12l-8.58-8.57a48,48,0,0,1,60.46-74V161.75C256,125.38,224.62,96,186,96c-44,0-58,28.5-80.12,63.13a819.52,819.52,0,0,0-102,231A113.16,113.16,0,0,0,0,419.75C0,481,62.5,525.26,125.25,508.38l59.5-15.87a98.51,98.51,0,0,0,52.5-34.75,46.49,46.49,0,0,1-41.71-13.3Zm226.29-22.63a16,16,0,0,0,0-22.62l-8.58-8.58C393.09,370.47,407.37,336,435.88,336H448a16,16,0,0,0,0-32H435.88c-28.51,0-42.79-34.47-22.63-54.62l8.58-8.58a16,16,0,0,0-22.63-22.63l-8.57,8.58C370.47,246.91,336,232.63,336,204.12V192a16,16,0,0,0-32,0v12.12c0,28.51-34.47,42.79-54.63,22.63l-8.57-8.58a16,16,0,0,0-22.63,22.63l8.58,8.58c20.16,20.15,5.88,54.62-22.63,54.62H192a16,16,0,0,0,0,32h12.12c28.51,0,42.79,34.47,22.63,54.63l-8.58,8.58a16,16,0,1,0,22.63,22.62l8.57-8.57C269.53,393.1,304,407.38,304,435.88V448a16,16,0,0,0,32,0V435.88c0-28.5,34.47-42.78,54.63-22.62l8.57,8.57a16,16,0,0,0,22.63,0ZM288,304a16,16,0,1,1,16-16A16,16,0,0,1,288,304Zm64,64a16,16,0,1,1,16-16A16,16,0,0,1,352,368Zm284.12,22.13a819.52,819.52,0,0,0-102-231C512,124.5,498,96,454,96c-38.62,0-70,29.38-70,65.75v27.72a48,48,0,0,1,60.46,74L435.88,272H448a48,48,0,0,1,0,96H435.88l8.58,8.58a47.7,47.7,0,0,1-41.71,81.18,98.51,98.51,0,0,0,52.5,34.75l59.5,15.87C577.5,525.26,640,481,640,419.75A113.16,113.16,0,0,0,636.12,390.13Z\"],\n    \"magic\": [512, 512, [], \"f0d0\", \"M224 96l16-32 32-16-32-16-16-32-16 32-32 16 32 16 16 32zM80 160l26.66-53.33L160 80l-53.34-26.67L80 0 53.34 53.33 0 80l53.34 26.67L80 160zm352 128l-26.66 53.33L352 368l53.34 26.67L432 448l26.66-53.33L512 368l-53.34-26.67L432 288zm70.62-193.77L417.77 9.38C411.53 3.12 403.34 0 395.15 0c-8.19 0-16.38 3.12-22.63 9.38L9.38 372.52c-12.5 12.5-12.5 32.76 0 45.25l84.85 84.85c6.25 6.25 14.44 9.37 22.62 9.37 8.19 0 16.38-3.12 22.63-9.37l363.14-363.15c12.5-12.48 12.5-32.75 0-45.24zM359.45 203.46l-50.91-50.91 86.6-86.6 50.91 50.91-86.6 86.6z\"],\n    \"magnet\": [512, 512, [], \"f076\", \"M164.07 148.1H12a12 12 0 0 1-12-12v-80a36 36 0 0 1 36-36h104a36 36 0 0 1 36 36v80a11.89 11.89 0 0 1-11.93 12zm347.93-12V56a36 36 0 0 0-36-36H372a36 36 0 0 0-36 36v80a12 12 0 0 0 12 12h152a11.89 11.89 0 0 0 12-11.9zm-164 44a12 12 0 0 0-12 12v52c0 128.1-160 127.9-160 0v-52a12 12 0 0 0-12-12H12.1a12 12 0 0 0-12 12.1c.1 21.4.6 40.3 0 53.3 0 150.6 136.17 246.6 256.75 246.6s255-96 255-246.7c-.6-12.8-.2-33 0-53.2a12 12 0 0 0-12-12.1z\"],\n    \"mail-bulk\": [576, 512, [], \"f674\", \"M160 448c-25.6 0-51.2-22.4-64-32-64-44.8-83.2-60.8-96-70.4V480c0 17.67 14.33 32 32 32h256c17.67 0 32-14.33 32-32V345.6c-12.8 9.6-32 25.6-96 70.4-12.8 9.6-38.4 32-64 32zm128-192H32c-17.67 0-32 14.33-32 32v16c25.6 19.2 22.4 19.2 115.2 86.4 9.6 6.4 28.8 25.6 44.8 25.6s35.2-19.2 44.8-22.4c92.8-67.2 89.6-67.2 115.2-86.4V288c0-17.67-14.33-32-32-32zm256-96H224c-17.67 0-32 14.33-32 32v32h96c33.21 0 60.59 25.42 63.71 57.82l.29-.22V416h192c17.67 0 32-14.33 32-32V192c0-17.67-14.33-32-32-32zm-32 128h-64v-64h64v64zm-352-96c0-35.29 28.71-64 64-64h224V32c0-17.67-14.33-32-32-32H96C78.33 0 64 14.33 64 32v192h96v-32z\"],\n    \"male\": [192, 512, [], \"f183\", \"M96 0c35.346 0 64 28.654 64 64s-28.654 64-64 64-64-28.654-64-64S60.654 0 96 0m48 144h-11.36c-22.711 10.443-49.59 10.894-73.28 0H48c-26.51 0-48 21.49-48 48v136c0 13.255 10.745 24 24 24h16v136c0 13.255 10.745 24 24 24h64c13.255 0 24-10.745 24-24V352h16c13.255 0 24-10.745 24-24V192c0-26.51-21.49-48-48-48z\"],\n    \"map\": [576, 512, [], \"f279\", \"M0 117.66v346.32c0 11.32 11.43 19.06 21.94 14.86L160 416V32L20.12 87.95A32.006 32.006 0 0 0 0 117.66zM192 416l192 64V96L192 32v384zM554.06 33.16L416 96v384l139.88-55.95A31.996 31.996 0 0 0 576 394.34V48.02c0-11.32-11.43-19.06-21.94-14.86z\"],\n    \"map-marked\": [576, 512, [], \"f59f\", \"M288 0c-69.59 0-126 56.41-126 126 0 56.26 82.35 158.8 113.9 196.02 6.39 7.54 17.82 7.54 24.2 0C331.65 284.8 414 182.26 414 126 414 56.41 357.59 0 288 0zM20.12 215.95A32.006 32.006 0 0 0 0 245.66v250.32c0 11.32 11.43 19.06 21.94 14.86L160 448V214.92c-8.84-15.98-16.07-31.54-21.25-46.42L20.12 215.95zM288 359.67c-14.07 0-27.38-6.18-36.51-16.96-19.66-23.2-40.57-49.62-59.49-76.72v182l192 64V266c-18.92 27.09-39.82 53.52-59.49 76.72-9.13 10.77-22.44 16.95-36.51 16.95zm266.06-198.51L416 224v288l139.88-55.95A31.996 31.996 0 0 0 576 426.34V176.02c0-11.32-11.43-19.06-21.94-14.86z\"],\n    \"map-marked-alt\": [576, 512, [], \"f5a0\", \"M288 0c-69.59 0-126 56.41-126 126 0 56.26 82.35 158.8 113.9 196.02 6.39 7.54 17.82 7.54 24.2 0C331.65 284.8 414 182.26 414 126 414 56.41 357.59 0 288 0zm0 168c-23.2 0-42-18.8-42-42s18.8-42 42-42 42 18.8 42 42-18.8 42-42 42zM20.12 215.95A32.006 32.006 0 0 0 0 245.66v250.32c0 11.32 11.43 19.06 21.94 14.86L160 448V214.92c-8.84-15.98-16.07-31.54-21.25-46.42L20.12 215.95zM288 359.67c-14.07 0-27.38-6.18-36.51-16.96-19.66-23.2-40.57-49.62-59.49-76.72v182l192 64V266c-18.92 27.09-39.82 53.52-59.49 76.72-9.13 10.77-22.44 16.95-36.51 16.95zm266.06-198.51L416 224v288l139.88-55.95A31.996 31.996 0 0 0 576 426.34V176.02c0-11.32-11.43-19.06-21.94-14.86z\"],\n    \"map-marker\": [384, 512, [], \"f041\", \"M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0z\"],\n    \"map-marker-alt\": [384, 512, [], \"f3c5\", \"M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z\"],\n    \"map-pin\": [288, 512, [], \"f276\", \"M112 316.94v156.69l22.02 33.02c4.75 7.12 15.22 7.12 19.97 0L176 473.63V316.94c-10.39 1.92-21.06 3.06-32 3.06s-21.61-1.14-32-3.06zM144 0C64.47 0 0 64.47 0 144s64.47 144 144 144 144-64.47 144-144S223.53 0 144 0zm0 76c-37.5 0-68 30.5-68 68 0 6.62-5.38 12-12 12s-12-5.38-12-12c0-50.73 41.28-92 92-92 6.62 0 12 5.38 12 12s-5.38 12-12 12z\"],\n    \"map-signs\": [512, 512, [], \"f277\", \"M507.31 84.69L464 41.37c-6-6-14.14-9.37-22.63-9.37H288V16c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v16H56c-13.25 0-24 10.75-24 24v80c0 13.25 10.75 24 24 24h385.37c8.49 0 16.62-3.37 22.63-9.37l43.31-43.31c6.25-6.26 6.25-16.38 0-22.63zM224 496c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V384h-64v112zm232-272H288v-32h-64v32H70.63c-8.49 0-16.62 3.37-22.63 9.37L4.69 276.69c-6.25 6.25-6.25 16.38 0 22.63L48 342.63c6 6 14.14 9.37 22.63 9.37H456c13.25 0 24-10.75 24-24v-80c0-13.25-10.75-24-24-24z\"],\n    \"marker\": [512, 512, [], \"f5a1\", \"M93.95 290.03A327.038 327.038 0 0 0 .17 485.11l-.03.23c-1.7 15.28 11.21 28.2 26.49 26.51a327.02 327.02 0 0 0 195.34-93.8l75.4-75.4-128.02-128.02-75.4 75.4zM485.49 26.51c-35.35-35.35-92.67-35.35-128.02 0l-21.76 21.76-36.56-36.55c-15.62-15.62-40.95-15.62-56.56 0L138.47 115.84c-6.25 6.25-6.25 16.38 0 22.63l22.62 22.62c6.25 6.25 16.38 6.25 22.63 0l87.15-87.15 19.59 19.59L191.98 192 320 320.02l165.49-165.49c35.35-35.35 35.35-92.66 0-128.02z\"],\n    \"mars\": [384, 512, [], \"f222\", \"M372 64h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-80.7 80.7c-22.2-14-48.5-22.1-76.7-22.1C64.5 160 0 224.5 0 304s64.5 144 144 144 144-64.5 144-144c0-28.2-8.1-54.5-22.1-76.7l80.7-80.7 16.9 16.9c7.6 7.6 20.5 2.2 20.5-8.5V76c0-6.6-5.4-12-12-12zM144 384c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"],\n    \"mars-double\": [512, 512, [], \"f227\", \"M340 0h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-48.7 48.7C198.5 72.1 172.2 64 144 64 64.5 64 0 128.5 0 208s64.5 144 144 144 144-64.5 144-144c0-28.2-8.1-54.5-22.1-76.7l48.7-48.7 16.9 16.9c2.4 2.4 5.5 3.5 8.4 3.5 6.2 0 12.1-4.8 12.1-12V12c0-6.6-5.4-12-12-12zM144 288c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80zm356-128.1h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-48.7 48.7c-18.2-11.4-39-18.9-61.5-21.3-2.1 21.8-8.2 43.3-18.4 63.3 1.1 0 2.2-.1 3.2-.1 44.1 0 80 35.9 80 80s-35.9 80-80 80-80-35.9-80-80c0-1.1 0-2.2.1-3.2-20 10.2-41.5 16.4-63.3 18.4C168.4 455.6 229.6 512 304 512c79.5 0 144-64.5 144-144 0-28.2-8.1-54.5-22.1-76.7l48.7-48.7 16.9 16.9c2.4 2.4 5.4 3.5 8.4 3.5 6.2 0 12.1-4.8 12.1-12v-79c0-6.7-5.4-12.1-12-12.1z\"],\n    \"mars-stroke\": [384, 512, [], \"f229\", \"M372 64h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-17.5 17.5-14.1-14.1c-4.7-4.7-12.3-4.7-17 0L224.5 133c-4.7 4.7-4.7 12.3 0 17l14.1 14.1-18 18c-22.2-14-48.5-22.1-76.7-22.1C64.5 160 0 224.5 0 304s64.5 144 144 144 144-64.5 144-144c0-28.2-8.1-54.5-22.1-76.7l18-18 14.1 14.1c4.7 4.7 12.3 4.7 17 0l28.3-28.3c4.7-4.7 4.7-12.3 0-17L329.2 164l17.5-17.5 16.9 16.9c7.6 7.6 20.5 2.2 20.5-8.5V76c-.1-6.6-5.5-12-12.1-12zM144 384c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"],\n    \"mars-stroke-h\": [480, 512, [], \"f22b\", \"M476.2 247.5l-55.9-55.9c-7.6-7.6-20.5-2.2-20.5 8.5V224H376v-20c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v20h-27.6c-5.8-25.6-18.7-49.9-38.6-69.8C189.6 98 98.4 98 42.2 154.2c-56.2 56.2-56.2 147.4 0 203.6 56.2 56.2 147.4 56.2 203.6 0 19.9-19.9 32.8-44.2 38.6-69.8H312v20c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-20h23.9v23.9c0 10.7 12.9 16 20.5 8.5l55.9-55.9c4.6-4.7 4.6-12.3-.1-17zm-275.6 65.1c-31.2 31.2-81.9 31.2-113.1 0-31.2-31.2-31.2-81.9 0-113.1 31.2-31.2 81.9-31.2 113.1 0 31.2 31.1 31.2 81.9 0 113.1z\"],\n    \"mars-stroke-v\": [288, 512, [], \"f22a\", \"M245.8 234.2c-19.9-19.9-44.2-32.8-69.8-38.6v-25.4h20c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20V81.4h23.9c10.7 0 16-12.9 8.5-20.5L152.5 5.1c-4.7-4.7-12.3-4.7-17 0L79.6 61c-7.6 7.6-2.2 20.5 8.5 20.5H112v24.7H92c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h20v25.4c-25.6 5.8-49.9 18.7-69.8 38.6-56.2 56.2-56.2 147.4 0 203.6 56.2 56.2 147.4 56.2 203.6 0 56.3-56.2 56.3-147.4 0-203.6zm-45.2 158.4c-31.2 31.2-81.9 31.2-113.1 0-31.2-31.2-31.2-81.9 0-113.1 31.2-31.2 81.9-31.2 113.1 0 31.2 31.1 31.2 81.9 0 113.1z\"],\n    \"mask\": [640, 512, [], \"f6fa\", \"M320.67 64c-442.6 0-357.57 384-158.46 384 39.9 0 77.47-20.69 101.42-55.86l25.73-37.79c15.66-22.99 46.97-22.99 62.63 0l25.73 37.79C401.66 427.31 439.23 448 479.13 448c189.86 0 290.63-384-158.46-384zM184 308.36c-41.06 0-67.76-25.66-80.08-41.05-5.23-6.53-5.23-16.09 0-22.63 12.32-15.4 39.01-41.05 80.08-41.05s67.76 25.66 80.08 41.05c5.23 6.53 5.23 16.09 0 22.63-12.32 15.4-39.02 41.05-80.08 41.05zm272 0c-41.06 0-67.76-25.66-80.08-41.05-5.23-6.53-5.23-16.09 0-22.63 12.32-15.4 39.01-41.05 80.08-41.05s67.76 25.66 80.08 41.05c5.23 6.53 5.23 16.09 0 22.63-12.32 15.4-39.02 41.05-80.08 41.05z\"],\n    \"medal\": [512, 512, [], \"f5a2\", \"M223.75 130.75L154.62 15.54A31.997 31.997 0 0 0 127.18 0H16.03C3.08 0-4.5 14.57 2.92 25.18l111.27 158.96c29.72-27.77 67.52-46.83 109.56-53.39zM495.97 0H384.82c-11.24 0-21.66 5.9-27.44 15.54l-69.13 115.21c42.04 6.56 79.84 25.62 109.56 53.38L509.08 25.18C516.5 14.57 508.92 0 495.97 0zM256 160c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm92.52 157.26l-37.93 36.96 8.97 52.22c1.6 9.36-8.26 16.51-16.65 12.09L256 393.88l-46.9 24.65c-8.4 4.45-18.25-2.74-16.65-12.09l8.97-52.22-37.93-36.96c-6.82-6.64-3.05-18.23 6.35-19.59l52.43-7.64 23.43-47.52c2.11-4.28 6.19-6.39 10.28-6.39 4.11 0 8.22 2.14 10.33 6.39l23.43 47.52 52.43 7.64c9.4 1.36 13.17 12.95 6.35 19.59z\"],\n    \"medkit\": [512, 512, [], \"f0fa\", \"M96 480h320V128h-32V80c0-26.51-21.49-48-48-48H176c-26.51 0-48 21.49-48 48v48H96v352zm96-384h128v32H192V96zm320 80v256c0 26.51-21.49 48-48 48h-16V128h16c26.51 0 48 21.49 48 48zM64 480H48c-26.51 0-48-21.49-48-48V176c0-26.51 21.49-48 48-48h16v352zm288-208v32c0 8.837-7.163 16-16 16h-48v48c0 8.837-7.163 16-16 16h-32c-8.837 0-16-7.163-16-16v-48h-48c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h48v-48c0-8.837 7.163-16 16-16h32c8.837 0 16 7.163 16 16v48h48c8.837 0 16 7.163 16 16z\"],\n    \"meh\": [496, 512, [], \"f11a\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm-80 168c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm176 192H152c-21.2 0-21.2-32 0-32h192c21.2 0 21.2 32 0 32zm-16-128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"meh-blank\": [496, 512, [], \"f5a4\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm-80 232c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm160 0c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"meh-rolling-eyes\": [496, 512, [], \"f5a5\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM88 224c0-24.3 13.7-45.2 33.6-56-.7 2.6-1.6 5.2-1.6 8 0 17.7 14.3 32 32 32s32-14.3 32-32c0-2.8-.9-5.4-1.6-8 19.9 10.8 33.6 31.7 33.6 56 0 35.3-28.7 64-64 64s-64-28.7-64-64zm224 176H184c-21.2 0-21.2-32 0-32h128c21.2 0 21.2 32 0 32zm32-112c-35.3 0-64-28.7-64-64 0-24.3 13.7-45.2 33.6-56-.7 2.6-1.6 5.2-1.6 8 0 17.7 14.3 32 32 32s32-14.3 32-32c0-2.8-.9-5.4-1.6-8 19.9 10.8 33.6 31.7 33.6 56 0 35.3-28.7 64-64 64z\"],\n    \"memory\": [640, 512, [], \"f538\", \"M640 130.94V96c0-17.67-14.33-32-32-32H32C14.33 64 0 78.33 0 96v34.94c18.6 6.61 32 24.19 32 45.06s-13.4 38.45-32 45.06V320h640v-98.94c-18.6-6.61-32-24.19-32-45.06s13.4-38.45 32-45.06zM224 256h-64V128h64v128zm128 0h-64V128h64v128zm128 0h-64V128h64v128zM0 448h64v-26.67c0-8.84 7.16-16 16-16s16 7.16 16 16V448h128v-26.67c0-8.84 7.16-16 16-16s16 7.16 16 16V448h128v-26.67c0-8.84 7.16-16 16-16s16 7.16 16 16V448h128v-26.67c0-8.84 7.16-16 16-16s16 7.16 16 16V448h64v-96H0v96z\"],\n    \"menorah\": [640, 512, [], \"f676\", \"M144 128h-32c-8.84 0-16 7.16-16 16v144h64V144c0-8.84-7.16-16-16-16zm96 0h-32c-8.84 0-16 7.16-16 16v144h64V144c0-8.84-7.16-16-16-16zm192 0h-32c-8.84 0-16 7.16-16 16v144h64V144c0-8.84-7.16-16-16-16zm96 0h-32c-8.84 0-16 7.16-16 16v144h64V144c0-8.84-7.16-16-16-16zm80-32c17.67 0 32-14.33 32-32S608 0 608 0s-32 46.33-32 64 14.33 32 32 32zm-96 0c17.67 0 32-14.33 32-32S512 0 512 0s-32 46.33-32 64 14.33 32 32 32zm-96 0c17.67 0 32-14.33 32-32S416 0 416 0s-32 46.33-32 64 14.33 32 32 32zm-96 0c17.67 0 32-14.33 32-32S320 0 320 0s-32 46.33-32 64 14.33 32 32 32zm-96 0c17.67 0 32-14.33 32-32S224 0 224 0s-32 46.33-32 64 14.33 32 32 32zm-96 0c17.67 0 32-14.33 32-32S128 0 128 0 96 46.33 96 64s14.33 32 32 32zm-96 0c17.67 0 32-14.33 32-32S32 0 32 0 0 46.33 0 64s14.33 32 32 32zm544 192c0 17.67-14.33 32-32 32H352V144c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v176H96c-17.67 0-32-14.33-32-32V144c0-8.84-7.16-16-16-16H16c-8.84 0-16 7.16-16 16v144c0 53.02 42.98 96 96 96h192v64H112c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h416c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16H352v-64h192c53.02 0 96-42.98 96-96V144c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v144z\"],\n    \"mercury\": [288, 512, [], \"f223\", \"M288 208c0-44.2-19.9-83.7-51.2-110.1 2.5-1.8 4.9-3.8 7.2-5.8 24.7-21.2 39.8-48.8 43.2-78.8.9-7.1-4.7-13.3-11.9-13.3h-40.5C229 0 224.1 4.1 223 9.8c-2.4 12.5-9.6 24.3-20.7 33.8C187 56.8 166.3 64 144 64s-43-7.2-58.4-20.4C74.5 34.1 67.4 22.3 64.9 9.8 63.8 4.1 58.9 0 53.2 0H12.7C5.5 0-.1 6.2.8 13.3 4.2 43.4 19.2 71 44 92.2c2.3 2 4.7 3.9 7.2 5.8C19.9 124.3 0 163.8 0 208c0 68.5 47.9 125.9 112 140.4V400H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v36c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-36h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-51.6c64.1-14.5 112-71.9 112-140.4zm-224 0c0-44.1 35.9-80 80-80s80 35.9 80 80-35.9 80-80 80-80-35.9-80-80z\"],\n    \"meteor\": [512, 512, [], \"f753\", \"M511.328,20.8027c-11.60759,38.70264-34.30724,111.70173-61.30311,187.70077,6.99893,2.09372,13.4042,4,18.60653,5.59368a16.06158,16.06158,0,0,1,9.49854,22.906c-22.106,42.29635-82.69047,152.795-142.47819,214.40356-.99984,1.09373-1.99969,2.5-2.99954,3.49995A194.83046,194.83046,0,1,1,57.085,179.41009c.99985-1,2.40588-2,3.49947-3,61.59994-59.90549,171.97367-120.40473,214.37343-142.4982a16.058,16.058,0,0,1,22.90274,9.49988c1.59351,5.09368,3.49947,11.5936,5.5929,18.59351C379.34818,35.00565,452.43074,12.30281,491.12794.70921A16.18325,16.18325,0,0,1,511.328,20.8027ZM319.951,320.00207A127.98041,127.98041,0,1,0,191.97061,448.00046,127.97573,127.97573,0,0,0,319.951,320.00207Zm-127.98041-31.9996a31.9951,31.9951,0,1,1-31.9951-31.9996A31.959,31.959,0,0,1,191.97061,288.00247Zm31.9951,79.999a15.99755,15.99755,0,1,1-15.99755-15.9998A16.04975,16.04975,0,0,1,223.96571,368.00147Z\"],\n    \"microchip\": [512, 512, [], \"f2db\", \"M416 48v416c0 26.51-21.49 48-48 48H144c-26.51 0-48-21.49-48-48V48c0-26.51 21.49-48 48-48h224c26.51 0 48 21.49 48 48zm96 58v12a6 6 0 0 1-6 6h-18v6a6 6 0 0 1-6 6h-42V88h42a6 6 0 0 1 6 6v6h18a6 6 0 0 1 6 6zm0 96v12a6 6 0 0 1-6 6h-18v6a6 6 0 0 1-6 6h-42v-48h42a6 6 0 0 1 6 6v6h18a6 6 0 0 1 6 6zm0 96v12a6 6 0 0 1-6 6h-18v6a6 6 0 0 1-6 6h-42v-48h42a6 6 0 0 1 6 6v6h18a6 6 0 0 1 6 6zm0 96v12a6 6 0 0 1-6 6h-18v6a6 6 0 0 1-6 6h-42v-48h42a6 6 0 0 1 6 6v6h18a6 6 0 0 1 6 6zM30 376h42v48H30a6 6 0 0 1-6-6v-6H6a6 6 0 0 1-6-6v-12a6 6 0 0 1 6-6h18v-6a6 6 0 0 1 6-6zm0-96h42v48H30a6 6 0 0 1-6-6v-6H6a6 6 0 0 1-6-6v-12a6 6 0 0 1 6-6h18v-6a6 6 0 0 1 6-6zm0-96h42v48H30a6 6 0 0 1-6-6v-6H6a6 6 0 0 1-6-6v-12a6 6 0 0 1 6-6h18v-6a6 6 0 0 1 6-6zm0-96h42v48H30a6 6 0 0 1-6-6v-6H6a6 6 0 0 1-6-6v-12a6 6 0 0 1 6-6h18v-6a6 6 0 0 1 6-6z\"],\n    \"microphone\": [352, 512, [], \"f130\", \"M176 352c53.02 0 96-42.98 96-96V96c0-53.02-42.98-96-96-96S80 42.98 80 96v160c0 53.02 42.98 96 96 96zm160-160h-16c-8.84 0-16 7.16-16 16v48c0 74.8-64.49 134.82-140.79 127.38C96.71 376.89 48 317.11 48 250.3V208c0-8.84-7.16-16-16-16H16c-8.84 0-16 7.16-16 16v40.16c0 89.64 63.97 169.55 152 181.69V464H96c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16h-56v-33.77C285.71 418.47 352 344.9 352 256v-48c0-8.84-7.16-16-16-16z\"],\n    \"microphone-alt\": [352, 512, [], \"f3c9\", \"M336 192h-16c-8.84 0-16 7.16-16 16v48c0 74.8-64.49 134.82-140.79 127.38C96.71 376.89 48 317.11 48 250.3V208c0-8.84-7.16-16-16-16H16c-8.84 0-16 7.16-16 16v40.16c0 89.64 63.97 169.55 152 181.69V464H96c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16h-56v-33.77C285.71 418.47 352 344.9 352 256v-48c0-8.84-7.16-16-16-16zM176 352c53.02 0 96-42.98 96-96h-85.33c-5.89 0-10.67-3.58-10.67-8v-16c0-4.42 4.78-8 10.67-8H272v-32h-85.33c-5.89 0-10.67-3.58-10.67-8v-16c0-4.42 4.78-8 10.67-8H272v-32h-85.33c-5.89 0-10.67-3.58-10.67-8v-16c0-4.42 4.78-8 10.67-8H272c0-53.02-42.98-96-96-96S80 42.98 80 96v160c0 53.02 42.98 96 96 96z\"],\n    \"microphone-alt-slash\": [640, 512, [], \"f539\", \"M633.82 458.1L476.26 336.33C488.74 312.21 496 284.98 496 256v-48c0-8.84-7.16-16-16-16h-16c-8.84 0-16 7.16-16 16v48c0 17.92-3.96 34.8-10.72 50.2l-26.55-20.52c3.1-9.4 5.28-19.22 5.28-29.67h-43.67l-41.4-32H416v-32h-85.33c-5.89 0-10.67-3.58-10.67-8v-16c0-4.42 4.78-8 10.67-8H416v-32h-85.33c-5.89 0-10.67-3.58-10.67-8v-16c0-4.42 4.78-8 10.67-8H416c0-53.02-42.98-96-96-96s-96 42.98-96 96v45.36L45.47 3.37C38.49-2.05 28.43-.8 23.01 6.18L3.37 31.45C-2.05 38.42-.8 48.47 6.18 53.9l588.36 454.73c6.98 5.43 17.03 4.17 22.46-2.81l19.64-25.27c5.41-6.97 4.16-17.02-2.82-22.45zM400 464h-56v-33.78c11.71-1.62 23.1-4.28 33.96-8.08l-50.4-38.96c-6.71.4-13.41.87-20.35.2-55.85-5.45-98.74-48.63-111.18-101.85L144 241.31v6.85c0 89.64 63.97 169.55 152 181.69V464h-56c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16z\"],\n    \"microphone-slash\": [640, 512, [], \"f131\", \"M633.82 458.1l-157.8-121.96C488.61 312.13 496 285.01 496 256v-48c0-8.84-7.16-16-16-16h-16c-8.84 0-16 7.16-16 16v48c0 17.92-3.96 34.8-10.72 50.2l-26.55-20.52c3.1-9.4 5.28-19.22 5.28-29.67V96c0-53.02-42.98-96-96-96s-96 42.98-96 96v45.36L45.47 3.37C38.49-2.05 28.43-.8 23.01 6.18L3.37 31.45C-2.05 38.42-.8 48.47 6.18 53.9l588.36 454.73c6.98 5.43 17.03 4.17 22.46-2.81l19.64-25.27c5.41-6.97 4.16-17.02-2.82-22.45zM400 464h-56v-33.77c11.66-1.6 22.85-4.54 33.67-8.31l-50.11-38.73c-6.71.4-13.41.87-20.35.2-55.85-5.45-98.74-48.63-111.18-101.85L144 241.31v6.85c0 89.64 63.97 169.55 152 181.69V464h-56c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16z\"],\n    \"microscope\": [512, 512, [], \"f610\", \"M160 320h12v16c0 8.84 7.16 16 16 16h40c8.84 0 16-7.16 16-16v-16h12c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32V16c0-8.84-7.16-16-16-16h-64c-8.84 0-16 7.16-16 16v16c-17.67 0-32 14.33-32 32v224c0 17.67 14.33 32 32 32zm304 128h-1.29C493.24 413.99 512 369.2 512 320c0-105.88-86.12-192-192-192v64c70.58 0 128 57.42 128 128s-57.42 128-128 128H48c-26.51 0-48 21.49-48 48 0 8.84 7.16 16 16 16h480c8.84 0 16-7.16 16-16 0-26.51-21.49-48-48-48zm-360-32h208c4.42 0 8-3.58 8-8v-16c0-4.42-3.58-8-8-8H104c-4.42 0-8 3.58-8 8v16c0 4.42 3.58 8 8 8z\"],\n    \"minus\": [448, 512, [], \"f068\", \"M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"],\n    \"minus-circle\": [512, 512, [], \"f056\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zM124 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H124z\"],\n    \"minus-square\": [448, 512, [], \"f146\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z\"],\n    \"mitten\": [448, 512, [], \"f7b5\", \"M368 416H48c-8.8 0-16 7.2-16 16v64c0 8.8 7.2 16 16 16h320c8.8 0 16-7.2 16-16v-64c0-8.8-7.2-16-16-16zm57-209.1c-27.2-22.6-67.5-19-90.1 8.2l-20.9 25-29.6-128.4c-18-77.5-95.4-125.9-172.8-108C34.2 21.6-14.2 98.9 3.7 176.4L51.6 384h309l72.5-87c22.7-27.2 19-67.5-8.1-90.1z\"],\n    \"mobile\": [320, 512, [], \"f10b\", \"M272 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h224c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM160 480c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"mobile-alt\": [320, 512, [], \"f3cd\", \"M272 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h224c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM160 480c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm112-108c0 6.6-5.4 12-12 12H60c-6.6 0-12-5.4-12-12V60c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v312z\"],\n    \"money-bill\": [640, 512, [], \"f0d6\", \"M608 64H32C14.33 64 0 78.33 0 96v320c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V96c0-17.67-14.33-32-32-32zM48 400v-64c35.35 0 64 28.65 64 64H48zm0-224v-64h64c0 35.35-28.65 64-64 64zm272 176c-44.19 0-80-42.99-80-96 0-53.02 35.82-96 80-96s80 42.98 80 96c0 53.03-35.83 96-80 96zm272 48h-64c0-35.35 28.65-64 64-64v64zm0-224c-35.35 0-64-28.65-64-64h64v64z\"],\n    \"money-bill-alt\": [640, 512, [], \"f3d1\", \"M352 288h-16v-88c0-4.42-3.58-8-8-8h-13.58c-4.74 0-9.37 1.4-13.31 4.03l-15.33 10.22a7.994 7.994 0 0 0-2.22 11.09l8.88 13.31a7.994 7.994 0 0 0 11.09 2.22l.47-.31V288h-16c-4.42 0-8 3.58-8 8v16c0 4.42 3.58 8 8 8h64c4.42 0 8-3.58 8-8v-16c0-4.42-3.58-8-8-8zM608 64H32C14.33 64 0 78.33 0 96v320c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V96c0-17.67-14.33-32-32-32zM48 400v-64c35.35 0 64 28.65 64 64H48zm0-224v-64h64c0 35.35-28.65 64-64 64zm272 192c-53.02 0-96-50.15-96-112 0-61.86 42.98-112 96-112s96 50.14 96 112c0 61.87-43 112-96 112zm272 32h-64c0-35.35 28.65-64 64-64v64zm0-224c-35.35 0-64-28.65-64-64h64v64z\"],\n    \"money-bill-wave\": [640, 512, [], \"f53a\", \"M621.16 54.46C582.37 38.19 543.55 32 504.75 32c-123.17-.01-246.33 62.34-369.5 62.34-30.89 0-61.76-3.92-92.65-13.72-3.47-1.1-6.95-1.62-10.35-1.62C15.04 79 0 92.32 0 110.81v317.26c0 12.63 7.23 24.6 18.84 29.46C57.63 473.81 96.45 480 135.25 480c123.17 0 246.34-62.35 369.51-62.35 30.89 0 61.76 3.92 92.65 13.72 3.47 1.1 6.95 1.62 10.35 1.62 17.21 0 32.25-13.32 32.25-31.81V83.93c-.01-12.64-7.24-24.6-18.85-29.47zM48 132.22c20.12 5.04 41.12 7.57 62.72 8.93C104.84 170.54 79 192.69 48 192.69v-60.47zm0 285v-47.78c34.37 0 62.18 27.27 63.71 61.4-22.53-1.81-43.59-6.31-63.71-13.62zM320 352c-44.19 0-80-42.99-80-96 0-53.02 35.82-96 80-96s80 42.98 80 96c0 53.03-35.83 96-80 96zm272 27.78c-17.52-4.39-35.71-6.85-54.32-8.44 5.87-26.08 27.5-45.88 54.32-49.28v57.72zm0-236.11c-30.89-3.91-54.86-29.7-55.81-61.55 19.54 2.17 38.09 6.23 55.81 12.66v48.89z\"],\n    \"money-bill-wave-alt\": [640, 512, [], \"f53b\", \"M621.16 54.46C582.37 38.19 543.55 32 504.75 32c-123.17-.01-246.33 62.34-369.5 62.34-30.89 0-61.76-3.92-92.65-13.72-3.47-1.1-6.95-1.62-10.35-1.62C15.04 79 0 92.32 0 110.81v317.26c0 12.63 7.23 24.6 18.84 29.46C57.63 473.81 96.45 480 135.25 480c123.17 0 246.34-62.35 369.51-62.35 30.89 0 61.76 3.92 92.65 13.72 3.47 1.1 6.95 1.62 10.35 1.62 17.21 0 32.25-13.32 32.25-31.81V83.93c-.01-12.64-7.24-24.6-18.85-29.47zM320 352c-44.19 0-80-42.99-80-96 0-53.02 35.82-96 80-96s80 42.98 80 96c0 53.03-35.83 96-80 96z\"],\n    \"money-check\": [640, 512, [], \"f53c\", \"M0 448c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V128H0v320zm448-208c0-8.84 7.16-16 16-16h96c8.84 0 16 7.16 16 16v32c0 8.84-7.16 16-16 16h-96c-8.84 0-16-7.16-16-16v-32zm0 120c0-4.42 3.58-8 8-8h112c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H456c-4.42 0-8-3.58-8-8v-16zM64 264c0-4.42 3.58-8 8-8h304c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-16zm0 96c0-4.42 3.58-8 8-8h176c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-16zM624 32H16C7.16 32 0 39.16 0 48v48h640V48c0-8.84-7.16-16-16-16z\"],\n    \"money-check-alt\": [640, 512, [], \"f53d\", \"M608 32H32C14.33 32 0 46.33 0 64v384c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zM176 327.88V344c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-16.29c-11.29-.58-22.27-4.52-31.37-11.35-3.9-2.93-4.1-8.77-.57-12.14l11.75-11.21c2.77-2.64 6.89-2.76 10.13-.73 3.87 2.42 8.26 3.72 12.82 3.72h28.11c6.5 0 11.8-5.92 11.8-13.19 0-5.95-3.61-11.19-8.77-12.73l-45-13.5c-18.59-5.58-31.58-23.42-31.58-43.39 0-24.52 19.05-44.44 42.67-45.07V152c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v16.29c11.29.58 22.27 4.51 31.37 11.35 3.9 2.93 4.1 8.77.57 12.14l-11.75 11.21c-2.77 2.64-6.89 2.76-10.13.73-3.87-2.43-8.26-3.72-12.82-3.72h-28.11c-6.5 0-11.8 5.92-11.8 13.19 0 5.95 3.61 11.19 8.77 12.73l45 13.5c18.59 5.58 31.58 23.42 31.58 43.39 0 24.53-19.05 44.44-42.67 45.07zM416 312c0 4.42-3.58 8-8 8H296c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h112c4.42 0 8 3.58 8 8v16zm160 0c0 4.42-3.58 8-8 8h-80c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16zm0-96c0 4.42-3.58 8-8 8H296c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h272c4.42 0 8 3.58 8 8v16z\"],\n    \"monument\": [384, 512, [], \"f5a6\", \"M368 448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h352c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zm-78.86-347.26a31.97 31.97 0 0 0-9.21-19.44L203.31 4.69c-6.25-6.25-16.38-6.25-22.63 0l-76.6 76.61a31.97 31.97 0 0 0-9.21 19.44L64 416h256l-30.86-315.26zM240 307.2c0 6.4-6.4 12.8-12.8 12.8h-70.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h70.4c6.4 0 12.8 6.4 12.8 12.8v38.4z\"],\n    \"moon\": [512, 512, [], \"f186\", \"M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z\"],\n    \"mortar-pestle\": [512, 512, [], \"f5a7\", \"M501.54 60.91c17.22-17.22 12.51-46.25-9.27-57.14a35.696 35.696 0 0 0-37.37 3.37L251.09 160h151.37l99.08-99.09zM496 192H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h16c0 80.98 50.2 150.11 121.13 178.32-12.76 16.87-21.72 36.8-24.95 58.69-1.46 9.92 6.04 18.98 16.07 18.98h223.5c10.03 0 17.53-9.06 16.07-18.98-3.22-21.89-12.18-41.82-24.95-58.69C429.8 406.11 480 336.98 480 256h16c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z\"],\n    \"mosque\": [640, 512, [], \"f678\", \"M0 480c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V160H0v320zm579.16-192c17.86-17.39 28.84-37.34 28.84-58.91 0-52.86-41.79-93.79-87.92-122.9-41.94-26.47-80.63-57.77-111.96-96.22L400 0l-8.12 9.97c-31.33 38.45-70.01 69.76-111.96 96.22C233.79 135.3 192 176.23 192 229.09c0 21.57 10.98 41.52 28.84 58.91h358.32zM608 320H192c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h32v-64c0-17.67 14.33-32 32-32s32 14.33 32 32v64h64v-72c0-48 48-72 48-72s48 24 48 72v72h64v-64c0-17.67 14.33-32 32-32s32 14.33 32 32v64h32c17.67 0 32-14.33 32-32V352c0-17.67-14.33-32-32-32zM64 0S0 32 0 96v32h128V96c0-64-64-96-64-96z\"],\n    \"motorcycle\": [640, 512, [], \"f21c\", \"M512.9 192c-14.9-.1-29.1 2.3-42.4 6.9L437.6 144H520c13.3 0 24-10.7 24-24V88c0-13.3-10.7-24-24-24h-45.3c-6.8 0-13.3 2.9-17.8 7.9l-37.5 41.7-22.8-38C392.2 68.4 384.4 64 376 64h-80c-8.8 0-16 7.2-16 16v16c0 8.8 7.2 16 16 16h66.4l19.2 32H227.9c-17.7-23.1-44.9-40-99.9-40H72.5C59 104 47.7 115 48 128.5c.2 13 10.9 23.5 24 23.5h56c24.5 0 38.7 10.9 47.8 24.8l-11.3 20.5c-13-3.9-26.9-5.7-41.3-5.2C55.9 194.5 1.6 249.6 0 317c-1.6 72.1 56.3 131 128 131 59.6 0 109.7-40.8 124-96h84.2c13.7 0 24.6-11.4 24-25.1-2.1-47.1 17.5-93.7 56.2-125l12.5 20.8c-27.6 23.7-45.1 58.9-44.8 98.2.5 69.6 57.2 126.5 126.8 127.1 71.6.7 129.8-57.5 129.2-129.1-.7-69.6-57.6-126.4-127.2-126.9zM128 400c-44.1 0-80-35.9-80-80s35.9-80 80-80c4.2 0 8.4.3 12.5 1L99 316.4c-8.8 16 2.8 35.6 21 35.6h81.3c-12.4 28.2-40.6 48-73.3 48zm463.9-75.6c-2.2 40.6-35 73.4-75.5 75.5-46.1 2.5-84.4-34.3-84.4-79.9 0-21.4 8.4-40.8 22.1-55.1l49.4 82.4c4.5 7.6 14.4 10 22 5.5l13.7-8.2c7.6-4.5 10-14.4 5.5-22l-48.6-80.9c5.2-1.1 10.5-1.6 15.9-1.6 45.6-.1 82.3 38.2 79.9 84.3z\"],\n    \"mountain\": [640, 512, [], \"f6fc\", \"M634.92 462.7l-288-448C341.03 5.54 330.89 0 320 0s-21.03 5.54-26.92 14.7l-288 448a32.001 32.001 0 0 0-1.17 32.64A32.004 32.004 0 0 0 32 512h576c11.71 0 22.48-6.39 28.09-16.67a31.983 31.983 0 0 0-1.17-32.63zM320 91.18L405.39 224H320l-64 64-38.06-38.06L320 91.18z\"],\n    \"mouse\": [384, 512, [], \"f8cc\", \"M0 352a160 160 0 0 0 160 160h64a160 160 0 0 0 160-160V224H0zM176 0h-16A160 160 0 0 0 0 160v32h176zm48 0h-16v192h176v-32A160 160 0 0 0 224 0z\"],\n    \"mouse-pointer\": [320, 512, [], \"f245\", \"M302.189 329.126H196.105l55.831 135.993c3.889 9.428-.555 19.999-9.444 23.999l-49.165 21.427c-9.165 4-19.443-.571-23.332-9.714l-53.053-129.136-86.664 89.138C18.729 472.71 0 463.554 0 447.977V18.299C0 1.899 19.921-6.096 30.277 5.443l284.412 292.542c11.472 11.179 3.007 31.141-12.5 31.141z\"],\n    \"mug-hot\": [512, 512, [], \"f7b6\", \"M127.1 146.5c1.3 7.7 8 13.5 16 13.5h16.5c9.8 0 17.6-8.5 16.3-18-3.8-28.2-16.4-54.2-36.6-74.7-14.4-14.7-23.6-33.3-26.4-53.5C111.8 5.9 105 0 96.8 0H80.4C70.6 0 63 8.5 64.1 18c3.9 31.9 18 61.3 40.6 84.4 12 12.2 19.7 27.5 22.4 44.1zm112 0c1.3 7.7 8 13.5 16 13.5h16.5c9.8 0 17.6-8.5 16.3-18-3.8-28.2-16.4-54.2-36.6-74.7-14.4-14.7-23.6-33.3-26.4-53.5C223.8 5.9 217 0 208.8 0h-16.4c-9.8 0-17.5 8.5-16.3 18 3.9 31.9 18 61.3 40.6 84.4 12 12.2 19.7 27.5 22.4 44.1zM400 192H32c-17.7 0-32 14.3-32 32v192c0 53 43 96 96 96h192c53 0 96-43 96-96h16c61.8 0 112-50.2 112-112s-50.2-112-112-112zm0 160h-16v-96h16c26.5 0 48 21.5 48 48s-21.5 48-48 48z\"],\n    \"music\": [512, 512, [], \"f001\", \"M470.38 1.51L150.41 96A32 32 0 0 0 128 126.51v261.41A139 139 0 0 0 96 384c-53 0-96 28.66-96 64s43 64 96 64 96-28.66 96-64V214.32l256-75v184.61a138.4 138.4 0 0 0-32-3.93c-53 0-96 28.66-96 64s43 64 96 64 96-28.65 96-64V32a32 32 0 0 0-41.62-30.49z\"],\n    \"network-wired\": [640, 512, [], \"f6ff\", \"M640 264v-16c0-8.84-7.16-16-16-16H344v-40h72c17.67 0 32-14.33 32-32V32c0-17.67-14.33-32-32-32H224c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h72v40H16c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h104v40H64c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h160c17.67 0 32-14.33 32-32V352c0-17.67-14.33-32-32-32h-56v-40h304v40h-56c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h160c17.67 0 32-14.33 32-32V352c0-17.67-14.33-32-32-32h-56v-40h104c8.84 0 16-7.16 16-16zM256 128V64h128v64H256zm-64 320H96v-64h96v64zm352 0h-96v-64h96v64z\"],\n    \"neuter\": [288, 512, [], \"f22c\", \"M288 176c0-79.5-64.5-144-144-144S0 96.5 0 176c0 68.5 47.9 125.9 112 140.4V468c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V316.4c64.1-14.5 112-71.9 112-140.4zm-144 80c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"],\n    \"newspaper\": [576, 512, [], \"f1ea\", \"M552 64H88c-13.255 0-24 10.745-24 24v8H24c-13.255 0-24 10.745-24 24v272c0 30.928 25.072 56 56 56h472c26.51 0 48-21.49 48-48V88c0-13.255-10.745-24-24-24zM56 400a8 8 0 0 1-8-8V144h16v248a8 8 0 0 1-8 8zm236-16H140c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm208 0H348c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm-208-96H140c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm208 0H348c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm0-96H140c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h360c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12z\"],\n    \"not-equal\": [448, 512, [], \"f53e\", \"M416 208c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32h-23.88l51.87-66.81c5.37-7.02 4.04-17.06-2.97-22.43L415.61 3.3c-7.02-5.38-17.06-4.04-22.44 2.97L311.09 112H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h204.56l-74.53 96H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h55.49l-51.87 66.81c-5.37 7.01-4.04 17.05 2.97 22.43L64 508.7c7.02 5.38 17.06 4.04 22.43-2.97L168.52 400H416c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32H243.05l74.53-96H416z\"],\n    \"notes-medical\": [384, 512, [], \"f481\", \"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm96 304c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8v48zm0-192c0 4.4-3.6 8-8 8H104c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h176c4.4 0 8 3.6 8 8v16z\"],\n    \"object-group\": [512, 512, [], \"f247\", \"M480 128V96h20c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v20H64V44c0-6.627-5.373-12-12-12H12C5.373 32 0 37.373 0 44v40c0 6.627 5.373 12 12 12h20v320H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-20h384v20c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-20V128zM96 276V140c0-6.627 5.373-12 12-12h168c6.627 0 12 5.373 12 12v136c0 6.627-5.373 12-12 12H108c-6.627 0-12-5.373-12-12zm320 96c0 6.627-5.373 12-12 12H236c-6.627 0-12-5.373-12-12v-52h72c13.255 0 24-10.745 24-24v-72h84c6.627 0 12 5.373 12 12v136z\"],\n    \"object-ungroup\": [576, 512, [], \"f248\", \"M64 320v26a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6v-52a6 6 0 0 1 6-6h26V96H6a6 6 0 0 1-6-6V38a6 6 0 0 1 6-6h52a6 6 0 0 1 6 6v26h288V38a6 6 0 0 1 6-6h52a6 6 0 0 1 6 6v52a6 6 0 0 1-6 6h-26v192h26a6 6 0 0 1 6 6v52a6 6 0 0 1-6 6h-52a6 6 0 0 1-6-6v-26H64zm480-64v-32h26a6 6 0 0 0 6-6v-52a6 6 0 0 0-6-6h-52a6 6 0 0 0-6 6v26H408v72h8c13.255 0 24 10.745 24 24v64c0 13.255-10.745 24-24 24h-64c-13.255 0-24-10.745-24-24v-8H192v72h-26a6 6 0 0 0-6 6v52a6 6 0 0 0 6 6h52a6 6 0 0 0 6-6v-26h288v26a6 6 0 0 0 6 6h52a6 6 0 0 0 6-6v-52a6 6 0 0 0-6-6h-26V256z\"],\n    \"oil-can\": [640, 512, [], \"f613\", \"M629.8 160.31L416 224l-50.49-25.24a64.07 64.07 0 0 0-28.62-6.76H280v-48h56c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16H176c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h56v48h-56L37.72 166.86a31.9 31.9 0 0 0-5.79-.53C14.67 166.33 0 180.36 0 198.34v94.95c0 15.46 11.06 28.72 26.28 31.48L96 337.46V384c0 17.67 14.33 32 32 32h274.63c8.55 0 16.75-3.42 22.76-9.51l212.26-214.75c1.5-1.5 2.34-3.54 2.34-5.66V168c.01-5.31-5.08-9.15-10.19-7.69zM96 288.67l-48-8.73v-62.43l48 8.73v62.43zm453.33 84.66c0 23.56 19.1 42.67 42.67 42.67s42.67-19.1 42.67-42.67S592 288 592 288s-42.67 61.77-42.67 85.33z\"],\n    \"om\": [512, 512, [], \"f679\", \"M360.6 60.94a10.43 10.43 0 0 0 14.76 0l21.57-21.56a10.43 10.43 0 0 0 0-14.76L375.35 3.06c-4.08-4.07-10.68-4.07-14.76 0l-21.57 21.56a10.43 10.43 0 0 0 0 14.76l21.58 21.56zM412.11 192c-26.69 0-51.77 10.39-70.64 29.25l-24.25 24.25c-6.78 6.77-15.78 10.5-25.38 10.5H245c10.54-22.1 14.17-48.11 7.73-75.23-10.1-42.55-46.36-76.11-89.52-83.19-36.15-5.93-70.9 5.04-96.01 28.78-7.36 6.96-6.97 18.85 1.12 24.93l26.15 19.63c5.72 4.3 13.66 4.32 19.2-.21 8.45-6.9 19.02-10.71 30.27-10.71 26.47 0 48.01 21.53 48.01 48s-21.54 48-48.01 48h-31.9c-11.96 0-19.74 12.58-14.39 23.28l16.09 32.17c2.53 5.06 7.6 8.1 13.17 8.55h33.03c35.3 0 64.01 28.7 64.01 64s-28.71 64-64.01 64c-96.02 0-122.35-54.02-145.15-92.03-4.53-7.55-14.77-3.58-14.79 5.22C-.09 416 41.13 512 159.94 512c70.59 0 128.02-57.42 128.02-128 0-23.42-6.78-45.1-17.81-64h21.69c26.69 0 51.77-10.39 70.64-29.25l24.25-24.25c6.78-6.77 15.78-10.5 25.38-10.5 19.78 0 35.88 16.09 35.88 35.88V392c0 13.23-18.77 24-32.01 24-39.4 0-66.67-24.24-81.82-42.89-4.77-5.87-14.2-2.54-14.2 5.02V416s0 64 96.02 64c48.54 0 96.02-39.47 96.02-88V291.88c0-55.08-44.8-99.88-99.89-99.88zm42.18-124.73c-85.55 65.12-169.05 2.75-172.58.05-6.02-4.62-14.44-4.38-20.14.55-5.74 4.92-7.27 13.17-3.66 19.8 1.61 2.95 40.37 72.34 118.8 72.34 79.92 0 98.78-31.36 101.75-37.66 1.02-2.12 1.53-4.47 1.53-6.83V80c0-13.22-15.14-20.69-25.7-12.73z\"],\n    \"otter\": [640, 512, [], \"f700\", \"M608 32h-32l-13.25-13.25A63.97 63.97 0 0 0 517.49 0H497c-11.14 0-22.08 2.91-31.75 8.43L312 96h-56C149.96 96 64 181.96 64 288v1.61c0 32.75-16 62.14-39.56 84.89-18.19 17.58-28.1 43.68-23.19 71.8 6.76 38.8 42.9 65.7 82.28 65.7H192c17.67 0 32-14.33 32-32s-14.33-32-32-32H80c-8.83 0-16-7.17-16-16s7.17-16 16-16h224c8.84 0 16-7.16 16-16v-16c0-17.67-14.33-32-32-32h-64l149.49-80.5L448 416h80c8.84 0 16-7.16 16-16v-16c0-17.67-14.33-32-32-32h-28.22l-55.11-110.21L521.14 192H544c53.02 0 96-42.98 96-96V64c0-17.67-14.33-32-32-32zm-96 16c8.84 0 16 7.16 16 16s-7.16 16-16 16-16-7.16-16-16 7.16-16 16-16zm32 96h-34.96L407.2 198.84l-13.77-27.55L512 112h77.05c-6.62 18.58-24.22 32-45.05 32z\"],\n    \"outdent\": [448, 512, [], \"f03b\", \"M100.69 363.29c10 10 27.31 2.93 27.31-11.31V160c0-14.32-17.33-21.31-27.31-11.31l-96 96a16 16 0 0 0 0 22.62zM432 416H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm3.17-128H204.83A12.82 12.82 0 0 0 192 300.83v38.34A12.82 12.82 0 0 0 204.83 352h230.34A12.82 12.82 0 0 0 448 339.17v-38.34A12.82 12.82 0 0 0 435.17 288zm0-128H204.83A12.82 12.82 0 0 0 192 172.83v38.34A12.82 12.82 0 0 0 204.83 224h230.34A12.82 12.82 0 0 0 448 211.17v-38.34A12.82 12.82 0 0 0 435.17 160zM432 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"],\n    \"pager\": [512, 512, [], \"f815\", \"M448 64H64a64 64 0 0 0-64 64v256a64 64 0 0 0 64 64h384a64 64 0 0 0 64-64V128a64 64 0 0 0-64-64zM160 368H80a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h80zm128-16a16 16 0 0 1-16 16h-80v-48h80a16 16 0 0 1 16 16zm160-128a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32v-64a32 32 0 0 1 32-32h320a32 32 0 0 1 32 32z\"],\n    \"paint-brush\": [512, 512, [], \"f1fc\", \"M167.02 309.34c-40.12 2.58-76.53 17.86-97.19 72.3-2.35 6.21-8 9.98-14.59 9.98-11.11 0-45.46-27.67-55.25-34.35C0 439.62 37.93 512 128 512c75.86 0 128-43.77 128-120.19 0-3.11-.65-6.08-.97-9.13l-88.01-73.34zM457.89 0c-15.16 0-29.37 6.71-40.21 16.45C213.27 199.05 192 203.34 192 257.09c0 13.7 3.25 26.76 8.73 38.7l63.82 53.18c7.21 1.8 14.64 3.03 22.39 3.03 62.11 0 98.11-45.47 211.16-256.46 7.38-14.35 13.9-29.85 13.9-45.99C512 20.64 486 0 457.89 0z\"],\n    \"paint-roller\": [512, 512, [], \"f5aa\", \"M416 128V32c0-17.67-14.33-32-32-32H32C14.33 0 0 14.33 0 32v96c0 17.67 14.33 32 32 32h352c17.67 0 32-14.33 32-32zm32-64v128c0 17.67-14.33 32-32 32H256c-35.35 0-64 28.65-64 64v32c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V352c0-17.67-14.33-32-32-32v-32h160c53.02 0 96-42.98 96-96v-64c0-35.35-28.65-64-64-64z\"],\n    \"palette\": [512, 512, [], \"f53f\", \"M204.3 5C104.9 24.4 24.8 104.3 5.2 203.4c-37 187 131.7 326.4 258.8 306.7 41.2-6.4 61.4-54.6 42.5-91.7-23.1-45.4 9.9-98.4 60.9-98.4h79.7c35.8 0 64.8-29.6 64.9-65.3C511.5 97.1 368.1-26.9 204.3 5zM96 320c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm32-128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128-64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"pallet\": [640, 512, [], \"f482\", \"M144 256h352c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16H384v128l-64-32-64 32V0H144c-8.8 0-16 7.2-16 16v224c0 8.8 7.2 16 16 16zm480 128c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h48v64H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h608c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16h-48v-64h48zm-336 64H128v-64h160v64zm224 0H352v-64h160v64z\"],\n    \"paper-plane\": [512, 512, [], \"f1d8\", \"M476 3.2L12.5 270.6c-18.1 10.4-15.8 35.6 2.2 43.2L121 358.4l287.3-253.2c5.5-4.9 13.3 2.6 8.6 8.3L176 407v80.5c0 23.6 28.5 32.9 42.5 15.8L282 426l124.6 52.2c14.2 6 30.4-2.9 33-18.2l72-432C515 7.8 493.3-6.8 476 3.2z\"],\n    \"paperclip\": [448, 512, [], \"f0c6\", \"M43.246 466.142c-58.43-60.289-57.341-157.511 1.386-217.581L254.392 34c44.316-45.332 116.351-45.336 160.671 0 43.89 44.894 43.943 117.329 0 162.276L232.214 383.128c-29.855 30.537-78.633 30.111-107.982-.998-28.275-29.97-27.368-77.473 1.452-106.953l143.743-146.835c6.182-6.314 16.312-6.422 22.626-.241l22.861 22.379c6.315 6.182 6.422 16.312.241 22.626L171.427 319.927c-4.932 5.045-5.236 13.428-.648 18.292 4.372 4.634 11.245 4.711 15.688.165l182.849-186.851c19.613-20.062 19.613-52.725-.011-72.798-19.189-19.627-49.957-19.637-69.154 0L90.39 293.295c-34.763 35.56-35.299 93.12-1.191 128.313 34.01 35.093 88.985 35.137 123.058.286l172.06-175.999c6.177-6.319 16.307-6.433 22.626-.256l22.877 22.364c6.319 6.177 6.434 16.307.256 22.626l-172.06 175.998c-59.576 60.938-155.943 60.216-214.77-.485z\"],\n    \"parachute-box\": [512, 512, [], \"f4cd\", \"M511.9 175c-9.1-75.6-78.4-132.4-158.3-158.7C390 55.7 416 116.9 416 192h28.1L327.5 321.5c-2.5-.6-4.8-1.5-7.5-1.5h-48V192h112C384 76.8 315.1 0 256 0S128 76.8 128 192h112v128h-48c-2.7 0-5 .9-7.5 1.5L67.9 192H96c0-75.1 26-136.3 62.4-175.7C78.5 42.7 9.2 99.5.1 175c-1.1 9.1 6.8 17 16 17h8.7l136.7 151.9c-.7 2.6-1.6 5.2-1.6 8.1v128c0 17.7 14.3 32 32 32h128c17.7 0 32-14.3 32-32V352c0-2.9-.9-5.4-1.6-8.1L487.1 192h8.7c9.3 0 17.2-7.8 16.1-17z\"],\n    \"paragraph\": [448, 512, [], \"f1dd\", \"M448 48v32a16 16 0 0 1-16 16h-48v368a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V96h-32v368a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V352h-32a160 160 0 0 1 0-320h240a16 16 0 0 1 16 16z\"],\n    \"parking\": [448, 512, [], \"f540\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM240 320h-48v48c0 8.8-7.2 16-16 16h-32c-8.8 0-16-7.2-16-16V144c0-8.8 7.2-16 16-16h96c52.9 0 96 43.1 96 96s-43.1 96-96 96zm0-128h-48v64h48c17.6 0 32-14.4 32-32s-14.4-32-32-32z\"],\n    \"passport\": [448, 512, [], \"f5ab\", \"M129.62 176h39.09c1.49-27.03 6.54-51.35 14.21-70.41-27.71 13.24-48.02 39.19-53.3 70.41zm0 32c5.29 31.22 25.59 57.17 53.3 70.41-7.68-19.06-12.72-43.38-14.21-70.41h-39.09zM224 286.69c7.69-7.45 20.77-34.42 23.43-78.69h-46.87c2.67 44.26 15.75 71.24 23.44 78.69zM200.57 176h46.87c-2.66-44.26-15.74-71.24-23.43-78.69-7.7 7.45-20.78 34.43-23.44 78.69zm64.51 102.41c27.71-13.24 48.02-39.19 53.3-70.41h-39.09c-1.49 27.03-6.53 51.35-14.21 70.41zM416 0H64C28.65 0 0 28.65 0 64v384c0 35.35 28.65 64 64 64h352c17.67 0 32-14.33 32-32V32c0-17.67-14.33-32-32-32zm-80 416H112c-8.8 0-16-7.2-16-16s7.2-16 16-16h224c8.8 0 16 7.2 16 16s-7.2 16-16 16zm-112-96c-70.69 0-128-57.31-128-128S153.31 64 224 64s128 57.31 128 128-57.31 128-128 128zm41.08-214.41c7.68 19.06 12.72 43.38 14.21 70.41h39.09c-5.28-31.22-25.59-57.17-53.3-70.41z\"],\n    \"pastafarianism\": [640, 512, [], \"f67b\", \"M624.54 347.67c-32.7-12.52-57.36 4.25-75.37 16.45-17.06 11.53-23.25 14.42-31.41 11.36-8.12-3.09-10.83-9.38-15.89-29.38-3.33-13.15-7.44-29.32-17.95-42.65 2.24-2.91 4.43-5.79 6.38-8.57C500.47 304.45 513.71 312 532 312c33.95 0 50.87-25.78 62.06-42.83 10.59-16.14 15-21.17 21.94-21.17 13.25 0 24-10.75 24-24s-10.75-24-24-24c-33.95 0-50.87 25.78-62.06 42.83-10.6 16.14-15 21.17-21.94 21.17-17.31 0-37.48-61.43-97.26-101.91l17.25-34.5C485.43 125.5 512 97.98 512 64c0-35.35-28.65-64-64-64s-64 28.65-64 64c0 13.02 3.94 25.1 10.62 35.21l-18.15 36.3c-16.98-4.6-35.6-7.51-56.46-7.51s-39.49 2.91-56.46 7.51l-18.15-36.3C252.06 89.1 256 77.02 256 64c0-35.35-28.65-64-64-64s-64 28.65-64 64c0 33.98 26.56 61.5 60.02 63.6l17.25 34.5C145.68 202.44 125.15 264 108 264c-6.94 0-11.34-5.03-21.94-21.17C74.88 225.78 57.96 200 24 200c-13.25 0-24 10.75-24 24s10.75 24 24 24c6.94 0 11.34 5.03 21.94 21.17C57.13 286.22 74.05 312 108 312c18.29 0 31.53-7.55 41.7-17.11 1.95 2.79 4.14 5.66 6.38 8.57-10.51 13.33-14.62 29.5-17.95 42.65-5.06 20-7.77 26.28-15.89 29.38-8.11 3.06-14.33.17-31.41-11.36-18.03-12.2-42.72-28.92-75.37-16.45-12.39 4.72-18.59 18.58-13.87 30.97 4.72 12.41 18.61 18.61 30.97 13.88 8.16-3.09 14.34-.19 31.39 11.36 13.55 9.16 30.83 20.86 52.42 20.84 7.17 0 14.83-1.28 22.97-4.39 32.66-12.44 39.98-41.33 45.33-62.44 2.21-8.72 3.99-14.49 5.95-18.87 16.62 13.61 36.95 25.88 61.64 34.17-9.96 37-32.18 90.8-60.26 90.8-13.25 0-24 10.75-24 24s10.75 24 24 24c66.74 0 97.05-88.63 107.42-129.14 6.69.6 13.42 1.14 20.58 1.14s13.89-.54 20.58-1.14C350.95 423.37 381.26 512 448 512c13.25 0 24-10.75 24-24s-10.75-24-24-24c-27.94 0-50.21-53.81-60.22-90.81 24.69-8.29 45-20.56 61.62-34.16 1.96 4.38 3.74 10.15 5.95 18.87 5.34 21.11 12.67 50 45.33 62.44 8.14 3.11 15.8 4.39 22.97 4.39 21.59 0 38.87-11.69 52.42-20.84 17.05-11.55 23.28-14.45 31.39-11.36 12.39 4.75 26.27-1.47 30.97-13.88 4.71-12.4-1.49-26.26-13.89-30.98zM448 48c8.82 0 16 7.18 16 16s-7.18 16-16 16-16-7.18-16-16 7.18-16 16-16zm-256 0c8.82 0 16 7.18 16 16s-7.18 16-16 16-16-7.18-16-16 7.18-16 16-16z\"],\n    \"paste\": [448, 512, [], \"f0ea\", \"M128 184c0-30.879 25.122-56 56-56h136V56c0-13.255-10.745-24-24-24h-80.61C204.306 12.89 183.637 0 160 0s-44.306 12.89-55.39 32H24C10.745 32 0 42.745 0 56v336c0 13.255 10.745 24 24 24h104V184zm32-144c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24zm184 248h104v200c0 13.255-10.745 24-24 24H184c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h136v104c0 13.2 10.8 24 24 24zm104-38.059V256h-96v-96h6.059a24 24 0 0 1 16.97 7.029l65.941 65.941a24.002 24.002 0 0 1 7.03 16.971z\"],\n    \"pause\": [448, 512, [], \"f04c\", \"M144 479H48c-26.5 0-48-21.5-48-48V79c0-26.5 21.5-48 48-48h96c26.5 0 48 21.5 48 48v352c0 26.5-21.5 48-48 48zm304-48V79c0-26.5-21.5-48-48-48h-96c-26.5 0-48 21.5-48 48v352c0 26.5 21.5 48 48 48h96c26.5 0 48-21.5 48-48z\"],\n    \"pause-circle\": [512, 512, [], \"f28b\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm-16 328c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16v160zm112 0c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16v160z\"],\n    \"paw\": [512, 512, [], \"f1b0\", \"M256 224c-79.41 0-192 122.76-192 200.25 0 34.9 26.81 55.75 71.74 55.75 48.84 0 81.09-25.08 120.26-25.08 39.51 0 71.85 25.08 120.26 25.08 44.93 0 71.74-20.85 71.74-55.75C448 346.76 335.41 224 256 224zm-147.28-12.61c-10.4-34.65-42.44-57.09-71.56-50.13-29.12 6.96-44.29 40.69-33.89 75.34 10.4 34.65 42.44 57.09 71.56 50.13 29.12-6.96 44.29-40.69 33.89-75.34zm84.72-20.78c30.94-8.14 46.42-49.94 34.58-93.36s-46.52-72.01-77.46-63.87-46.42 49.94-34.58 93.36c11.84 43.42 46.53 72.02 77.46 63.87zm281.39-29.34c-29.12-6.96-61.15 15.48-71.56 50.13-10.4 34.65 4.77 68.38 33.89 75.34 29.12 6.96 61.15-15.48 71.56-50.13 10.4-34.65-4.77-68.38-33.89-75.34zm-156.27 29.34c30.94 8.14 65.62-20.45 77.46-63.87 11.84-43.42-3.64-85.21-34.58-93.36s-65.62 20.45-77.46 63.87c-11.84 43.42 3.64 85.22 34.58 93.36z\"],\n    \"peace\": [496, 512, [], \"f67c\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm184 248c0 31.93-8.2 61.97-22.57 88.17L280 240.63V74.97c86.23 15.21 152 90.5 152 181.03zM216 437.03c-33.86-5.97-64.49-21.2-89.29-43.02L216 322.57v114.46zm64-114.46L369.29 394c-24.8 21.82-55.43 37.05-89.29 43.02V322.57zm-64-247.6v165.66L86.57 344.17C72.2 317.97 64 287.93 64 256c0-90.53 65.77-165.82 152-181.03z\"],\n    \"pen\": [512, 512, [], \"f304\", \"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"],\n    \"pen-alt\": [512, 512, [], \"f305\", \"M497.94 74.17l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.75 18.75-49.15 0-67.91zm-246.8-20.53c-15.62-15.62-40.94-15.62-56.56 0L75.8 172.43c-6.25 6.25-6.25 16.38 0 22.62l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0l101.82-101.82 22.63 22.62L93.95 290.03A327.038 327.038 0 0 0 .17 485.11l-.03.23c-1.7 15.28 11.21 28.2 26.49 26.51a327.02 327.02 0 0 0 195.34-93.8l196.79-196.79-82.77-82.77-84.85-84.85z\"],\n    \"pen-fancy\": [512, 512, [], \"f5ac\", \"M79.18 282.94a32.005 32.005 0 0 0-20.24 20.24L0 480l4.69 4.69 92.89-92.89c-.66-2.56-1.57-5.03-1.57-7.8 0-17.67 14.33-32 32-32s32 14.33 32 32-14.33 32-32 32c-2.77 0-5.24-.91-7.8-1.57l-92.89 92.89L32 512l176.82-58.94a31.983 31.983 0 0 0 20.24-20.24l33.07-84.07-98.88-98.88-84.07 33.07zM369.25 28.32L186.14 227.81l97.85 97.85 199.49-183.11C568.4 67.48 443.73-55.94 369.25 28.32z\"],\n    \"pen-nib\": [512, 512, [], \"f5ad\", \"M136.6 138.79a64.003 64.003 0 0 0-43.31 41.35L0 460l14.69 14.69L164.8 324.58c-2.99-6.26-4.8-13.18-4.8-20.58 0-26.51 21.49-48 48-48s48 21.49 48 48-21.49 48-48 48c-7.4 0-14.32-1.81-20.58-4.8L37.31 497.31 52 512l279.86-93.29a64.003 64.003 0 0 0 41.35-43.31L416 224 288 96l-151.4 42.79zm361.34-64.62l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.75 18.75-49.15 0-67.91z\"],\n    \"pen-square\": [448, 512, [], \"f14b\", \"M400 480H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48v352c0 26.5-21.5 48-48 48zM238.1 177.9L102.4 313.6l-6.3 57.1c-.8 7.6 5.6 14.1 13.3 13.3l57.1-6.3L302.2 242c2.3-2.3 2.3-6.1 0-8.5L246.7 178c-2.5-2.4-6.3-2.4-8.6-.1zM345 165.1L314.9 135c-9.4-9.4-24.6-9.4-33.9 0l-23.1 23.1c-2.3 2.3-2.3 6.1 0 8.5l55.5 55.5c2.3 2.3 6.1 2.3 8.5 0L345 199c9.3-9.3 9.3-24.5 0-33.9z\"],\n    \"pencil-alt\": [512, 512, [], \"f303\", \"M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z\"],\n    \"pencil-ruler\": [512, 512, [], \"f5ae\", \"M109.46 244.04l134.58-134.56-44.12-44.12-61.68 61.68a7.919 7.919 0 0 1-11.21 0l-11.21-11.21c-3.1-3.1-3.1-8.12 0-11.21l61.68-61.68-33.64-33.65C131.47-3.1 111.39-3.1 99 9.29L9.29 99c-12.38 12.39-12.39 32.47 0 44.86l100.17 100.18zm388.47-116.8c18.76-18.76 18.75-49.17 0-67.93l-45.25-45.25c-18.76-18.76-49.18-18.76-67.95 0l-46.02 46.01 113.2 113.2 46.02-46.03zM316.08 82.71l-297 296.96L.32 487.11c-2.53 14.49 10.09 27.11 24.59 24.56l107.45-18.84L429.28 195.9 316.08 82.71zm186.63 285.43l-33.64-33.64-61.68 61.68c-3.1 3.1-8.12 3.1-11.21 0l-11.21-11.21c-3.09-3.1-3.09-8.12 0-11.21l61.68-61.68-44.14-44.14L267.93 402.5l100.21 100.2c12.39 12.39 32.47 12.39 44.86 0l89.71-89.7c12.39-12.39 12.39-32.47 0-44.86z\"],\n    \"people-arrows\": [576, 512, [], \"e068\", \"M96,128A64,64,0,1,0,32,64,64,64,0,0,0,96,128Zm0,176.08a44.11,44.11,0,0,1,13.64-32L181.77,204c1.65-1.55,3.77-2.31,5.61-3.57A63.91,63.91,0,0,0,128,160H64A64,64,0,0,0,0,224v96a32,32,0,0,0,32,32V480a32,32,0,0,0,32,32h64a32,32,0,0,0,32-32V383.61l-50.36-47.53A44.08,44.08,0,0,1,96,304.08ZM480,128a64,64,0,1,0-64-64A64,64,0,0,0,480,128Zm32,32H448a63.91,63.91,0,0,0-59.38,40.42c1.84,1.27,4,2,5.62,3.59l72.12,68.06a44.37,44.37,0,0,1,0,64L416,383.62V480a32,32,0,0,0,32,32h64a32,32,0,0,0,32-32V352a32,32,0,0,0,32-32V224A64,64,0,0,0,512,160ZM444.4,295.34l-72.12-68.06A12,12,0,0,0,352,236v36H224V236a12,12,0,0,0-20.28-8.73L131.6,295.34a12.4,12.4,0,0,0,0,17.47l72.12,68.07A12,12,0,0,0,224,372.14V336H352v36.14a12,12,0,0,0,20.28,8.74l72.12-68.07A12.4,12.4,0,0,0,444.4,295.34Z\"],\n    \"people-carry\": [640, 512, [], \"f4ce\", \"M128 96c26.5 0 48-21.5 48-48S154.5 0 128 0 80 21.5 80 48s21.5 48 48 48zm384 0c26.5 0 48-21.5 48-48S538.5 0 512 0s-48 21.5-48 48 21.5 48 48 48zm125.7 372.1l-44-110-41.1 46.4-2 18.2 27.7 69.2c5 12.5 17 20.1 29.7 20.1 4 0 8-.7 11.9-2.3 16.4-6.6 24.4-25.2 17.8-41.6zm-34.2-209.8L585 178.1c-4.6-20-18.6-36.8-37.5-44.9-18.5-8-39-6.7-56.1 3.3-22.7 13.4-39.7 34.5-48.1 59.4L432 229.8 416 240v-96c0-8.8-7.2-16-16-16H240c-8.8 0-16 7.2-16 16v96l-16.1-10.2-11.3-33.9c-8.3-25-25.4-46-48.1-59.4-17.2-10-37.6-11.3-56.1-3.3-18.9 8.1-32.9 24.9-37.5 44.9l-18.4 80.2c-4.6 20 .7 41.2 14.4 56.7l67.2 75.9 10.1 92.6C130 499.8 143.8 512 160 512c1.2 0 2.3-.1 3.5-.2 17.6-1.9 30.2-17.7 28.3-35.3l-10.1-92.8c-1.5-13-6.9-25.1-15.6-35l-43.3-49 17.6-70.3 6.8 20.4c4.1 12.5 11.9 23.4 24.5 32.6l51.1 32.5c4.6 2.9 12.1 4.6 17.2 5h160c5.1-.4 12.6-2.1 17.2-5l51.1-32.5c12.6-9.2 20.4-20 24.5-32.6l6.8-20.4 17.6 70.3-43.3 49c-8.7 9.9-14.1 22-15.6 35l-10.1 92.8c-1.9 17.6 10.8 33.4 28.3 35.3 1.2.1 2.3.2 3.5.2 16.1 0 30-12.1 31.8-28.5l10.1-92.6 67.2-75.9c13.6-15.5 19-36.7 14.4-56.7zM46.3 358.1l-44 110c-6.6 16.4 1.4 35 17.8 41.6 16.8 6.6 35.1-1.7 41.6-17.8l27.7-69.2-2-18.2-41.1-46.4z\"],\n    \"pepper-hot\": [512, 512, [], \"f816\", \"M330.67 263.12V173.4l-52.75-24.22C219.44 218.76 197.58 400 56 400a56 56 0 0 0 0 112c212.64 0 370.65-122.87 419.18-210.34l-37.05-38.54zm131.09-128.37C493.92 74.91 477.18 26.48 458.62 3a8 8 0 0 0-11.93-.59l-22.9 23a8.06 8.06 0 0 0-.89 10.23c6.86 10.36 17.05 35.1-1.4 72.32A142.85 142.85 0 0 0 364.34 96c-28 0-54 8.54-76.34 22.59l74.67 34.29v78.24h89.09L506.44 288c3.26-12.62 5.56-25.63 5.56-39.31a154 154 0 0 0-50.24-113.94z\"],\n    \"percent\": [448, 512, [], \"f295\", \"M112 224c61.9 0 112-50.1 112-112S173.9 0 112 0 0 50.1 0 112s50.1 112 112 112zm0-160c26.5 0 48 21.5 48 48s-21.5 48-48 48-48-21.5-48-48 21.5-48 48-48zm224 224c-61.9 0-112 50.1-112 112s50.1 112 112 112 112-50.1 112-112-50.1-112-112-112zm0 160c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zM392.3.2l31.6-.1c19.4-.1 30.9 21.8 19.7 37.8L77.4 501.6a23.95 23.95 0 0 1-19.6 10.2l-33.4.1c-19.5 0-30.9-21.9-19.7-37.8l368-463.7C377.2 4 384.5.2 392.3.2z\"],\n    \"percentage\": [384, 512, [], \"f541\", \"M109.25 173.25c24.99-24.99 24.99-65.52 0-90.51-24.99-24.99-65.52-24.99-90.51 0-24.99 24.99-24.99 65.52 0 90.51 25 25 65.52 25 90.51 0zm256 165.49c-24.99-24.99-65.52-24.99-90.51 0-24.99 24.99-24.99 65.52 0 90.51 24.99 24.99 65.52 24.99 90.51 0 25-24.99 25-65.51 0-90.51zm-1.94-231.43l-22.62-22.62c-12.5-12.5-32.76-12.5-45.25 0L20.69 359.44c-12.5 12.5-12.5 32.76 0 45.25l22.62 22.62c12.5 12.5 32.76 12.5 45.25 0l274.75-274.75c12.5-12.49 12.5-32.75 0-45.25z\"],\n    \"person-booth\": [576, 512, [], \"f756\", \"M192 496c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320h-64v176zm32-272h-50.9l-45.2-45.3C115.8 166.6 99.7 160 82.7 160H64c-17.1 0-33.2 6.7-45.3 18.8C6.7 190.9 0 207 0 224.1L.2 320 0 480c0 17.7 14.3 32 31.9 32 17.6 0 32-14.3 32-32l.1-100.7c.9.5 1.6 1.3 2.5 1.7l29.1 43v56c0 17.7 14.3 32 32 32s32-14.3 32-32v-56.5c0-9.9-2.3-19.8-6.7-28.6l-41.2-61.3V253l20.9 20.9c9.1 9.1 21.1 14.1 33.9 14.1H224c17.7 0 32-14.3 32-32s-14.3-32-32-32zM64 128c26.5 0 48-21.5 48-48S90.5 32 64 32 16 53.5 16 80s21.5 48 48 48zm224-96l31.5 223.1-30.9 154.6c-4.3 21.6 13 38.3 31.4 38.3 15.2 0 28-9.1 32.3-30.4.9 16.9 14.6 30.4 31.7 30.4 17.7 0 32-14.3 32-32 0 17.7 14.3 32 32 32s32-14.3 32-32V0H288v32zm-96 0v160h64V0h-32c-17.7 0-32 14.3-32 32zM544 0h-32v496c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V32c0-17.7-14.3-32-32-32z\"],\n    \"phone\": [512, 512, [], \"f095\", \"M493.4 24.6l-104-24c-11.3-2.6-22.9 3.3-27.5 13.9l-48 112c-4.2 9.8-1.4 21.3 6.9 28l60.6 49.6c-36 76.7-98.9 140.5-177.2 177.2l-49.6-60.6c-6.8-8.3-18.2-11.1-28-6.9l-112 48C3.9 366.5-2 378.1.6 389.4l24 104C27.1 504.2 36.7 512 48 512c256.1 0 464-207.5 464-464 0-11.2-7.7-20.9-18.6-23.4z\"],\n    \"phone-alt\": [512, 512, [], \"f879\", \"M497.39 361.8l-112-48a24 24 0 0 0-28 6.9l-49.6 60.6A370.66 370.66 0 0 1 130.6 204.11l60.6-49.6a23.94 23.94 0 0 0 6.9-28l-48-112A24.16 24.16 0 0 0 122.6.61l-104 24A24 24 0 0 0 0 48c0 256.5 207.9 464 464 464a24 24 0 0 0 23.4-18.6l24-104a24.29 24.29 0 0 0-14.01-27.6z\"],\n    \"phone-slash\": [640, 512, [], \"f3dd\", \"M268.2 381.4l-49.6-60.6c-6.8-8.3-18.2-11.1-28-6.9l-112 48c-10.7 4.6-16.5 16.1-13.9 27.5l24 104c2.5 10.8 12.1 18.6 23.4 18.6 100.7 0 193.7-32.4 269.7-86.9l-80-61.8c-10.9 6.5-22.1 12.7-33.6 18.1zm365.6 76.7L475.1 335.5C537.9 256.4 576 156.9 576 48c0-11.2-7.7-20.9-18.6-23.4l-104-24c-11.3-2.6-22.9 3.3-27.5 13.9l-48 112c-4.2 9.8-1.4 21.3 6.9 28l60.6 49.6c-12.2 26.1-27.9 50.3-46 72.8L45.5 3.4C38.5-2 28.5-.8 23 6.2L3.4 31.4c-5.4 7-4.2 17 2.8 22.4l588.4 454.7c7 5.4 17 4.2 22.5-2.8l19.6-25.3c5.4-6.8 4.1-16.9-2.9-22.3z\"],\n    \"phone-square\": [448, 512, [], \"f098\", \"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM94 416c-7.033 0-13.057-4.873-14.616-11.627l-14.998-65a15 15 0 0 1 8.707-17.16l69.998-29.999a15 15 0 0 1 17.518 4.289l30.997 37.885c48.944-22.963 88.297-62.858 110.781-110.78l-37.886-30.997a15.001 15.001 0 0 1-4.289-17.518l30-69.998a15 15 0 0 1 17.16-8.707l65 14.998A14.997 14.997 0 0 1 384 126c0 160.292-129.945 290-290 290z\"],\n    \"phone-square-alt\": [448, 512, [], \"f87b\", \"M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-16.39 307.37l-15 65A15 15 0 0 1 354 416C194 416 64 286.29 64 126a15.7 15.7 0 0 1 11.63-14.61l65-15A18.23 18.23 0 0 1 144 96a16.27 16.27 0 0 1 13.79 9.09l30 70A17.9 17.9 0 0 1 189 181a17 17 0 0 1-5.5 11.61l-37.89 31a231.91 231.91 0 0 0 110.78 110.78l31-37.89A17 17 0 0 1 299 291a17.85 17.85 0 0 1 5.91 1.21l70 30A16.25 16.25 0 0 1 384 336a17.41 17.41 0 0 1-.39 3.37z\"],\n    \"phone-volume\": [384, 512, [], \"f2a0\", \"M97.333 506.966c-129.874-129.874-129.681-340.252 0-469.933 5.698-5.698 14.527-6.632 21.263-2.422l64.817 40.513a17.187 17.187 0 0 1 6.849 20.958l-32.408 81.021a17.188 17.188 0 0 1-17.669 10.719l-55.81-5.58c-21.051 58.261-20.612 122.471 0 179.515l55.811-5.581a17.188 17.188 0 0 1 17.669 10.719l32.408 81.022a17.188 17.188 0 0 1-6.849 20.958l-64.817 40.513a17.19 17.19 0 0 1-21.264-2.422zM247.126 95.473c11.832 20.047 11.832 45.008 0 65.055-3.95 6.693-13.108 7.959-18.718 2.581l-5.975-5.726c-3.911-3.748-4.793-9.622-2.261-14.41a32.063 32.063 0 0 0 0-29.945c-2.533-4.788-1.65-10.662 2.261-14.41l5.975-5.726c5.61-5.378 14.768-4.112 18.718 2.581zm91.787-91.187c60.14 71.604 60.092 175.882 0 247.428-4.474 5.327-12.53 5.746-17.552.933l-5.798-5.557c-4.56-4.371-4.977-11.529-.93-16.379 49.687-59.538 49.646-145.933 0-205.422-4.047-4.85-3.631-12.008.93-16.379l5.798-5.557c5.022-4.813 13.078-4.394 17.552.933zm-45.972 44.941c36.05 46.322 36.108 111.149 0 157.546-4.39 5.641-12.697 6.251-17.856 1.304l-5.818-5.579c-4.4-4.219-4.998-11.095-1.285-15.931 26.536-34.564 26.534-82.572 0-117.134-3.713-4.836-3.115-11.711 1.285-15.931l5.818-5.579c5.159-4.947 13.466-4.337 17.856 1.304z\"],\n    \"photo-video\": [640, 512, [], \"f87c\", \"M608 0H160a32 32 0 0 0-32 32v96h160V64h192v320h128a32 32 0 0 0 32-32V32a32 32 0 0 0-32-32zM232 103a9 9 0 0 1-9 9h-30a9 9 0 0 1-9-9V73a9 9 0 0 1 9-9h30a9 9 0 0 1 9 9zm352 208a9 9 0 0 1-9 9h-30a9 9 0 0 1-9-9v-30a9 9 0 0 1 9-9h30a9 9 0 0 1 9 9zm0-104a9 9 0 0 1-9 9h-30a9 9 0 0 1-9-9v-30a9 9 0 0 1 9-9h30a9 9 0 0 1 9 9zm0-104a9 9 0 0 1-9 9h-30a9 9 0 0 1-9-9V73a9 9 0 0 1 9-9h30a9 9 0 0 1 9 9zm-168 57H32a32 32 0 0 0-32 32v288a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32V192a32 32 0 0 0-32-32zM96 224a32 32 0 1 1-32 32 32 32 0 0 1 32-32zm288 224H64v-32l64-64 32 32 128-128 96 96z\"],\n    \"piggy-bank\": [576, 512, [], \"f4d3\", \"M560 224h-29.5c-8.8-20-21.6-37.7-37.4-52.5L512 96h-32c-29.4 0-55.4 13.5-73 34.3-7.6-1.1-15.1-2.3-23-2.3H256c-77.4 0-141.9 55-156.8 128H56c-14.8 0-26.5-13.5-23.5-28.8C34.7 215.8 45.4 208 57 208h1c3.3 0 6-2.7 6-6v-20c0-3.3-2.7-6-6-6-28.5 0-53.9 20.4-57.5 48.6C-3.9 258.8 22.7 288 56 288h40c0 52.2 25.4 98.1 64 127.3V496c0 8.8 7.2 16 16 16h64c8.8 0 16-7.2 16-16v-48h128v48c0 8.8 7.2 16 16 16h64c8.8 0 16-7.2 16-16v-80.7c11.8-8.9 22.3-19.4 31.3-31.3H560c8.8 0 16-7.2 16-16V240c0-8.8-7.2-16-16-16zm-128 64c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zM256 96h128c5.4 0 10.7.4 15.9.8 0-.3.1-.5.1-.8 0-53-43-96-96-96s-96 43-96 96c0 2.1.5 4.1.6 6.2 15.2-3.9 31-6.2 47.4-6.2z\"],\n    \"pills\": [576, 512, [], \"f484\", \"M112 32C50.1 32 0 82.1 0 144v224c0 61.9 50.1 112 112 112s112-50.1 112-112V144c0-61.9-50.1-112-112-112zm48 224H64V144c0-26.5 21.5-48 48-48s48 21.5 48 48v112zm139.7-29.7c-3.5-3.5-9.4-3.1-12.3.8-45.3 62.5-40.4 150.1 15.9 206.4 56.3 56.3 143.9 61.2 206.4 15.9 4-2.9 4.3-8.8.8-12.3L299.7 226.3zm229.8-19c-56.3-56.3-143.9-61.2-206.4-15.9-4 2.9-4.3 8.8-.8 12.3l210.8 210.8c3.5 3.5 9.4 3.1 12.3-.8 45.3-62.6 40.5-150.1-15.9-206.4z\"],\n    \"pizza-slice\": [512, 512, [], \"f818\", \"M158.87.15c-16.16-1.52-31.2 8.42-35.33 24.12l-14.81 56.27c187.62 5.49 314.54 130.61 322.48 317l56.94-15.78c15.72-4.36 25.49-19.68 23.62-35.9C490.89 165.08 340.78 17.32 158.87.15zm-58.47 112L.55 491.64a16.21 16.21 0 0 0 20 19.75l379-105.1c-4.27-174.89-123.08-292.14-299.15-294.1zM128 416a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm48-152a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm104 104a32 32 0 1 1 32-32 32 32 0 0 1-32 32z\"],\n    \"place-of-worship\": [640, 512, [], \"f67f\", \"M620.61 366.55L512 320v192h112c8.84 0 16-7.16 16-16V395.96a32 32 0 0 0-19.39-29.41zM0 395.96V496c0 8.84 7.16 16 16 16h112V320L19.39 366.55A32 32 0 0 0 0 395.96zm464.46-149.28L416 217.6V102.63c0-8.49-3.37-16.62-9.38-22.63L331.31 4.69c-6.25-6.25-16.38-6.25-22.62 0L233.38 80c-6 6-9.38 14.14-9.38 22.63V217.6l-48.46 29.08A31.997 31.997 0 0 0 160 274.12V512h96v-96c0-35.35 28.66-64 64-64s64 28.65 64 64v96h96V274.12c0-11.24-5.9-21.66-15.54-27.44z\"],\n    \"plane\": [576, 512, [], \"f072\", \"M480 192H365.71L260.61 8.06A16.014 16.014 0 0 0 246.71 0h-65.5c-10.63 0-18.3 10.17-15.38 20.39L214.86 192H112l-43.2-57.6c-3.02-4.03-7.77-6.4-12.8-6.4H16.01C5.6 128-2.04 137.78.49 147.88L32 256 .49 364.12C-2.04 374.22 5.6 384 16.01 384H56c5.04 0 9.78-2.37 12.8-6.4L112 320h102.86l-49.03 171.6c-2.92 10.22 4.75 20.4 15.38 20.4h65.5c5.74 0 11.04-3.08 13.89-8.06L365.71 320H480c35.35 0 96-28.65 96-64s-60.65-64-96-64z\"],\n    \"plane-arrival\": [640, 512, [], \"f5af\", \"M624 448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h608c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM44.81 205.66l88.74 80a62.607 62.607 0 0 0 25.47 13.93l287.6 78.35c26.48 7.21 54.56 8.72 81 1.36 29.67-8.27 43.44-21.21 47.25-35.71 3.83-14.5-1.73-32.71-23.37-54.96-19.28-19.82-44.35-32.79-70.83-40l-97.51-26.56L282.8 30.22c-1.51-5.81-5.95-10.35-11.66-11.91L206.05.58c-10.56-2.88-20.9 5.32-20.71 16.44l47.92 164.21-102.2-27.84-27.59-67.88c-1.93-4.89-6.01-8.57-11.02-9.93L52.72 64.75c-10.34-2.82-20.53 5-20.72 15.88l.23 101.78c.19 8.91 6.03 17.34 12.58 23.25z\"],\n    \"plane-departure\": [640, 512, [], \"f5b0\", \"M624 448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h608c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM80.55 341.27c6.28 6.84 15.1 10.72 24.33 10.71l130.54-.18a65.62 65.62 0 0 0 29.64-7.12l290.96-147.65c26.74-13.57 50.71-32.94 67.02-58.31 18.31-28.48 20.3-49.09 13.07-63.65-7.21-14.57-24.74-25.27-58.25-27.45-29.85-1.94-59.54 5.92-86.28 19.48l-98.51 49.99-218.7-82.06a17.799 17.799 0 0 0-18-1.11L90.62 67.29c-10.67 5.41-13.25 19.65-5.17 28.53l156.22 98.1-103.21 52.38-72.35-36.47a17.804 17.804 0 0 0-16.07.02L9.91 230.22c-10.44 5.3-13.19 19.12-5.57 28.08l76.21 82.97z\"],\n    \"plane-slash\": [640, 512, [], \"e069\", \"M32.48,147.88,64,256,32.48,364.13A16,16,0,0,0,48,384H88a16,16,0,0,0,12.8-6.41L144,320H246.85l-49,171.59A16,16,0,0,0,213.2,512h65.5a16,16,0,0,0,13.89-8.06l66.6-116.54L34.35,136.34A15.47,15.47,0,0,0,32.48,147.88ZM633.82,458.09,455.14,320H512c35.34,0,96-28.66,96-64s-60.66-64-96-64H397.7L292.61,8.06C290.06,3.61,283.84,0,278.71,0H213.2a16,16,0,0,0-15.38,20.39l36.94,129.29L45.46,3.38A16,16,0,0,0,23,6.19L3.37,31.45A16,16,0,0,0,6.18,53.91L594.54,508.63A16,16,0,0,0,617,505.81l19.64-25.26A16,16,0,0,0,633.82,458.09Z\"],\n    \"play\": [448, 512, [], \"f04b\", \"M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6z\"],\n    \"play-circle\": [512, 512, [], \"f144\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm115.7 272l-176 101c-15.8 8.8-35.7-2.5-35.7-21V152c0-18.4 19.8-29.8 35.7-21l176 107c16.4 9.2 16.4 32.9 0 42z\"],\n    \"plug\": [384, 512, [], \"f1e6\", \"M320,32a32,32,0,0,0-64,0v96h64Zm48,128H16A16,16,0,0,0,0,176v32a16,16,0,0,0,16,16H32v32A160.07,160.07,0,0,0,160,412.8V512h64V412.8A160.07,160.07,0,0,0,352,256V224h16a16,16,0,0,0,16-16V176A16,16,0,0,0,368,160ZM128,32a32,32,0,0,0-64,0v96h64Z\"],\n    \"plus\": [448, 512, [], \"f067\", \"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"],\n    \"plus-circle\": [512, 512, [], \"f055\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z\"],\n    \"plus-square\": [448, 512, [], \"f0fe\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z\"],\n    \"podcast\": [448, 512, [], \"f2ce\", \"M267.429 488.563C262.286 507.573 242.858 512 224 512c-18.857 0-38.286-4.427-43.428-23.437C172.927 460.134 160 388.898 160 355.75c0-35.156 31.142-43.75 64-43.75s64 8.594 64 43.75c0 32.949-12.871 104.179-20.571 132.813zM156.867 288.554c-18.693-18.308-29.958-44.173-28.784-72.599 2.054-49.724 42.395-89.956 92.124-91.881C274.862 121.958 320 165.807 320 220c0 26.827-11.064 51.116-28.866 68.552-2.675 2.62-2.401 6.986.628 9.187 9.312 6.765 16.46 15.343 21.234 25.363 1.741 3.654 6.497 4.66 9.449 1.891 28.826-27.043 46.553-65.783 45.511-108.565-1.855-76.206-63.595-138.208-139.793-140.369C146.869 73.753 80 139.215 80 220c0 41.361 17.532 78.7 45.55 104.989 2.953 2.771 7.711 1.77 9.453-1.887 4.774-10.021 11.923-18.598 21.235-25.363 3.029-2.2 3.304-6.566.629-9.185zM224 0C100.204 0 0 100.185 0 224c0 89.992 52.602 165.647 125.739 201.408 4.333 2.118 9.267-1.544 8.535-6.31-2.382-15.512-4.342-30.946-5.406-44.339-.146-1.836-1.149-3.486-2.678-4.512-47.4-31.806-78.564-86.016-78.187-147.347.592-96.237 79.29-174.648 175.529-174.899C320.793 47.747 400 126.797 400 224c0 61.932-32.158 116.49-80.65 147.867-.999 14.037-3.069 30.588-5.624 47.23-.732 4.767 4.203 8.429 8.535 6.31C395.227 389.727 448 314.187 448 224 448 100.205 347.815 0 224 0zm0 160c-35.346 0-64 28.654-64 64s28.654 64 64 64 64-28.654 64-64-28.654-64-64-64z\"],\n    \"poll\": [448, 512, [], \"f681\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM160 368c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16V240c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v128zm96 0c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16V144c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v224zm96 0c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-64c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v64z\"],\n    \"poll-h\": [448, 512, [], \"f682\", \"M448 432V80c0-26.5-21.5-48-48-48H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48zM112 192c-8.84 0-16-7.16-16-16v-32c0-8.84 7.16-16 16-16h128c8.84 0 16 7.16 16 16v32c0 8.84-7.16 16-16 16H112zm0 96c-8.84 0-16-7.16-16-16v-32c0-8.84 7.16-16 16-16h224c8.84 0 16 7.16 16 16v32c0 8.84-7.16 16-16 16H112zm0 96c-8.84 0-16-7.16-16-16v-32c0-8.84 7.16-16 16-16h64c8.84 0 16 7.16 16 16v32c0 8.84-7.16 16-16 16h-64z\"],\n    \"poo\": [512, 512, [], \"f2fe\", \"M451.4 369.1C468.7 356 480 335.4 480 312c0-39.8-32.2-72-72-72h-14.1c13.4-11.7 22.1-28.8 22.1-48 0-35.3-28.7-64-64-64h-5.9c3.6-10.1 5.9-20.7 5.9-32 0-53-43-96-96-96-5.2 0-10.2.7-15.1 1.5C250.3 14.6 256 30.6 256 48c0 44.2-35.8 80-80 80h-16c-35.3 0-64 28.7-64 64 0 19.2 8.7 36.3 22.1 48H104c-39.8 0-72 32.2-72 72 0 23.4 11.3 44 28.6 57.1C26.3 374.6 0 404.1 0 440c0 39.8 32.2 72 72 72h368c39.8 0 72-32.2 72-72 0-35.9-26.3-65.4-60.6-70.9zM192 256c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm159.5 139C341 422.9 293 448 256 448s-85-25.1-95.5-53c-2-5.3 2-11 7.8-11h175.4c5.8 0 9.8 5.7 7.8 11zM320 320c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"poo-storm\": [448, 512, [], \"f75a\", \"M308 336h-57.7l17.3-64.9c2-7.6-3.7-15.1-11.6-15.1h-68c-6 0-11.1 4.5-11.9 10.4l-16 120c-1 7.2 4.6 13.6 11.9 13.6h59.3l-23 97.2c-1.8 7.6 4 14.8 11.7 14.8 4.2 0 8.2-2.2 10.4-6l88-152c4.6-8-1.2-18-10.4-18zm66.4-111.3c5.9-9.6 9.6-20.6 9.6-32.7 0-35.3-28.7-64-64-64h-5.9c3.6-10.1 5.9-20.7 5.9-32 0-53-43-96-96-96-5.2 0-10.2.7-15.1 1.5C218.3 14.6 224 30.6 224 48c0 44.2-35.8 80-80 80h-16c-35.3 0-64 28.7-64 64 0 12.1 3.7 23.1 9.6 32.7C32.6 228 0 262.2 0 304c0 44 36 80 80 80h48.3c.1-.6 0-1.2 0-1.8l16-120c3-21.8 21.7-38.2 43.7-38.2h68c13.8 0 26.5 6.3 34.9 17.2s11.2 24.8 7.6 38.1l-6.6 24.7h16c15.7 0 30.3 8.4 38.1 22 7.8 13.6 7.8 30.5 0 44l-8.1 14h30c44 0 80-36 80-80 .1-41.8-32.5-76-73.5-79.3z\"],\n    \"poop\": [512, 512, [], \"f619\", \"M451.36 369.14C468.66 355.99 480 335.41 480 312c0-39.77-32.24-72-72-72h-14.07c13.42-11.73 22.07-28.78 22.07-48 0-35.35-28.65-64-64-64h-5.88c3.57-10.05 5.88-20.72 5.88-32 0-53.02-42.98-96-96-96-5.17 0-10.15.74-15.11 1.52C250.31 14.64 256 30.62 256 48c0 44.18-35.82 80-80 80h-16c-35.35 0-64 28.65-64 64 0 19.22 8.65 36.27 22.07 48H104c-39.76 0-72 32.23-72 72 0 23.41 11.34 43.99 28.64 57.14C26.31 374.62 0 404.12 0 440c0 39.76 32.24 72 72 72h368c39.76 0 72-32.24 72-72 0-35.88-26.31-65.38-60.64-70.86z\"],\n    \"portrait\": [384, 512, [], \"f3e0\", \"M336 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM192 128c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zm112 236.8c0 10.6-10 19.2-22.4 19.2H102.4C90 384 80 375.4 80 364.8v-19.2c0-31.8 30.1-57.6 67.2-57.6h5c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h5c37.1 0 67.2 25.8 67.2 57.6v19.2z\"],\n    \"pound-sign\": [320, 512, [], \"f154\", \"M308 352h-45.495c-6.627 0-12 5.373-12 12v50.848H128V288h84c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-84v-63.556c0-32.266 24.562-57.086 61.792-57.086 23.658 0 45.878 11.505 57.652 18.849 5.151 3.213 11.888 2.051 15.688-2.685l28.493-35.513c4.233-5.276 3.279-13.005-2.119-17.081C273.124 54.56 236.576 32 187.931 32 106.026 32 48 84.742 48 157.961V224H20c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h28v128H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h296c6.627 0 12-5.373 12-12V364c0-6.627-5.373-12-12-12z\"],\n    \"power-off\": [512, 512, [], \"f011\", \"M400 54.1c63 45 104 118.6 104 201.9 0 136.8-110.8 247.7-247.5 248C120 504.3 8.2 393 8 256.4 7.9 173.1 48.9 99.3 111.8 54.2c11.7-8.3 28-4.8 35 7.7L162.6 90c5.9 10.5 3.1 23.8-6.6 31-41.5 30.8-68 79.6-68 134.9-.1 92.3 74.5 168.1 168 168.1 91.6 0 168.6-74.2 168-169.1-.3-51.8-24.7-101.8-68.1-134-9.7-7.2-12.4-20.5-6.5-30.9l15.8-28.1c7-12.4 23.2-16.1 34.8-7.8zM296 264V24c0-13.3-10.7-24-24-24h-32c-13.3 0-24 10.7-24 24v240c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24z\"],\n    \"pray\": [384, 512, [], \"f683\", \"M256 128c35.35 0 64-28.65 64-64S291.35 0 256 0s-64 28.65-64 64 28.65 64 64 64zm-30.63 169.75c14.06 16.72 39 19.09 55.97 5.22l88-72.02c17.09-13.98 19.59-39.19 5.62-56.28-13.97-17.11-39.19-19.59-56.31-5.62l-57.44 47-38.91-46.31c-15.44-18.39-39.22-27.92-64-25.33-24.19 2.48-45.25 16.27-56.37 36.92l-49.37 92.03c-23.4 43.64-8.69 96.37 34.19 123.75L131.56 432H40c-22.09 0-40 17.91-40 40s17.91 40 40 40h208c34.08 0 53.77-42.79 28.28-68.28L166.42 333.86l34.8-64.87 24.15 28.76z\"],\n    \"praying-hands\": [640, 512, [], \"f684\", \"M272 191.91c-17.6 0-32 14.4-32 32v80c0 8.84-7.16 16-16 16s-16-7.16-16-16v-76.55c0-17.39 4.72-34.47 13.69-49.39l77.75-129.59c9.09-15.16 4.19-34.81-10.97-43.91-14.45-8.67-32.72-4.3-42.3 9.21-.2.23-.62.21-.79.48l-117.26 175.9C117.56 205.9 112 224.31 112 243.29v80.23l-90.12 30.04A31.974 31.974 0 0 0 0 383.91v96c0 10.82 8.52 32 32 32 2.69 0 5.41-.34 8.06-1.03l179.19-46.62C269.16 449.99 304 403.8 304 351.91v-128c0-17.6-14.4-32-32-32zm346.12 161.73L528 323.6v-80.23c0-18.98-5.56-37.39-16.12-53.23L394.62 14.25c-.18-.27-.59-.24-.79-.48-9.58-13.51-27.85-17.88-42.3-9.21-15.16 9.09-20.06 28.75-10.97 43.91l77.75 129.59c8.97 14.92 13.69 32 13.69 49.39V304c0 8.84-7.16 16-16 16s-16-7.16-16-16v-80c0-17.6-14.4-32-32-32s-32 14.4-32 32v128c0 51.89 34.84 98.08 84.75 112.34l179.19 46.62c2.66.69 5.38 1.03 8.06 1.03 23.48 0 32-21.18 32-32v-96c0-13.77-8.81-25.99-21.88-30.35z\"],\n    \"prescription\": [384, 512, [], \"f5b1\", \"M301.26 352l78.06-78.06c6.25-6.25 6.25-16.38 0-22.63l-22.63-22.63c-6.25-6.25-16.38-6.25-22.63 0L256 306.74l-83.96-83.96C219.31 216.8 256 176.89 256 128c0-53.02-42.98-96-96-96H16C7.16 32 0 39.16 0 48v256c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-80h18.75l128 128-78.06 78.06c-6.25 6.25-6.25 16.38 0 22.63l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0L256 397.25l78.06 78.06c6.25 6.25 16.38 6.25 22.63 0l22.63-22.63c6.25-6.25 6.25-16.38 0-22.63L301.26 352zM64 96h96c17.64 0 32 14.36 32 32s-14.36 32-32 32H64V96z\"],\n    \"prescription-bottle\": [384, 512, [], \"f485\", \"M32 192h120c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H32v64h120c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H32v64h120c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H32v64c0 17.6 14.4 32 32 32h256c17.6 0 32-14.4 32-32V128H32v64zM360 0H24C10.8 0 0 10.8 0 24v48c0 13.2 10.8 24 24 24h336c13.2 0 24-10.8 24-24V24c0-13.2-10.8-24-24-24z\"],\n    \"prescription-bottle-alt\": [384, 512, [], \"f486\", \"M360 0H24C10.8 0 0 10.8 0 24v48c0 13.2 10.8 24 24 24h336c13.2 0 24-10.8 24-24V24c0-13.2-10.8-24-24-24zM32 480c0 17.6 14.4 32 32 32h256c17.6 0 32-14.4 32-32V128H32v352zm64-184c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8v48c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48z\"],\n    \"print\": [512, 512, [], \"f02f\", \"M448 192V77.25c0-8.49-3.37-16.62-9.37-22.63L393.37 9.37c-6-6-14.14-9.37-22.63-9.37H96C78.33 0 64 14.33 64 32v160c-35.35 0-64 28.65-64 64v112c0 8.84 7.16 16 16 16h48v96c0 17.67 14.33 32 32 32h320c17.67 0 32-14.33 32-32v-96h48c8.84 0 16-7.16 16-16V256c0-35.35-28.65-64-64-64zm-64 256H128v-96h256v96zm0-224H128V64h192v48c0 8.84 7.16 16 16 16h48v96zm48 72c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z\"],\n    \"procedures\": [640, 512, [], \"f487\", \"M528 224H272c-8.8 0-16 7.2-16 16v144H64V144c0-8.8-7.2-16-16-16H16c-8.8 0-16 7.2-16 16v352c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-48h512v48c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V336c0-61.9-50.1-112-112-112zM136 96h126.1l27.6 55.2c5.9 11.8 22.7 11.8 28.6 0L368 51.8 390.1 96H512c8.8 0 16-7.2 16-16s-7.2-16-16-16H409.9L382.3 8.8C376.4-3 359.6-3 353.7 8.8L304 108.2l-19.9-39.8c-1.4-2.7-4.1-4.4-7.2-4.4H136c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8zm24 256c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64z\"],\n    \"project-diagram\": [640, 512, [], \"f542\", \"M384 320H256c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h128c17.67 0 32-14.33 32-32V352c0-17.67-14.33-32-32-32zM192 32c0-17.67-14.33-32-32-32H32C14.33 0 0 14.33 0 32v128c0 17.67 14.33 32 32 32h95.72l73.16 128.04C211.98 300.98 232.4 288 256 288h.28L192 175.51V128h224V64H192V32zM608 0H480c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h128c17.67 0 32-14.33 32-32V32c0-17.67-14.33-32-32-32z\"],\n    \"pump-medical\": [384, 512, [], \"e06a\", \"M235.51,159.82H84.24A64,64,0,0,0,20.51,218L.14,442a64,64,0,0,0,63.74,69.8h192A64,64,0,0,0,319.61,442L299.24,218A64,64,0,0,0,235.51,159.82Zm4.37,173.33a13.35,13.35,0,0,1-13.34,13.34h-40v40a13.33,13.33,0,0,1-13.33,13.33H146.54a13.33,13.33,0,0,1-13.33-13.33v-40h-40a13.34,13.34,0,0,1-13.33-13.34V306.49a13.33,13.33,0,0,1,13.33-13.34h40v-40a13.33,13.33,0,0,1,13.33-13.33h26.67a13.33,13.33,0,0,1,13.33,13.33v40h40a13.34,13.34,0,0,1,13.34,13.34ZM379.19,93.88,335.87,50.56a64,64,0,0,0-45.24-18.74H223.88a32,32,0,0,0-32-32h-64a32,32,0,0,0-32,32v96h128v-32h66.75l43.31,43.31a16,16,0,0,0,22.63,0l22.62-22.62A16,16,0,0,0,379.19,93.88Z\"],\n    \"pump-soap\": [384, 512, [], \"e06b\", \"M235.63,160H84.37a64,64,0,0,0-63.74,58.21L.27,442.21A64,64,0,0,0,64,512H256a64,64,0,0,0,63.74-69.79l-20.36-224A64,64,0,0,0,235.63,160ZM160,416c-33.12,0-60-26.33-60-58.75,0-25,35.7-75.47,52-97.27A10,10,0,0,1,168,260c16.33,21.8,52,72.27,52,97.27C220,389.67,193.12,416,160,416ZM379.31,94.06,336,50.74A64,64,0,0,0,290.75,32H224A32,32,0,0,0,192,0H128A32,32,0,0,0,96,32v96H224V96h66.75l43.31,43.31a16,16,0,0,0,22.63,0l22.62-22.62A16,16,0,0,0,379.31,94.06Z\"],\n    \"puzzle-piece\": [576, 512, [], \"f12e\", \"M519.442 288.651c-41.519 0-59.5 31.593-82.058 31.593C377.409 320.244 432 144 432 144s-196.288 80-196.288-3.297c0-35.827 36.288-46.25 36.288-85.985C272 19.216 243.885 0 210.539 0c-34.654 0-66.366 18.891-66.366 56.346 0 41.364 31.711 59.277 31.711 81.75C175.885 207.719 0 166.758 0 166.758v333.237s178.635 41.047 178.635-28.662c0-22.473-40-40.107-40-81.471 0-37.456 29.25-56.346 63.577-56.346 33.673 0 61.788 19.216 61.788 54.717 0 39.735-36.288 50.158-36.288 85.985 0 60.803 129.675 25.73 181.23 25.73 0 0-34.725-120.101 25.827-120.101 35.962 0 46.423 36.152 86.308 36.152C556.712 416 576 387.99 576 354.443c0-34.199-18.962-65.792-56.558-65.792z\"],\n    \"qrcode\": [448, 512, [], \"f029\", \"M0 224h192V32H0v192zM64 96h64v64H64V96zm192-64v192h192V32H256zm128 128h-64V96h64v64zM0 480h192V288H0v192zm64-128h64v64H64v-64zm352-64h32v128h-96v-32h-32v96h-64V288h96v32h64v-32zm0 160h32v32h-32v-32zm-64 0h32v32h-32v-32z\"],\n    \"question\": [384, 512, [], \"f128\", \"M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z\"],\n    \"question-circle\": [512, 512, [], \"f059\", \"M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z\"],\n    \"quidditch\": [640, 512, [], \"f458\", \"M256.5 216.8L343.2 326s-16.6 102.4-76.6 150.1C206.7 523.8 0 510.2 0 510.2s3.8-23.1 11-55.4l94.6-112.2c4-4.7-.9-11.6-6.6-9.5l-60.4 22.1c14.4-41.7 32.7-80 54.6-97.5 59.9-47.8 163.3-40.9 163.3-40.9zm238 135c-44 0-79.8 35.8-79.8 79.9 0 44.1 35.7 79.9 79.8 79.9 44.1 0 79.8-35.8 79.8-79.9 0-44.2-35.8-79.9-79.8-79.9zM636.5 31L616.7 6c-5.5-6.9-15.5-8-22.4-2.6L361.8 181.3l-34.1-43c-5.1-6.4-15.1-5.2-18.6 2.2l-25.3 54.6 86.7 109.2 58.8-12.4c8-1.7 11.4-11.2 6.3-17.6l-34.1-42.9L634 53.5c6.9-5.5 8-15.6 2.5-22.5z\"],\n    \"quote-left\": [512, 512, [], \"f10d\", \"M464 256h-80v-64c0-35.3 28.7-64 64-64h8c13.3 0 24-10.7 24-24V56c0-13.3-10.7-24-24-24h-8c-88.4 0-160 71.6-160 160v240c0 26.5 21.5 48 48 48h128c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48zm-288 0H96v-64c0-35.3 28.7-64 64-64h8c13.3 0 24-10.7 24-24V56c0-13.3-10.7-24-24-24h-8C71.6 32 0 103.6 0 192v240c0 26.5 21.5 48 48 48h128c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z\"],\n    \"quote-right\": [512, 512, [], \"f10e\", \"M464 32H336c-26.5 0-48 21.5-48 48v128c0 26.5 21.5 48 48 48h80v64c0 35.3-28.7 64-64 64h-8c-13.3 0-24 10.7-24 24v48c0 13.3 10.7 24 24 24h8c88.4 0 160-71.6 160-160V80c0-26.5-21.5-48-48-48zm-288 0H48C21.5 32 0 53.5 0 80v128c0 26.5 21.5 48 48 48h80v64c0 35.3-28.7 64-64 64h-8c-13.3 0-24 10.7-24 24v48c0 13.3 10.7 24 24 24h8c88.4 0 160-71.6 160-160V80c0-26.5-21.5-48-48-48z\"],\n    \"quran\": [448, 512, [], \"f687\", \"M448 358.4V25.6c0-16-9.6-25.6-25.6-25.6H96C41.6 0 0 41.6 0 96v320c0 54.4 41.6 96 96 96h326.4c12.8 0 25.6-9.6 25.6-25.6v-16c0-6.4-3.2-12.8-9.6-19.2-3.2-16-3.2-60.8 0-73.6 6.4-3.2 9.6-9.6 9.6-19.2zM301.08 145.82c.6-1.21 1.76-1.82 2.92-1.82s2.32.61 2.92 1.82l11.18 22.65 25 3.63c2.67.39 3.74 3.67 1.81 5.56l-18.09 17.63 4.27 24.89c.36 2.11-1.31 3.82-3.21 3.82-.5 0-1.02-.12-1.52-.38L304 211.87l-22.36 11.75c-.5.26-1.02.38-1.52.38-1.9 0-3.57-1.71-3.21-3.82l4.27-24.89-18.09-17.63c-1.94-1.89-.87-5.17 1.81-5.56l24.99-3.63 11.19-22.65zm-57.89-69.01c13.67 0 27.26 2.49 40.38 7.41a6.775 6.775 0 1 1-2.38 13.12c-.67 0-3.09-.21-4.13-.21-52.31 0-94.86 42.55-94.86 94.86 0 52.3 42.55 94.86 94.86 94.86 1.03 0 3.48-.21 4.13-.21 3.93 0 6.8 3.14 6.8 6.78 0 2.98-1.94 5.51-4.62 6.42-13.07 4.87-26.59 7.34-40.19 7.34C179.67 307.19 128 255.51 128 192c0-63.52 51.67-115.19 115.19-115.19zM380.8 448H96c-19.2 0-32-12.8-32-32s16-32 32-32h284.8v64z\"],\n    \"radiation\": [496, 512, [], \"f7b9\", \"M328.2 255.8h151.6c9.1 0 16.8-7.7 16.2-16.8-5.1-75.8-44.4-142.2-102.5-184.2-7.4-5.3-17.9-2.9-22.7 4.8L290.4 188c22.6 14.3 37.8 39.2 37.8 67.8zm-37.8 67.7c-12.3 7.7-26.8 12.4-42.4 12.4-15.6 0-30-4.7-42.4-12.4L125.2 452c-4.8 7.7-2.4 18.1 5.6 22.4C165.7 493.2 205.6 504 248 504s82.3-10.8 117.2-29.6c8-4.3 10.4-14.8 5.6-22.4l-80.4-128.5zM248 303.8c26.5 0 48-21.5 48-48s-21.5-48-48-48-48 21.5-48 48 21.5 48 48 48zm-231.8-48h151.6c0-28.6 15.2-53.5 37.8-67.7L125.2 59.7c-4.8-7.7-15.3-10.2-22.7-4.8C44.4 96.9 5.1 163.3 0 239.1c-.6 9 7.1 16.7 16.2 16.7z\"],\n    \"radiation-alt\": [496, 512, [], \"f7ba\", \"M312 256h79.1c9.2 0 16.9-7.7 16-16.8-4.6-43.6-27-81.8-59.5-107.8-7.6-6.1-18.8-4.5-24 3.8L281.9 202c18 11.2 30.1 31.2 30.1 54zm-97.8 54.1L172.4 377c-4.9 7.8-2.4 18.4 5.8 22.5 21.1 10.4 44.7 16.5 69.8 16.5s48.7-6.1 69.9-16.5c8.2-4.1 10.6-14.7 5.8-22.5l-41.8-66.9c-9.8 6.2-21.4 9.9-33.8 9.9s-24.1-3.7-33.9-9.9zM104.9 256H184c0-22.8 12.1-42.8 30.2-54.1l-41.7-66.8c-5.2-8.3-16.4-9.9-24-3.8-32.6 26-54.9 64.2-59.5 107.8-1.1 9.2 6.7 16.9 15.9 16.9zM248 504c137 0 248-111 248-248S385 8 248 8 0 119 0 256s111 248 248 248zm0-432c101.5 0 184 82.5 184 184s-82.5 184-184 184S64 357.5 64 256 146.5 72 248 72zm0 216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32z\"],\n    \"rainbow\": [576, 512, [], \"f75b\", \"M268.3 32.7C115.4 42.9 0 176.9 0 330.2V464c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320C64 186.8 180.9 80.3 317.5 97.9 430.4 112.4 512 214 512 327.8V464c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320c0-165.3-140-298.6-307.7-287.3zm-5.6 96.9C166 142 96 229.1 96 326.7V464c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320c0-74.8 64.5-134.8 140.8-127.4 66.5 6.5 115.2 66.2 115.2 133.1V464c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320c0-114.2-100.2-205.4-217.3-190.4zm6.2 96.3c-45.6 8.9-76.9 51.5-76.9 97.9V464c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320c0-17.6 14.3-32 32-32s32 14.4 32 32v144c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320c0-59.2-53.8-106-115.1-94.1z\"],\n    \"random\": [512, 512, [], \"f074\", \"M504.971 359.029c9.373 9.373 9.373 24.569 0 33.941l-80 79.984c-15.01 15.01-40.971 4.49-40.971-16.971V416h-58.785a12.004 12.004 0 0 1-8.773-3.812l-70.556-75.596 53.333-57.143L352 336h32v-39.981c0-21.438 25.943-31.998 40.971-16.971l80 79.981zM12 176h84l52.781 56.551 53.333-57.143-70.556-75.596A11.999 11.999 0 0 0 122.785 96H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12zm372 0v39.984c0 21.46 25.961 31.98 40.971 16.971l80-79.984c9.373-9.373 9.373-24.569 0-33.941l-80-79.981C409.943 24.021 384 34.582 384 56.019V96h-58.785a12.004 12.004 0 0 0-8.773 3.812L96 336H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h110.785c3.326 0 6.503-1.381 8.773-3.812L352 176h32z\"],\n    \"receipt\": [384, 512, [], \"f543\", \"M358.4 3.2L320 48 265.6 3.2a15.9 15.9 0 0 0-19.2 0L192 48 137.6 3.2a15.9 15.9 0 0 0-19.2 0L64 48 25.6 3.2C15-4.7 0 2.8 0 16v480c0 13.2 15 20.7 25.6 12.8L64 464l54.4 44.8a15.9 15.9 0 0 0 19.2 0L192 464l54.4 44.8a15.9 15.9 0 0 0 19.2 0L320 464l38.4 44.8c10.5 7.9 25.6.4 25.6-12.8V16c0-13.2-15-20.7-25.6-12.8zM320 360c0 4.4-3.6 8-8 8H72c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h240c4.4 0 8 3.6 8 8v16zm0-96c0 4.4-3.6 8-8 8H72c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h240c4.4 0 8 3.6 8 8v16zm0-96c0 4.4-3.6 8-8 8H72c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h240c4.4 0 8 3.6 8 8v16z\"],\n    \"record-vinyl\": [512, 512, [], \"f8d9\", \"M256 152a104 104 0 1 0 104 104 104 104 0 0 0-104-104zm0 128a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm0-272C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 376a128 128 0 1 1 128-128 128 128 0 0 1-128 128z\"],\n    \"recycle\": [512, 512, [], \"f1b8\", \"M184.561 261.903c3.232 13.997-12.123 24.635-24.068 17.168l-40.736-25.455-50.867 81.402C55.606 356.273 70.96 384 96.012 384H148c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12H96.115c-75.334 0-121.302-83.048-81.408-146.88l50.822-81.388-40.725-25.448c-12.081-7.547-8.966-25.961 4.879-29.158l110.237-25.45c8.611-1.988 17.201 3.381 19.189 11.99l25.452 110.237zm98.561-182.915l41.289 66.076-40.74 25.457c-12.051 7.528-9 25.953 4.879 29.158l110.237 25.45c8.672 1.999 17.215-3.438 19.189-11.99l25.45-110.237c3.197-13.844-11.99-24.719-24.068-17.168l-40.687 25.424-41.263-66.082c-37.521-60.033-125.209-60.171-162.816 0l-17.963 28.766c-3.51 5.62-1.8 13.021 3.82 16.533l33.919 21.195c5.62 3.512 13.024 1.803 16.536-3.817l17.961-28.743c12.712-20.341 41.973-19.676 54.257-.022zM497.288 301.12l-27.515-44.065c-3.511-5.623-10.916-7.334-16.538-3.821l-33.861 21.159c-5.62 3.512-7.33 10.915-3.818 16.536l27.564 44.112c13.257 21.211-2.057 48.96-27.136 48.96H320V336.02c0-14.213-17.242-21.383-27.313-11.313l-80 79.981c-6.249 6.248-6.249 16.379 0 22.627l80 79.989C302.689 517.308 320 510.3 320 495.989V448h95.88c75.274 0 121.335-82.997 81.408-146.88z\"],\n    \"redo\": [512, 512, [], \"f01e\", \"M500.33 0h-47.41a12 12 0 0 0-12 12.57l4 82.76A247.42 247.42 0 0 0 256 8C119.34 8 7.9 119.53 8 256.19 8.1 393.07 119.1 504 256 504a247.1 247.1 0 0 0 166.18-63.91 12 12 0 0 0 .48-17.43l-34-34a12 12 0 0 0-16.38-.55A176 176 0 1 1 402.1 157.8l-101.53-4.87a12 12 0 0 0-12.57 12v47.41a12 12 0 0 0 12 12h200.33a12 12 0 0 0 12-12V12a12 12 0 0 0-12-12z\"],\n    \"redo-alt\": [512, 512, [], \"f2f9\", \"M256.455 8c66.269.119 126.437 26.233 170.859 68.685l35.715-35.715C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.75c-30.864-28.899-70.801-44.907-113.23-45.273-92.398-.798-170.283 73.977-169.484 169.442C88.764 348.009 162.184 424 256 424c41.127 0 79.997-14.678 110.629-41.556 4.743-4.161 11.906-3.908 16.368.553l39.662 39.662c4.872 4.872 4.631 12.815-.482 17.433C378.202 479.813 319.926 504 256 504 119.034 504 8.001 392.967 8 256.002 7.999 119.193 119.646 7.755 256.455 8z\"],\n    \"registered\": [512, 512, [], \"f25d\", \"M285.363 207.475c0 18.6-9.831 28.431-28.431 28.431h-29.876v-56.14h23.378c28.668 0 34.929 8.773 34.929 27.709zM504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM363.411 360.414c-46.729-84.825-43.299-78.636-44.702-80.98 23.432-15.172 37.945-42.979 37.945-74.486 0-54.244-31.5-89.252-105.498-89.252h-70.667c-13.255 0-24 10.745-24 24V372c0 13.255 10.745 24 24 24h22.567c13.255 0 24-10.745 24-24v-71.663h25.556l44.129 82.937a24.001 24.001 0 0 0 21.188 12.727h24.464c18.261-.001 29.829-19.591 21.018-35.587z\"],\n    \"remove-format\": [640, 512, [], \"f87d\", \"M336 416h-11.17l9.26-27.77L267 336.4 240.49 416H208a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm297.82 42.1L377 259.59 426.17 112H544v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16H176a16 16 0 0 0-16 16v43.9L45.46 3.38A16 16 0 0 0 23 6.19L3.37 31.46a16 16 0 0 0 2.81 22.45l588.36 454.72a16 16 0 0 0 22.46-2.81l19.64-25.27a16 16 0 0 0-2.82-22.45zM309.91 207.76L224 141.36V112h117.83z\"],\n    \"reply\": [512, 512, [], \"f3e5\", \"M8.309 189.836L184.313 37.851C199.719 24.546 224 35.347 224 56.015v80.053c160.629 1.839 288 34.032 288 186.258 0 61.441-39.581 122.309-83.333 154.132-13.653 9.931-33.111-2.533-28.077-18.631 45.344-145.012-21.507-183.51-176.59-185.742V360c0 20.7-24.3 31.453-39.687 18.164l-176.004-152c-11.071-9.562-11.086-26.753 0-36.328z\"],\n    \"reply-all\": [576, 512, [], \"f122\", \"M136.309 189.836L312.313 37.851C327.72 24.546 352 35.348 352 56.015v82.763c129.182 10.231 224 52.212 224 183.548 0 61.441-39.582 122.309-83.333 154.132-13.653 9.931-33.111-2.533-28.077-18.631 38.512-123.162-3.922-169.482-112.59-182.015v84.175c0 20.701-24.3 31.453-39.687 18.164L136.309 226.164c-11.071-9.561-11.086-26.753 0-36.328zm-128 36.328L184.313 378.15C199.7 391.439 224 380.687 224 359.986v-15.818l-108.606-93.785A55.96 55.96 0 0 1 96 207.998a55.953 55.953 0 0 1 19.393-42.38L224 71.832V56.015c0-20.667-24.28-31.469-39.687-18.164L8.309 189.836c-11.086 9.575-11.071 26.767 0 36.328z\"],\n    \"republican\": [640, 512, [], \"f75e\", \"M544 192c0-88.4-71.6-160-160-160H160C71.6 32 0 103.6 0 192v64h544v-64zm-367.7-21.6l-19.8 19.3 4.7 27.3c.8 4.9-4.3 8.6-8.7 6.3L128 210.4l-24.5 12.9c-4.3 2.3-9.5-1.4-8.7-6.3l4.7-27.3-19.8-19.3c-3.6-3.5-1.6-9.5 3.3-10.2l27.4-4 12.2-24.8c2.2-4.5 8.6-4.4 10.7 0l12.2 24.8 27.4 4c5 .7 6.9 6.7 3.4 10.2zm144 0l-19.8 19.3 4.7 27.3c.8 4.9-4.3 8.6-8.7 6.3L272 210.4l-24.5 12.9c-4.3 2.3-9.5-1.4-8.7-6.3l4.7-27.3-19.8-19.3c-3.6-3.5-1.6-9.5 3.3-10.2l27.4-4 12.2-24.8c2.2-4.5 8.6-4.4 10.7 0l12.2 24.8 27.4 4c5 .7 6.9 6.7 3.4 10.2zm144 0l-19.8 19.3 4.7 27.3c.8 4.9-4.3 8.6-8.7 6.3L416 210.4l-24.5 12.9c-4.3 2.3-9.5-1.4-8.7-6.3l4.7-27.3-19.8-19.3c-3.6-3.5-1.6-9.5 3.3-10.2l27.4-4 12.2-24.8c2.2-4.5 8.6-4.4 10.7 0l12.2 24.8 27.4 4c5 .7 6.9 6.7 3.4 10.2zM624 320h-32c-8.8 0-16 7.2-16 16v64c0 8.8-7.2 16-16 16s-16-7.2-16-16V288H0v176c0 8.8 7.2 16 16 16h96c8.8 0 16-7.2 16-16v-80h192v80c0 8.8 7.2 16 16 16h96c8.8 0 16-7.2 16-16V352h32v43.3c0 41.8 30 80.1 71.6 84.3 47.8 4.9 88.4-32.7 88.4-79.6v-64c0-8.8-7.2-16-16-16z\"],\n    \"restroom\": [640, 512, [], \"f7bd\", \"M128 128c35.3 0 64-28.7 64-64S163.3 0 128 0 64 28.7 64 64s28.7 64 64 64zm384 0c35.3 0 64-28.7 64-64S547.3 0 512 0s-64 28.7-64 64 28.7 64 64 64zm127.3 226.5l-45.6-185.8c-3.3-13.5-15.5-23-29.8-24.2-15 9.7-32.8 15.5-52 15.5-19.2 0-37-5.8-52-15.5-14.3 1.2-26.5 10.7-29.8 24.2l-45.6 185.8C381 369.6 393 384 409.2 384H464v104c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24V384h54.8c16.2 0 28.2-14.4 24.5-29.5zM336 0h-32c-8.8 0-16 7.2-16 16v480c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16zM180.1 144.4c-15 9.8-32.9 15.6-52.1 15.6-19.2 0-37.1-5.8-52.1-15.6C51.3 146.5 32 166.9 32 192v136c0 13.3 10.7 24 24 24h8v136c0 13.3 10.7 24 24 24h80c13.3 0 24-10.7 24-24V352h8c13.3 0 24-10.7 24-24V192c0-25.1-19.3-45.5-43.9-47.6z\"],\n    \"retweet\": [640, 512, [], \"f079\", \"M629.657 343.598L528.971 444.284c-9.373 9.372-24.568 9.372-33.941 0L394.343 343.598c-9.373-9.373-9.373-24.569 0-33.941l10.823-10.823c9.562-9.562 25.133-9.34 34.419.492L480 342.118V160H292.451a24.005 24.005 0 0 1-16.971-7.029l-16-16C244.361 121.851 255.069 96 276.451 96H520c13.255 0 24 10.745 24 24v222.118l40.416-42.792c9.285-9.831 24.856-10.054 34.419-.492l10.823 10.823c9.372 9.372 9.372 24.569-.001 33.941zm-265.138 15.431A23.999 23.999 0 0 0 347.548 352H160V169.881l40.416 42.792c9.286 9.831 24.856 10.054 34.419.491l10.822-10.822c9.373-9.373 9.373-24.569 0-33.941L144.971 67.716c-9.373-9.373-24.569-9.373-33.941 0L10.343 168.402c-9.373 9.373-9.373 24.569 0 33.941l10.822 10.822c9.562 9.562 25.133 9.34 34.419-.491L96 169.881V392c0 13.255 10.745 24 24 24h243.549c21.382 0 32.09-25.851 16.971-40.971l-16.001-16z\"],\n    \"ribbon\": [448, 512, [], \"f4d6\", \"M6.1 444.3c-9.6 10.8-7.5 27.6 4.5 35.7l68.8 27.9c9.9 6.7 23.3 5 31.3-3.8l91.8-101.9-79.2-87.9-117.2 130zm435.8 0s-292-324.6-295.4-330.1c15.4-8.4 40.2-17.9 77.5-17.9s62.1 9.5 77.5 17.9c-3.3 5.6-56 64.6-56 64.6l79.1 87.7 34.2-38c28.7-31.9 33.3-78.6 11.4-115.5l-43.7-73.5c-4.3-7.2-9.9-13.3-16.8-18-40.7-27.6-127.4-29.7-171.4 0-6.9 4.7-12.5 10.8-16.8 18l-43.6 73.2c-1.5 2.5-37.1 62.2 11.5 116L337.5 504c8 8.9 21.4 10.5 31.3 3.8l68.8-27.9c11.9-8 14-24.8 4.3-35.6z\"],\n    \"ring\": [512, 512, [], \"f70b\", \"M256 64C110.06 64 0 125.91 0 208v98.13C0 384.48 114.62 448 256 448s256-63.52 256-141.87V208c0-82.09-110.06-144-256-144zm0 64c106.04 0 192 35.82 192 80 0 9.26-3.97 18.12-10.91 26.39C392.15 208.21 328.23 192 256 192s-136.15 16.21-181.09 42.39C67.97 226.12 64 217.26 64 208c0-44.18 85.96-80 192-80zM120.43 264.64C155.04 249.93 201.64 240 256 240s100.96 9.93 135.57 24.64C356.84 279.07 308.93 288 256 288s-100.84-8.93-135.57-23.36z\"],\n    \"road\": [576, 512, [], \"f018\", \"M573.19 402.67l-139.79-320C428.43 71.29 417.6 64 405.68 64h-97.59l2.45 23.16c.5 4.72-3.21 8.84-7.96 8.84h-29.16c-4.75 0-8.46-4.12-7.96-8.84L267.91 64h-97.59c-11.93 0-22.76 7.29-27.73 18.67L2.8 402.67C-6.45 423.86 8.31 448 30.54 448h196.84l10.31-97.68c.86-8.14 7.72-14.32 15.91-14.32h68.8c8.19 0 15.05 6.18 15.91 14.32L348.62 448h196.84c22.23 0 36.99-24.14 27.73-45.33zM260.4 135.16a8 8 0 0 1 7.96-7.16h39.29c4.09 0 7.53 3.09 7.96 7.16l4.6 43.58c.75 7.09-4.81 13.26-11.93 13.26h-40.54c-7.13 0-12.68-6.17-11.93-13.26l4.59-43.58zM315.64 304h-55.29c-9.5 0-16.91-8.23-15.91-17.68l5.07-48c.86-8.14 7.72-14.32 15.91-14.32h45.15c8.19 0 15.05 6.18 15.91 14.32l5.07 48c1 9.45-6.41 17.68-15.91 17.68z\"],\n    \"robot\": [640, 512, [], \"f544\", \"M32,224H64V416H32A31.96166,31.96166,0,0,1,0,384V256A31.96166,31.96166,0,0,1,32,224Zm512-48V448a64.06328,64.06328,0,0,1-64,64H160a64.06328,64.06328,0,0,1-64-64V176a79.974,79.974,0,0,1,80-80H288V32a32,32,0,0,1,64,0V96H464A79.974,79.974,0,0,1,544,176ZM264,256a40,40,0,1,0-40,40A39.997,39.997,0,0,0,264,256Zm-8,128H192v32h64Zm96,0H288v32h64ZM456,256a40,40,0,1,0-40,40A39.997,39.997,0,0,0,456,256Zm-8,128H384v32h64ZM640,256V384a31.96166,31.96166,0,0,1-32,32H576V224h32A31.96166,31.96166,0,0,1,640,256Z\"],\n    \"rocket\": [512, 512, [], \"f135\", \"M505.12019,19.09375c-1.18945-5.53125-6.65819-11-12.207-12.1875C460.716,0,435.507,0,410.40747,0,307.17523,0,245.26909,55.20312,199.05238,128H94.83772c-16.34763.01562-35.55658,11.875-42.88664,26.48438L2.51562,253.29688A28.4,28.4,0,0,0,0,264a24.00867,24.00867,0,0,0,24.00582,24H127.81618l-22.47457,22.46875c-11.36521,11.36133-12.99607,32.25781,0,45.25L156.24582,406.625c11.15623,11.1875,32.15619,13.15625,45.27726,0l22.47457-22.46875V488a24.00867,24.00867,0,0,0,24.00581,24,28.55934,28.55934,0,0,0,10.707-2.51562l98.72834-49.39063c14.62888-7.29687,26.50776-26.5,26.50776-42.85937V312.79688c72.59753-46.3125,128.03493-108.40626,128.03493-211.09376C512.07526,76.5,512.07526,51.29688,505.12019,19.09375ZM384.04033,168A40,40,0,1,1,424.05,128,40.02322,40.02322,0,0,1,384.04033,168Z\"],\n    \"route\": [512, 512, [], \"f4d7\", \"M416 320h-96c-17.6 0-32-14.4-32-32s14.4-32 32-32h96s96-107 96-160-43-96-96-96-96 43-96 96c0 25.5 22.2 63.4 45.3 96H320c-52.9 0-96 43.1-96 96s43.1 96 96 96h96c17.6 0 32 14.4 32 32s-14.4 32-32 32H185.5c-16 24.8-33.8 47.7-47.3 64H416c52.9 0 96-43.1 96-96s-43.1-96-96-96zm0-256c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zM96 256c-53 0-96 43-96 96s96 160 96 160 96-107 96-160-43-96-96-96zm0 128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"rss\": [448, 512, [], \"f09e\", \"M128.081 415.959c0 35.369-28.672 64.041-64.041 64.041S0 451.328 0 415.959s28.672-64.041 64.041-64.041 64.04 28.673 64.04 64.041zm175.66 47.25c-8.354-154.6-132.185-278.587-286.95-286.95C7.656 175.765 0 183.105 0 192.253v48.069c0 8.415 6.49 15.472 14.887 16.018 111.832 7.284 201.473 96.702 208.772 208.772.547 8.397 7.604 14.887 16.018 14.887h48.069c9.149.001 16.489-7.655 15.995-16.79zm144.249.288C439.596 229.677 251.465 40.445 16.503 32.01 7.473 31.686 0 38.981 0 48.016v48.068c0 8.625 6.835 15.645 15.453 15.999 191.179 7.839 344.627 161.316 352.465 352.465.353 8.618 7.373 15.453 15.999 15.453h48.068c9.034-.001 16.329-7.474 16.005-16.504z\"],\n    \"rss-square\": [448, 512, [], \"f143\", \"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM112 416c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm157.533 0h-34.335c-6.011 0-11.051-4.636-11.442-10.634-5.214-80.05-69.243-143.92-149.123-149.123-5.997-.39-10.633-5.431-10.633-11.441v-34.335c0-6.535 5.468-11.777 11.994-11.425 110.546 5.974 198.997 94.536 204.964 204.964.352 6.526-4.89 11.994-11.425 11.994zm103.027 0h-34.334c-6.161 0-11.175-4.882-11.427-11.038-5.598-136.535-115.204-246.161-251.76-251.76C68.882 152.949 64 147.935 64 141.774V107.44c0-6.454 5.338-11.664 11.787-11.432 167.83 6.025 302.21 141.191 308.205 308.205.232 6.449-4.978 11.787-11.432 11.787z\"],\n    \"ruble-sign\": [384, 512, [], \"f158\", \"M239.36 320C324.48 320 384 260.542 384 175.071S324.48 32 239.36 32H76c-6.627 0-12 5.373-12 12v206.632H12c-6.627 0-12 5.373-12 12V308c0 6.627 5.373 12 12 12h52v32H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h52v52c0 6.627 5.373 12 12 12h58.56c6.627 0 12-5.373 12-12v-52H308c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12H146.56v-32h92.8zm-92.8-219.252h78.72c46.72 0 74.88 29.11 74.88 74.323 0 45.832-28.16 75.561-76.16 75.561h-77.44V100.748z\"],\n    \"ruler\": [640, 512, [], \"f545\", \"M635.7 167.2L556.1 31.7c-8.8-15-28.3-20.1-43.5-11.5l-69 39.1L503.3 161c2.2 3.8.9 8.5-2.9 10.7l-13.8 7.8c-3.8 2.2-8.7.9-10.9-2.9L416 75l-55.2 31.3 27.9 47.4c2.2 3.8.9 8.5-2.9 10.7l-13.8 7.8c-3.8 2.2-8.7.9-10.9-2.9L333.2 122 278 153.3 337.8 255c2.2 3.7.9 8.5-2.9 10.7l-13.8 7.8c-3.8 2.2-8.7.9-10.9-2.9l-59.7-101.7-55.2 31.3 27.9 47.4c2.2 3.8.9 8.5-2.9 10.7l-13.8 7.8c-3.8 2.2-8.7.9-10.9-2.9l-27.9-47.5-55.2 31.3 59.7 101.7c2.2 3.7.9 8.5-2.9 10.7l-13.8 7.8c-3.8 2.2-8.7.9-10.9-2.9L84.9 262.9l-69 39.1C.7 310.7-4.6 329.8 4.2 344.8l79.6 135.6c8.8 15 28.3 20.1 43.5 11.5L624.1 210c15.2-8.6 20.4-27.8 11.6-42.8z\"],\n    \"ruler-combined\": [512, 512, [], \"f546\", \"M160 288h-56c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h56v-64h-56c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h56V96h-56c-4.42 0-8-3.58-8-8V72c0-4.42 3.58-8 8-8h56V32c0-17.67-14.33-32-32-32H32C14.33 0 0 14.33 0 32v448c0 2.77.91 5.24 1.57 7.8L160 329.38V288zm320 64h-32v56c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-56h-64v56c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-56h-64v56c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-56h-41.37L24.2 510.43c2.56.66 5.04 1.57 7.8 1.57h448c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32z\"],\n    \"ruler-horizontal\": [576, 512, [], \"f547\", \"M544 128h-48v88c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-88h-64v88c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-88h-64v88c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-88h-64v88c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-88h-64v88c0 4.42-3.58 8-8 8H88c-4.42 0-8-3.58-8-8v-88H32c-17.67 0-32 14.33-32 32v192c0 17.67 14.33 32 32 32h512c17.67 0 32-14.33 32-32V160c0-17.67-14.33-32-32-32z\"],\n    \"ruler-vertical\": [256, 512, [], \"f548\", \"M168 416c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h88v-64h-88c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h88v-64h-88c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h88v-64h-88c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h88V32c0-17.67-14.33-32-32-32H32C14.33 0 0 14.33 0 32v448c0 17.67 14.33 32 32 32h192c17.67 0 32-14.33 32-32v-64h-88z\"],\n    \"running\": [416, 512, [], \"f70c\", \"M272 96c26.51 0 48-21.49 48-48S298.51 0 272 0s-48 21.49-48 48 21.49 48 48 48zM113.69 317.47l-14.8 34.52H32c-17.67 0-32 14.33-32 32s14.33 32 32 32h77.45c19.25 0 36.58-11.44 44.11-29.09l8.79-20.52-10.67-6.3c-17.32-10.23-30.06-25.37-37.99-42.61zM384 223.99h-44.03l-26.06-53.25c-12.5-25.55-35.45-44.23-61.78-50.94l-71.08-21.14c-28.3-6.8-57.77-.55-80.84 17.14l-39.67 30.41c-14.03 10.75-16.69 30.83-5.92 44.86s30.84 16.66 44.86 5.92l39.69-30.41c7.67-5.89 17.44-8 25.27-6.14l14.7 4.37-37.46 87.39c-12.62 29.48-1.31 64.01 26.3 80.31l84.98 50.17-27.47 87.73c-5.28 16.86 4.11 34.81 20.97 40.09 3.19 1 6.41 1.48 9.58 1.48 13.61 0 26.23-8.77 30.52-22.45l31.64-101.06c5.91-20.77-2.89-43.08-21.64-54.39l-61.24-36.14 31.31-78.28 20.27 41.43c8 16.34 24.92 26.89 43.11 26.89H384c17.67 0 32-14.33 32-32s-14.33-31.99-32-31.99z\"],\n    \"rupee-sign\": [320, 512, [], \"f156\", \"M308 96c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12H12C5.373 32 0 37.373 0 44v44.748c0 6.627 5.373 12 12 12h85.28c27.308 0 48.261 9.958 60.97 27.252H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h158.757c-6.217 36.086-32.961 58.632-74.757 58.632H12c-6.627 0-12 5.373-12 12v53.012c0 3.349 1.4 6.546 3.861 8.818l165.052 152.356a12.001 12.001 0 0 0 8.139 3.182h82.562c10.924 0 16.166-13.408 8.139-20.818L116.871 319.906c76.499-2.34 131.144-53.395 138.318-127.906H308c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-58.69c-3.486-11.541-8.28-22.246-14.252-32H308z\"],\n    \"sad-cry\": [496, 512, [], \"f5b3\", \"M248 8C111 8 0 119 0 256c0 90.1 48.2 168.7 120 212.1V288c0-8.8 7.2-16 16-16s16 7.2 16 16v196.7c29.5 12.4 62 19.3 96 19.3s66.5-6.9 96-19.3V288c0-8.8 7.2-16 16-16s16 7.2 16 16v180.1C447.8 424.7 496 346 496 256 496 119 385 8 248 8zm-65.5 216.5c-14.8-13.2-46.2-13.2-61 0L112 233c-3.8 3.3-9.3 4-13.7 1.6-4.4-2.4-6.9-7.4-6.1-12.4 4-25.2 34.2-42.1 59.9-42.1S208 197 212 222.2c.8 5-1.7 10-6.1 12.4-5.8 3.1-11.2.7-13.7-1.6l-9.7-8.5zM248 416c-26.5 0-48-28.7-48-64s21.5-64 48-64 48 28.7 48 64-21.5 64-48 64zm149.8-181.5c-5.8 3.1-11.2.7-13.7-1.6l-9.5-8.5c-14.8-13.2-46.2-13.2-61 0L304 233c-3.8 3.3-9.3 4-13.7 1.6-4.4-2.4-6.9-7.4-6.1-12.4 4-25.2 34.2-42.1 59.9-42.1S400 197 404 222.2c.6 4.9-1.8 9.9-6.2 12.3z\"],\n    \"sad-tear\": [496, 512, [], \"f5b4\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm80 168c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zM152 416c-26.5 0-48-21-48-47 0-20 28.5-60.4 41.6-77.8 3.2-4.3 9.6-4.3 12.8 0C171.5 308.6 200 349 200 369c0 26-21.5 47-48 47zm16-176c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm170.2 154.2C315.8 367.4 282.9 352 248 352c-21.2 0-21.2-32 0-32 44.4 0 86.3 19.6 114.7 53.8 13.8 16.4-11.2 36.5-24.5 20.4z\"],\n    \"satellite\": [512, 512, [], \"f7bf\", \"M502.60969,310.04206l-96.70393,96.71625a31.88151,31.88151,0,0,1-45.00765,0L280.572,326.34115l-9.89231,9.90759a190.56343,190.56343,0,0,1-5.40716,168.52287c-4.50077,8.50115-16.39342,9.59505-23.20707,2.79725L134.54715,400.05428l-17.7999,17.79929c.70324,2.60972,1.60965,5.00067,1.60965,7.79793a32.00544,32.00544,0,1,1-32.00544-32.00434c2.79735,0,5.18838.90637,7.7982,1.60959l17.7999-17.79929L4.43129,269.94287c-6.798-6.81342-5.70409-18.6119,2.79735-23.20627a190.58161,190.58161,0,0,1,168.52864-5.407l9.79854-9.79821-80.31053-80.41716a32.002,32.002,0,0,1,0-45.09987L201.96474,9.29814A31.62639,31.62639,0,0,1,224.46868,0a31.99951,31.99951,0,0,1,22.59759,9.29814l80.32615,80.30777,47.805-47.89713a33.6075,33.6075,0,0,1,47.50808,0l47.50807,47.50645a33.63308,33.63308,0,0,1,0,47.50644l-47.805,47.89713L502.71908,265.036A31.78938,31.78938,0,0,1,502.60969,310.04206ZM219.56159,197.433l73.82505-73.82252-68.918-68.9-73.80942,73.80689Zm237.74352,90.106-68.90233-68.9156-73.825,73.82252,68.918,68.9Z\"],\n    \"satellite-dish\": [512, 512, [], \"f7c0\", \"M305.44954,462.59c7.39157,7.29792,6.18829,20.09661-3.00038,25.00356-77.713,41.80281-176.72559,29.9105-242.34331-35.7082C-5.49624,386.28227-17.404,287.362,24.41381,209.554c4.89125-9.095,17.68975-10.29834,25.00318-3.00043L166.22872,323.36708l27.39411-27.39452c-.68759-2.60974-1.594-5.00071-1.594-7.81361a32.00407,32.00407,0,1,1,32.00407,32.00455c-2.79723,0-5.20378-.89075-7.79786-1.594l-27.40974,27.41015ZM511.9758,303.06732a16.10336,16.10336,0,0,1-16.002,17.00242H463.86031a15.96956,15.96956,0,0,1-15.89265-15.00213C440.46671,175.5492,336.45348,70.53427,207.03078,63.53328a15.84486,15.84486,0,0,1-15.00191-15.90852V16.02652A16.09389,16.09389,0,0,1,209.031.02425C372.25491,8.61922,503.47472,139.841,511.9758,303.06732Zm-96.01221-.29692a16.21093,16.21093,0,0,1-16.11142,17.29934H367.645a16.06862,16.06862,0,0,1-15.89265-14.70522c-6.90712-77.01094-68.118-138.91037-144.92467-145.22376a15.94,15.94,0,0,1-14.79876-15.89289V112.13393a16.134,16.134,0,0,1,17.29908-16.096C319.45132,104.5391,407.55627,192.64538,415.96359,302.7704Z\"],\n    \"save\": [448, 512, [], \"f0c7\", \"M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM224 416c-35.346 0-64-28.654-64-64 0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64zm96-304.52V212c0 6.627-5.373 12-12 12H76c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h228.52c3.183 0 6.235 1.264 8.485 3.515l3.48 3.48A11.996 11.996 0 0 1 320 111.48z\"],\n    \"school\": [640, 512, [], \"f549\", \"M0 224v272c0 8.84 7.16 16 16 16h80V192H32c-17.67 0-32 14.33-32 32zm360-48h-24v-40c0-4.42-3.58-8-8-8h-16c-4.42 0-8 3.58-8 8v64c0 4.42 3.58 8 8 8h48c4.42 0 8-3.58 8-8v-16c0-4.42-3.58-8-8-8zm137.75-63.96l-160-106.67a32.02 32.02 0 0 0-35.5 0l-160 106.67A32.002 32.002 0 0 0 128 138.66V512h128V368c0-8.84 7.16-16 16-16h96c8.84 0 16 7.16 16 16v144h128V138.67c0-10.7-5.35-20.7-14.25-26.63zM320 256c-44.18 0-80-35.82-80-80s35.82-80 80-80 80 35.82 80 80-35.82 80-80 80zm288-64h-64v320h80c8.84 0 16-7.16 16-16V224c0-17.67-14.33-32-32-32z\"],\n    \"screwdriver\": [512, 512, [], \"f54a\", \"M448 0L320 96v62.06l-83.03 83.03c6.79 4.25 13.27 9.06 19.07 14.87 5.8 5.8 10.62 12.28 14.87 19.07L353.94 192H416l96-128-64-64zM128 278.59L10.92 395.67c-14.55 14.55-14.55 38.15 0 52.71l52.7 52.7c14.56 14.56 38.15 14.56 52.71 0L233.41 384c29.11-29.11 29.11-76.3 0-105.41s-76.3-29.11-105.41 0z\"],\n    \"scroll\": [640, 512, [], \"f70e\", \"M48 0C21.53 0 0 21.53 0 48v64c0 8.84 7.16 16 16 16h80V48C96 21.53 74.47 0 48 0zm208 412.57V352h288V96c0-52.94-43.06-96-96-96H111.59C121.74 13.41 128 29.92 128 48v368c0 38.87 34.65 69.65 74.75 63.12C234.22 474 256 444.46 256 412.57zM288 384v32c0 52.93-43.06 96-96 96h336c61.86 0 112-50.14 112-112 0-8.84-7.16-16-16-16H288z\"],\n    \"sd-card\": [384, 512, [], \"f7c2\", \"M320 0H128L0 128v320c0 35.3 28.7 64 64 64h256c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64zM160 160h-48V64h48v96zm80 0h-48V64h48v96zm80 0h-48V64h48v96z\"],\n    \"search\": [512, 512, [], \"f002\", \"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"],\n    \"search-dollar\": [512, 512, [], \"f688\", \"M505.04 442.66l-99.71-99.69c-4.5-4.5-10.6-7-17-7h-16.3c27.6-35.3 44-79.69 44-127.99C416.03 93.09 322.92 0 208.02 0S0 93.09 0 207.98s93.11 207.98 208.02 207.98c48.3 0 92.71-16.4 128.01-44v16.3c0 6.4 2.5 12.5 7 17l99.71 99.69c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.59.1-33.99zm-297.02-90.7c-79.54 0-144-64.34-144-143.98 0-79.53 64.35-143.98 144-143.98 79.54 0 144 64.34 144 143.98 0 79.53-64.35 143.98-144 143.98zm27.11-152.54l-45.01-13.5c-5.16-1.55-8.77-6.78-8.77-12.73 0-7.27 5.3-13.19 11.8-13.19h28.11c4.56 0 8.96 1.29 12.82 3.72 3.24 2.03 7.36 1.91 10.13-.73l11.75-11.21c3.53-3.37 3.33-9.21-.57-12.14-9.1-6.83-20.08-10.77-31.37-11.35V112c0-4.42-3.58-8-8-8h-16c-4.42 0-8 3.58-8 8v16.12c-23.63.63-42.68 20.55-42.68 45.07 0 19.97 12.99 37.81 31.58 43.39l45.01 13.5c5.16 1.55 8.77 6.78 8.77 12.73 0 7.27-5.3 13.19-11.8 13.19h-28.1c-4.56 0-8.96-1.29-12.82-3.72-3.24-2.03-7.36-1.91-10.13.73l-11.75 11.21c-3.53 3.37-3.33 9.21.57 12.14 9.1 6.83 20.08 10.77 31.37 11.35V304c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8v-16.12c23.63-.63 42.68-20.54 42.68-45.07 0-19.97-12.99-37.81-31.59-43.39z\"],\n    \"search-location\": [512, 512, [], \"f689\", \"M505.04 442.66l-99.71-99.69c-4.5-4.5-10.6-7-17-7h-16.3c27.6-35.3 44-79.69 44-127.99C416.03 93.09 322.92 0 208.02 0S0 93.09 0 207.98s93.11 207.98 208.02 207.98c48.3 0 92.71-16.4 128.01-44v16.3c0 6.4 2.5 12.5 7 17l99.71 99.69c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.59.1-33.99zm-297.02-90.7c-79.54 0-144-64.34-144-143.98 0-79.53 64.35-143.98 144-143.98 79.54 0 144 64.34 144 143.98 0 79.53-64.35 143.98-144 143.98zm.02-239.96c-40.78 0-73.84 33.05-73.84 73.83 0 32.96 48.26 93.05 66.75 114.86a9.24 9.24 0 0 0 14.18 0c18.49-21.81 66.75-81.89 66.75-114.86 0-40.78-33.06-73.83-73.84-73.83zm0 96c-13.26 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z\"],\n    \"search-minus\": [512, 512, [], \"f010\", \"M304 192v32c0 6.6-5.4 12-12 12H124c-6.6 0-12-5.4-12-12v-32c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm201 284.7L476.7 505c-9.4 9.4-24.6 9.4-33.9 0L343 405.3c-4.5-4.5-7-10.6-7-17V372c-35.3 27.6-79.7 44-128 44C93.1 416 0 322.9 0 208S93.1 0 208 0s208 93.1 208 208c0 48.3-16.4 92.7-44 128h16.3c6.4 0 12.5 2.5 17 7l99.7 99.7c9.3 9.4 9.3 24.6 0 34zM344 208c0-75.2-60.8-136-136-136S72 132.8 72 208s60.8 136 136 136 136-60.8 136-136z\"],\n    \"search-plus\": [512, 512, [], \"f00e\", \"M304 192v32c0 6.6-5.4 12-12 12h-56v56c0 6.6-5.4 12-12 12h-32c-6.6 0-12-5.4-12-12v-56h-56c-6.6 0-12-5.4-12-12v-32c0-6.6 5.4-12 12-12h56v-56c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v56h56c6.6 0 12 5.4 12 12zm201 284.7L476.7 505c-9.4 9.4-24.6 9.4-33.9 0L343 405.3c-4.5-4.5-7-10.6-7-17V372c-35.3 27.6-79.7 44-128 44C93.1 416 0 322.9 0 208S93.1 0 208 0s208 93.1 208 208c0 48.3-16.4 92.7-44 128h16.3c6.4 0 12.5 2.5 17 7l99.7 99.7c9.3 9.4 9.3 24.6 0 34zM344 208c0-75.2-60.8-136-136-136S72 132.8 72 208s60.8 136 136 136 136-60.8 136-136z\"],\n    \"seedling\": [512, 512, [], \"f4d8\", \"M64 96H0c0 123.7 100.3 224 224 224v144c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320C288 196.3 187.7 96 64 96zm384-64c-84.2 0-157.4 46.5-195.7 115.2 27.7 30.2 48.2 66.9 59 107.6C424 243.1 512 147.9 512 32h-64z\"],\n    \"server\": [512, 512, [], \"f233\", \"M480 160H32c-17.673 0-32-14.327-32-32V64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24z\"],\n    \"shapes\": [512, 512, [], \"f61f\", \"M128,256A128,128,0,1,0,256,384,128,128,0,0,0,128,256Zm379-54.86L400.07,18.29a37.26,37.26,0,0,0-64.14,0L229,201.14C214.76,225.52,232.58,256,261.09,256H474.91C503.42,256,521.24,225.52,507,201.14ZM480,288H320a32,32,0,0,0-32,32V480a32,32,0,0,0,32,32H480a32,32,0,0,0,32-32V320A32,32,0,0,0,480,288Z\"],\n    \"share\": [512, 512, [], \"f064\", \"M503.691 189.836L327.687 37.851C312.281 24.546 288 35.347 288 56.015v80.053C127.371 137.907 0 170.1 0 322.326c0 61.441 39.581 122.309 83.333 154.132 13.653 9.931 33.111-2.533 28.077-18.631C66.066 312.814 132.917 274.316 288 272.085V360c0 20.7 24.3 31.453 39.687 18.164l176.004-152c11.071-9.562 11.086-26.753 0-36.328z\"],\n    \"share-alt\": [448, 512, [], \"f1e0\", \"M352 320c-22.608 0-43.387 7.819-59.79 20.895l-102.486-64.054a96.551 96.551 0 0 0 0-41.683l102.486-64.054C308.613 184.181 329.392 192 352 192c53.019 0 96-42.981 96-96S405.019 0 352 0s-96 42.981-96 96c0 7.158.79 14.13 2.276 20.841L155.79 180.895C139.387 167.819 118.608 160 96 160c-53.019 0-96 42.981-96 96s42.981 96 96 96c22.608 0 43.387-7.819 59.79-20.895l102.486 64.054A96.301 96.301 0 0 0 256 416c0 53.019 42.981 96 96 96s96-42.981 96-96-42.981-96-96-96z\"],\n    \"share-alt-square\": [448, 512, [], \"f1e1\", \"M448 80v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48zM304 296c-14.562 0-27.823 5.561-37.783 14.671l-67.958-40.775a56.339 56.339 0 0 0 0-27.793l67.958-40.775C276.177 210.439 289.438 216 304 216c30.928 0 56-25.072 56-56s-25.072-56-56-56-56 25.072-56 56c0 4.797.605 9.453 1.74 13.897l-67.958 40.775C171.823 205.561 158.562 200 144 200c-30.928 0-56 25.072-56 56s25.072 56 56 56c14.562 0 27.823-5.561 37.783-14.671l67.958 40.775a56.088 56.088 0 0 0-1.74 13.897c0 30.928 25.072 56 56 56s56-25.072 56-56C360 321.072 334.928 296 304 296z\"],\n    \"share-square\": [576, 512, [], \"f14d\", \"M568.482 177.448L424.479 313.433C409.3 327.768 384 317.14 384 295.985v-71.963c-144.575.97-205.566 35.113-164.775 171.353 4.483 14.973-12.846 26.567-25.006 17.33C155.252 383.105 120 326.488 120 269.339c0-143.937 117.599-172.5 264-173.312V24.012c0-21.174 25.317-31.768 40.479-17.448l144.003 135.988c10.02 9.463 10.028 25.425 0 34.896zM384 379.128V448H64V128h50.916a11.99 11.99 0 0 0 8.648-3.693c14.953-15.568 32.237-27.89 51.014-37.676C185.708 80.83 181.584 64 169.033 64H48C21.49 64 0 85.49 0 112v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48v-88.806c0-8.288-8.197-14.066-16.011-11.302a71.83 71.83 0 0 1-34.189 3.377c-7.27-1.046-13.8 4.514-13.8 11.859z\"],\n    \"shekel-sign\": [448, 512, [], \"f20b\", \"M248 168v168c0 8.84 7.16 16 16 16h48c8.84 0 16-7.16 16-16V168c0-75.11-60.89-136-136-136H24C10.75 32 0 42.74 0 56v408c0 8.84 7.16 16 16 16h48c8.84 0 16-7.16 16-16V112h112c30.93 0 56 25.07 56 56zM432 32h-48c-8.84 0-16 7.16-16 16v296c0 30.93-25.07 56-56 56H200V176c0-8.84-7.16-16-16-16h-48c-8.84 0-16 7.16-16 16v280c0 13.25 10.75 24 24 24h168c75.11 0 136-60.89 136-136V48c0-8.84-7.16-16-16-16z\"],\n    \"shield-alt\": [512, 512, [], \"f3ed\", \"M466.5 83.7l-192-80a48.15 48.15 0 0 0-36.9 0l-192 80C27.7 91.1 16 108.6 16 128c0 198.5 114.5 335.7 221.5 380.3 11.8 4.9 25.1 4.9 36.9 0C360.1 472.6 496 349.3 496 128c0-19.4-11.7-36.9-29.5-44.3zM256.1 446.3l-.1-381 175.9 73.3c-3.3 151.4-82.1 261.1-175.8 307.7z\"],\n    \"shield-virus\": [512, 512, [], \"e06c\", \"M224,192a16,16,0,1,0,16,16A16,16,0,0,0,224,192ZM466.5,83.68l-192-80A57.4,57.4,0,0,0,256.05,0a57.4,57.4,0,0,0-18.46,3.67l-192,80A47.93,47.93,0,0,0,16,128C16,326.5,130.5,463.72,237.5,508.32a48.09,48.09,0,0,0,36.91,0C360.09,472.61,496,349.3,496,128A48,48,0,0,0,466.5,83.68ZM384,256H371.88c-28.51,0-42.79,34.47-22.63,54.63l8.58,8.57a16,16,0,1,1-22.63,22.63l-8.57-8.58C306.47,313.09,272,327.37,272,355.88V368a16,16,0,0,1-32,0V355.88c0-28.51-34.47-42.79-54.63-22.63l-8.57,8.58a16,16,0,0,1-22.63-22.63l8.58-8.57c20.16-20.16,5.88-54.63-22.63-54.63H128a16,16,0,0,1,0-32h12.12c28.51,0,42.79-34.47,22.63-54.63l-8.58-8.57a16,16,0,0,1,22.63-22.63l8.57,8.58c20.16,20.16,54.63,5.88,54.63-22.63V112a16,16,0,0,1,32,0v12.12c0,28.51,34.47,42.79,54.63,22.63l8.57-8.58a16,16,0,0,1,22.63,22.63l-8.58,8.57C329.09,189.53,343.37,224,371.88,224H384a16,16,0,0,1,0,32Zm-96,0a16,16,0,1,0,16,16A16,16,0,0,0,288,256Z\"],\n    \"ship\": [640, 512, [], \"f21a\", \"M496.616 372.639l70.012-70.012c16.899-16.9 9.942-45.771-12.836-53.092L512 236.102V96c0-17.673-14.327-32-32-32h-64V24c0-13.255-10.745-24-24-24H248c-13.255 0-24 10.745-24 24v40h-64c-17.673 0-32 14.327-32 32v140.102l-41.792 13.433c-22.753 7.313-29.754 36.173-12.836 53.092l70.012 70.012C125.828 416.287 85.587 448 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24 61.023 0 107.499-20.61 143.258-59.396C181.677 487.432 216.021 512 256 512h128c39.979 0 74.323-24.568 88.742-59.396C508.495 491.384 554.968 512 616 512c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24-60.817 0-101.542-31.001-119.384-75.361zM192 128h256v87.531l-118.208-37.995a31.995 31.995 0 0 0-19.584 0L192 215.531V128z\"],\n    \"shipping-fast\": [640, 512, [], \"f48b\", \"M624 352h-16V243.9c0-12.7-5.1-24.9-14.1-33.9L494 110.1c-9-9-21.2-14.1-33.9-14.1H416V48c0-26.5-21.5-48-48-48H112C85.5 0 64 21.5 64 48v48H8c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h272c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H40c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h208c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H8c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h208c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H64v128c0 53 43 96 96 96s96-43 96-96h128c0 53 43 96 96 96s96-43 96-96h48c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM160 464c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm320 0c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm80-208H416V144h44.1l99.9 99.9V256z\"],\n    \"shoe-prints\": [640, 512, [], \"f54b\", \"M192 160h32V32h-32c-35.35 0-64 28.65-64 64s28.65 64 64 64zM0 416c0 35.35 28.65 64 64 64h32V352H64c-35.35 0-64 28.65-64 64zm337.46-128c-34.91 0-76.16 13.12-104.73 32-24.79 16.38-44.52 32-104.73 32v128l57.53 15.97c26.21 7.28 53.01 13.12 80.31 15.05 32.69 2.31 65.6.67 97.58-6.2C472.9 481.3 512 429.22 512 384c0-64-84.18-96-174.54-96zM491.42 7.19C459.44.32 426.53-1.33 393.84.99c-27.3 1.93-54.1 7.77-80.31 15.04L256 32v128c60.2 0 79.94 15.62 104.73 32 28.57 18.88 69.82 32 104.73 32C555.82 224 640 192 640 128c0-45.22-39.1-97.3-148.58-120.81z\"],\n    \"shopping-bag\": [448, 512, [], \"f290\", \"M352 160v-32C352 57.42 294.579 0 224 0 153.42 0 96 57.42 96 128v32H0v272c0 44.183 35.817 80 80 80h288c44.183 0 80-35.817 80-80V160h-96zm-192-32c0-35.29 28.71-64 64-64s64 28.71 64 64v32H160v-32zm160 120c-13.255 0-24-10.745-24-24s10.745-24 24-24 24 10.745 24 24-10.745 24-24 24zm-192 0c-13.255 0-24-10.745-24-24s10.745-24 24-24 24 10.745 24 24-10.745 24-24 24z\"],\n    \"shopping-basket\": [576, 512, [], \"f291\", \"M576 216v16c0 13.255-10.745 24-24 24h-8l-26.113 182.788C514.509 462.435 494.257 480 470.37 480H105.63c-23.887 0-44.139-17.565-47.518-41.212L32 256h-8c-13.255 0-24-10.745-24-24v-16c0-13.255 10.745-24 24-24h67.341l106.78-146.821c10.395-14.292 30.407-17.453 44.701-7.058 14.293 10.395 17.453 30.408 7.058 44.701L170.477 192h235.046L326.12 82.821c-10.395-14.292-7.234-34.306 7.059-44.701 14.291-10.395 34.306-7.235 44.701 7.058L484.659 192H552c13.255 0 24 10.745 24 24zM312 392V280c0-13.255-10.745-24-24-24s-24 10.745-24 24v112c0 13.255 10.745 24 24 24s24-10.745 24-24zm112 0V280c0-13.255-10.745-24-24-24s-24 10.745-24 24v112c0 13.255 10.745 24 24 24s24-10.745 24-24zm-224 0V280c0-13.255-10.745-24-24-24s-24 10.745-24 24v112c0 13.255 10.745 24 24 24s24-10.745 24-24z\"],\n    \"shopping-cart\": [576, 512, [], \"f07a\", \"M528.12 301.319l47.273-208C578.806 78.301 567.391 64 551.99 64H159.208l-9.166-44.81C147.758 8.021 137.93 0 126.529 0H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24h69.883l70.248 343.435C147.325 417.1 136 435.222 136 456c0 30.928 25.072 56 56 56s56-25.072 56-56c0-15.674-6.447-29.835-16.824-40h209.647C430.447 426.165 424 440.326 424 456c0 30.928 25.072 56 56 56s56-25.072 56-56c0-22.172-12.888-41.332-31.579-50.405l5.517-24.276c3.413-15.018-8.002-29.319-23.403-29.319H218.117l-6.545-32h293.145c11.206 0 20.92-7.754 23.403-18.681z\"],\n    \"shower\": [512, 512, [], \"f2cc\", \"M304,320a16,16,0,1,0,16,16A16,16,0,0,0,304,320Zm32-96a16,16,0,1,0,16,16A16,16,0,0,0,336,224Zm32,64a16,16,0,1,0-16-16A16,16,0,0,0,368,288Zm-32,32a16,16,0,1,0-16-16A16,16,0,0,0,336,320Zm-32-64a16,16,0,1,0,16,16A16,16,0,0,0,304,256Zm128-32a16,16,0,1,0-16-16A16,16,0,0,0,432,224Zm-48,16a16,16,0,1,0,16-16A16,16,0,0,0,384,240Zm-16-48a16,16,0,1,0,16,16A16,16,0,0,0,368,192Zm96,32a16,16,0,1,0,16,16A16,16,0,0,0,464,224Zm32-32a16,16,0,1,0,16,16A16,16,0,0,0,496,192Zm-64,64a16,16,0,1,0,16,16A16,16,0,0,0,432,256Zm-32,32a16,16,0,1,0,16,16A16,16,0,0,0,400,288Zm-64,64a16,16,0,1,0,16,16A16,16,0,0,0,336,352Zm-32,32a16,16,0,1,0,16,16A16,16,0,0,0,304,384Zm64-64a16,16,0,1,0,16,16A16,16,0,0,0,368,320Zm21.65-218.35-11.3-11.31a16,16,0,0,0-22.63,0L350.05,96A111.19,111.19,0,0,0,272,64c-19.24,0-37.08,5.3-52.9,13.85l-10-10A121.72,121.72,0,0,0,123.44,32C55.49,31.5,0,92.91,0,160.85V464a16,16,0,0,0,16,16H48a16,16,0,0,0,16-16V158.4c0-30.15,21-58.2,51-61.93a58.38,58.38,0,0,1,48.93,16.67l10,10C165.3,138.92,160,156.76,160,176a111.23,111.23,0,0,0,32,78.05l-5.66,5.67a16,16,0,0,0,0,22.62l11.3,11.31a16,16,0,0,0,22.63,0L389.65,124.28A16,16,0,0,0,389.65,101.65Z\"],\n    \"shuttle-van\": [640, 512, [], \"f5b6\", \"M628.88 210.65L494.39 49.27A48.01 48.01 0 0 0 457.52 32H32C14.33 32 0 46.33 0 64v288c0 17.67 14.33 32 32 32h32c0 53.02 42.98 96 96 96s96-42.98 96-96h128c0 53.02 42.98 96 96 96s96-42.98 96-96h32c17.67 0 32-14.33 32-32V241.38c0-11.23-3.94-22.1-11.12-30.73zM64 192V96h96v96H64zm96 240c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm160-240h-96V96h96v96zm160 240c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm-96-240V96h66.02l80 96H384z\"],\n    \"sign\": [512, 512, [], \"f4d9\", \"M496 64H128V16c0-8.8-7.2-16-16-16H80c-8.8 0-16 7.2-16 16v48H16C7.2 64 0 71.2 0 80v32c0 8.8 7.2 16 16 16h48v368c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V128h368c8.8 0 16-7.2 16-16V80c0-8.8-7.2-16-16-16zM160 384h320V160H160v224z\"],\n    \"sign-in-alt\": [512, 512, [], \"f2f6\", \"M416 448h-84c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h84c17.7 0 32-14.3 32-32V160c0-17.7-14.3-32-32-32h-84c-6.6 0-12-5.4-12-12V76c0-6.6 5.4-12 12-12h84c53 0 96 43 96 96v192c0 53-43 96-96 96zm-47-201L201 79c-15-15-41-4.5-41 17v96H24c-13.3 0-24 10.7-24 24v96c0 13.3 10.7 24 24 24h136v96c0 21.5 26 32 41 17l168-168c9.3-9.4 9.3-24.6 0-34z\"],\n    \"sign-language\": [448, 512, [], \"f2a7\", \"M91.434 483.987c-.307-16.018 13.109-29.129 29.13-29.129h62.293v-5.714H56.993c-16.021 0-29.437-13.111-29.13-29.129C28.16 404.491 40.835 392 56.428 392h126.429v-5.714H29.136c-16.021 0-29.437-13.111-29.13-29.129.297-15.522 12.973-28.013 28.566-28.013h154.286v-5.714H57.707c-16.021 0-29.437-13.111-29.13-29.129.297-15.522 12.973-28.013 28.566-28.013h168.566l-31.085-22.606c-12.762-9.281-15.583-27.149-6.302-39.912 9.281-12.761 27.15-15.582 39.912-6.302l123.361 89.715a34.287 34.287 0 0 1 14.12 27.728v141.136c0 15.91-10.946 29.73-26.433 33.374l-80.471 18.934a137.16 137.16 0 0 1-31.411 3.646H120c-15.593-.001-28.269-12.492-28.566-28.014zm73.249-225.701h36.423l-11.187-8.136c-18.579-13.511-20.313-40.887-3.17-56.536l-13.004-16.7c-9.843-12.641-28.43-15.171-40.88-5.088-12.065 9.771-14.133 27.447-4.553 39.75l36.371 46.71zm283.298-2.103l-5.003-152.452c-.518-15.771-13.722-28.136-29.493-27.619-15.773.518-28.137 13.722-27.619 29.493l1.262 38.415L283.565 11.019c-9.58-12.303-27.223-14.63-39.653-5.328-12.827 9.599-14.929 28.24-5.086 40.881l76.889 98.745-4.509 3.511-94.79-121.734c-9.58-12.303-27.223-14.63-39.653-5.328-12.827 9.599-14.929 28.24-5.086 40.881l94.443 121.288-4.509 3.511-77.675-99.754c-9.58-12.303-27.223-14.63-39.653-5.328-12.827 9.599-14.929 28.24-5.086 40.881l52.053 66.849c12.497-8.257 29.055-8.285 41.69.904l123.36 89.714c10.904 7.93 17.415 20.715 17.415 34.198v16.999l61.064-47.549a34.285 34.285 0 0 0 13.202-28.177z\"],\n    \"sign-out-alt\": [512, 512, [], \"f2f5\", \"M497 273L329 441c-15 15-41 4.5-41-17v-96H152c-13.3 0-24-10.7-24-24v-96c0-13.3 10.7-24 24-24h136V88c0-21.4 25.9-32 41-17l168 168c9.3 9.4 9.3 24.6 0 34zM192 436v-40c0-6.6-5.4-12-12-12H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h84c6.6 0 12-5.4 12-12V76c0-6.6-5.4-12-12-12H96c-53 0-96 43-96 96v192c0 53 43 96 96 96h84c6.6 0 12-5.4 12-12z\"],\n    \"signal\": [640, 512, [], \"f012\", \"M216 288h-48c-8.84 0-16 7.16-16 16v192c0 8.84 7.16 16 16 16h48c8.84 0 16-7.16 16-16V304c0-8.84-7.16-16-16-16zM88 384H40c-8.84 0-16 7.16-16 16v96c0 8.84 7.16 16 16 16h48c8.84 0 16-7.16 16-16v-96c0-8.84-7.16-16-16-16zm256-192h-48c-8.84 0-16 7.16-16 16v288c0 8.84 7.16 16 16 16h48c8.84 0 16-7.16 16-16V208c0-8.84-7.16-16-16-16zm128-96h-48c-8.84 0-16 7.16-16 16v384c0 8.84 7.16 16 16 16h48c8.84 0 16-7.16 16-16V112c0-8.84-7.16-16-16-16zM600 0h-48c-8.84 0-16 7.16-16 16v480c0 8.84 7.16 16 16 16h48c8.84 0 16-7.16 16-16V16c0-8.84-7.16-16-16-16z\"],\n    \"signature\": [640, 512, [], \"f5b7\", \"M623.2 192c-51.8 3.5-125.7 54.7-163.1 71.5-29.1 13.1-54.2 24.4-76.1 24.4-22.6 0-26-16.2-21.3-51.9 1.1-8 11.7-79.2-42.7-76.1-25.1 1.5-64.3 24.8-169.5 126L192 182.2c30.4-75.9-53.2-151.5-129.7-102.8L7.4 116.3C0 121-2.2 130.9 2.5 138.4l17.2 27c4.7 7.5 14.6 9.7 22.1 4.9l58-38.9c18.4-11.7 40.7 7.2 32.7 27.1L34.3 404.1C27.5 421 37 448 64 448c8.3 0 16.5-3.2 22.6-9.4 42.2-42.2 154.7-150.7 211.2-195.8-2.2 28.5-2.1 58.9 20.6 83.8 15.3 16.8 37.3 25.3 65.5 25.3 35.6 0 68-14.6 102.3-30 33-14.8 99-62.6 138.4-65.8 8.5-.7 15.2-7.3 15.2-15.8v-32.1c.2-9.1-7.5-16.8-16.6-16.2z\"],\n    \"sim-card\": [384, 512, [], \"f7c4\", \"M0 64v384c0 35.3 28.7 64 64 64h256c35.3 0 64-28.7 64-64V128L256 0H64C28.7 0 0 28.7 0 64zm224 192h-64v-64h64v64zm96 0h-64v-64h32c17.7 0 32 14.3 32 32v32zm-64 128h64v32c0 17.7-14.3 32-32 32h-32v-64zm-96 0h64v64h-64v-64zm-96 0h64v64H96c-17.7 0-32-14.3-32-32v-32zm0-96h256v64H64v-64zm0-64c0-17.7 14.3-32 32-32h32v64H64v-32z\"],\n    \"sink\": [512, 512, [], \"e06d\", \"M32,416a96,96,0,0,0,96,96H384a96,96,0,0,0,96-96V384H32ZM496,288H400V256h64a16,16,0,0,0,16-16V224a16,16,0,0,0-16-16H384a32,32,0,0,0-32,32v48H288V96a32,32,0,0,1,64,0v16a16,16,0,0,0,16,16h32a16,16,0,0,0,16-16V96A96.16,96.16,0,0,0,300.87,1.86C255.29,10.71,224,53.36,224,99.79V288H160V240a32,32,0,0,0-32-32H48a16,16,0,0,0-16,16v16a16,16,0,0,0,16,16h64v32H16A16,16,0,0,0,0,304v32a16,16,0,0,0,16,16H496a16,16,0,0,0,16-16V304A16,16,0,0,0,496,288Z\"],\n    \"sitemap\": [640, 512, [], \"f0e8\", \"M128 352H32c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32zm-24-80h192v48h48v-48h192v48h48v-57.59c0-21.17-17.23-38.41-38.41-38.41H344v-64h40c17.67 0 32-14.33 32-32V32c0-17.67-14.33-32-32-32H256c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h40v64H94.41C73.23 224 56 241.23 56 262.41V320h48v-48zm264 80h-96c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32zm240 0h-96c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32z\"],\n    \"skating\": [448, 512, [], \"f7c5\", \"M400 0c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm0 448c-8.8 0-16 7.2-16 16s-7.2 16-16 16h-96c-8.8 0-16 7.2-16 16s7.2 16 16 16h96c26.5 0 48-21.5 48-48 0-8.8-7.2-16-16-16zm-282.2 8.6c-6.2 6.2-16.4 6.3-22.6 0l-67.9-67.9c-6.2-6.2-16.4-6.2-22.6 0s-6.2 16.4 0 22.6l67.9 67.9c9.4 9.4 21.7 14 34 14s24.6-4.7 33.9-14c6.2-6.2 6.2-16.4 0-22.6s-16.4-6.3-22.7 0zm56.1-179.8l-93.7 93.7c-12.5 12.5-12.5 32.8 0 45.2 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4l91.9-91.9-30.2-30.2c-5-5-9.4-10.7-13.2-16.8zM128 160h105.5l-20.1 17.2c-13.5 11.5-21.6 28.4-22.3 46.1-.7 17.8 6.1 35.2 18.7 47.7l78.2 78.2V432c0 17.7 14.3 32 32 32s32-14.3 32-32v-89.4c0-12.6-5.1-25-14.1-33.9l-61-61c.5-.4 1.2-.6 1.7-1.1l82.3-82.3c11.5-11.5 14.9-28.6 8.7-43.6-6.2-15-20.7-24.7-37-24.7H128c-17.7 0-32 14.3-32 32s14.3 32 32 32z\"],\n    \"skiing\": [512, 512, [], \"f7c9\", \"M432 96c26.5 0 48-21.5 48-48S458.5 0 432 0s-48 21.5-48 48 21.5 48 48 48zm73 356.1c-9.4-9.4-24.6-9.4-33.9 0-12.1 12.1-30.5 15.4-45.1 8.7l-135.8-70.2 49.2-73.8c12.7-19 10.2-44.5-6-60.6L293 215.7l-107-53.1c-2.9 19.9 3.4 40 17.7 54.4l75.1 75.2-45.9 68.8L35 258.7c-11.7-6-26.2-1.5-32.3 10.3-6.1 11.8-1.5 26.3 10.3 32.3l391.9 202.5c11.9 5.5 24.5 8.1 37.1 8.1 23.2 0 46-9 63-26 9.3-9.3 9.3-24.5 0-33.8zM120 91.6l-11.5 22.5c14.4 7.3 31.2 4.9 42.8-4.8l47.2 23.4c-.1.1-.1.2-.2.3l114.5 56.8 32.4-13 6.4 19.1c4 12.1 12.6 22 24 27.7l58.1 29c15.9 7.9 35 1.5 42.9-14.3 7.9-15.8 1.5-35-14.3-42.9l-52.1-26.1-17.1-51.2c-8.1-24.2-40.9-56.6-84.5-39.2l-81.2 32.5-62.5-31c.3-14.5-7.2-28.6-20.9-35.6l-11.1 21.7h-.2l-34.4-7c-1.8-.4-3.7.2-5 1.7-1.9 2.2-1.7 5.5.5 7.4l26.2 23z\"],\n    \"skiing-nordic\": [576, 512, [], \"f7ca\", \"M336 96c26.5 0 48-21.5 48-48S362.5 0 336 0s-48 21.5-48 48 21.5 48 48 48zm216 320c-13.2 0-24 10.7-24 24 0 13.2-10.8 24-24 24h-69.5L460 285.6c11.7-4.7 20.1-16.2 20.1-29.6 0-17.7-14.3-32-32-32h-44L378 170.8c-12.5-25.5-35.5-44.2-61.8-50.9L245 98.7c-28.3-6.8-57.8-.5-80.8 17.1l-39.7 30.4c-14 10.7-16.7 30.8-5.9 44.9.7.9 1.7 1.3 2.4 2.1L66.9 464H24c-13.2 0-24 10.7-24 24s10.8 24 24 24h480c39.7 0 72-32.3 72-72 0-13.2-10.8-24-24-24zm-260.5 48h-96.9l43.1-91-22-13c-12.1-7.2-21.9-16.9-29.5-27.8L123.7 464H99.5l52.3-261.4c4.1-1 8.1-2.9 11.7-5.6l39.7-30.4c7.7-5.9 17.4-8 25.3-6.1l14.7 4.4-37.5 87.4c-12.6 29.5-1.3 64 26.3 80.3l85 50.2-25.5 81.2zm110.6 0h-43.6l23.6-75.5c5.9-20.8-2.9-43.1-21.6-54.4L299.3 298l31.3-78.3 20.3 41.4c8 16.3 24.9 26.9 43.1 26.9h33.3l-25.2 176z\"],\n    \"skull\": [512, 512, [], \"f54c\", \"M256 0C114.6 0 0 100.3 0 224c0 70.1 36.9 132.6 94.5 173.7 9.6 6.9 15.2 18.1 13.5 29.9l-9.4 66.2c-1.4 9.6 6 18.2 15.7 18.2H192v-56c0-4.4 3.6-8 8-8h16c4.4 0 8 3.6 8 8v56h64v-56c0-4.4 3.6-8 8-8h16c4.4 0 8 3.6 8 8v56h77.7c9.7 0 17.1-8.6 15.7-18.2l-9.4-66.2c-1.7-11.7 3.8-23 13.5-29.9C475.1 356.6 512 294.1 512 224 512 100.3 397.4 0 256 0zm-96 320c-35.3 0-64-28.7-64-64s28.7-64 64-64 64 28.7 64 64-28.7 64-64 64zm192 0c-35.3 0-64-28.7-64-64s28.7-64 64-64 64 28.7 64 64-28.7 64-64 64z\"],\n    \"skull-crossbones\": [448, 512, [], \"f714\", \"M439.15 453.06L297.17 384l141.99-69.06c7.9-3.95 11.11-13.56 7.15-21.46L432 264.85c-3.95-7.9-13.56-11.11-21.47-7.16L224 348.41 37.47 257.69c-7.9-3.95-17.51-.75-21.47 7.16L1.69 293.48c-3.95 7.9-.75 17.51 7.15 21.46L150.83 384 8.85 453.06c-7.9 3.95-11.11 13.56-7.15 21.47l14.31 28.63c3.95 7.9 13.56 11.11 21.47 7.15L224 419.59l186.53 90.72c7.9 3.95 17.51.75 21.47-7.15l14.31-28.63c3.95-7.91.74-17.52-7.16-21.47zM150 237.28l-5.48 25.87c-2.67 12.62 5.42 24.85 16.45 24.85h126.08c11.03 0 19.12-12.23 16.45-24.85l-5.5-25.87c41.78-22.41 70-62.75 70-109.28C368 57.31 303.53 0 224 0S80 57.31 80 128c0 46.53 28.22 86.87 70 109.28zM280 112c17.65 0 32 14.35 32 32s-14.35 32-32 32-32-14.35-32-32 14.35-32 32-32zm-112 0c17.65 0 32 14.35 32 32s-14.35 32-32 32-32-14.35-32-32 14.35-32 32-32z\"],\n    \"slash\": [640, 512, [], \"f715\", \"M594.53 508.63L6.18 53.9c-6.97-5.42-8.23-15.47-2.81-22.45L23.01 6.18C28.43-.8 38.49-2.06 45.47 3.37L633.82 458.1c6.97 5.42 8.23 15.47 2.81 22.45l-19.64 25.27c-5.42 6.98-15.48 8.23-22.46 2.81z\"],\n    \"sleigh\": [640, 512, [], \"f7cc\", \"M612.7 350.7l-9.3-7.4c-6.9-5.5-17-4.4-22.5 2.5l-10 12.5c-5.5 6.9-4.4 17 2.5 22.5l9.3 7.4c5.9 4.7 9.2 11.7 9.2 19.2 0 13.6-11 24.6-24.6 24.6H48c-8.8 0-16 7.2-16 16v16c0 8.8 7.2 16 16 16h516c39 0 73.7-29.3 75.9-68.3 1.4-23.8-8.7-46.3-27.2-61zM32 224c0 59.6 40.9 109.2 96 123.5V400h64v-48h192v48h64v-48c53 0 96-43 96-96v-96c17.7 0 32-14.3 32-32s-14.3-32-32-32h-96v64c0 35.3-28.7 64-64 64h-20.7c-65.8 0-125.9-37.2-155.3-96-29.4-58.8-89.6-96-155.3-96H32C14.3 32 0 46.3 0 64s14.3 32 32 32v128z\"],\n    \"sliders-h\": [512, 512, [], \"f1de\", \"M496 384H160v-16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v16H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h80v16c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-16h336c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm0-160h-80v-16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v16H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h336v16c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-16h80c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm0-160H288V48c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v16H16C7.2 64 0 71.2 0 80v32c0 8.8 7.2 16 16 16h208v16c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-16h208c8.8 0 16-7.2 16-16V80c0-8.8-7.2-16-16-16z\"],\n    \"smile\": [496, 512, [], \"f118\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm80 168c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm-160 0c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm194.8 170.2C334.3 380.4 292.5 400 248 400s-86.3-19.6-114.8-53.8c-13.6-16.3 11-36.7 24.6-20.5 22.4 26.9 55.2 42.2 90.2 42.2s67.8-15.4 90.2-42.2c13.4-16.2 38.1 4.2 24.6 20.5z\"],\n    \"smile-beam\": [496, 512, [], \"f5b8\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM112 223.4c3.3-42.1 32.2-71.4 56-71.4s52.7 29.3 56 71.4c.7 8.6-10.8 11.9-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.3 7.4-15.8 4-15.1-4.5zm250.8 122.8C334.3 380.4 292.5 400 248 400s-86.3-19.6-114.8-53.8c-13.5-16.3 11-36.7 24.6-20.5 22.4 26.9 55.2 42.2 90.2 42.2s67.8-15.4 90.2-42.2c13.6-16.2 38.1 4.3 24.6 20.5zm6.2-118.3l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.1 7.3-15.6 4-14.9-4.5 3.3-42.1 32.2-71.4 56-71.4s52.7 29.3 56 71.4c.6 8.6-11 11.9-15.1 4.5z\"],\n    \"smile-wink\": [496, 512, [], \"f4da\", \"M0 256c0 137 111 248 248 248s248-111 248-248S385 8 248 8 0 119 0 256zm200-48c0 17.7-14.3 32-32 32s-32-14.3-32-32 14.3-32 32-32 32 14.3 32 32zm158.5 16.5c-14.8-13.2-46.2-13.2-61 0L288 233c-8.3 7.4-21.6.4-19.8-10.8 4-25.2 34.2-42.1 59.9-42.1S384 197 388 222.2c1.7 11.1-11.4 18.3-19.8 10.8l-9.7-8.5zM157.8 325.8C180.2 352.7 213 368 248 368s67.8-15.4 90.2-42.2c13.6-16.2 38.1 4.2 24.6 20.5C334.3 380.4 292.5 400 248 400s-86.3-19.6-114.8-53.8c-13.5-16.3 11.2-36.7 24.6-20.4z\"],\n    \"smog\": [640, 512, [], \"f75f\", \"M624 368H80c-8.8 0-16 7.2-16 16v16c0 8.8 7.2 16 16 16h544c8.8 0 16-7.2 16-16v-16c0-8.8-7.2-16-16-16zm-480 96H16c-8.8 0-16 7.2-16 16v16c0 8.8 7.2 16 16 16h128c8.8 0 16-7.2 16-16v-16c0-8.8-7.2-16-16-16zm416 0H224c-8.8 0-16 7.2-16 16v16c0 8.8 7.2 16 16 16h336c8.8 0 16-7.2 16-16v-16c0-8.8-7.2-16-16-16zM144 288h156.1c22.5 19.7 51.6 32 83.9 32s61.3-12.3 83.9-32H528c61.9 0 112-50.1 112-112S589.9 64 528 64c-18 0-34.7 4.6-49.7 12.1C454 31 406.8 0 352 0c-41 0-77.8 17.3-104 44.8C221.8 17.3 185 0 144 0 64.5 0 0 64.5 0 144s64.5 144 144 144z\"],\n    \"smoking\": [640, 512, [], \"f48d\", \"M632 352h-48c-4.4 0-8 3.6-8 8v144c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V360c0-4.4-3.6-8-8-8zM553.3 87.1c-5.7-3.8-9.3-10-9.3-16.8V8c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v62.3c0 22 10.2 43.4 28.6 55.4 42.2 27.3 67.4 73.8 67.4 124V280c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-30.3c0-65.5-32.4-126.2-86.7-162.6zM432 352H48c-26.5 0-48 21.5-48 48v64c0 26.5 21.5 48 48 48h384c8.8 0 16-7.2 16-16V368c0-8.8-7.2-16-16-16zm-32 112H224v-64h176v64zm87.7-322.4C463.8 125 448 99.3 448 70.3V8c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v66.4c0 43.7 24.6 81.6 60.3 106.7 22.4 15.7 35.7 41.2 35.7 68.6V280c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-30.3c0-43.3-21-83.4-56.3-108.1zM536 352h-48c-4.4 0-8 3.6-8 8v144c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V360c0-4.4-3.6-8-8-8z\"],\n    \"smoking-ban\": [512, 512, [], \"f54d\", \"M96 304c0 8.8 7.2 16 16 16h117.5l-96-96H112c-8.8 0-16 7.2-16 16v64zM256 0C114.6 0 0 114.6 0 256s114.6 256 256 256 256-114.6 256-256S397.4 0 256 0zm0 448c-105.9 0-192-86.1-192-192 0-41.4 13.3-79.7 35.7-111.1l267.4 267.4C335.7 434.7 297.4 448 256 448zm45.2-192H384v32h-50.8l-32-32zm111.1 111.1L365.2 320H400c8.8 0 16-7.2 16-16v-64c0-8.8-7.2-16-16-16H269.2L144.9 99.7C176.3 77.3 214.6 64 256 64c105.9 0 192 86.1 192 192 0 41.4-13.3 79.7-35.7 111.1zM320.6 128c-15.6 0-28.6-11.2-31.4-25.9-.7-3.6-4-6.1-7.7-6.1h-16.2c-5 0-8.7 4.5-8 9.4 4.6 30.9 31.2 54.6 63.3 54.6 15.6 0 28.6 11.2 31.4 25.9.7 3.6 4 6.1 7.7 6.1h16.2c5 0 8.7-4.5 8-9.4-4.6-30.9-31.2-54.6-63.3-54.6z\"],\n    \"sms\": [512, 512, [], \"f7cd\", \"M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5c-2.2 2.3-2.8 5.7-1.5 8.7 1.3 3 4.1 4.8 7.3 4.8 66.3 0 116-31.8 140.6-51.4 32.7 12.3 69 19.4 107.4 19.4 141.4 0 256-93.1 256-208S397.4 32 256 32zM128.2 304H116c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h12.3c6 0 10.4-3.5 10.4-6.6 0-1.3-.8-2.7-2.1-3.8l-21.9-18.8c-8.5-7.2-13.3-17.5-13.3-28.1 0-21.3 19-38.6 42.4-38.6H156c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8h-12.3c-6 0-10.4 3.5-10.4 6.6 0 1.3.8 2.7 2.1 3.8l21.9 18.8c8.5 7.2 13.3 17.5 13.3 28.1.1 21.3-19 38.6-42.4 38.6zm191.8-8c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8v-68.2l-24.8 55.8c-2.9 5.9-11.4 5.9-14.3 0L224 227.8V296c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8V192c0-8.8 7.2-16 16-16h16c6.1 0 11.6 3.4 14.3 8.8l17.7 35.4 17.7-35.4c2.7-5.4 8.3-8.8 14.3-8.8h16c8.8 0 16 7.2 16 16v104zm48.3 8H356c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h12.3c6 0 10.4-3.5 10.4-6.6 0-1.3-.8-2.7-2.1-3.8l-21.9-18.8c-8.5-7.2-13.3-17.5-13.3-28.1 0-21.3 19-38.6 42.4-38.6H396c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8h-12.3c-6 0-10.4 3.5-10.4 6.6 0 1.3.8 2.7 2.1 3.8l21.9 18.8c8.5 7.2 13.3 17.5 13.3 28.1.1 21.3-18.9 38.6-42.3 38.6z\"],\n    \"snowboarding\": [512, 512, [], \"f7ce\", \"M432 96c26.5 0 48-21.5 48-48S458.5 0 432 0s-48 21.5-48 48 21.5 48 48 48zm28.8 153.6c5.8 4.3 12.5 6.4 19.2 6.4 9.7 0 19.3-4.4 25.6-12.8 10.6-14.1 7.8-34.2-6.4-44.8l-111.4-83.5c-13.8-10.3-29.1-18.4-45.4-23.8l-63.7-21.2-26.1-52.1C244.7 2 225.5-4.4 209.7 3.5c-15.8 7.9-22.2 27.1-14.3 42.9l29.1 58.1c5.7 11.4 15.6 19.9 27.7 24l16.4 5.5-41.2 20.6c-21.8 10.9-35.4 32.8-35.4 57.2v53.1l-74.1 24.7c-16.8 5.6-25.8 23.7-20.2 40.5 1.7 5.2 4.9 9.4 8.7 12.9l-38.7-14.1c-9.7-3.5-17.4-10.6-21.8-20-5.6-12-19.9-17.2-31.9-11.6s-17.2 19.9-11.6 31.9c9.8 21 27.1 36.9 48.9 44.8l364.8 132.7c9.7 3.5 19.7 5.3 29.7 5.3 12.5 0 24.9-2.7 36.5-8.2 12-5.6 17.2-19.9 11.6-31.9S474 454.7 462 460.3c-9.3 4.4-19.8 4.8-29.5 1.3l-90.8-33.1c8.7-4.1 15.6-11.8 17.8-21.9l21.9-102c3.9-18.2-3.2-37.2-18.1-48.4l-52-39 66-30.5 83.5 62.9zm-144.4 51.7l-19.7 92c-1.5 7.1-.1 13.9 2.8 20l-169.4-61.6c2.7-.2 5.4-.4 8-1.3l85-28.4c19.6-6.5 32.8-24.8 32.8-45.5V256l60.5 45.3z\"],\n    \"snowflake\": [448, 512, [], \"f2dc\", \"M440.3 345.2l-33.8-19.5 26-7c8.2-2.2 13.1-10.7 10.9-18.9l-4-14.9c-2.2-8.2-10.7-13.1-18.9-10.9l-70.8 19-63.9-37 63.8-36.9 70.8 19c8.2 2.2 16.7-2.7 18.9-10.9l4-14.9c2.2-8.2-2.7-16.7-10.9-18.9l-26-7 33.8-19.5c7.4-4.3 9.9-13.7 5.7-21.1L430.4 119c-4.3-7.4-13.7-9.9-21.1-5.7l-33.8 19.5 7-26c2.2-8.2-2.7-16.7-10.9-18.9l-14.9-4c-8.2-2.2-16.7 2.7-18.9 10.9l-19 70.8-62.8 36.2v-77.5l53.7-53.7c6.2-6.2 6.2-16.4 0-22.6l-11.3-11.3c-6.2-6.2-16.4-6.2-22.6 0L256 56.4V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v40.4l-19.7-19.7c-6.2-6.2-16.4-6.2-22.6 0L138.3 48c-6.3 6.2-6.3 16.4 0 22.6l53.7 53.7v77.5l-62.8-36.2-19-70.8c-2.2-8.2-10.7-13.1-18.9-10.9l-14.9 4c-8.2 2.2-13.1 10.7-10.9 18.9l7 26-33.8-19.5c-7.4-4.3-16.8-1.7-21.1 5.7L2.1 145.7c-4.3 7.4-1.7 16.8 5.7 21.1l33.8 19.5-26 7c-8.3 2.2-13.2 10.7-11 19l4 14.9c2.2 8.2 10.7 13.1 18.9 10.9l70.8-19 63.8 36.9-63.8 36.9-70.8-19c-8.2-2.2-16.7 2.7-18.9 10.9l-4 14.9c-2.2 8.2 2.7 16.7 10.9 18.9l26 7-33.8 19.6c-7.4 4.3-9.9 13.7-5.7 21.1l15.5 26.8c4.3 7.4 13.7 9.9 21.1 5.7l33.8-19.5-7 26c-2.2 8.2 2.7 16.7 10.9 18.9l14.9 4c8.2 2.2 16.7-2.7 18.9-10.9l19-70.8 62.8-36.2v77.5l-53.7 53.7c-6.3 6.2-6.3 16.4 0 22.6l11.3 11.3c6.2 6.2 16.4 6.2 22.6 0l19.7-19.7V496c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-40.4l19.7 19.7c6.2 6.2 16.4 6.2 22.6 0l11.3-11.3c6.2-6.2 6.2-16.4 0-22.6L256 387.7v-77.5l62.8 36.2 19 70.8c2.2 8.2 10.7 13.1 18.9 10.9l14.9-4c8.2-2.2 13.1-10.7 10.9-18.9l-7-26 33.8 19.5c7.4 4.3 16.8 1.7 21.1-5.7l15.5-26.8c4.3-7.3 1.8-16.8-5.6-21z\"],\n    \"snowman\": [512, 512, [], \"f7d0\", \"M510.9 152.3l-5.9-14.5c-3.3-8-12.6-11.9-20.8-8.7L456 140.6v-29c0-8.6-7.2-15.6-16-15.6h-16c-8.8 0-16 7-16 15.6v46.9c0 .5.3 1 .3 1.5l-56.4 23c-5.9-10-13.3-18.9-22-26.6 13.6-16.6 22-37.4 22-60.5 0-53-43-96-96-96s-96 43-96 96c0 23.1 8.5 43.9 22 60.5-8.7 7.7-16 16.6-22 26.6l-56.4-23c.1-.5.3-1 .3-1.5v-46.9C104 103 96.8 96 88 96H72c-8.8 0-16 7-16 15.6v29l-28.1-11.5c-8.2-3.2-17.5.7-20.8 8.7l-5.9 14.5c-3.3 8 .7 17.1 8.9 20.3l135.2 55.2c-.4 4-1.2 8-1.2 12.2 0 10.1 1.7 19.6 4.2 28.9C120.9 296.4 104 334.2 104 376c0 54 28.4 100.9 70.8 127.8 9.3 5.9 20.3 8.2 31.3 8.2h99.2c13.3 0 26.3-4.1 37.2-11.7 46.5-32.3 74.4-89.4 62.9-152.6-5.5-30.2-20.5-57.6-41.6-79 2.5-9.2 4.2-18.7 4.2-28.7 0-4.2-.8-8.1-1.2-12.2L502 172.6c8.1-3.1 12.1-12.2 8.9-20.3zM224 96c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm32 272c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm0-64c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm0-64c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm0-88s-16-23.2-16-32 7.2-16 16-16 16 7.2 16 16-16 32-16 32zm32-56c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16z\"],\n    \"snowplow\": [640, 512, [], \"f7d2\", \"M120 376c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zm80 0c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zm80 0c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zm80 0c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zm238.6 49.4c-14.5-14.5-22.6-34.1-22.6-54.6V269.2c0-20.5 8.1-40.1 22.6-54.6l36.7-36.7c6.2-6.2 6.2-16.4 0-22.6l-22.6-22.6c-6.2-6.2-16.4-6.2-22.6 0l-36.7 36.7c-26.5 26.5-41.4 62.4-41.4 99.9V288h-64v-50.9c0-8.7-1.8-17.2-5.2-25.2L364.5 29.1C356.9 11.4 339.6 0 320.3 0H176c-26.5 0-48 21.5-48 48v112h-16c-26.5 0-48 21.5-48 48v91.2C26.3 317.2 0 355.4 0 400c0 61.9 50.1 112 112 112h256c61.9 0 112-50.1 112-112 0-17.3-4.2-33.4-11.2-48H512v18.7c0 37.5 14.9 73.4 41.4 99.9l36.7 36.7c6.2 6.2 16.4 6.2 22.6 0l22.6-22.6c6.2-6.2 6.2-16.4 0-22.6l-36.7-36.7zM192 64h117.8l68.6 160H256l-64-64V64zm176 384H112c-26.5 0-48-21.5-48-48s21.5-48 48-48h256c26.5 0 48 21.5 48 48s-21.5 48-48 48z\"],\n    \"soap\": [512, 512, [], \"e06e\", \"M416,192a95.42,95.42,0,0,1-30.94,70.21A95.8,95.8,0,0,1,352,448H160a96,96,0,0,1,0-192h88.91A95.3,95.3,0,0,1,224,192H96A96,96,0,0,0,0,288V416a96,96,0,0,0,96,96H416a96,96,0,0,0,96-96V288A96,96,0,0,0,416,192Zm-96,64a64,64,0,1,0-64-64A64,64,0,0,0,320,256ZM208,96a48,48,0,1,0-48-48A48,48,0,0,0,208,96ZM384,64a32,32,0,1,0-32-32A32,32,0,0,0,384,64ZM160,288a64,64,0,0,0,0,128H352a64,64,0,0,0,0-128Z\"],\n    \"socks\": [512, 512, [], \"f696\", \"M214.66 311.01L288 256V96H128v176l-86.65 64.61c-39.4 29.56-53.86 84.42-29.21 127.06C30.39 495.25 63.27 512 96.08 512c20.03 0 40.25-6.25 57.52-19.2l21.86-16.39c-29.85-55.38-13.54-125.84 39.2-165.4zM288 32c0-11.05 3.07-21.3 8.02-30.38C293.4.92 290.85 0 288 0H160c-17.67 0-32 14.33-32 32v32h160V32zM480 0H352c-17.67 0-32 14.33-32 32v32h192V32c0-17.67-14.33-32-32-32zM320 272l-86.13 64.61c-39.4 29.56-53.86 84.42-29.21 127.06 18.25 31.58 50.61 48.33 83.42 48.33 20.03 0 40.25-6.25 57.52-19.2l115.2-86.4A127.997 127.997 0 0 0 512 304V96H320v176z\"],\n    \"solar-panel\": [640, 512, [], \"f5ba\", \"M431.98 448.01l-47.97.05V416h-128v32.21l-47.98.05c-8.82.01-15.97 7.16-15.98 15.99l-.05 31.73c-.01 8.85 7.17 16.03 16.02 16.02l223.96-.26c8.82-.01 15.97-7.16 15.98-15.98l.04-31.73c.01-8.85-7.17-16.03-16.02-16.02zM585.2 26.74C582.58 11.31 568.99 0 553.06 0H86.93C71 0 57.41 11.31 54.79 26.74-3.32 369.16.04 348.08.03 352c-.03 17.32 14.29 32 32.6 32h574.74c18.23 0 32.51-14.56 32.59-31.79.02-4.08 3.35 16.95-54.76-325.47zM259.83 64h120.33l9.77 96H250.06l9.77-96zm-75.17 256H71.09L90.1 208h105.97l-11.41 112zm16.29-160H98.24l16.29-96h96.19l-9.77 96zm32.82 160l11.4-112h149.65l11.4 112H233.77zm195.5-256h96.19l16.29 96H439.04l-9.77-96zm26.06 256l-11.4-112H549.9l19.01 112H455.33z\"],\n    \"sort\": [320, 512, [], \"f0dc\", \"M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z\"],\n    \"sort-alpha-down\": [448, 512, [], \"f15d\", \"M176 352h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.36 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352zm240-64H288a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h56l-61.26 70.45A32 32 0 0 0 272 446.37V464a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-56l61.26-70.45A32 32 0 0 0 432 321.63V304a16 16 0 0 0-16-16zm31.06-85.38l-59.27-160A16 16 0 0 0 372.72 32h-41.44a16 16 0 0 0-15.07 10.62l-59.27 160A16 16 0 0 0 272 224h24.83a16 16 0 0 0 15.23-11.08l4.42-12.92h71l4.41 12.92A16 16 0 0 0 407.16 224H432a16 16 0 0 0 15.06-21.38zM335.61 144L352 96l16.39 48z\"],\n    \"sort-alpha-down-alt\": [448, 512, [], \"f881\", \"M176 352h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.36 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352zm112-128h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-56l61.26-70.45A32 32 0 0 0 432 65.63V48a16 16 0 0 0-16-16H288a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h56l-61.26 70.45A32 32 0 0 0 272 190.37V208a16 16 0 0 0 16 16zm159.06 234.62l-59.27-160A16 16 0 0 0 372.72 288h-41.44a16 16 0 0 0-15.07 10.62l-59.27 160A16 16 0 0 0 272 480h24.83a16 16 0 0 0 15.23-11.08l4.42-12.92h71l4.41 12.92A16 16 0 0 0 407.16 480H432a16 16 0 0 0 15.06-21.38zM335.61 400L352 352l16.39 48z\"],\n    \"sort-alpha-up\": [448, 512, [], \"f15e\", \"M16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.38-17.24 11.31-27.31l-80-96a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.78 160 16 160zm400 128H288a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h56l-61.26 70.45A32 32 0 0 0 272 446.37V464a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-56l61.26-70.45A32 32 0 0 0 432 321.63V304a16 16 0 0 0-16-16zm31.06-85.38l-59.27-160A16 16 0 0 0 372.72 32h-41.44a16 16 0 0 0-15.07 10.62l-59.27 160A16 16 0 0 0 272 224h24.83a16 16 0 0 0 15.23-11.08l4.42-12.92h71l4.41 12.92A16 16 0 0 0 407.16 224H432a16 16 0 0 0 15.06-21.38zM335.61 144L352 96l16.39 48z\"],\n    \"sort-alpha-up-alt\": [448, 512, [], \"f882\", \"M16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.38-17.24 11.31-27.31l-80-96a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.78 160 16 160zm272 64h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-56l61.26-70.45A32 32 0 0 0 432 65.63V48a16 16 0 0 0-16-16H288a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h56l-61.26 70.45A32 32 0 0 0 272 190.37V208a16 16 0 0 0 16 16zm159.06 234.62l-59.27-160A16 16 0 0 0 372.72 288h-41.44a16 16 0 0 0-15.07 10.62l-59.27 160A16 16 0 0 0 272 480h24.83a16 16 0 0 0 15.23-11.08l4.42-12.92h71l4.41 12.92A16 16 0 0 0 407.16 480H432a16 16 0 0 0 15.06-21.38zM335.61 400L352 352l16.39 48z\"],\n    \"sort-amount-down\": [512, 512, [], \"f160\", \"M304 416h-64a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-128-64h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.37 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352zm256-192H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h192a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-64 128H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM496 32H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h256a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"],\n    \"sort-amount-down-alt\": [512, 512, [], \"f884\", \"M240 96h64a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16h-64a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm0 128h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm256 192H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h256a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-256-64h192a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm-64 0h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.37 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352z\"],\n    \"sort-amount-up\": [512, 512, [], \"f161\", \"M304 416h-64a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.38-17.24 11.31-27.31l-80-96a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.77 160 16 160zm416 0H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h192a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-64 128H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM496 32H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h256a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"],\n    \"sort-amount-up-alt\": [512, 512, [], \"f885\", \"M240 96h64a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16h-64a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm0 128h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm256 192H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h256a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-256-64h192a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zM16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.39-17.24 11.31-27.31l-80-96a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.78 160 16 160z\"],\n    \"sort-down\": [320, 512, [], \"f0dd\", \"M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41z\"],\n    \"sort-numeric-down\": [448, 512, [], \"f162\", \"M304 96h16v64h-16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-16V48a16 16 0 0 0-16-16h-48a16 16 0 0 0-14.29 8.83l-16 32A16 16 0 0 0 304 96zm26.15 162.91a79 79 0 0 0-55 54.17c-14.25 51.05 21.21 97.77 68.85 102.53a84.07 84.07 0 0 1-20.85 12.91c-7.57 3.4-10.8 12.47-8.18 20.34l9.9 20c2.87 8.63 12.53 13.49 20.9 9.91 58-24.76 86.25-61.61 86.25-132V336c-.02-51.21-48.4-91.34-101.85-77.09zM352 356a20 20 0 1 1 20-20 20 20 0 0 1-20 20zm-176-4h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.36 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352z\"],\n    \"sort-numeric-down-alt\": [448, 512, [], \"f886\", \"M176 352h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.36 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352zm224 64h-16V304a16 16 0 0 0-16-16h-48a16 16 0 0 0-14.29 8.83l-16 32A16 16 0 0 0 304 352h16v64h-16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM330.17 34.91a79 79 0 0 0-55 54.17c-14.27 51.05 21.19 97.77 68.83 102.53a84.07 84.07 0 0 1-20.85 12.91c-7.57 3.4-10.8 12.47-8.18 20.34l9.9 20c2.87 8.63 12.53 13.49 20.9 9.91 58-24.77 86.25-61.61 86.25-132V112c-.02-51.21-48.4-91.34-101.85-77.09zM352 132a20 20 0 1 1 20-20 20 20 0 0 1-20 20z\"],\n    \"sort-numeric-up\": [448, 512, [], \"f163\", \"M330.17 258.91a79 79 0 0 0-55 54.17c-14.27 51.05 21.19 97.77 68.83 102.53a84.07 84.07 0 0 1-20.85 12.91c-7.57 3.4-10.8 12.47-8.18 20.34l9.9 20c2.87 8.63 12.53 13.49 20.9 9.91 58-24.76 86.25-61.61 86.25-132V336c-.02-51.21-48.4-91.34-101.85-77.09zM352 356a20 20 0 1 1 20-20 20 20 0 0 1-20 20zM304 96h16v64h-16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-16V48a16 16 0 0 0-16-16h-48a16 16 0 0 0-14.29 8.83l-16 32A16 16 0 0 0 304 96zM107.31 36.69a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.78 160 16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.38-17.24 11.31-27.31z\"],\n    \"sort-numeric-up-alt\": [448, 512, [], \"f887\", \"M107.31 36.69a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.78 160 16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.38-17.24 11.31-27.31zM400 416h-16V304a16 16 0 0 0-16-16h-48a16 16 0 0 0-14.29 8.83l-16 32A16 16 0 0 0 304 352h16v64h-16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM330.17 34.91a79 79 0 0 0-55 54.17c-14.27 51.05 21.19 97.77 68.83 102.53a84.07 84.07 0 0 1-20.85 12.91c-7.57 3.4-10.8 12.47-8.18 20.34l9.9 20c2.87 8.63 12.53 13.49 20.9 9.91 58-24.77 86.25-61.61 86.25-132V112c-.02-51.21-48.4-91.34-101.85-77.09zM352 132a20 20 0 1 1 20-20 20 20 0 0 1-20 20z\"],\n    \"sort-up\": [320, 512, [], \"f0de\", \"M279 224H41c-21.4 0-32.1-25.9-17-41L143 64c9.4-9.4 24.6-9.4 33.9 0l119 119c15.2 15.1 4.5 41-16.9 41z\"],\n    \"spa\": [576, 512, [], \"f5bb\", \"M568.25 192c-29.04.13-135.01 6.16-213.84 83-33.12 29.63-53.36 63.3-66.41 94.86-13.05-31.56-33.29-65.23-66.41-94.86-78.83-76.84-184.8-82.87-213.84-83-4.41-.02-7.79 3.4-7.75 7.82.23 27.92 7.14 126.14 88.77 199.3C172.79 480.94 256 480 288 480s115.19.95 199.23-80.88c81.64-73.17 88.54-171.38 88.77-199.3.04-4.42-3.34-7.84-7.75-7.82zM287.98 302.6c12.82-18.85 27.6-35.78 44.09-50.52 19.09-18.61 39.58-33.3 60.26-45.18-16.44-70.5-51.72-133.05-96.73-172.22-4.11-3.58-11.02-3.58-15.14 0-44.99 39.14-80.27 101.63-96.74 172.07 20.37 11.7 40.5 26.14 59.22 44.39a282.768 282.768 0 0 1 45.04 51.46z\"],\n    \"space-shuttle\": [640, 512, [], \"f197\", \"M592.604 208.244C559.735 192.836 515.777 184 472 184H186.327c-4.952-6.555-10.585-11.978-16.72-16H376C229.157 137.747 219.403 32 96.003 32H96v128H80V32c-26.51 0-48 28.654-48 64v64c-23.197 0-32 10.032-32 24v40c0 13.983 8.819 24 32 24v16c-23.197 0-32 10.032-32 24v40c0 13.983 8.819 24 32 24v64c0 35.346 21.49 64 48 64V352h16v128h.003c123.4 0 133.154-105.747 279.997-136H169.606c6.135-4.022 11.768-9.445 16.72-16H472c43.777 0 87.735-8.836 120.604-24.244C622.282 289.845 640 271.992 640 256s-17.718-33.845-47.396-47.756zM488 296a8 8 0 0 1-8-8v-64a8 8 0 0 1 8-8c31.909 0 31.942 80 0 80z\"],\n    \"spell-check\": [576, 512, [], \"f891\", \"M272 256h91.36c43.2 0 82-32.2 84.51-75.34a79.82 79.82 0 0 0-25.26-63.07 79.81 79.81 0 0 0 9.06-44.91C427.9 30.57 389.3 0 347 0h-75a16 16 0 0 0-16 16v224a16 16 0 0 0 16 16zm40-200h40a24 24 0 0 1 0 48h-40zm0 96h56a24 24 0 0 1 0 48h-56zM155.12 22.25A32 32 0 0 0 124.64 0H99.36a32 32 0 0 0-30.48 22.25L.59 235.73A16 16 0 0 0 16 256h24.93a16 16 0 0 0 15.42-11.73L68.29 208h87.42l11.94 36.27A16 16 0 0 0 183.07 256H208a16 16 0 0 0 15.42-20.27zM89.37 144L112 75.3l22.63 68.7zm482 132.48l-45.21-45.3a15.88 15.88 0 0 0-22.59 0l-151.5 151.5-55.41-55.5a15.88 15.88 0 0 0-22.59 0l-45.3 45.3a16 16 0 0 0 0 22.59l112 112.21a15.89 15.89 0 0 0 22.6 0l208-208.21a16 16 0 0 0-.02-22.59z\"],\n    \"spider\": [576, 512, [], \"f717\", \"M151.17 167.35L177.1 176h4.67l5.22-26.12c.72-3.58 1.8-7.58 3.21-11.79l-20.29-40.58 23.8-71.39c2.79-8.38-1.73-17.44-10.12-20.24L168.42.82c-8.38-2.8-17.45 1.73-20.24 10.12l-25.89 77.68a32.04 32.04 0 0 0 1.73 24.43l27.15 54.3zm422.14 182.03l-52.75-79.12a32.002 32.002 0 0 0-26.62-14.25H416l68.99-24.36a32.03 32.03 0 0 0 16.51-12.61l53.6-80.41c4.9-7.35 2.91-17.29-4.44-22.19l-13.31-8.88c-7.35-4.9-17.29-2.91-22.19 4.44l-50.56 75.83L404.1 208H368l-10.37-51.85C355.44 145.18 340.26 96 288 96c-52.26 0-67.44 49.18-69.63 60.15L208 208h-36.1l-60.49-20.17L60.84 112c-4.9-7.35-14.83-9.34-22.19-4.44l-13.31 8.88c-7.35 4.9-9.34 14.83-4.44 22.19l53.6 80.41a32.03 32.03 0 0 0 16.51 12.61L160 256H82.06a32.02 32.02 0 0 0-26.63 14.25L2.69 349.38c-4.9 7.35-2.92 17.29 4.44 22.19l13.31 8.88c7.35 4.9 17.29 2.91 22.19-4.44l48-72h47.06l-60.83 97.33A31.988 31.988 0 0 0 72 418.3V496c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-73.11l74.08-118.53c-1.01 14.05-2.08 28.11-2.08 42.21C192 399.64 232.76 448 288 448s96-48.36 96-101.43c0-14.1-1.08-28.16-2.08-42.21L456 422.89V496c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-77.71c0-6-1.69-11.88-4.86-16.96L438.31 304h47.06l48 72c4.9 7.35 14.84 9.34 22.19 4.44l13.31-8.88c7.36-4.9 9.34-14.83 4.44-22.18zM406.09 97.51l-20.29 40.58c1.41 4.21 2.49 8.21 3.21 11.79l5.22 26.12h4.67l25.93-8.65 27.15-54.3a31.995 31.995 0 0 0 1.73-24.43l-25.89-77.68C425.03 2.56 415.96-1.98 407.58.82l-15.17 5.06c-8.38 2.8-12.91 11.86-10.12 20.24l23.8 71.39z\"],\n    \"spinner\": [512, 512, [], \"f110\", \"M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z\"],\n    \"splotch\": [512, 512, [], \"f5bc\", \"M472.29 195.89l-67.06-22.95c-19.28-6.6-33.54-20.92-38.14-38.3L351.1 74.19c-11.58-43.77-76.57-57.13-109.98-22.62l-46.14 47.67c-13.26 13.71-33.54 20.93-54.2 19.31l-71.88-5.62c-52.05-4.07-86.93 44.88-59.03 82.83l38.54 52.42c11.08 15.07 12.82 33.86 4.64 50.24L24.62 355.4c-20.59 41.25 22.84 84.87 73.49 73.81l69.96-15.28c20.11-4.39 41.45 0 57.07 11.73l54.32 40.83c39.32 29.56 101.04 7.57 104.45-37.22l4.7-61.86c1.35-17.79 12.8-33.86 30.63-42.99l62-31.74c44.88-22.96 39.59-80.17-8.95-96.79z\"],\n    \"spray-can\": [512, 512, [], \"f5bd\", \"M224 32c0-17.67-14.33-32-32-32h-64c-17.67 0-32 14.33-32 32v96h128V32zm256 96c-17.67 0-32 14.33-32 32s14.33 32 32 32 32-14.33 32-32-14.33-32-32-32zm-256 32H96c-53.02 0-96 42.98-96 96v224c0 17.67 14.33 32 32 32h256c17.67 0 32-14.33 32-32V256c0-53.02-42.98-96-96-96zm-64 256c-44.18 0-80-35.82-80-80s35.82-80 80-80 80 35.82 80 80-35.82 80-80 80zM480 96c17.67 0 32-14.33 32-32s-14.33-32-32-32-32 14.33-32 32 14.33 32 32 32zm-96 32c-17.67 0-32 14.33-32 32s14.33 32 32 32 32-14.33 32-32-14.33-32-32-32zm-96-96c-17.67 0-32 14.33-32 32s14.33 32 32 32 32-14.33 32-32-14.33-32-32-32zm96 0c-17.67 0-32 14.33-32 32s14.33 32 32 32 32-14.33 32-32-14.33-32-32-32zm96 192c-17.67 0-32 14.33-32 32s14.33 32 32 32 32-14.33 32-32-14.33-32-32-32z\"],\n    \"square\": [448, 512, [], \"f0c8\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z\"],\n    \"square-full\": [512, 512, [], \"f45c\", \"M512 512H0V0h512v512z\"],\n    \"square-root-alt\": [576, 512, [], \"f698\", \"M571.31 251.31l-22.62-22.62c-6.25-6.25-16.38-6.25-22.63 0L480 274.75l-46.06-46.06c-6.25-6.25-16.38-6.25-22.63 0l-22.62 22.62c-6.25 6.25-6.25 16.38 0 22.63L434.75 320l-46.06 46.06c-6.25 6.25-6.25 16.38 0 22.63l22.62 22.62c6.25 6.25 16.38 6.25 22.63 0L480 365.25l46.06 46.06c6.25 6.25 16.38 6.25 22.63 0l22.62-22.62c6.25-6.25 6.25-16.38 0-22.63L525.25 320l46.06-46.06c6.25-6.25 6.25-16.38 0-22.63zM552 0H307.65c-14.54 0-27.26 9.8-30.95 23.87l-84.79 322.8-58.41-106.1A32.008 32.008 0 0 0 105.47 224H24c-13.25 0-24 10.74-24 24v48c0 13.25 10.75 24 24 24h43.62l88.88 163.73C168.99 503.5 186.3 512 204.94 512c17.27 0 44.44-9 54.28-41.48L357.03 96H552c13.25 0 24-10.75 24-24V24c0-13.26-10.75-24-24-24z\"],\n    \"stamp\": [512, 512, [], \"f5bf\", \"M32 512h448v-64H32v64zm384-256h-66.56c-16.26 0-29.44-13.18-29.44-29.44v-9.46c0-27.37 8.88-53.41 21.46-77.72 9.11-17.61 12.9-38.39 9.05-60.42-6.77-38.78-38.47-70.7-77.26-77.45C212.62-9.04 160 37.33 160 96c0 14.16 3.12 27.54 8.69 39.58C182.02 164.43 192 194.7 192 226.49v.07c0 16.26-13.18 29.44-29.44 29.44H96c-53.02 0-96 42.98-96 96v32c0 17.67 14.33 32 32 32h448c17.67 0 32-14.33 32-32v-32c0-53.02-42.98-96-96-96z\"],\n    \"star\": [576, 512, [], \"f005\", \"M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\"],\n    \"star-and-crescent\": [512, 512, [], \"f699\", \"M340.47 466.36c-1.45 0-6.89.46-9.18.46-116.25 0-210.82-94.57-210.82-210.82S215.04 45.18 331.29 45.18c2.32 0 7.7.46 9.18.46 7.13 0 13.33-5.03 14.75-12.07 1.46-7.25-2.55-14.49-9.47-17.09C316.58 5.54 286.39 0 256 0 114.84 0 0 114.84 0 256s114.84 256 256 256c30.23 0 60.28-5.49 89.32-16.32 5.96-2.02 10.28-7.64 10.28-14.26 0-8.09-6.39-15.06-15.13-15.06zm162.99-252.5l-76.38-11.1-34.16-69.21c-1.83-3.7-5.38-5.55-8.93-5.55s-7.1 1.85-8.93 5.55l-34.16 69.21-76.38 11.1c-8.17 1.18-11.43 11.22-5.52 16.99l55.27 53.87-13.05 76.07c-1.11 6.44 4.01 11.66 9.81 11.66 1.53 0 3.11-.36 4.64-1.17L384 335.37l68.31 35.91c1.53.8 3.11 1.17 4.64 1.17 5.8 0 10.92-5.23 9.81-11.66l-13.05-76.07 55.27-53.87c5.91-5.77 2.65-15.81-5.52-16.99z\"],\n    \"star-half\": [576, 512, [], \"f089\", \"M288 0c-11.4 0-22.8 5.9-28.7 17.8L194 150.2 47.9 171.4c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.1 23 46 46.4 33.7L288 439.6V0z\"],\n    \"star-half-alt\": [536, 512, [], \"f5c0\", \"M508.55 171.51L362.18 150.2 296.77 17.81C290.89 5.98 279.42 0 267.95 0c-11.4 0-22.79 5.9-28.69 17.81l-65.43 132.38-146.38 21.29c-26.25 3.8-36.77 36.09-17.74 54.59l105.89 103-25.06 145.48C86.98 495.33 103.57 512 122.15 512c4.93 0 10-1.17 14.87-3.75l130.95-68.68 130.94 68.7c4.86 2.55 9.92 3.71 14.83 3.71 18.6 0 35.22-16.61 31.66-37.4l-25.03-145.49 105.91-102.98c19.04-18.5 8.52-50.8-17.73-54.6zm-121.74 123.2l-18.12 17.62 4.28 24.88 19.52 113.45-102.13-53.59-22.38-11.74.03-317.19 51.03 103.29 11.18 22.63 25.01 3.64 114.23 16.63-82.65 80.38z\"],\n    \"star-of-david\": [464, 512, [], \"f69a\", \"M405.68 256l53.21-89.39C473.3 142.4 455.48 112 426.88 112H319.96l-55.95-93.98C256.86 6.01 244.43 0 232 0s-24.86 6.01-32.01 18.02L144.04 112H37.11c-28.6 0-46.42 30.4-32.01 54.61L58.32 256 5.1 345.39C-9.31 369.6 8.51 400 37.11 400h106.93l55.95 93.98C207.14 505.99 219.57 512 232 512s24.86-6.01 32.01-18.02L319.96 400h106.93c28.6 0 46.42-30.4 32.01-54.61L405.68 256zm-12.78-88l-19.8 33.26L353.3 168h39.6zm-52.39 88l-52.39 88H175.88l-52.39-88 52.38-88h112.25l52.39 88zM232 73.72L254.79 112h-45.57L232 73.72zM71.1 168h39.6l-19.8 33.26L71.1 168zm0 176l19.8-33.26L110.7 344H71.1zM232 438.28L209.21 400h45.57L232 438.28zM353.29 344l19.8-33.26L392.9 344h-39.61z\"],\n    \"star-of-life\": [480, 512, [], \"f621\", \"M471.99 334.43L336.06 256l135.93-78.43c7.66-4.42 10.28-14.2 5.86-21.86l-32.02-55.43c-4.42-7.65-14.21-10.28-21.87-5.86l-135.93 78.43V16c0-8.84-7.17-16-16.01-16h-64.04c-8.84 0-16.01 7.16-16.01 16v156.86L56.04 94.43c-7.66-4.42-17.45-1.79-21.87 5.86L2.15 155.71c-4.42 7.65-1.8 17.44 5.86 21.86L143.94 256 8.01 334.43c-7.66 4.42-10.28 14.21-5.86 21.86l32.02 55.43c4.42 7.65 14.21 10.27 21.87 5.86l135.93-78.43V496c0 8.84 7.17 16 16.01 16h64.04c8.84 0 16.01-7.16 16.01-16V339.14l135.93 78.43c7.66 4.42 17.45 1.8 21.87-5.86l32.02-55.43c4.42-7.65 1.8-17.43-5.86-21.85z\"],\n    \"step-backward\": [448, 512, [], \"f048\", \"M64 468V44c0-6.6 5.4-12 12-12h48c6.6 0 12 5.4 12 12v176.4l195.5-181C352.1 22.3 384 36.6 384 64v384c0 27.4-31.9 41.7-52.5 24.6L136 292.7V468c0 6.6-5.4 12-12 12H76c-6.6 0-12-5.4-12-12z\"],\n    \"step-forward\": [448, 512, [], \"f051\", \"M384 44v424c0 6.6-5.4 12-12 12h-48c-6.6 0-12-5.4-12-12V291.6l-195.5 181C95.9 489.7 64 475.4 64 448V64c0-27.4 31.9-41.7 52.5-24.6L312 219.3V44c0-6.6 5.4-12 12-12h48c6.6 0 12 5.4 12 12z\"],\n    \"stethoscope\": [512, 512, [], \"f0f1\", \"M447.1 112c-34.2.5-62.3 28.4-63 62.6-.5 24.3 12.5 45.6 32 56.8V344c0 57.3-50.2 104-112 104-60 0-109.2-44.1-111.9-99.2C265 333.8 320 269.2 320 192V36.6c0-11.4-8.1-21.3-19.3-23.5L237.8.5c-13-2.6-25.6 5.8-28.2 18.8L206.4 35c-2.6 13 5.8 25.6 18.8 28.2l30.7 6.1v121.4c0 52.9-42.2 96.7-95.1 97.2-53.4.5-96.9-42.7-96.9-96V69.4l30.7-6.1c13-2.6 21.4-15.2 18.8-28.2l-3.1-15.7C107.7 6.4 95.1-2 82.1.6L19.3 13C8.1 15.3 0 25.1 0 36.6V192c0 77.3 55.1 142 128.1 156.8C130.7 439.2 208.6 512 304 512c97 0 176-75.4 176-168V231.4c19.1-11.1 32-31.7 32-55.4 0-35.7-29.2-64.5-64.9-64zm.9 80c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16z\"],\n    \"sticky-note\": [448, 512, [], \"f249\", \"M312 320h136V56c0-13.3-10.7-24-24-24H24C10.7 32 0 42.7 0 56v400c0 13.3 10.7 24 24 24h264V344c0-13.2 10.8-24 24-24zm129 55l-98 98c-4.5 4.5-10.6 7-17 7h-6V352h128v6.1c0 6.3-2.5 12.4-7 16.9z\"],\n    \"stop\": [448, 512, [], \"f04d\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z\"],\n    \"stop-circle\": [512, 512, [], \"f28d\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm96 328c0 8.8-7.2 16-16 16H176c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h160c8.8 0 16 7.2 16 16v160z\"],\n    \"stopwatch\": [448, 512, [], \"f2f2\", \"M432 304c0 114.9-93.1 208-208 208S16 418.9 16 304c0-104 76.3-190.2 176-205.5V64h-28c-6.6 0-12-5.4-12-12V12c0-6.6 5.4-12 12-12h120c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-28v34.5c37.5 5.8 71.7 21.6 99.7 44.6l27.5-27.5c4.7-4.7 12.3-4.7 17 0l28.3 28.3c4.7 4.7 4.7 12.3 0 17l-29.4 29.4-.6.6C419.7 223.3 432 262.2 432 304zm-176 36V188.5c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12V340c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"],\n    \"stopwatch-20\": [448, 512, [], \"e06f\", \"M398.5,190.91l.59-.61,26.59-26.58a16,16,0,0,0,0-22.63L403,118.41a16,16,0,0,0-22.63,0l-24.68,24.68A206.68,206.68,0,0,0,256,98.5V64h32a16,16,0,0,0,16-16V16A16,16,0,0,0,288,0H160a16.05,16.05,0,0,0-16,16V48a16.05,16.05,0,0,0,16,16h32V98.5A207.92,207.92,0,0,0,16.09,297.57C12.64,411.5,106.76,510.22,220.72,512,337.13,513.77,432,420,432,304A206,206,0,0,0,398.5,190.91ZM204.37,377.55a8.2,8.2,0,0,1,8.32,8.07v22.31a8.2,8.2,0,0,1-8.32,8.07H121.52a16.46,16.46,0,0,1-16.61-17.62c2.78-35.22,14.67-57.41,38.45-91.37,20.42-29.19,27.1-37.32,27.1-62.34,0-16.92-1.79-24.27-12.21-24.27-9.39,0-12.69,7.4-12.69,22.68v5.23a8.2,8.2,0,0,1-8.33,8.07h-24.9a8.2,8.2,0,0,1-8.33-8.07v-4.07c0-27.3,8.48-60.24,56.43-60.24,43,0,55.57,25.85,55.57,61,0,35.58-12.44,51.21-34.35,81.31-11.56,15-24.61,35.57-26.41,51.2ZM344,352.32c0,35.16-12.3,63.68-57.23,63.68C243.19,416,232,386.48,232,352.55V247.22c0-40.73,19.58-63.22,56.2-63.22C325,184,344,206.64,344,245.3ZM287.87,221.73c-9.41,0-13.23,7.5-13.23,20V357.68c0,13.11,3.59,20.59,13.23,20.59s13-8,13-21.27V241.06C300.89,229.79,297.88,221.73,287.87,221.73Z\"],\n    \"store\": [616, 512, [], \"f54e\", \"M602 118.6L537.1 15C531.3 5.7 521 0 510 0H106C95 0 84.7 5.7 78.9 15L14 118.6c-33.5 53.5-3.8 127.9 58.8 136.4 4.5.6 9.1.9 13.7.9 29.6 0 55.8-13 73.8-33.1 18 20.1 44.3 33.1 73.8 33.1 29.6 0 55.8-13 73.8-33.1 18 20.1 44.3 33.1 73.8 33.1 29.6 0 55.8-13 73.8-33.1 18.1 20.1 44.3 33.1 73.8 33.1 4.7 0 9.2-.3 13.7-.9 62.8-8.4 92.6-82.8 59-136.4zM529.5 288c-10 0-19.9-1.5-29.5-3.8V384H116v-99.8c-9.6 2.2-19.5 3.8-29.5 3.8-6 0-12.1-.4-18-1.2-5.6-.8-11.1-2.1-16.4-3.6V480c0 17.7 14.3 32 32 32h448c17.7 0 32-14.3 32-32V283.2c-5.4 1.6-10.8 2.9-16.4 3.6-6.1.8-12.1 1.2-18.2 1.2z\"],\n    \"store-alt\": [640, 512, [], \"f54f\", \"M320 384H128V224H64v256c0 17.7 14.3 32 32 32h256c17.7 0 32-14.3 32-32V224h-64v160zm314.6-241.8l-85.3-128c-6-8.9-16-14.2-26.7-14.2H117.4c-10.7 0-20.7 5.3-26.6 14.2l-85.3 128c-14.2 21.3 1 49.8 26.6 49.8H608c25.5 0 40.7-28.5 26.6-49.8zM512 496c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V224h-64v272z\"],\n    \"store-alt-slash\": [640, 512, [], \"e070\", \"M17.89,123.62,5.51,142.2c-14.2,21.3,1,49.8,26.59,49.8h74.26ZM576,413.42V224H512V364L384,265V224H330.92l-41.4-32H608c25.5,0,40.7-28.5,26.59-49.8l-85.29-128A32.18,32.18,0,0,0,522.6,0H117.42A31.87,31.87,0,0,0,90.81,14.2l-10.66,16L45.46,3.38A16,16,0,0,0,23,6.19L3.37,31.46A16,16,0,0,0,6.18,53.91L594.53,508.63A16,16,0,0,0,617,505.81l19.64-25.26a16,16,0,0,0-2.81-22.45ZM320,384H128V224H64V480a32,32,0,0,0,32,32H352a32,32,0,0,0,32-32V406.59l-64-49.47Z\"],\n    \"store-slash\": [640, 512, [], \"e071\", \"M121.51,384V284.2a119.43,119.43,0,0,1-28,3.8,123.46,123.46,0,0,1-17.1-1.2,114.88,114.88,0,0,1-15.58-3.6V480c0,17.7,13.59,32,30.4,32H505.75L348.42,384Zm-28-128.09c25.1,0,47.29-10.72,64-27.24L24,120.05c-30.52,53.39-2.45,126.53,56.49,135A95.68,95.68,0,0,0,93.48,255.91ZM602.13,458.09,547.2,413.41V283.2a93.5,93.5,0,0,1-15.57,3.6,127.31,127.31,0,0,1-17.29,1.2,114.89,114.89,0,0,1-28-3.8v79.68L348.52,251.77a88.06,88.06,0,0,0,25.41,4.14c28.11,0,53-13,70.11-33.11,17.19,20.11,42.08,33.11,70.11,33.11a94.31,94.31,0,0,0,13-.91c59.66-8.41,88-82.8,56.06-136.4L521.55,15A30.1,30.1,0,0,0,495.81,0H112A30.11,30.11,0,0,0,86.27,15L76.88,30.78,43.19,3.38A14.68,14.68,0,0,0,21.86,6.19L3.2,31.45A16.58,16.58,0,0,0,5.87,53.91L564.81,508.63a14.69,14.69,0,0,0,21.33-2.82l18.66-25.26A16.58,16.58,0,0,0,602.13,458.09Z\"],\n    \"stream\": [512, 512, [], \"f550\", \"M16 128h416c8.84 0 16-7.16 16-16V48c0-8.84-7.16-16-16-16H16C7.16 32 0 39.16 0 48v64c0 8.84 7.16 16 16 16zm480 80H80c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h416c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16zm-64 176H16c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h416c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16z\"],\n    \"street-view\": [512, 512, [], \"f21d\", \"M367.9 329.76c-4.62 5.3-9.78 10.1-15.9 13.65v22.94c66.52 9.34 112 28.05 112 49.65 0 30.93-93.12 56-208 56S48 446.93 48 416c0-21.6 45.48-40.3 112-49.65v-22.94c-6.12-3.55-11.28-8.35-15.9-13.65C58.87 345.34 0 378.05 0 416c0 53.02 114.62 96 256 96s256-42.98 256-96c0-37.95-58.87-70.66-144.1-86.24zM256 128c35.35 0 64-28.65 64-64S291.35 0 256 0s-64 28.65-64 64 28.65 64 64 64zm-64 192v96c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-96c17.67 0 32-14.33 32-32v-96c0-26.51-21.49-48-48-48h-11.8c-11.07 5.03-23.26 8-36.2 8s-25.13-2.97-36.2-8H208c-26.51 0-48 21.49-48 48v96c0 17.67 14.33 32 32 32z\"],\n    \"strikethrough\": [512, 512, [], \"f0cc\", \"M496 224H293.9l-87.17-26.83A43.55 43.55 0 0 1 219.55 112h66.79A49.89 49.89 0 0 1 331 139.58a16 16 0 0 0 21.46 7.15l42.94-21.47a16 16 0 0 0 7.16-21.46l-.53-1A128 128 0 0 0 287.51 32h-68a123.68 123.68 0 0 0-123 135.64c2 20.89 10.1 39.83 21.78 56.36H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h480a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-180.24 96A43 43 0 0 1 336 356.45 43.59 43.59 0 0 1 292.45 400h-66.79A49.89 49.89 0 0 1 181 372.42a16 16 0 0 0-21.46-7.15l-42.94 21.47a16 16 0 0 0-7.16 21.46l.53 1A128 128 0 0 0 224.49 480h68a123.68 123.68 0 0 0 123-135.64 114.25 114.25 0 0 0-5.34-24.36z\"],\n    \"stroopwafel\": [512, 512, [], \"f551\", \"M188.12 210.74L142.86 256l45.25 45.25L233.37 256l-45.25-45.26zm113.13-22.62L256 142.86l-45.25 45.25L256 233.37l45.25-45.25zm-90.5 135.76L256 369.14l45.26-45.26L256 278.63l-45.25 45.25zM256 0C114.62 0 0 114.62 0 256s114.62 256 256 256 256-114.62 256-256S397.38 0 256 0zm186.68 295.6l-11.31 11.31c-3.12 3.12-8.19 3.12-11.31 0l-28.29-28.29-45.25 45.25 33.94 33.94 16.97-16.97c3.12-3.12 8.19-3.12 11.31 0l11.31 11.31c3.12 3.12 3.12 8.19 0 11.31l-16.97 16.97 16.97 16.97c3.12 3.12 3.12 8.19 0 11.31l-11.31 11.31c-3.12 3.12-8.19 3.12-11.31 0l-16.97-16.97-16.97 16.97c-3.12 3.12-8.19 3.12-11.31 0l-11.31-11.31c-3.12-3.12-3.12-8.19 0-11.31l16.97-16.97-33.94-33.94-45.26 45.26 28.29 28.29c3.12 3.12 3.12 8.19 0 11.31l-11.31 11.31c-3.12 3.12-8.19 3.12-11.31 0L256 414.39l-28.29 28.29c-3.12 3.12-8.19 3.12-11.31 0l-11.31-11.31c-3.12-3.12-3.12-8.19 0-11.31l28.29-28.29-45.25-45.26-33.94 33.94 16.97 16.97c3.12 3.12 3.12 8.19 0 11.31l-11.31 11.31c-3.12 3.12-8.19 3.12-11.31 0l-16.97-16.97-16.97 16.97c-3.12 3.12-8.19 3.12-11.31 0l-11.31-11.31c-3.12-3.12-3.12-8.19 0-11.31l16.97-16.97-16.97-16.97c-3.12-3.12-3.12-8.19 0-11.31l11.31-11.31c3.12-3.12 8.19-3.12 11.31 0l16.97 16.97 33.94-33.94-45.25-45.25-28.29 28.29c-3.12 3.12-8.19 3.12-11.31 0L69.32 295.6c-3.12-3.12-3.12-8.19 0-11.31L97.61 256l-28.29-28.29c-3.12-3.12-3.12-8.19 0-11.31l11.31-11.31c3.12-3.12 8.19-3.12 11.31 0l28.29 28.29 45.25-45.26-33.94-33.94-16.97 16.97c-3.12 3.12-8.19 3.12-11.31 0l-11.31-11.31c-3.12-3.12-3.12-8.19 0-11.31l16.97-16.97-16.97-16.97c-3.12-3.12-3.12-8.19 0-11.31l11.31-11.31c3.12-3.12 8.19-3.12 11.31 0l16.97 16.97 16.97-16.97c3.12-3.12 8.19-3.12 11.31 0l11.31 11.31c3.12 3.12 3.12 8.19 0 11.31l-16.97 16.97 33.94 33.94 45.26-45.25-28.29-28.29c-3.12-3.12-3.12-8.19 0-11.31l11.31-11.31c3.12-3.12 8.19-3.12 11.31 0L256 97.61l28.29-28.29c3.12-3.12 8.19-3.12 11.31 0l11.31 11.31c3.12 3.12 3.12 8.19 0 11.31l-28.29 28.29 45.26 45.25 33.94-33.94-16.97-16.97c-3.12-3.12-3.12-8.19 0-11.31l11.31-11.31c3.12-3.12 8.19-3.12 11.31 0l16.97 16.97 16.97-16.97c3.12-3.12 8.19-3.12 11.31 0l11.31 11.31c3.12 3.12 3.12 8.19 0 11.31l-16.97 16.97 16.97 16.97c3.12 3.12 3.12 8.19 0 11.31l-11.31 11.31c-3.12 3.12-8.19 3.12-11.31 0l-16.97-16.97-33.94 33.94 45.25 45.26 28.29-28.29c3.12-3.12 8.19-3.12 11.31 0l11.31 11.31c3.12 3.12 3.12 8.19 0 11.31L414.39 256l28.29 28.28a8.015 8.015 0 0 1 0 11.32zM278.63 256l45.26 45.25L369.14 256l-45.25-45.26L278.63 256z\"],\n    \"subscript\": [512, 512, [], \"f12c\", \"M496 448h-16V304a16 16 0 0 0-16-16h-48a16 16 0 0 0-14.29 8.83l-16 32A16 16 0 0 0 400 352h16v96h-16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM336 64h-67a16 16 0 0 0-13.14 6.87l-79.9 115-79.9-115A16 16 0 0 0 83 64H16A16 16 0 0 0 0 80v48a16 16 0 0 0 16 16h33.48l77.81 112-77.81 112H16a16 16 0 0 0-16 16v48a16 16 0 0 0 16 16h67a16 16 0 0 0 13.14-6.87l79.9-115 79.9 115A16 16 0 0 0 269 448h67a16 16 0 0 0 16-16v-48a16 16 0 0 0-16-16h-33.48l-77.81-112 77.81-112H336a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16z\"],\n    \"subway\": [448, 512, [], \"f239\", \"M448 96v256c0 51.815-61.624 96-130.022 96l62.98 49.721C386.905 502.417 383.562 512 376 512H72c-7.578 0-10.892-9.594-4.957-14.279L130.022 448C61.82 448 0 403.954 0 352V96C0 42.981 64 0 128 0h192c65 0 128 42.981 128 96zM200 232V120c0-13.255-10.745-24-24-24H72c-13.255 0-24 10.745-24 24v112c0 13.255 10.745 24 24 24h104c13.255 0 24-10.745 24-24zm200 0V120c0-13.255-10.745-24-24-24H272c-13.255 0-24 10.745-24 24v112c0 13.255 10.745 24 24 24h104c13.255 0 24-10.745 24-24zm-48 56c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm-256 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z\"],\n    \"suitcase\": [512, 512, [], \"f0f2\", \"M128 480h256V80c0-26.5-21.5-48-48-48H176c-26.5 0-48 21.5-48 48v400zm64-384h128v32H192V96zm320 80v256c0 26.5-21.5 48-48 48h-48V128h48c26.5 0 48 21.5 48 48zM96 480H48c-26.5 0-48-21.5-48-48V176c0-26.5 21.5-48 48-48h48v352z\"],\n    \"suitcase-rolling\": [384, 512, [], \"f5c1\", \"M336 160H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h16v16c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-16h128v16c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-16h16c26.51 0 48-21.49 48-48V208c0-26.51-21.49-48-48-48zm-16 216c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h240c4.42 0 8 3.58 8 8v16zm0-96c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h240c4.42 0 8 3.58 8 8v16zM144 48h96v80h48V48c0-26.51-21.49-48-48-48h-96c-26.51 0-48 21.49-48 48v80h48V48z\"],\n    \"sun\": [512, 512, [], \"f185\", \"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\"],\n    \"superscript\": [512, 512, [], \"f12b\", \"M496 160h-16V16a16 16 0 0 0-16-16h-48a16 16 0 0 0-14.29 8.83l-16 32A16 16 0 0 0 400 64h16v96h-16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM336 64h-67a16 16 0 0 0-13.14 6.87l-79.9 115-79.9-115A16 16 0 0 0 83 64H16A16 16 0 0 0 0 80v48a16 16 0 0 0 16 16h33.48l77.81 112-77.81 112H16a16 16 0 0 0-16 16v48a16 16 0 0 0 16 16h67a16 16 0 0 0 13.14-6.87l79.9-115 79.9 115A16 16 0 0 0 269 448h67a16 16 0 0 0 16-16v-48a16 16 0 0 0-16-16h-33.48l-77.81-112 77.81-112H336a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16z\"],\n    \"surprise\": [496, 512, [], \"f5c2\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM136 208c0-17.7 14.3-32 32-32s32 14.3 32 32-14.3 32-32 32-32-14.3-32-32zm112 208c-35.3 0-64-28.7-64-64s28.7-64 64-64 64 28.7 64 64-28.7 64-64 64zm80-176c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"swatchbook\": [512, 512, [], \"f5c3\", \"M434.66,167.71h0L344.5,77.36a31.83,31.83,0,0,0-45-.07h0l-.07.07L224,152.88V424L434.66,212.9A32,32,0,0,0,434.66,167.71ZM480,320H373.09L186.68,506.51c-2.06,2.07-4.5,3.58-6.68,5.49H480a32,32,0,0,0,32-32V352A32,32,0,0,0,480,320ZM192,32A32,32,0,0,0,160,0H32A32,32,0,0,0,0,32V416a96,96,0,0,0,192,0ZM96,440a24,24,0,1,1,24-24A24,24,0,0,1,96,440Zm32-184H64V192h64Zm0-128H64V64h64Z\"],\n    \"swimmer\": [640, 512, [], \"f5c4\", \"M189.61 310.58c3.54 3.26 15.27 9.42 34.39 9.42s30.86-6.16 34.39-9.42c16.02-14.77 34.5-22.58 53.46-22.58h16.3c18.96 0 37.45 7.81 53.46 22.58 3.54 3.26 15.27 9.42 34.39 9.42s30.86-6.16 34.39-9.42c14.86-13.71 31.88-21.12 49.39-22.16l-112.84-80.6 18-12.86c3.64-2.58 8.28-3.52 12.62-2.61l100.35 21.53c25.91 5.53 51.44-10.97 57-36.88 5.55-25.92-10.95-51.44-36.88-57L437.68 98.47c-30.73-6.58-63.02.12-88.56 18.38l-80.02 57.17c-10.38 7.39-19.36 16.44-26.72 26.94L173.75 299c5.47 3.23 10.82 6.93 15.86 11.58zM624 352h-16c-26.04 0-45.8-8.42-56.09-17.9-8.9-8.21-19.66-14.1-31.77-14.1h-16.3c-12.11 0-22.87 5.89-31.77 14.1C461.8 343.58 442.04 352 416 352s-45.8-8.42-56.09-17.9c-8.9-8.21-19.66-14.1-31.77-14.1h-16.3c-12.11 0-22.87 5.89-31.77 14.1C269.8 343.58 250.04 352 224 352s-45.8-8.42-56.09-17.9c-8.9-8.21-19.66-14.1-31.77-14.1h-16.3c-12.11 0-22.87 5.89-31.77 14.1C77.8 343.58 58.04 352 32 352H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h16c38.62 0 72.72-12.19 96-31.84 23.28 19.66 57.38 31.84 96 31.84s72.72-12.19 96-31.84c23.28 19.66 57.38 31.84 96 31.84s72.72-12.19 96-31.84c23.28 19.66 57.38 31.84 96 31.84h16c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zm-512-96c44.18 0 80-35.82 80-80s-35.82-80-80-80-80 35.82-80 80 35.82 80 80 80z\"],\n    \"swimming-pool\": [640, 512, [], \"f5c5\", \"M624 416h-16c-26.04 0-45.8-8.42-56.09-17.9-8.9-8.21-19.66-14.1-31.77-14.1h-16.3c-12.11 0-22.87 5.89-31.77 14.1C461.8 407.58 442.04 416 416 416s-45.8-8.42-56.09-17.9c-8.9-8.21-19.66-14.1-31.77-14.1h-16.3c-12.11 0-22.87 5.89-31.77 14.1C269.8 407.58 250.04 416 224 416s-45.8-8.42-56.09-17.9c-8.9-8.21-19.66-14.1-31.77-14.1h-16.3c-12.11 0-22.87 5.89-31.77 14.1C77.8 407.58 58.04 416 32 416H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h16c38.62 0 72.72-12.19 96-31.84 23.28 19.66 57.38 31.84 96 31.84s72.72-12.19 96-31.84c23.28 19.66 57.38 31.84 96 31.84s72.72-12.19 96-31.84c23.28 19.66 57.38 31.84 96 31.84h16c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zm-400-32v-96h192v96c19.12 0 30.86-6.16 34.39-9.42 9.17-8.46 19.2-14.34 29.61-18.07V128c0-17.64 14.36-32 32-32s32 14.36 32 32v16c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-16c0-52.94-43.06-96-96-96s-96 43.06-96 96v96H224v-96c0-17.64 14.36-32 32-32s32 14.36 32 32v16c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-16c0-52.94-43.06-96-96-96s-96 43.06-96 96v228.5c10.41 3.73 20.44 9.62 29.61 18.07 3.53 3.27 15.27 9.43 34.39 9.43z\"],\n    \"synagogue\": [640, 512, [], \"f69b\", \"M70 196.51L6.67 268.29A26.643 26.643 0 0 0 0 285.93V512h128V239.58l-38-43.07c-5.31-6.01-14.69-6.01-20 0zm563.33 71.78L570 196.51c-5.31-6.02-14.69-6.02-20 0l-38 43.07V512h128V285.93c0-6.5-2.37-12.77-6.67-17.64zM339.99 7.01c-11.69-9.35-28.29-9.35-39.98 0l-128 102.4A32.005 32.005 0 0 0 160 134.4V512h96v-92.57c0-31.88 21.78-61.43 53.25-66.55C349.34 346.35 384 377.13 384 416v96h96V134.4c0-9.72-4.42-18.92-12.01-24.99l-128-102.4zm52.07 215.55c1.98 3.15-.29 7.24-4 7.24h-38.94L324 269.79c-1.85 2.95-6.15 2.95-8 0l-25.12-39.98h-38.94c-3.72 0-5.98-4.09-4-7.24l19.2-30.56-19.2-30.56c-1.98-3.15.29-7.24 4-7.24h38.94l25.12-40c1.85-2.95 6.15-2.95 8 0l25.12 39.98h38.95c3.71 0 5.98 4.09 4 7.24L372.87 192l19.19 30.56z\"],\n    \"sync\": [512, 512, [], \"f021\", \"M440.65 12.57l4 82.77A247.16 247.16 0 0 0 255.83 8C134.73 8 33.91 94.92 12.29 209.82A12 12 0 0 0 24.09 224h49.05a12 12 0 0 0 11.67-9.26 175.91 175.91 0 0 1 317-56.94l-101.46-4.86a12 12 0 0 0-12.57 12v47.41a12 12 0 0 0 12 12H500a12 12 0 0 0 12-12V12a12 12 0 0 0-12-12h-47.37a12 12 0 0 0-11.98 12.57zM255.83 432a175.61 175.61 0 0 1-146-77.8l101.8 4.87a12 12 0 0 0 12.57-12v-47.4a12 12 0 0 0-12-12H12a12 12 0 0 0-12 12V500a12 12 0 0 0 12 12h47.35a12 12 0 0 0 12-12.6l-4.15-82.57A247.17 247.17 0 0 0 255.83 504c121.11 0 221.93-86.92 243.55-201.82a12 12 0 0 0-11.8-14.18h-49.05a12 12 0 0 0-11.67 9.26A175.86 175.86 0 0 1 255.83 432z\"],\n    \"sync-alt\": [512, 512, [], \"f2f1\", \"M370.72 133.28C339.458 104.008 298.888 87.962 255.848 88c-77.458.068-144.328 53.178-162.791 126.85-1.344 5.363-6.122 9.15-11.651 9.15H24.103c-7.498 0-13.194-6.807-11.807-14.176C33.933 94.924 134.813 8 256 8c66.448 0 126.791 26.136 171.315 68.685L463.03 40.97C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.749zM32 296h134.059c21.382 0 32.09 25.851 16.971 40.971l-41.75 41.75c31.262 29.273 71.835 45.319 114.876 45.28 77.418-.07 144.315-53.144 162.787-126.849 1.344-5.363 6.122-9.15 11.651-9.15h57.304c7.498 0 13.194 6.807 11.807 14.176C478.067 417.076 377.187 504 256 504c-66.448 0-126.791-26.136-171.315-68.685L48.97 471.03C33.851 486.149 8 475.441 8 454.059V320c0-13.255 10.745-24 24-24z\"],\n    \"syringe\": [512, 512, [], \"f48e\", \"M201.5 174.8l55.7 55.8c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-55.7-55.8-45.3 45.3 55.8 55.8c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0L111 265.2l-26.4 26.4c-17.3 17.3-25.6 41.1-23 65.4l7.1 63.6L2.3 487c-3.1 3.1-3.1 8.2 0 11.3l11.3 11.3c3.1 3.1 8.2 3.1 11.3 0l66.3-66.3 63.6 7.1c23.9 2.6 47.9-5.4 65.4-23l181.9-181.9-135.7-135.7-64.9 65zm308.2-93.3L430.5 2.3c-3.1-3.1-8.2-3.1-11.3 0l-11.3 11.3c-3.1 3.1-3.1 8.2 0 11.3l28.3 28.3-45.3 45.3-56.6-56.6-17-17c-3.1-3.1-8.2-3.1-11.3 0l-33.9 33.9c-3.1 3.1-3.1 8.2 0 11.3l17 17L424.8 223l17 17c3.1 3.1 8.2 3.1 11.3 0l33.9-34c3.1-3.1 3.1-8.2 0-11.3l-73.5-73.5 45.3-45.3 28.3 28.3c3.1 3.1 8.2 3.1 11.3 0l11.3-11.3c3.1-3.2 3.1-8.2 0-11.4z\"],\n    \"table\": [512, 512, [], \"f0ce\", \"M464 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 416H64v-96h160v96zm0-160H64v-96h160v96zm224 160H288v-96h160v96zm0-160H288v-96h160v96z\"],\n    \"table-tennis\": [512, 512, [], \"f45d\", \"M496.2 296.5C527.7 218.7 512 126.2 449 63.1 365.1-21 229-21 145.1 63.1l-56 56.1 211.5 211.5c46.1-62.1 131.5-77.4 195.6-34.2zm-217.9 79.7L57.9 155.9c-27.3 45.3-21.7 105 17.3 144.1l34.5 34.6L6.7 424c-8.6 7.5-9.1 20.7-1 28.8l53.4 53.5c8 8.1 21.2 7.6 28.7-1L177.1 402l35.7 35.7c19.7 19.7 44.6 30.5 70.3 33.3-7.1-17-11-35.6-11-55.1-.1-13.8 2.5-27 6.2-39.7zM416 320c-53 0-96 43-96 96s43 96 96 96 96-43 96-96-43-96-96-96z\"],\n    \"tablet\": [448, 512, [], \"f10a\", \"M400 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM224 480c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n    \"tablet-alt\": [448, 512, [], \"f3fa\", \"M400 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM224 480c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm176-108c0 6.6-5.4 12-12 12H60c-6.6 0-12-5.4-12-12V60c0-6.6 5.4-12 12-12h328c6.6 0 12 5.4 12 12v312z\"],\n    \"tablets\": [640, 512, [], \"f490\", \"M160 192C78.9 192 12.5 250.5.1 326.7c-.8 4.8 3.3 9.3 8.3 9.3h303.3c5 0 9.1-4.5 8.3-9.3C307.5 250.5 241.1 192 160 192zm151.6 176H8.4c-5 0-9.1 4.5-8.3 9.3C12.5 453.5 78.9 512 160 512s147.5-58.5 159.9-134.7c.8-4.8-3.3-9.3-8.3-9.3zM593.4 46.6c-56.5-56.5-144.2-61.4-206.9-16-4 2.9-4.3 8.9-.8 12.3L597 254.3c3.5 3.5 9.5 3.2 12.3-.8 45.5-62.7 40.6-150.4-15.9-206.9zM363 65.7c-3.5-3.5-9.5-3.2-12.3.8-45.4 62.7-40.5 150.4 15.9 206.9 56.5 56.5 144.2 61.4 206.9 15.9 4-2.9 4.3-8.9.8-12.3L363 65.7z\"],\n    \"tachometer-alt\": [576, 512, [], \"f3fd\", \"M288 32C128.94 32 0 160.94 0 320c0 52.8 14.25 102.26 39.06 144.8 5.61 9.62 16.3 15.2 27.44 15.2h443c11.14 0 21.83-5.58 27.44-15.2C561.75 422.26 576 372.8 576 320c0-159.06-128.94-288-288-288zm0 64c14.71 0 26.58 10.13 30.32 23.65-1.11 2.26-2.64 4.23-3.45 6.67l-9.22 27.67c-5.13 3.49-10.97 6.01-17.64 6.01-17.67 0-32-14.33-32-32S270.33 96 288 96zM96 384c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm48-160c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm246.77-72.41l-61.33 184C343.13 347.33 352 364.54 352 384c0 11.72-3.38 22.55-8.88 32H232.88c-5.5-9.45-8.88-20.28-8.88-32 0-33.94 26.5-61.43 59.9-63.59l61.34-184.01c4.17-12.56 17.73-19.45 30.36-15.17 12.57 4.19 19.35 17.79 15.17 30.36zm14.66 57.2l15.52-46.55c3.47-1.29 7.13-2.23 11.05-2.23 17.67 0 32 14.33 32 32s-14.33 32-32 32c-11.38-.01-20.89-6.28-26.57-15.22zM480 384c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"tag\": [512, 512, [], \"f02b\", \"M0 252.118V48C0 21.49 21.49 0 48 0h204.118a48 48 0 0 1 33.941 14.059l211.882 211.882c18.745 18.745 18.745 49.137 0 67.882L293.823 497.941c-18.745 18.745-49.137 18.745-67.882 0L14.059 286.059A48 48 0 0 1 0 252.118zM112 64c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z\"],\n    \"tags\": [640, 512, [], \"f02c\", \"M497.941 225.941L286.059 14.059A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v204.118a48 48 0 0 0 14.059 33.941l211.882 211.882c18.744 18.745 49.136 18.746 67.882 0l204.118-204.118c18.745-18.745 18.745-49.137 0-67.882zM112 160c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm513.941 133.823L421.823 497.941c-18.745 18.745-49.137 18.745-67.882 0l-.36-.36L527.64 323.522c16.999-16.999 26.36-39.6 26.36-63.64s-9.362-46.641-26.36-63.64L331.397 0h48.721a48 48 0 0 1 33.941 14.059l211.882 211.882c18.745 18.745 18.745 49.137 0 67.882z\"],\n    \"tape\": [640, 512, [], \"f4db\", \"M224 192c-35.3 0-64 28.7-64 64s28.7 64 64 64 64-28.7 64-64-28.7-64-64-64zm400 224H380.6c41.5-40.7 67.4-97.3 67.4-160 0-123.7-100.3-224-224-224S0 132.3 0 256s100.3 224 224 224h400c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm-400-64c-53 0-96-43-96-96s43-96 96-96 96 43 96 96-43 96-96 96z\"],\n    \"tasks\": [512, 512, [], \"f0ae\", \"M139.61 35.5a12 12 0 0 0-17 0L58.93 98.81l-22.7-22.12a12 12 0 0 0-17 0L3.53 92.41a12 12 0 0 0 0 17l47.59 47.4a12.78 12.78 0 0 0 17.61 0l15.59-15.62L156.52 69a12.09 12.09 0 0 0 .09-17zm0 159.19a12 12 0 0 0-17 0l-63.68 63.72-22.7-22.1a12 12 0 0 0-17 0L3.53 252a12 12 0 0 0 0 17L51 316.5a12.77 12.77 0 0 0 17.6 0l15.7-15.69 72.2-72.22a12 12 0 0 0 .09-16.9zM64 368c-26.49 0-48.59 21.5-48.59 48S37.53 464 64 464a48 48 0 0 0 0-96zm432 16H208a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-320H208a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 160H208a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\"],\n    \"taxi\": [512, 512, [], \"f1ba\", \"M462 241.64l-22-84.84c-9.6-35.2-41.6-60.8-76.8-60.8H352V64c0-17.67-14.33-32-32-32H192c-17.67 0-32 14.33-32 32v32h-11.2c-35.2 0-67.2 25.6-76.8 60.8l-22 84.84C21.41 248.04 0 273.47 0 304v48c0 23.63 12.95 44.04 32 55.12V448c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-32h256v32c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-40.88c19.05-11.09 32-31.5 32-55.12v-48c0-30.53-21.41-55.96-50-62.36zM96 352c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm20.55-112l17.2-66.36c2.23-8.16 9.59-13.64 15.06-13.64h214.4c5.47 0 12.83 5.48 14.85 12.86L395.45 240h-278.9zM416 352c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"teeth\": [640, 512, [], \"f62e\", \"M544 0H96C42.98 0 0 42.98 0 96v320c0 53.02 42.98 96 96 96h448c53.02 0 96-42.98 96-96V96c0-53.02-42.98-96-96-96zM160 368c0 26.51-21.49 48-48 48s-48-21.49-48-48v-64c0-8.84 7.16-16 16-16h64c8.84 0 16 7.16 16 16v64zm0-128c0 8.84-7.16 16-16 16H80c-8.84 0-16-7.16-16-16v-64c0-26.51 21.49-48 48-48s48 21.49 48 48v64zm144 120c0 30.93-25.07 56-56 56s-56-25.07-56-56v-56c0-8.84 7.16-16 16-16h80c8.84 0 16 7.16 16 16v56zm0-120c0 8.84-7.16 16-16 16h-80c-8.84 0-16-7.16-16-16v-88c0-30.93 25.07-56 56-56s56 25.07 56 56v88zm144 120c0 30.93-25.07 56-56 56s-56-25.07-56-56v-56c0-8.84 7.16-16 16-16h80c8.84 0 16 7.16 16 16v56zm0-120c0 8.84-7.16 16-16 16h-80c-8.84 0-16-7.16-16-16v-88c0-30.93 25.07-56 56-56s56 25.07 56 56v88zm128 128c0 26.51-21.49 48-48 48s-48-21.49-48-48v-64c0-8.84 7.16-16 16-16h64c8.84 0 16 7.16 16 16v64zm0-128c0 8.84-7.16 16-16 16h-64c-8.84 0-16-7.16-16-16v-64c0-26.51 21.49-48 48-48s48 21.49 48 48v64z\"],\n    \"teeth-open\": [640, 512, [], \"f62f\", \"M544 0H96C42.98 0 0 42.98 0 96v64c0 35.35 28.66 64 64 64h512c35.34 0 64-28.65 64-64V96c0-53.02-42.98-96-96-96zM160 176c0 8.84-7.16 16-16 16H80c-8.84 0-16-7.16-16-16v-32c0-26.51 21.49-48 48-48s48 21.49 48 48v32zm144 0c0 8.84-7.16 16-16 16h-80c-8.84 0-16-7.16-16-16v-56c0-30.93 25.07-56 56-56s56 25.07 56 56v56zm144 0c0 8.84-7.16 16-16 16h-80c-8.84 0-16-7.16-16-16v-56c0-30.93 25.07-56 56-56s56 25.07 56 56v56zm128 0c0 8.84-7.16 16-16 16h-64c-8.84 0-16-7.16-16-16v-32c0-26.51 21.49-48 48-48s48 21.49 48 48v32zm0 144H64c-35.34 0-64 28.65-64 64v32c0 53.02 42.98 96 96 96h448c53.02 0 96-42.98 96-96v-32c0-35.35-28.66-64-64-64zm-416 80c0 26.51-21.49 48-48 48s-48-21.49-48-48v-32c0-8.84 7.16-16 16-16h64c8.84 0 16 7.16 16 16v32zm144-8c0 30.93-25.07 56-56 56s-56-25.07-56-56v-24c0-8.84 7.16-16 16-16h80c8.84 0 16 7.16 16 16v24zm144 0c0 30.93-25.07 56-56 56s-56-25.07-56-56v-24c0-8.84 7.16-16 16-16h80c8.84 0 16 7.16 16 16v24zm128 8c0 26.51-21.49 48-48 48s-48-21.49-48-48v-32c0-8.84 7.16-16 16-16h64c8.84 0 16 7.16 16 16v32z\"],\n    \"temperature-high\": [512, 512, [], \"f769\", \"M416 0c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm0 128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm-160-16C256 50.1 205.9 0 144 0S32 50.1 32 112v166.5C12.3 303.2 0 334 0 368c0 79.5 64.5 144 144 144s144-64.5 144-144c0-34-12.3-64.9-32-89.5V112zM144 448c-44.1 0-80-35.9-80-80 0-25.5 12.2-48.9 32-63.8V112c0-26.5 21.5-48 48-48s48 21.5 48 48v192.2c19.8 14.8 32 38.3 32 63.8 0 44.1-35.9 80-80 80zm16-125.1V112c0-8.8-7.2-16-16-16s-16 7.2-16 16v210.9c-18.6 6.6-32 24.2-32 45.1 0 26.5 21.5 48 48 48s48-21.5 48-48c0-20.9-13.4-38.5-32-45.1z\"],\n    \"temperature-low\": [512, 512, [], \"f76b\", \"M416 0c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm0 128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm-160-16C256 50.1 205.9 0 144 0S32 50.1 32 112v166.5C12.3 303.2 0 334 0 368c0 79.5 64.5 144 144 144s144-64.5 144-144c0-34-12.3-64.9-32-89.5V112zM144 448c-44.1 0-80-35.9-80-80 0-25.5 12.2-48.9 32-63.8V112c0-26.5 21.5-48 48-48s48 21.5 48 48v192.2c19.8 14.8 32 38.3 32 63.8 0 44.1-35.9 80-80 80zm16-125.1V304c0-8.8-7.2-16-16-16s-16 7.2-16 16v18.9c-18.6 6.6-32 24.2-32 45.1 0 26.5 21.5 48 48 48s48-21.5 48-48c0-20.9-13.4-38.5-32-45.1z\"],\n    \"tenge\": [384, 512, [], \"f7d7\", \"M372 160H12c-6.6 0-12 5.4-12 12v56c0 6.6 5.4 12 12 12h140v228c0 6.6 5.4 12 12 12h56c6.6 0 12-5.4 12-12V240h140c6.6 0 12-5.4 12-12v-56c0-6.6-5.4-12-12-12zm0-128H12C5.4 32 0 37.4 0 44v56c0 6.6 5.4 12 12 12h360c6.6 0 12-5.4 12-12V44c0-6.6-5.4-12-12-12z\"],\n    \"terminal\": [640, 512, [], \"f120\", \"M257.981 272.971L63.638 467.314c-9.373 9.373-24.569 9.373-33.941 0L7.029 444.647c-9.357-9.357-9.375-24.522-.04-33.901L161.011 256 6.99 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L257.981 239.03c9.373 9.372 9.373 24.568 0 33.941zM640 456v-32c0-13.255-10.745-24-24-24H312c-13.255 0-24 10.745-24 24v32c0 13.255 10.745 24 24 24h304c13.255 0 24-10.745 24-24z\"],\n    \"text-height\": [576, 512, [], \"f034\", \"M304 32H16A16 16 0 0 0 0 48v96a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32h56v304H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h160a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-40V112h56v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zm256 336h-48V144h48c14.31 0 21.33-17.31 11.31-27.31l-80-80a16 16 0 0 0-22.62 0l-80 80C379.36 126 384.36 144 400 144h48v224h-48c-14.31 0-21.32 17.31-11.31 27.31l80 80a16 16 0 0 0 22.62 0l80-80C580.64 386 575.64 368 560 368z\"],\n    \"text-width\": [448, 512, [], \"f035\", \"M432 32H16A16 16 0 0 0 0 48v80a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-16h120v112h-24a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-24V112h120v16a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zm-68.69 260.69C354 283.36 336 288.36 336 304v48H112v-48c0-14.31-17.31-21.32-27.31-11.31l-80 80a16 16 0 0 0 0 22.62l80 80C94 484.64 112 479.64 112 464v-48h224v48c0 14.31 17.31 21.33 27.31 11.31l80-80a16 16 0 0 0 0-22.62z\"],\n    \"th\": [512, 512, [], \"f00a\", \"M149.333 56v80c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V56c0-13.255 10.745-24 24-24h101.333c13.255 0 24 10.745 24 24zm181.334 240v-80c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24h101.333c13.256 0 24.001-10.745 24.001-24zm32-240v80c0 13.255 10.745 24 24 24H488c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24H386.667c-13.255 0-24 10.745-24 24zm-32 80V56c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24h101.333c13.256 0 24.001-10.745 24.001-24zm-205.334 56H24c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24zM0 376v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H24c-13.255 0-24 10.745-24 24zm386.667-56H488c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H386.667c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24zm0 160H488c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H386.667c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24zM181.333 376v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24z\"],\n    \"th-large\": [512, 512, [], \"f009\", \"M296 32h192c13.255 0 24 10.745 24 24v160c0 13.255-10.745 24-24 24H296c-13.255 0-24-10.745-24-24V56c0-13.255 10.745-24 24-24zm-80 0H24C10.745 32 0 42.745 0 56v160c0 13.255 10.745 24 24 24h192c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24zM0 296v160c0 13.255 10.745 24 24 24h192c13.255 0 24-10.745 24-24V296c0-13.255-10.745-24-24-24H24c-13.255 0-24 10.745-24 24zm296 184h192c13.255 0 24-10.745 24-24V296c0-13.255-10.745-24-24-24H296c-13.255 0-24 10.745-24 24v160c0 13.255 10.745 24 24 24z\"],\n    \"th-list\": [512, 512, [], \"f00b\", \"M149.333 216v80c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24v-80c0-13.255 10.745-24 24-24h101.333c13.255 0 24 10.745 24 24zM0 376v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H24c-13.255 0-24 10.745-24 24zM125.333 32H24C10.745 32 0 42.745 0 56v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24zm80 448H488c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24zm-24-424v80c0 13.255 10.745 24 24 24H488c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24zm24 264H488c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24z\"],\n    \"theater-masks\": [640, 512, [], \"f630\", \"M206.86 245.15c-35.88 10.45-59.95 41.2-57.53 74.1 11.4-12.72 28.81-23.7 49.9-30.92l7.63-43.18zM95.81 295L64.08 115.49c-.29-1.62.28-2.62.24-2.65 57.76-32.06 123.12-49.01 189.01-49.01 1.61 0 3.23.17 4.85.19 13.95-13.47 31.73-22.83 51.59-26 18.89-3.02 38.05-4.55 57.18-5.32-9.99-13.95-24.48-24.23-41.77-27C301.27 1.89 277.24 0 253.32 0 176.66 0 101.02 19.42 33.2 57.06 9.03 70.48-3.92 98.48 1.05 126.58l31.73 179.51c14.23 80.52 136.33 142.08 204.45 142.08 3.59 0 6.75-.46 10.01-.8-13.52-17.08-28.94-40.48-39.5-67.58-47.61-12.98-106.06-51.62-111.93-84.79zm97.55-137.46c-.73-4.12-2.23-7.87-4.07-11.4-8.25 8.91-20.67 15.75-35.32 18.32-14.65 2.58-28.67.4-39.48-5.17-.52 3.94-.64 7.98.09 12.1 3.84 21.7 24.58 36.19 46.34 32.37 21.75-3.82 36.28-24.52 32.44-46.22zM606.8 120.9c-88.98-49.38-191.43-67.41-291.98-51.35-27.31 4.36-49.08 26.26-54.04 54.36l-31.73 179.51c-15.39 87.05 95.28 196.27 158.31 207.35 63.03 11.09 204.47-53.79 219.86-140.84l31.73-179.51c4.97-28.11-7.98-56.11-32.15-69.52zm-273.24 96.8c3.84-21.7 24.58-36.19 46.34-32.36 21.76 3.83 36.28 24.52 32.45 46.22-.73 4.12-2.23 7.87-4.07 11.4-8.25-8.91-20.67-15.75-35.32-18.32-14.65-2.58-28.67-.4-39.48 5.17-.53-3.95-.65-7.99.08-12.11zm70.47 198.76c-55.68-9.79-93.52-59.27-89.04-112.9 20.6 25.54 56.21 46.17 99.49 53.78 43.28 7.61 83.82.37 111.93-16.6-14.18 51.94-66.71 85.51-122.38 75.72zm130.3-151.34c-8.25-8.91-20.68-15.75-35.33-18.32-14.65-2.58-28.67-.4-39.48 5.17-.52-3.94-.64-7.98.09-12.1 3.84-21.7 24.58-36.19 46.34-32.37 21.75 3.83 36.28 24.52 32.45 46.22-.73 4.13-2.23 7.88-4.07 11.4z\"],\n    \"thermometer\": [512, 512, [], \"f491\", \"M476.8 20.4c-37.5-30.7-95.5-26.3-131.9 10.2l-45.7 46 50.5 50.5c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-50.4-50.5-45.1 45.4 50.3 50.4c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0L209 167.4l-45.1 45.4L214 263c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-50.1-50.2L96 281.1V382L7 471c-9.4 9.4-9.4 24.6 0 33.9 9.4 9.4 24.6 9.4 33.9 0l89-89h99.9L484 162.6c34.9-34.9 42.2-101.5-7.2-142.2z\"],\n    \"thermometer-empty\": [256, 512, [], \"f2cb\", \"M192 384c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-35.346 28.654-64 64-64s64 28.654 64 64zm32-84.653c19.912 22.563 32 52.194 32 84.653 0 70.696-57.303 128-128 128-.299 0-.609-.001-.909-.003C56.789 511.509-.357 453.636.002 383.333.166 351.135 12.225 321.755 32 299.347V96c0-53.019 42.981-96 96-96s96 42.981 96 96v203.347zM208 384c0-34.339-19.37-52.19-32-66.502V96c0-26.467-21.533-48-48-48S80 69.533 80 96v221.498c-12.732 14.428-31.825 32.1-31.999 66.08-.224 43.876 35.563 80.116 79.423 80.42L128 464c44.112 0 80-35.888 80-80z\"],\n    \"thermometer-full\": [256, 512, [], \"f2c7\", \"M224 96c0-53.019-42.981-96-96-96S32 42.981 32 96v203.347C12.225 321.756.166 351.136.002 383.333c-.359 70.303 56.787 128.176 127.089 128.664.299.002.61.003.909.003 70.698 0 128-57.304 128-128 0-32.459-12.088-62.09-32-84.653V96zm-96 368l-.576-.002c-43.86-.304-79.647-36.544-79.423-80.42.173-33.98 19.266-51.652 31.999-66.08V96c0-26.467 21.533-48 48-48s48 21.533 48 48v221.498c12.63 14.312 32 32.164 32 66.502 0 44.112-35.888 80-80 80zm64-80c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-23.685 12.876-44.349 32-55.417V96c0-17.673 14.327-32 32-32s32 14.327 32 32v232.583c19.124 11.068 32 31.732 32 55.417z\"],\n    \"thermometer-half\": [256, 512, [], \"f2c9\", \"M192 384c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-23.685 12.876-44.349 32-55.417V224c0-17.673 14.327-32 32-32s32 14.327 32 32v104.583c19.124 11.068 32 31.732 32 55.417zm32-84.653c19.912 22.563 32 52.194 32 84.653 0 70.696-57.303 128-128 128-.299 0-.609-.001-.909-.003C56.789 511.509-.357 453.636.002 383.333.166 351.135 12.225 321.755 32 299.347V96c0-53.019 42.981-96 96-96s96 42.981 96 96v203.347zM208 384c0-34.339-19.37-52.19-32-66.502V96c0-26.467-21.533-48-48-48S80 69.533 80 96v221.498c-12.732 14.428-31.825 32.1-31.999 66.08-.224 43.876 35.563 80.116 79.423 80.42L128 464c44.112 0 80-35.888 80-80z\"],\n    \"thermometer-quarter\": [256, 512, [], \"f2ca\", \"M192 384c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-23.685 12.876-44.349 32-55.417V288c0-17.673 14.327-32 32-32s32 14.327 32 32v40.583c19.124 11.068 32 31.732 32 55.417zm32-84.653c19.912 22.563 32 52.194 32 84.653 0 70.696-57.303 128-128 128-.299 0-.609-.001-.909-.003C56.789 511.509-.357 453.636.002 383.333.166 351.135 12.225 321.755 32 299.347V96c0-53.019 42.981-96 96-96s96 42.981 96 96v203.347zM208 384c0-34.339-19.37-52.19-32-66.502V96c0-26.467-21.533-48-48-48S80 69.533 80 96v221.498c-12.732 14.428-31.825 32.1-31.999 66.08-.224 43.876 35.563 80.116 79.423 80.42L128 464c44.112 0 80-35.888 80-80z\"],\n    \"thermometer-three-quarters\": [256, 512, [], \"f2c8\", \"M192 384c0 35.346-28.654 64-64 64-35.346 0-64-28.654-64-64 0-23.685 12.876-44.349 32-55.417V160c0-17.673 14.327-32 32-32s32 14.327 32 32v168.583c19.124 11.068 32 31.732 32 55.417zm32-84.653c19.912 22.563 32 52.194 32 84.653 0 70.696-57.303 128-128 128-.299 0-.609-.001-.909-.003C56.789 511.509-.357 453.636.002 383.333.166 351.135 12.225 321.755 32 299.347V96c0-53.019 42.981-96 96-96s96 42.981 96 96v203.347zM208 384c0-34.339-19.37-52.19-32-66.502V96c0-26.467-21.533-48-48-48S80 69.533 80 96v221.498c-12.732 14.428-31.825 32.1-31.999 66.08-.224 43.876 35.563 80.116 79.423 80.42L128 464c44.112 0 80-35.888 80-80z\"],\n    \"thumbs-down\": [512, 512, [], \"f165\", \"M0 56v240c0 13.255 10.745 24 24 24h80c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24H24C10.745 32 0 42.745 0 56zm40 200c0-13.255 10.745-24 24-24s24 10.745 24 24-10.745 24-24 24-24-10.745-24-24zm272 256c-20.183 0-29.485-39.293-33.931-57.795-5.206-21.666-10.589-44.07-25.393-58.902-32.469-32.524-49.503-73.967-89.117-113.111a11.98 11.98 0 0 1-3.558-8.521V59.901c0-6.541 5.243-11.878 11.783-11.998 15.831-.29 36.694-9.079 52.651-16.178C256.189 17.598 295.709.017 343.995 0h2.844c42.777 0 93.363.413 113.774 29.737 8.392 12.057 10.446 27.034 6.148 44.632 16.312 17.053 25.063 48.863 16.382 74.757 17.544 23.432 19.143 56.132 9.308 79.469l.11.11c11.893 11.949 19.523 31.259 19.439 49.197-.156 30.352-26.157 58.098-59.553 58.098H350.723C358.03 364.34 384 388.132 384 430.548 384 504 336 512 312 512z\"],\n    \"thumbs-up\": [512, 512, [], \"f164\", \"M104 224H24c-13.255 0-24 10.745-24 24v240c0 13.255 10.745 24 24 24h80c13.255 0 24-10.745 24-24V248c0-13.255-10.745-24-24-24zM64 472c-13.255 0-24-10.745-24-24s10.745-24 24-24 24 10.745 24 24-10.745 24-24 24zM384 81.452c0 42.416-25.97 66.208-33.277 94.548h101.723c33.397 0 59.397 27.746 59.553 58.098.084 17.938-7.546 37.249-19.439 49.197l-.11.11c9.836 23.337 8.237 56.037-9.308 79.469 8.681 25.895-.069 57.704-16.382 74.757 4.298 17.598 2.244 32.575-6.148 44.632C440.202 511.587 389.616 512 346.839 512l-2.845-.001c-48.287-.017-87.806-17.598-119.56-31.725-15.957-7.099-36.821-15.887-52.651-16.178-6.54-.12-11.783-5.457-11.783-11.998v-213.77c0-3.2 1.282-6.271 3.558-8.521 39.614-39.144 56.648-80.587 89.117-113.111 14.804-14.832 20.188-37.236 25.393-58.902C282.515 39.293 291.817 0 312 0c24 0 72 8 72 81.452z\"],\n    \"thumbtack\": [384, 512, [], \"f08d\", \"M298.028 214.267L285.793 96H328c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24H56C42.745 0 32 10.745 32 24v48c0 13.255 10.745 24 24 24h42.207L85.972 214.267C37.465 236.82 0 277.261 0 328c0 13.255 10.745 24 24 24h136v104.007c0 1.242.289 2.467.845 3.578l24 48c2.941 5.882 11.364 5.893 14.311 0l24-48a8.008 8.008 0 0 0 .845-3.578V352h136c13.255 0 24-10.745 24-24-.001-51.183-37.983-91.42-85.973-113.733z\"],\n    \"ticket-alt\": [576, 512, [], \"f3ff\", \"M128 160h320v192H128V160zm400 96c0 26.51 21.49 48 48 48v96c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48v-96c26.51 0 48-21.49 48-48s-21.49-48-48-48v-96c0-26.51 21.49-48 48-48h480c26.51 0 48 21.49 48 48v96c-26.51 0-48 21.49-48 48zm-48-104c0-13.255-10.745-24-24-24H120c-13.255 0-24 10.745-24 24v208c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V152z\"],\n    \"times\": [352, 512, [], \"f00d\", \"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"],\n    \"times-circle\": [512, 512, [], \"f057\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\"],\n    \"tint\": [352, 512, [], \"f043\", \"M205.22 22.09c-7.94-28.78-49.44-30.12-58.44 0C100.01 179.85 0 222.72 0 333.91 0 432.35 78.72 512 176 512s176-79.65 176-178.09c0-111.75-99.79-153.34-146.78-311.82zM176 448c-61.75 0-112-50.25-112-112 0-8.84 7.16-16 16-16s16 7.16 16 16c0 44.11 35.89 80 80 80 8.84 0 16 7.16 16 16s-7.16 16-16 16z\"],\n    \"tint-slash\": [640, 512, [], \"f5c7\", \"M633.82 458.1L494.97 350.78c.52-5.57 1.03-11.16 1.03-16.87 0-111.76-99.79-153.34-146.78-311.82-7.94-28.78-49.44-30.12-58.44 0-15.52 52.34-36.87 91.96-58.49 125.68L45.47 3.37C38.49-2.05 28.43-.8 23.01 6.18L3.37 31.45C-2.05 38.42-.8 48.47 6.18 53.9l588.36 454.73c6.98 5.43 17.03 4.17 22.46-2.81l19.64-25.27c5.41-6.97 4.16-17.02-2.82-22.45zM144 333.91C144 432.35 222.72 512 320 512c44.71 0 85.37-16.96 116.4-44.7L162.72 255.78c-11.41 23.5-18.72 48.35-18.72 78.13z\"],\n    \"tired\": [496, 512, [], \"f5c8\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm33.8 189.7l80-48c11.6-6.9 24 7.7 15.4 18L343.6 208l33.6 40.3c8.7 10.4-3.9 24.8-15.4 18l-80-48c-7.7-4.7-7.7-15.9 0-20.6zm-163-30c-8.6-10.3 3.8-24.9 15.4-18l80 48c7.8 4.7 7.8 15.9 0 20.6l-80 48c-11.5 6.8-24-7.6-15.4-18l33.6-40.3-33.6-40.3zM248 288c51.9 0 115.3 43.8 123.2 106.7 1.7 13.6-8 24.6-17.7 20.4-25.9-11.1-64.4-17.4-105.5-17.4s-79.6 6.3-105.5 17.4c-9.8 4.2-19.4-7-17.7-20.4C132.7 331.8 196.1 288 248 288z\"],\n    \"toggle-off\": [576, 512, [], \"f204\", \"M384 64H192C85.961 64 0 149.961 0 256s85.961 192 192 192h192c106.039 0 192-85.961 192-192S490.039 64 384 64zM64 256c0-70.741 57.249-128 128-128 70.741 0 128 57.249 128 128 0 70.741-57.249 128-128 128-70.741 0-128-57.249-128-128zm320 128h-48.905c65.217-72.858 65.236-183.12 0-256H384c70.741 0 128 57.249 128 128 0 70.74-57.249 128-128 128z\"],\n    \"toggle-on\": [576, 512, [], \"f205\", \"M384 64H192C86 64 0 150 0 256s86 192 192 192h192c106 0 192-86 192-192S490 64 384 64zm0 320c-70.8 0-128-57.3-128-128 0-70.8 57.3-128 128-128 70.8 0 128 57.3 128 128 0 70.8-57.3 128-128 128z\"],\n    \"toilet\": [384, 512, [], \"f7d8\", \"M368 48c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16H16C7.2 0 0 7.2 0 16v16c0 8.8 7.2 16 16 16h16v156.7C11.8 214.8 0 226.9 0 240c0 67.2 34.6 126.2 86.8 160.5l-21.4 70.2C59.1 491.2 74.5 512 96 512h192c21.5 0 36.9-20.8 30.6-41.3l-21.4-70.2C349.4 366.2 384 307.2 384 240c0-13.1-11.8-25.2-32-35.3V48h16zM80 72c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H88c-4.4 0-8-3.6-8-8V72zm112 200c-77.1 0-139.6-14.3-139.6-32s62.5-32 139.6-32 139.6 14.3 139.6 32-62.5 32-139.6 32z\"],\n    \"toilet-paper\": [576, 512, [], \"f71e\", \"M128 0C74.98 0 32 85.96 32 192v172.07c0 41.12-9.8 62.77-31.17 126.87C-2.62 501.3 5.09 512 16.01 512h280.92c13.77 0 26-8.81 30.36-21.88 12.83-38.48 24.71-72.4 24.71-126.05V192c0-83.6 23.67-153.52 60.44-192H128zM96 224c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16zm64 0c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16zm64 0c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16zm64 0c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16zM480 0c-53.02 0-96 85.96-96 192s42.98 192 96 192 96-85.96 96-192S533.02 0 480 0zm0 256c-17.67 0-32-28.65-32-64s14.33-64 32-64 32 28.65 32 64-14.33 64-32 64z\"],\n    \"toilet-paper-slash\": [640, 512, [], \"e072\", \"M64,192V364.13c0,41.12-9.75,62.75-31.12,126.87A16,16,0,0,0,48,512H328.86a31.87,31.87,0,0,0,30.38-21.87c9.31-27.83,18-53.35,22.18-85.55l-316-244.25C64.53,170.66,64,181.19,64,192ZM633.82,458.09l-102-78.81C575.28,360.91,608,284.32,608,192,608,86,565,0,512,0s-96,86-96,192c0,42,7,80.4,18.43,112L384,265V192c0-83.62,23.63-153.5,60.5-192H160c-23.33,0-44.63,16.83-61.26,44.53L45.46,3.38A16,16,0,0,0,23,6.19L3.37,31.45A16,16,0,0,0,6.18,53.91L594.54,508.63A16,16,0,0,0,617,505.81l19.64-25.26A16,16,0,0,0,633.82,458.09ZM512,256c-17.63,0-32-28.62-32-64s14.37-64,32-64,32,28.63,32,64S529.62,256,512,256Z\"],\n    \"toolbox\": [512, 512, [], \"f552\", \"M502.63 214.63l-45.25-45.25c-6-6-14.14-9.37-22.63-9.37H384V80c0-26.51-21.49-48-48-48H176c-26.51 0-48 21.49-48 48v80H77.25c-8.49 0-16.62 3.37-22.63 9.37L9.37 214.63c-6 6-9.37 14.14-9.37 22.63V320h128v-16c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v16h128v-16c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v16h128v-82.75c0-8.48-3.37-16.62-9.37-22.62zM320 160H192V96h128v64zm64 208c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-16H192v16c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-16H0v96c0 17.67 14.33 32 32 32h448c17.67 0 32-14.33 32-32v-96H384v16z\"],\n    \"tools\": [512, 512, [], \"f7d9\", \"M501.1 395.7L384 278.6c-23.1-23.1-57.6-27.6-85.4-13.9L192 158.1V96L64 0 0 64l96 128h62.1l106.6 106.6c-13.6 27.8-9.2 62.3 13.9 85.4l117.1 117.1c14.6 14.6 38.2 14.6 52.7 0l52.7-52.7c14.5-14.6 14.5-38.2 0-52.7zM331.7 225c28.3 0 54.9 11 74.9 31l19.4 19.4c15.8-6.9 30.8-16.5 43.8-29.5 37.1-37.1 49.7-89.3 37.9-136.7-2.2-9-13.5-12.1-20.1-5.5l-74.4 74.4-67.9-11.3L334 98.9l74.4-74.4c6.6-6.6 3.4-17.9-5.7-20.2-47.4-11.7-99.6.9-136.6 37.9-28.5 28.5-41.9 66.1-41.2 103.6l82.1 82.1c8.1-1.9 16.5-2.9 24.7-2.9zm-103.9 82l-56.7-56.7L18.7 402.8c-25 25-25 65.5 0 90.5s65.5 25 90.5 0l123.6-123.6c-7.6-19.9-9.9-41.6-5-62.7zM64 472c-13.2 0-24-10.8-24-24 0-13.3 10.7-24 24-24s24 10.7 24 24c0 13.2-10.7 24-24 24z\"],\n    \"tooth\": [448, 512, [], \"f5c9\", \"M443.98 96.25c-11.01-45.22-47.11-82.06-92.01-93.72-32.19-8.36-63 5.1-89.14 24.33-3.25 2.39-6.96 3.73-10.5 5.48l28.32 18.21c7.42 4.77 9.58 14.67 4.8 22.11-4.46 6.95-14.27 9.86-22.11 4.8L162.83 12.84c-20.7-10.85-43.38-16.4-66.81-10.31-44.9 11.67-81 48.5-92.01 93.72-10.13 41.62-.42 80.81 21.5 110.43 23.36 31.57 32.68 68.66 36.29 107.35 4.4 47.16 10.33 94.16 20.94 140.32l7.8 33.95c3.19 13.87 15.49 23.7 29.67 23.7 13.97 0 26.15-9.55 29.54-23.16l34.47-138.42c4.56-18.32 20.96-31.16 39.76-31.16s35.2 12.85 39.76 31.16l34.47 138.42c3.39 13.61 15.57 23.16 29.54 23.16 14.18 0 26.48-9.83 29.67-23.7l7.8-33.95c10.61-46.15 16.53-93.16 20.94-140.32 3.61-38.7 12.93-75.78 36.29-107.35 21.95-29.61 31.66-68.8 21.53-110.43z\"],\n    \"torah\": [640, 512, [], \"f6a0\", \"M320.05 366.48l17.72-29.64h-35.46zm99.21-166H382.4l18.46 30.82zM48 0C21.49 0 0 14.33 0 32v448c0 17.67 21.49 32 48 32s48-14.33 48-32V32C96 14.33 74.51 0 48 0zm172.74 311.5h36.85l-18.46-30.82zm161.71 0h36.86l-18.45-30.8zM128 464h384V48H128zm66.77-278.13a21.22 21.22 0 0 1 18.48-10.71h59.45l29.13-48.71a21.13 21.13 0 0 1 18.22-10.37A20.76 20.76 0 0 1 338 126.29l29.25 48.86h59.52a21.12 21.12 0 0 1 18.1 32L415.63 256 445 305a20.69 20.69 0 0 1 .24 21.12 21.25 21.25 0 0 1-18.48 10.72h-59.47l-29.13 48.7a21.13 21.13 0 0 1-18.16 10.4 20.79 20.79 0 0 1-18-10.22l-29.25-48.88h-59.5a21.11 21.11 0 0 1-18.1-32L224.36 256 195 207a20.7 20.7 0 0 1-.23-21.13zM592 0c-26.51 0-48 14.33-48 32v448c0 17.67 21.49 32 48 32s48-14.33 48-32V32c0-17.67-21.49-32-48-32zM320 145.53l-17.78 29.62h35.46zm-62.45 55h-36.81l18.44 30.8zm29.58 111h65.79L386.09 256l-33.23-55.52h-65.79L253.9 256z\"],\n    \"torii-gate\": [512, 512, [], \"f6a1\", \"M376.45 32h-240.9A303.17 303.17 0 0 1 0 0v96c0 17.67 14.33 32 32 32h32v64H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h48v240c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V256h256v240c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V256h48c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16h-48v-64h32c17.67 0 32-14.33 32-32V0a303.17 303.17 0 0 1-135.55 32zM128 128h96v64h-96v-64zm256 64h-96v-64h96v64z\"],\n    \"tractor\": [640, 512, [], \"f722\", \"M528 336c-48.6 0-88 39.4-88 88s39.4 88 88 88 88-39.4 88-88-39.4-88-88-88zm0 112c-13.23 0-24-10.77-24-24s10.77-24 24-24 24 10.77 24 24-10.77 24-24 24zm80-288h-64v-40.2c0-14.12 4.7-27.76 13.15-38.84 4.42-5.8 3.55-14.06-1.32-19.49L534.2 37.3c-6.66-7.45-18.32-6.92-24.7.78C490.58 60.9 480 89.81 480 119.8V160H377.67L321.58 29.14A47.914 47.914 0 0 0 277.45 0H144c-26.47 0-48 21.53-48 48v146.52c-8.63-6.73-20.96-6.46-28.89 1.47L36 227.1c-8.59 8.59-8.59 22.52 0 31.11l5.06 5.06c-4.99 9.26-8.96 18.82-11.91 28.72H22c-12.15 0-22 9.85-22 22v44c0 12.15 9.85 22 22 22h7.14c2.96 9.91 6.92 19.46 11.91 28.73l-5.06 5.06c-8.59 8.59-8.59 22.52 0 31.11L67.1 476c8.59 8.59 22.52 8.59 31.11 0l5.06-5.06c9.26 4.99 18.82 8.96 28.72 11.91V490c0 12.15 9.85 22 22 22h44c12.15 0 22-9.85 22-22v-7.14c9.9-2.95 19.46-6.92 28.72-11.91l5.06 5.06c8.59 8.59 22.52 8.59 31.11 0l31.11-31.11c8.59-8.59 8.59-22.52 0-31.11l-5.06-5.06c4.99-9.26 8.96-18.82 11.91-28.72H330c12.15 0 22-9.85 22-22v-6h80.54c21.91-28.99 56.32-48 95.46-48 18.64 0 36.07 4.61 51.8 12.2l50.82-50.82c6-6 9.37-14.14 9.37-22.63V192c.01-17.67-14.32-32-31.99-32zM176 416c-44.18 0-80-35.82-80-80s35.82-80 80-80 80 35.82 80 80-35.82 80-80 80zm22-256h-38V64h106.89l41.15 96H198z\"],\n    \"trademark\": [640, 512, [], \"f25c\", \"M260.6 96H12c-6.6 0-12 5.4-12 12v43.1c0 6.6 5.4 12 12 12h85.1V404c0 6.6 5.4 12 12 12h54.3c6.6 0 12-5.4 12-12V163.1h85.1c6.6 0 12-5.4 12-12V108c.1-6.6-5.3-12-11.9-12zM640 403l-24-296c-.5-6.2-5.7-11-12-11h-65.4c-5.1 0-9.7 3.3-11.3 8.1l-43.8 127.1c-7.2 20.6-16.1 52.8-16.1 52.8h-.9s-8.9-32.2-16.1-52.8l-43.8-127.1c-1.7-4.8-6.2-8.1-11.3-8.1h-65.4c-6.2 0-11.4 4.8-12 11l-24.4 296c-.6 7 4.9 13 12 13H360c6.3 0 11.5-4.9 12-11.2l9.1-132.9c1.8-24.2 0-53.7 0-53.7h.9s10.7 33.6 17.9 53.7l30.7 84.7c1.7 4.7 6.2 7.9 11.3 7.9h50.3c5.1 0 9.6-3.2 11.3-7.9l30.7-84.7c7.2-20.1 17.9-53.7 17.9-53.7h.9s-1.8 29.5 0 53.7l9.1 132.9c.4 6.3 5.7 11.2 12 11.2H628c7 0 12.5-6 12-13z\"],\n    \"traffic-light\": [384, 512, [], \"f637\", \"M384 192h-64v-37.88c37.2-13.22 64-48.38 64-90.12h-64V32c0-17.67-14.33-32-32-32H96C78.33 0 64 14.33 64 32v32H0c0 41.74 26.8 76.9 64 90.12V192H0c0 41.74 26.8 76.9 64 90.12V320H0c0 42.84 28.25 78.69 66.99 91.05C79.42 468.72 130.6 512 192 512s112.58-43.28 125.01-100.95C355.75 398.69 384 362.84 384 320h-64v-37.88c37.2-13.22 64-48.38 64-90.12zM192 416c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm0-128c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm0-128c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48z\"],\n    \"trailer\": [640, 512, [], \"e041\", \"M624,320H544V80a16,16,0,0,0-16-16H16A16,16,0,0,0,0,80V368a16,16,0,0,0,16,16H65.61c7.83-54.21,54-96,110.39-96s102.56,41.79,110.39,96H624a16,16,0,0,0,16-16V336A16,16,0,0,0,624,320ZM96,243.68a176.29,176.29,0,0,0-32,20.71V136a8,8,0,0,1,8-8H88a8,8,0,0,1,8,8Zm96-18.54c-5.31-.49-10.57-1.14-16-1.14s-10.69.65-16,1.14V136a8,8,0,0,1,8-8h16a8,8,0,0,1,8,8Zm96,39.25a176.29,176.29,0,0,0-32-20.71V136a8,8,0,0,1,8-8h16a8,8,0,0,1,8,8ZM384,320H352V136a8,8,0,0,1,8-8h16a8,8,0,0,1,8,8Zm96,0H448V136a8,8,0,0,1,8-8h16a8,8,0,0,1,8,8Zm-304,0a80,80,0,1,0,80,80A80,80,0,0,0,176,320Zm0,112a32,32,0,1,1,32-32A32,32,0,0,1,176,432Z\"],\n    \"train\": [448, 512, [], \"f238\", \"M448 96v256c0 51.815-61.624 96-130.022 96l62.98 49.721C386.905 502.417 383.562 512 376 512H72c-7.578 0-10.892-9.594-4.957-14.279L130.022 448C61.82 448 0 403.954 0 352V96C0 42.981 64 0 128 0h192c65 0 128 42.981 128 96zm-48 136V120c0-13.255-10.745-24-24-24H72c-13.255 0-24 10.745-24 24v112c0 13.255 10.745 24 24 24h304c13.255 0 24-10.745 24-24zm-176 64c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56z\"],\n    \"tram\": [512, 512, [], \"f7da\", \"M288 64c17.7 0 32-14.3 32-32S305.7 0 288 0s-32 14.3-32 32 14.3 32 32 32zm223.5-12.1c-2.3-8.6-11-13.6-19.6-11.3l-480 128c-8.5 2.3-13.6 11-11.3 19.6C2.5 195.3 8.9 200 16 200c1.4 0 2.8-.2 4.1-.5L240 140.8V224H64c-17.7 0-32 14.3-32 32v224c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V256c0-17.7-14.3-32-32-32H272v-91.7l228.1-60.8c8.6-2.3 13.6-11.1 11.4-19.6zM176 384H80v-96h96v96zm160-96h96v96h-96v-96zm-32 0v96h-96v-96h96zM192 96c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32z\"],\n    \"transgender\": [384, 512, [], \"f224\", \"M372 0h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-80.7 80.7C198.5 104.1 172.2 96 144 96 64.5 96 0 160.5 0 240c0 68.5 47.9 125.9 112 140.4V408H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v28c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-28h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-27.6c64.1-14.6 112-71.9 112-140.4 0-28.2-8.1-54.5-22.1-76.7l80.7-80.7 16.9 16.9c7.6 7.6 20.5 2.2 20.5-8.5V12c0-6.6-5.4-12-12-12zM144 320c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"],\n    \"transgender-alt\": [480, 512, [], \"f225\", \"M468 0h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-80.7 80.7C294.5 104.1 268.2 96 240 96c-28.2 0-54.5 8.1-76.7 22.1l-16.5-16.5 19.8-19.8c4.7-4.7 4.7-12.3 0-17l-28.3-28.3c-4.7-4.7-12.3-4.7-17 0l-19.8 19.8-19-19 16.9-16.9C107.1 12.9 101.7 0 91 0H12C5.4 0 0 5.4 0 12v79c0 10.7 12.9 16 20.5 8.5l16.9-16.9 19 19-19.8 19.8c-4.7 4.7-4.7 12.3 0 17l28.3 28.3c4.7 4.7 12.3 4.7 17 0l19.8-19.8 16.5 16.5C104.1 185.5 96 211.8 96 240c0 68.5 47.9 125.9 112 140.4V408h-36c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v28c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-28h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-27.6c64.1-14.6 112-71.9 112-140.4 0-28.2-8.1-54.5-22.1-76.7l80.7-80.7 16.9 16.9c7.6 7.6 20.5 2.2 20.5-8.5V12c0-6.6-5.4-12-12-12zM240 320c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"],\n    \"trash\": [448, 512, [], \"f1f8\", \"M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z\"],\n    \"trash-alt\": [448, 512, [], \"f2ed\", \"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"],\n    \"trash-restore\": [448, 512, [], \"f829\", \"M53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32zm70.11-175.8l89.38-94.26a15.41 15.41 0 0 1 22.62 0l89.38 94.26c10.08 10.62 2.94 28.8-11.32 28.8H256v112a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V320h-57.37c-14.26 0-21.4-18.18-11.32-28.8zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"],\n    \"trash-restore-alt\": [448, 512, [], \"f82a\", \"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm91.31-172.8l89.38-94.26a15.41 15.41 0 0 1 22.62 0l89.38 94.26c10.08 10.62 2.94 28.8-11.32 28.8H256v112a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V320h-57.37c-14.26 0-21.4-18.18-11.32-28.8zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"],\n    \"tree\": [384, 512, [], \"f1bb\", \"M378.31 378.49L298.42 288h30.63c9.01 0 16.98-5 20.78-13.06 3.8-8.04 2.55-17.26-3.28-24.05L268.42 160h28.89c9.1 0 17.3-5.35 20.86-13.61 3.52-8.13 1.86-17.59-4.24-24.08L203.66 4.83c-6.03-6.45-17.28-6.45-23.32 0L70.06 122.31c-6.1 6.49-7.75 15.95-4.24 24.08C69.38 154.65 77.59 160 86.69 160h28.89l-78.14 90.91c-5.81 6.78-7.06 15.99-3.27 24.04C37.97 283 45.93 288 54.95 288h30.63L5.69 378.49c-6 6.79-7.36 16.09-3.56 24.26 3.75 8.05 12 13.25 21.01 13.25H160v24.45l-30.29 48.4c-5.32 10.64 2.42 23.16 14.31 23.16h95.96c11.89 0 19.63-12.52 14.31-23.16L224 440.45V416h136.86c9.01 0 17.26-5.2 21.01-13.25 3.8-8.17 2.44-17.47-3.56-24.26z\"],\n    \"trophy\": [576, 512, [], \"f091\", \"M552 64H448V24c0-13.3-10.7-24-24-24H152c-13.3 0-24 10.7-24 24v40H24C10.7 64 0 74.7 0 88v56c0 35.7 22.5 72.4 61.9 100.7 31.5 22.7 69.8 37.1 110 41.7C203.3 338.5 240 360 240 360v72h-48c-35.3 0-64 20.7-64 56v12c0 6.6 5.4 12 12 12h296c6.6 0 12-5.4 12-12v-12c0-35.3-28.7-56-64-56h-48v-72s36.7-21.5 68.1-73.6c40.3-4.6 78.6-19 110-41.7 39.3-28.3 61.9-65 61.9-100.7V88c0-13.3-10.7-24-24-24zM99.3 192.8C74.9 175.2 64 155.6 64 144v-16h64.2c1 32.6 5.8 61.2 12.8 86.2-15.1-5.2-29.2-12.4-41.7-21.4zM512 144c0 16.1-17.7 36.1-35.3 48.8-12.5 9-26.7 16.2-41.8 21.4 7-25 11.8-53.6 12.8-86.2H512v16z\"],\n    \"truck\": [640, 512, [], \"f0d1\", \"M624 352h-16V243.9c0-12.7-5.1-24.9-14.1-33.9L494 110.1c-9-9-21.2-14.1-33.9-14.1H416V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48v320c0 26.5 21.5 48 48 48h16c0 53 43 96 96 96s96-43 96-96h128c0 53 43 96 96 96s96-43 96-96h48c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM160 464c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm320 0c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm80-208H416V144h44.1l99.9 99.9V256z\"],\n    \"truck-loading\": [640, 512, [], \"f4de\", \"M50.2 375.6c2.3 8.5 11.1 13.6 19.6 11.3l216.4-58c8.5-2.3 13.6-11.1 11.3-19.6l-49.7-185.5c-2.3-8.5-11.1-13.6-19.6-11.3L151 133.3l24.8 92.7-61.8 16.5-24.8-92.7-77.3 20.7C3.4 172.8-1.7 181.6.6 190.1l49.6 185.5zM384 0c-17.7 0-32 14.3-32 32v323.6L5.9 450c-4.3 1.2-6.8 5.6-5.6 9.8l12.6 46.3c1.2 4.3 5.6 6.8 9.8 5.6l393.7-107.4C418.8 464.1 467.6 512 528 512c61.9 0 112-50.1 112-112V0H384zm144 448c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z\"],\n    \"truck-monster\": [640, 512, [], \"f63b\", \"M624 224h-16v-64c0-17.67-14.33-32-32-32h-73.6L419.22 24.02A64.025 64.025 0 0 0 369.24 0H256c-17.67 0-32 14.33-32 32v96H48c-8.84 0-16 7.16-16 16v80H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h16.72c29.21-38.65 75.1-64 127.28-64s98.07 25.35 127.28 64h65.45c29.21-38.65 75.1-64 127.28-64s98.07 25.35 127.28 64H624c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zm-336-96V64h81.24l51.2 64H288zm304 224h-5.2c-2.2-7.33-5.07-14.28-8.65-20.89l3.67-3.67c6.25-6.25 6.25-16.38 0-22.63l-22.63-22.63c-6.25-6.25-16.38-6.25-22.63 0l-3.67 3.67A110.85 110.85 0 0 0 512 277.2V272c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v5.2c-7.33 2.2-14.28 5.07-20.89 8.65l-3.67-3.67c-6.25-6.25-16.38-6.25-22.63 0l-22.63 22.63c-6.25 6.25-6.25 16.38 0 22.63l3.67 3.67A110.85 110.85 0 0 0 373.2 352H368c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h5.2c2.2 7.33 5.07 14.28 8.65 20.89l-3.67 3.67c-6.25 6.25-6.25 16.38 0 22.63l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0l3.67-3.67c6.61 3.57 13.57 6.45 20.9 8.65v5.2c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-5.2c7.33-2.2 14.28-5.07 20.9-8.65l3.67 3.67c6.25 6.25 16.38 6.25 22.63 0l22.63-22.63c6.25-6.25 6.25-16.38 0-22.63l-3.67-3.67a110.85 110.85 0 0 0 8.65-20.89h5.2c8.84 0 16-7.16 16-16v-32c-.02-8.84-7.18-16-16.02-16zm-112 80c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm-208-80h-5.2c-2.2-7.33-5.07-14.28-8.65-20.89l3.67-3.67c6.25-6.25 6.25-16.38 0-22.63l-22.63-22.63c-6.25-6.25-16.38-6.25-22.63 0l-3.67 3.67A110.85 110.85 0 0 0 192 277.2V272c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v5.2c-7.33 2.2-14.28 5.07-20.89 8.65l-3.67-3.67c-6.25-6.25-16.38-6.25-22.63 0L58.18 304.8c-6.25 6.25-6.25 16.38 0 22.63l3.67 3.67a110.85 110.85 0 0 0-8.65 20.89H48c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h5.2c2.2 7.33 5.07 14.28 8.65 20.89l-3.67 3.67c-6.25 6.25-6.25 16.38 0 22.63l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0l3.67-3.67c6.61 3.57 13.57 6.45 20.9 8.65v5.2c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-5.2c7.33-2.2 14.28-5.07 20.9-8.65l3.67 3.67c6.25 6.25 16.38 6.25 22.63 0l22.63-22.63c6.25-6.25 6.25-16.38 0-22.63l-3.67-3.67a110.85 110.85 0 0 0 8.65-20.89h5.2c8.84 0 16-7.16 16-16v-32C288 359.16 280.84 352 272 352zm-112 80c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48z\"],\n    \"truck-moving\": [640, 512, [], \"f4df\", \"M621.3 237.3l-58.5-58.5c-12-12-28.3-18.7-45.3-18.7H480V64c0-17.7-14.3-32-32-32H32C14.3 32 0 46.3 0 64v336c0 44.2 35.8 80 80 80 26.3 0 49.4-12.9 64-32.4 14.6 19.6 37.7 32.4 64 32.4 44.2 0 80-35.8 80-80 0-5.5-.6-10.8-1.6-16h163.2c-1.1 5.2-1.6 10.5-1.6 16 0 44.2 35.8 80 80 80s80-35.8 80-80c0-5.5-.6-10.8-1.6-16H624c8.8 0 16-7.2 16-16v-85.5c0-17-6.7-33.2-18.7-45.2zM80 432c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32zm128 0c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32zm272-224h37.5c4.3 0 8.3 1.7 11.3 4.7l43.3 43.3H480v-48zm48 224c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32z\"],\n    \"truck-pickup\": [640, 512, [], \"f63c\", \"M624 288h-16v-64c0-17.67-14.33-32-32-32h-48L419.22 56.02A64.025 64.025 0 0 0 369.24 32H256c-17.67 0-32 14.33-32 32v128H64c-17.67 0-32 14.33-32 32v64H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h49.61c-.76 5.27-1.61 10.52-1.61 16 0 61.86 50.14 112 112 112s112-50.14 112-112c0-5.48-.85-10.73-1.61-16h67.23c-.76 5.27-1.61 10.52-1.61 16 0 61.86 50.14 112 112 112s112-50.14 112-112c0-5.48-.85-10.73-1.61-16H624c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM288 96h81.24l76.8 96H288V96zM176 416c-26.47 0-48-21.53-48-48s21.53-48 48-48 48 21.53 48 48-21.53 48-48 48zm288 0c-26.47 0-48-21.53-48-48s21.53-48 48-48 48 21.53 48 48-21.53 48-48 48z\"],\n    \"tshirt\": [640, 512, [], \"f553\", \"M631.2 96.5L436.5 0C416.4 27.8 371.9 47.2 320 47.2S223.6 27.8 203.5 0L8.8 96.5c-7.9 4-11.1 13.6-7.2 21.5l57.2 114.5c4 7.9 13.6 11.1 21.5 7.2l56.6-27.7c10.6-5.2 23 2.5 23 14.4V480c0 17.7 14.3 32 32 32h256c17.7 0 32-14.3 32-32V226.3c0-11.8 12.4-19.6 23-14.4l56.6 27.7c7.9 4 17.5.8 21.5-7.2L638.3 118c4-7.9.8-17.6-7.1-21.5z\"],\n    \"tty\": [512, 512, [], \"f1e4\", \"M5.37 103.822c138.532-138.532 362.936-138.326 501.262 0 6.078 6.078 7.074 15.496 2.583 22.681l-43.214 69.138a18.332 18.332 0 0 1-22.356 7.305l-86.422-34.569a18.335 18.335 0 0 1-11.434-18.846L351.741 90c-62.145-22.454-130.636-21.986-191.483 0l5.953 59.532a18.331 18.331 0 0 1-11.434 18.846l-86.423 34.568a18.334 18.334 0 0 1-22.356-7.305L2.787 126.502a18.333 18.333 0 0 1 2.583-22.68zM96 308v-40c0-6.627-5.373-12-12-12H44c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12H92c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zM96 500v-40c0-6.627-5.373-12-12-12H44c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm288 0v-40c0-6.627-5.373-12-12-12H140c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h232c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12z\"],\n    \"tv\": [640, 512, [], \"f26c\", \"M592 0H48A48 48 0 0 0 0 48v320a48 48 0 0 0 48 48h240v32H112a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H352v-32h240a48 48 0 0 0 48-48V48a48 48 0 0 0-48-48zm-16 352H64V64h512z\"],\n    \"umbrella\": [576, 512, [], \"f0e9\", \"M575.7 280.8C547.1 144.5 437.3 62.6 320 49.9V32c0-17.7-14.3-32-32-32s-32 14.3-32 32v17.9C138.3 62.6 29.5 144.5.3 280.8c-2.2 10.1 8.5 21.3 18.7 11.4 52-55 107.7-52.4 158.6 37 5.3 9.5 14.9 8.6 19.7 0 20.2-35.4 44.9-73.2 90.7-73.2 58.5 0 88.2 68.8 90.7 73.2 4.8 8.6 14.4 9.5 19.7 0 51-89.5 107.1-91.4 158.6-37 10.3 10 20.9-1.3 18.7-11.4zM256 301.7V432c0 8.8-7.2 16-16 16-7.8 0-13.2-5.3-15.1-10.7-5.9-16.7-24.1-25.4-40.8-19.5-16.7 5.9-25.4 24.2-19.5 40.8 11.2 31.9 41.6 53.3 75.4 53.3 44.1 0 80-35.9 80-80V301.6c-9.1-7.9-19.8-13.6-32-13.6-12.3.1-22.4 4.8-32 13.7z\"],\n    \"umbrella-beach\": [640, 512, [], \"f5ca\", \"M115.38 136.9l102.11 37.18c35.19-81.54 86.21-144.29 139-173.7-95.88-4.89-188.78 36.96-248.53 111.8-6.69 8.4-2.66 21.05 7.42 24.72zm132.25 48.16l238.48 86.83c35.76-121.38 18.7-231.66-42.63-253.98-7.4-2.7-15.13-4-23.09-4-58.02.01-128.27 69.17-172.76 171.15zM521.48 60.5c6.22 16.3 10.83 34.6 13.2 55.19 5.74 49.89-1.42 108.23-18.95 166.98l102.62 37.36c10.09 3.67 21.31-3.43 21.57-14.17 2.32-95.69-41.91-187.44-118.44-245.36zM560 447.98H321.06L386 269.5l-60.14-21.9-72.9 200.37H16c-8.84 0-16 7.16-16 16.01v32.01C0 504.83 7.16 512 16 512h544c8.84 0 16-7.17 16-16.01v-32.01c0-8.84-7.16-16-16-16z\"],\n    \"underline\": [448, 512, [], \"f0cd\", \"M32 64h32v160c0 88.22 71.78 160 160 160s160-71.78 160-160V64h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16H272a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32v160a80 80 0 0 1-160 0V64h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16H32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm400 384H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\"],\n    \"undo\": [512, 512, [], \"f0e2\", \"M212.333 224.333H12c-6.627 0-12-5.373-12-12V12C0 5.373 5.373 0 12 0h48c6.627 0 12 5.373 12 12v78.112C117.773 39.279 184.26 7.47 258.175 8.007c136.906.994 246.448 111.623 246.157 248.532C504.041 393.258 393.12 504 256.333 504c-64.089 0-122.496-24.313-166.51-64.215-5.099-4.622-5.334-12.554-.467-17.42l33.967-33.967c4.474-4.474 11.662-4.717 16.401-.525C170.76 415.336 211.58 432 256.333 432c97.268 0 176-78.716 176-176 0-97.267-78.716-176-176-176-58.496 0-110.28 28.476-142.274 72.333h98.274c6.627 0 12 5.373 12 12v48c0 6.627-5.373 12-12 12z\"],\n    \"undo-alt\": [512, 512, [], \"f2ea\", \"M255.545 8c-66.269.119-126.438 26.233-170.86 68.685L48.971 40.971C33.851 25.851 8 36.559 8 57.941V192c0 13.255 10.745 24 24 24h134.059c21.382 0 32.09-25.851 16.971-40.971l-41.75-41.75c30.864-28.899 70.801-44.907 113.23-45.273 92.398-.798 170.283 73.977 169.484 169.442C423.236 348.009 349.816 424 256 424c-41.127 0-79.997-14.678-110.63-41.556-4.743-4.161-11.906-3.908-16.368.553L89.34 422.659c-4.872 4.872-4.631 12.815.482 17.433C133.798 479.813 192.074 504 256 504c136.966 0 247.999-111.033 248-247.998C504.001 119.193 392.354 7.755 255.545 8z\"],\n    \"universal-access\": [512, 512, [], \"f29a\", \"M256 48c114.953 0 208 93.029 208 208 0 114.953-93.029 208-208 208-114.953 0-208-93.029-208-208 0-114.953 93.029-208 208-208m0-40C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 56C149.961 64 64 149.961 64 256s85.961 192 192 192 192-85.961 192-192S362.039 64 256 64zm0 44c19.882 0 36 16.118 36 36s-16.118 36-36 36-36-16.118-36-36 16.118-36 36-36zm117.741 98.023c-28.712 6.779-55.511 12.748-82.14 15.807.851 101.023 12.306 123.052 25.037 155.621 3.617 9.26-.957 19.698-10.217 23.315-9.261 3.617-19.699-.957-23.316-10.217-8.705-22.308-17.086-40.636-22.261-78.549h-9.686c-5.167 37.851-13.534 56.208-22.262 78.549-3.615 9.255-14.05 13.836-23.315 10.217-9.26-3.617-13.834-14.056-10.217-23.315 12.713-32.541 24.185-54.541 25.037-155.621-26.629-3.058-53.428-9.027-82.141-15.807-8.6-2.031-13.926-10.648-11.895-19.249s10.647-13.926 19.249-11.895c96.686 22.829 124.283 22.783 220.775 0 8.599-2.03 17.218 3.294 19.249 11.895 2.029 8.601-3.297 17.219-11.897 19.249z\"],\n    \"university\": [512, 512, [], \"f19c\", \"M496 128v16a8 8 0 0 1-8 8h-24v12c0 6.627-5.373 12-12 12H60c-6.627 0-12-5.373-12-12v-12H24a8 8 0 0 1-8-8v-16a8 8 0 0 1 4.941-7.392l232-88a7.996 7.996 0 0 1 6.118 0l232 88A8 8 0 0 1 496 128zm-24 304H40c-13.255 0-24 10.745-24 24v16a8 8 0 0 0 8 8h464a8 8 0 0 0 8-8v-16c0-13.255-10.745-24-24-24zM96 192v192H60c-6.627 0-12 5.373-12 12v20h416v-20c0-6.627-5.373-12-12-12h-36V192h-64v192h-64V192h-64v192h-64V192H96z\"],\n    \"unlink\": [512, 512, [], \"f127\", \"M304.083 405.907c4.686 4.686 4.686 12.284 0 16.971l-44.674 44.674c-59.263 59.262-155.693 59.266-214.961 0-59.264-59.265-59.264-155.696 0-214.96l44.675-44.675c4.686-4.686 12.284-4.686 16.971 0l39.598 39.598c4.686 4.686 4.686 12.284 0 16.971l-44.675 44.674c-28.072 28.073-28.072 73.75 0 101.823 28.072 28.072 73.75 28.073 101.824 0l44.674-44.674c4.686-4.686 12.284-4.686 16.971 0l39.597 39.598zm-56.568-260.216c4.686 4.686 12.284 4.686 16.971 0l44.674-44.674c28.072-28.075 73.75-28.073 101.824 0 28.072 28.073 28.072 73.75 0 101.823l-44.675 44.674c-4.686 4.686-4.686 12.284 0 16.971l39.598 39.598c4.686 4.686 12.284 4.686 16.971 0l44.675-44.675c59.265-59.265 59.265-155.695 0-214.96-59.266-59.264-155.695-59.264-214.961 0l-44.674 44.674c-4.686 4.686-4.686 12.284 0 16.971l39.597 39.598zm234.828 359.28l22.627-22.627c9.373-9.373 9.373-24.569 0-33.941L63.598 7.029c-9.373-9.373-24.569-9.373-33.941 0L7.029 29.657c-9.373 9.373-9.373 24.569 0 33.941l441.373 441.373c9.373 9.372 24.569 9.372 33.941 0z\"],\n    \"unlock\": [448, 512, [], \"f09c\", \"M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z\"],\n    \"unlock-alt\": [448, 512, [], \"f13e\", \"M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48zM264 408c0 22.1-17.9 40-40 40s-40-17.9-40-40v-48c0-22.1 17.9-40 40-40s40 17.9 40 40v48z\"],\n    \"upload\": [512, 512, [], \"f093\", \"M296 384h-80c-13.3 0-24-10.7-24-24V192h-87.7c-17.8 0-26.7-21.5-14.1-34.1L242.3 5.7c7.5-7.5 19.8-7.5 27.3 0l152.2 152.2c12.6 12.6 3.7 34.1-14.1 34.1H320v168c0 13.3-10.7 24-24 24zm216-8v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h136v8c0 30.9 25.1 56 56 56h80c30.9 0 56-25.1 56-56v-8h136c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z\"],\n    \"user\": [448, 512, [], \"f007\", \"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\"],\n    \"user-alt\": [512, 512, [], \"f406\", \"M256 288c79.5 0 144-64.5 144-144S335.5 0 256 0 112 64.5 112 144s64.5 144 144 144zm128 32h-55.1c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16H128C57.3 320 0 377.3 0 448v16c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-16c0-70.7-57.3-128-128-128z\"],\n    \"user-alt-slash\": [640, 512, [], \"f4fa\", \"M633.8 458.1L389.6 269.3C433.8 244.7 464 198.1 464 144 464 64.5 399.5 0 320 0c-67.1 0-123 46.1-139 108.2L45.5 3.4C38.5-2 28.5-.8 23 6.2L3.4 31.4c-5.4 7-4.2 17 2.8 22.4l588.4 454.7c7 5.4 17 4.2 22.5-2.8l19.6-25.3c5.4-6.8 4.1-16.9-2.9-22.3zM198.4 320C124.2 320 64 380.2 64 454.4v9.6c0 26.5 21.5 48 48 48h382.2L245.8 320h-47.4z\"],\n    \"user-astronaut\": [448, 512, [], \"f4fb\", \"M64 224h13.5c24.7 56.5 80.9 96 146.5 96s121.8-39.5 146.5-96H384c8.8 0 16-7.2 16-16v-96c0-8.8-7.2-16-16-16h-13.5C345.8 39.5 289.6 0 224 0S102.2 39.5 77.5 96H64c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16zm40-88c0-22.1 21.5-40 48-40h144c26.5 0 48 17.9 48 40v24c0 53-43 96-96 96h-48c-53 0-96-43-96-96v-24zm72 72l12-36 36-12-36-12-12-36-12 36-36 12 36 12 12 36zm151.6 113.4C297.7 340.7 262.2 352 224 352s-73.7-11.3-103.6-30.6C52.9 328.5 0 385 0 454.4v9.6c0 26.5 21.5 48 48 48h80v-64c0-17.7 14.3-32 32-32h128c17.7 0 32 14.3 32 32v64h80c26.5 0 48-21.5 48-48v-9.6c0-69.4-52.9-125.9-120.4-133zM272 448c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zm-96 0c-8.8 0-16 7.2-16 16v48h32v-48c0-8.8-7.2-16-16-16z\"],\n    \"user-check\": [640, 512, [], \"f4fc\", \"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4zm323-128.4l-27.8-28.1c-4.6-4.7-12.1-4.7-16.8-.1l-104.8 104-45.5-45.8c-4.6-4.7-12.1-4.7-16.8-.1l-28.1 27.9c-4.7 4.6-4.7 12.1-.1 16.8l81.7 82.3c4.6 4.7 12.1 4.7 16.8.1l141.3-140.2c4.6-4.7 4.7-12.2.1-16.8z\"],\n    \"user-circle\": [496, 512, [], \"f2bd\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 96c48.6 0 88 39.4 88 88s-39.4 88-88 88-88-39.4-88-88 39.4-88 88-88zm0 344c-58.7 0-111.3-26.6-146.5-68.2 18.8-35.4 55.6-59.8 98.5-59.8 2.4 0 4.8.4 7.1 1.1 13 4.2 26.6 6.9 40.9 6.9 14.3 0 28-2.7 40.9-6.9 2.3-.7 4.7-1.1 7.1-1.1 42.9 0 79.7 24.4 98.5 59.8C359.3 421.4 306.7 448 248 448z\"],\n    \"user-clock\": [640, 512, [], \"f4fd\", \"M496 224c-79.6 0-144 64.4-144 144s64.4 144 144 144 144-64.4 144-144-64.4-144-144-144zm64 150.3c0 5.3-4.4 9.7-9.7 9.7h-60.6c-5.3 0-9.7-4.4-9.7-9.7v-76.6c0-5.3 4.4-9.7 9.7-9.7h12.6c5.3 0 9.7 4.4 9.7 9.7V352h38.3c5.3 0 9.7 4.4 9.7 9.7v12.6zM320 368c0-27.8 6.7-54.1 18.2-77.5-8-1.5-16.2-2.5-24.6-2.5h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h347.1c-45.3-31.9-75.1-84.5-75.1-144zm-96-112c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128z\"],\n    \"user-cog\": [640, 512, [], \"f4fe\", \"M610.5 373.3c2.6-14.1 2.6-28.5 0-42.6l25.8-14.9c3-1.7 4.3-5.2 3.3-8.5-6.7-21.6-18.2-41.2-33.2-57.4-2.3-2.5-6-3.1-9-1.4l-25.8 14.9c-10.9-9.3-23.4-16.5-36.9-21.3v-29.8c0-3.4-2.4-6.4-5.7-7.1-22.3-5-45-4.8-66.2 0-3.3.7-5.7 3.7-5.7 7.1v29.8c-13.5 4.8-26 12-36.9 21.3l-25.8-14.9c-2.9-1.7-6.7-1.1-9 1.4-15 16.2-26.5 35.8-33.2 57.4-1 3.3.4 6.8 3.3 8.5l25.8 14.9c-2.6 14.1-2.6 28.5 0 42.6l-25.8 14.9c-3 1.7-4.3 5.2-3.3 8.5 6.7 21.6 18.2 41.1 33.2 57.4 2.3 2.5 6 3.1 9 1.4l25.8-14.9c10.9 9.3 23.4 16.5 36.9 21.3v29.8c0 3.4 2.4 6.4 5.7 7.1 22.3 5 45 4.8 66.2 0 3.3-.7 5.7-3.7 5.7-7.1v-29.8c13.5-4.8 26-12 36.9-21.3l25.8 14.9c2.9 1.7 6.7 1.1 9-1.4 15-16.2 26.5-35.8 33.2-57.4 1-3.3-.4-6.8-3.3-8.5l-25.8-14.9zM496 400.5c-26.8 0-48.5-21.8-48.5-48.5s21.8-48.5 48.5-48.5 48.5 21.8 48.5 48.5-21.7 48.5-48.5 48.5zM224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm201.2 226.5c-2.3-1.2-4.6-2.6-6.8-3.9l-7.9 4.6c-6 3.4-12.8 5.3-19.6 5.3-10.9 0-21.4-4.6-28.9-12.6-18.3-19.8-32.3-43.9-40.2-69.6-5.5-17.7 1.9-36.4 17.9-45.7l7.9-4.6c-.1-2.6-.1-5.2 0-7.8l-7.9-4.6c-16-9.2-23.4-28-17.9-45.7.9-2.9 2.2-5.8 3.2-8.7-3.8-.3-7.5-1.2-11.4-1.2h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c10.1 0 19.5-3.2 27.2-8.5-1.2-3.8-2-7.7-2-11.8v-9.2z\"],\n    \"user-edit\": [640, 512, [], \"f4ff\", \"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h274.9c-2.4-6.8-3.4-14-2.6-21.3l6.8-60.9 1.2-11.1 7.9-7.9 77.3-77.3c-24.5-27.7-60-45.5-99.9-45.5zm45.3 145.3l-6.8 61c-1.1 10.2 7.5 18.8 17.6 17.6l60.9-6.8 137.9-137.9-71.7-71.7-137.9 137.8zM633 268.9L595.1 231c-9.3-9.3-24.5-9.3-33.8 0l-37.8 37.8-4.1 4.1 71.8 71.7 41.8-41.8c9.3-9.4 9.3-24.5 0-33.9z\"],\n    \"user-friends\": [640, 512, [], \"f500\", \"M192 256c61.9 0 112-50.1 112-112S253.9 32 192 32 80 82.1 80 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C51.6 288 0 339.6 0 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zM480 256c53 0 96-43 96-96s-43-96-96-96-96 43-96 96 43 96 96 96zm48 32h-3.8c-13.9 4.8-28.6 8-44.2 8s-30.3-3.2-44.2-8H432c-20.4 0-39.2 5.9-55.7 15.4 24.4 26.3 39.7 61.2 39.7 99.8v38.4c0 2.2-.5 4.3-.6 6.4H592c26.5 0 48-21.5 48-48 0-61.9-50.1-112-112-112z\"],\n    \"user-graduate\": [448, 512, [], \"f501\", \"M319.4 320.6L224 416l-95.4-95.4C57.1 323.7 0 382.2 0 454.4v9.6c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-9.6c0-72.2-57.1-130.7-128.6-133.8zM13.6 79.8l6.4 1.5v58.4c-7 4.2-12 11.5-12 20.3 0 8.4 4.6 15.4 11.1 19.7L3.5 242c-1.7 6.9 2.1 14 7.6 14h41.8c5.5 0 9.3-7.1 7.6-14l-15.6-62.3C51.4 175.4 56 168.4 56 160c0-8.8-5-16.1-12-20.3V87.1l66 15.9c-8.6 17.2-14 36.4-14 57 0 70.7 57.3 128 128 128s128-57.3 128-128c0-20.6-5.3-39.8-14-57l96.3-23.2c18.2-4.4 18.2-27.1 0-31.5l-190.4-46c-13-3.1-26.7-3.1-39.7 0L13.6 48.2c-18.1 4.4-18.1 27.2 0 31.6z\"],\n    \"user-injured\": [448, 512, [], \"f728\", \"M277.37 11.98C261.08 4.47 243.11 0 224 0c-53.69 0-99.5 33.13-118.51 80h81.19l90.69-68.02zM342.51 80c-7.9-19.47-20.67-36.2-36.49-49.52L239.99 80h102.52zM224 256c70.69 0 128-57.31 128-128 0-5.48-.95-10.7-1.61-16H97.61c-.67 5.3-1.61 10.52-1.61 16 0 70.69 57.31 128 128 128zM80 299.7V512h128.26l-98.45-221.52A132.835 132.835 0 0 0 80 299.7zM0 464c0 26.51 21.49 48 48 48V320.24C18.88 344.89 0 381.26 0 422.4V464zm256-48h-55.38l42.67 96H256c26.47 0 48-21.53 48-48s-21.53-48-48-48zm57.6-128h-16.71c-22.24 10.18-46.88 16-72.89 16s-50.65-5.82-72.89-16h-7.37l42.67 96H256c44.11 0 80 35.89 80 80 0 18.08-6.26 34.59-16.41 48H400c26.51 0 48-21.49 48-48v-41.6c0-74.23-60.17-134.4-134.4-134.4z\"],\n    \"user-lock\": [640, 512, [], \"f502\", \"M224 256A128 128 0 1 0 96 128a128 128 0 0 0 128 128zm96 64a63.08 63.08 0 0 1 8.1-30.5c-4.8-.5-9.5-1.5-14.5-1.5h-16.7a174.08 174.08 0 0 1-145.8 0h-16.7A134.43 134.43 0 0 0 0 422.4V464a48 48 0 0 0 48 48h280.9a63.54 63.54 0 0 1-8.9-32zm288-32h-32v-80a80 80 0 0 0-160 0v80h-32a32 32 0 0 0-32 32v160a32 32 0 0 0 32 32h224a32 32 0 0 0 32-32V320a32 32 0 0 0-32-32zM496 432a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm32-144h-64v-80a32 32 0 0 1 64 0z\"],\n    \"user-md\": [448, 512, [], \"f0f0\", \"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zM104 424c0 13.3 10.7 24 24 24s24-10.7 24-24-10.7-24-24-24-24 10.7-24 24zm216-135.4v49c36.5 7.4 64 39.8 64 78.4v41.7c0 7.6-5.4 14.2-12.9 15.7l-32.2 6.4c-4.3.9-8.5-1.9-9.4-6.3l-3.1-15.7c-.9-4.3 1.9-8.6 6.3-9.4l19.3-3.9V416c0-62.8-96-65.1-96 1.9v26.7l19.3 3.9c4.3.9 7.1 5.1 6.3 9.4l-3.1 15.7c-.9 4.3-5.1 7.1-9.4 6.3l-31.2-4.2c-7.9-1.1-13.8-7.8-13.8-15.9V416c0-38.6 27.5-70.9 64-78.4v-45.2c-2.2.7-4.4 1.1-6.6 1.9-18 6.3-37.3 9.8-57.4 9.8s-39.4-3.5-57.4-9.8c-7.4-2.6-14.9-4.2-22.6-5.2v81.6c23.1 6.9 40 28.1 40 53.4 0 30.9-25.1 56-56 56s-56-25.1-56-56c0-25.3 16.9-46.5 40-53.4v-80.4C48.5 301 0 355.8 0 422.4v44.8C0 491.9 20.1 512 44.8 512h358.4c24.7 0 44.8-20.1 44.8-44.8v-44.8c0-72-56.8-130.3-128-133.8z\"],\n    \"user-minus\": [640, 512, [], \"f503\", \"M624 208H432c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h192c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm-400 48c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\"],\n    \"user-ninja\": [448, 512, [], \"f504\", \"M325.4 289.2L224 390.6 122.6 289.2C54 295.3 0 352.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-70.2-54-127.1-122.6-133.2zM32 192c27.3 0 51.8-11.5 69.2-29.7 15.1 53.9 64 93.7 122.8 93.7 70.7 0 128-57.3 128-128S294.7 0 224 0c-50.4 0-93.6 29.4-114.5 71.8C92.1 47.8 64 32 32 32c0 33.4 17.1 62.8 43.1 80-26 17.2-43.1 46.6-43.1 80zm144-96h96c17.7 0 32 14.3 32 32H144c0-17.7 14.3-32 32-32z\"],\n    \"user-nurse\": [448, 512, [], \"f82f\", \"M319.41,320,224,415.39,128.59,320C57.1,323.1,0,381.6,0,453.79A58.21,58.21,0,0,0,58.21,512H389.79A58.21,58.21,0,0,0,448,453.79C448,381.6,390.9,323.1,319.41,320ZM224,304A128,128,0,0,0,352,176V65.82a32,32,0,0,0-20.76-30L246.47,4.07a64,64,0,0,0-44.94,0L116.76,35.86A32,32,0,0,0,96,65.82V176A128,128,0,0,0,224,304ZM184,71.67a5,5,0,0,1,5-5h21.67V45a5,5,0,0,1,5-5h16.66a5,5,0,0,1,5,5V66.67H259a5,5,0,0,1,5,5V88.33a5,5,0,0,1-5,5H237.33V115a5,5,0,0,1-5,5H215.67a5,5,0,0,1-5-5V93.33H189a5,5,0,0,1-5-5ZM144,160H304v16a80,80,0,0,1-160,0Z\"],\n    \"user-plus\": [640, 512, [], \"f234\", \"M624 208h-64v-64c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v64h-64c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h64v64c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-64h64c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm-400 48c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\"],\n    \"user-secret\": [448, 512, [], \"f21b\", \"M383.9 308.3l23.9-62.6c4-10.5-3.7-21.7-15-21.7h-58.5c11-18.9 17.8-40.6 17.8-64v-.3c39.2-7.8 64-19.1 64-31.7 0-13.3-27.3-25.1-70.1-33-9.2-32.8-27-65.8-40.6-82.8-9.5-11.9-25.9-15.6-39.5-8.8l-27.6 13.8c-9 4.5-19.6 4.5-28.6 0L182.1 3.4c-13.6-6.8-30-3.1-39.5 8.8-13.5 17-31.4 50-40.6 82.8-42.7 7.9-70 19.7-70 33 0 12.6 24.8 23.9 64 31.7v.3c0 23.4 6.8 45.1 17.8 64H56.3c-11.5 0-19.2 11.7-14.7 22.3l25.8 60.2C27.3 329.8 0 372.7 0 422.4v44.8C0 491.9 20.1 512 44.8 512h358.4c24.7 0 44.8-20.1 44.8-44.8v-44.8c0-48.4-25.8-90.4-64.1-114.1zM176 480l-41.6-192 49.6 32 24 40-32 120zm96 0l-32-120 24-40 49.6-32L272 480zm41.7-298.5c-3.9 11.9-7 24.6-16.5 33.4-10.1 9.3-48 22.4-64-25-2.8-8.4-15.4-8.4-18.3 0-17 50.2-56 32.4-64 25-9.5-8.8-12.7-21.5-16.5-33.4-.8-2.5-6.3-5.7-6.3-5.8v-10.8c28.3 3.6 61 5.8 96 5.8s67.7-2.1 96-5.8v10.8c-.1.1-5.6 3.2-6.4 5.8z\"],\n    \"user-shield\": [640, 512, [], \"f505\", \"M622.3 271.1l-115.2-45c-4.1-1.6-12.6-3.7-22.2 0l-115.2 45c-10.7 4.2-17.7 14-17.7 24.9 0 111.6 68.7 188.8 132.9 213.9 9.6 3.7 18 1.6 22.2 0C558.4 489.9 640 420.5 640 296c0-10.9-7-20.7-17.7-24.9zM496 462.4V273.3l95.5 37.3c-5.6 87.1-60.9 135.4-95.5 151.8zM224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm96 40c0-2.5.8-4.8 1.1-7.2-2.5-.1-4.9-.8-7.5-.8h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c6.8 0 13.3-1.5 19.2-4-54-42.9-99.2-116.7-99.2-212z\"],\n    \"user-slash\": [640, 512, [], \"f506\", \"M633.8 458.1L362.3 248.3C412.1 230.7 448 183.8 448 128 448 57.3 390.7 0 320 0c-67.1 0-121.5 51.8-126.9 117.4L45.5 3.4C38.5-2 28.5-.8 23 6.2L3.4 31.4c-5.4 7-4.2 17 2.8 22.4l588.4 454.7c7 5.4 17 4.2 22.5-2.8l19.6-25.3c5.4-6.8 4.1-16.9-2.9-22.3zM96 422.4V464c0 26.5 21.5 48 48 48h350.2L207.4 290.3C144.2 301.3 96 356 96 422.4z\"],\n    \"user-tag\": [640, 512, [], \"f507\", \"M630.6 364.9l-90.3-90.2c-12-12-28.3-18.7-45.3-18.7h-79.3c-17.7 0-32 14.3-32 32v79.2c0 17 6.7 33.2 18.7 45.2l90.3 90.2c12.5 12.5 32.8 12.5 45.3 0l92.5-92.5c12.6-12.5 12.6-32.7.1-45.2zm-182.8-21c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24c0 13.2-10.7 24-24 24zm-223.8-88c70.7 0 128-57.3 128-128C352 57.3 294.7 0 224 0S96 57.3 96 128c0 70.6 57.3 127.9 128 127.9zm127.8 111.2V294c-12.2-3.6-24.9-6.2-38.2-6.2h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 287.9 0 348.1 0 422.3v41.6c0 26.5 21.5 48 48 48h352c15.5 0 29.1-7.5 37.9-18.9l-58-58c-18.1-18.1-28.1-42.2-28.1-67.9z\"],\n    \"user-tie\": [448, 512, [], \"f508\", \"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm95.8 32.6L272 480l-32-136 32-56h-96l32 56-32 136-47.8-191.4C56.9 292 0 350.3 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-72.1-56.9-130.4-128.2-133.8z\"],\n    \"user-times\": [640, 512, [], \"f235\", \"M589.6 240l45.6-45.6c6.3-6.3 6.3-16.5 0-22.8l-22.8-22.8c-6.3-6.3-16.5-6.3-22.8 0L544 194.4l-45.6-45.6c-6.3-6.3-16.5-6.3-22.8 0l-22.8 22.8c-6.3 6.3-6.3 16.5 0 22.8l45.6 45.6-45.6 45.6c-6.3 6.3-6.3 16.5 0 22.8l22.8 22.8c6.3 6.3 16.5 6.3 22.8 0l45.6-45.6 45.6 45.6c6.3 6.3 16.5 6.3 22.8 0l22.8-22.8c6.3-6.3 6.3-16.5 0-22.8L589.6 240zM224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\"],\n    \"users\": [640, 512, [], \"f0c0\", \"M96 224c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm448 0c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm32 32h-64c-17.6 0-33.5 7.1-45.1 18.6 40.3 22.1 68.9 62 75.1 109.4h66c17.7 0 32-14.3 32-32v-32c0-35.3-28.7-64-64-64zm-256 0c61.9 0 112-50.1 112-112S381.9 32 320 32 208 82.1 208 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C179.6 288 128 339.6 128 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zm-223.7-13.4C161.5 263.1 145.6 256 128 256H64c-35.3 0-64 28.7-64 64v32c0 17.7 14.3 32 32 32h65.9c6.3-47.4 34.9-87.3 75.2-109.4z\"],\n    \"users-cog\": [640, 512, [], \"f509\", \"M610.5 341.3c2.6-14.1 2.6-28.5 0-42.6l25.8-14.9c3-1.7 4.3-5.2 3.3-8.5-6.7-21.6-18.2-41.2-33.2-57.4-2.3-2.5-6-3.1-9-1.4l-25.8 14.9c-10.9-9.3-23.4-16.5-36.9-21.3v-29.8c0-3.4-2.4-6.4-5.7-7.1-22.3-5-45-4.8-66.2 0-3.3.7-5.7 3.7-5.7 7.1v29.8c-13.5 4.8-26 12-36.9 21.3l-25.8-14.9c-2.9-1.7-6.7-1.1-9 1.4-15 16.2-26.5 35.8-33.2 57.4-1 3.3.4 6.8 3.3 8.5l25.8 14.9c-2.6 14.1-2.6 28.5 0 42.6l-25.8 14.9c-3 1.7-4.3 5.2-3.3 8.5 6.7 21.6 18.2 41.1 33.2 57.4 2.3 2.5 6 3.1 9 1.4l25.8-14.9c10.9 9.3 23.4 16.5 36.9 21.3v29.8c0 3.4 2.4 6.4 5.7 7.1 22.3 5 45 4.8 66.2 0 3.3-.7 5.7-3.7 5.7-7.1v-29.8c13.5-4.8 26-12 36.9-21.3l25.8 14.9c2.9 1.7 6.7 1.1 9-1.4 15-16.2 26.5-35.8 33.2-57.4 1-3.3-.4-6.8-3.3-8.5l-25.8-14.9zM496 368.5c-26.8 0-48.5-21.8-48.5-48.5s21.8-48.5 48.5-48.5 48.5 21.8 48.5 48.5-21.7 48.5-48.5 48.5zM96 224c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm224 32c1.9 0 3.7-.5 5.6-.6 8.3-21.7 20.5-42.1 36.3-59.2 7.4-8 17.9-12.6 28.9-12.6 6.9 0 13.7 1.8 19.6 5.3l7.9 4.6c.8-.5 1.6-.9 2.4-1.4 7-14.6 11.2-30.8 11.2-48 0-61.9-50.1-112-112-112S208 82.1 208 144c0 61.9 50.1 112 112 112zm105.2 194.5c-2.3-1.2-4.6-2.6-6.8-3.9-8.2 4.8-15.3 9.8-27.5 9.8-10.9 0-21.4-4.6-28.9-12.6-18.3-19.8-32.3-43.9-40.2-69.6-10.7-34.5 24.9-49.7 25.8-50.3-.1-2.6-.1-5.2 0-7.8l-7.9-4.6c-3.8-2.2-7-5-9.8-8.1-3.3.2-6.5.6-9.8.6-24.6 0-47.6-6-68.5-16h-8.3C179.6 288 128 339.6 128 403.2V432c0 26.5 21.5 48 48 48h255.4c-3.7-6-6.2-12.8-6.2-20.3v-9.2zM173.1 274.6C161.5 263.1 145.6 256 128 256H64c-35.3 0-64 28.7-64 64v32c0 17.7 14.3 32 32 32h65.9c6.3-47.4 34.9-87.3 75.2-109.4z\"],\n    \"users-slash\": [640, 512, [], \"e073\", \"M132.65,212.32,36.21,137.78A63.4,63.4,0,0,0,32,160a63.84,63.84,0,0,0,100.65,52.32Zm40.44,62.28A63.79,63.79,0,0,0,128,256H64A64.06,64.06,0,0,0,0,320v32a32,32,0,0,0,32,32H97.91A146.62,146.62,0,0,1,173.09,274.6ZM544,224a64,64,0,1,0-64-64A64.06,64.06,0,0,0,544,224ZM500.56,355.11a114.24,114.24,0,0,0-84.47-65.28L361,247.23c41.46-16.3,71-55.92,71-103.23A111.93,111.93,0,0,0,320,32c-57.14,0-103.69,42.83-110.6,98.08L45.46,3.38A16,16,0,0,0,23,6.19L3.37,31.46A16,16,0,0,0,6.18,53.91L594.53,508.63A16,16,0,0,0,617,505.82l19.64-25.27a16,16,0,0,0-2.81-22.45ZM128,403.21V432a48,48,0,0,0,48,48H464a47.45,47.45,0,0,0,12.57-1.87L232,289.13C173.74,294.83,128,343.42,128,403.21ZM576,256H512a63.79,63.79,0,0,0-45.09,18.6A146.29,146.29,0,0,1,542,384h66a32,32,0,0,0,32-32V320A64.06,64.06,0,0,0,576,256Z\"],\n    \"utensil-spoon\": [512, 512, [], \"f2e5\", \"M480.1 31.9c-55-55.1-164.9-34.5-227.8 28.5-49.3 49.3-55.1 110-28.8 160.4L9 413.2c-11.6 10.5-12.1 28.5-1 39.5L59.3 504c11 11 29.1 10.5 39.5-1.1l192.4-214.4c50.4 26.3 111.1 20.5 160.4-28.8 63-62.9 83.6-172.8 28.5-227.8z\"],\n    \"utensils\": [416, 512, [], \"f2e7\", \"M207.9 15.2c.8 4.7 16.1 94.5 16.1 128.8 0 52.3-27.8 89.6-68.9 104.6L168 486.7c.7 13.7-10.2 25.3-24 25.3H80c-13.7 0-24.7-11.5-24-25.3l12.9-238.1C27.7 233.6 0 196.2 0 144 0 109.6 15.3 19.9 16.1 15.2 19.3-5.1 61.4-5.4 64 16.3v141.2c1.3 3.4 15.1 3.2 16 0 1.4-25.3 7.9-139.2 8-141.8 3.3-20.8 44.7-20.8 47.9 0 .2 2.7 6.6 116.5 8 141.8.9 3.2 14.8 3.4 16 0V16.3c2.6-21.6 44.8-21.4 48-1.1zm119.2 285.7l-15 185.1c-1.2 14 9.9 26 23.9 26h56c13.3 0 24-10.7 24-24V24c0-13.2-10.7-24-24-24-82.5 0-221.4 178.5-64.9 300.9z\"],\n    \"vector-square\": [512, 512, [], \"f5cb\", \"M512 128V32c0-17.67-14.33-32-32-32h-96c-17.67 0-32 14.33-32 32H160c0-17.67-14.33-32-32-32H32C14.33 0 0 14.33 0 32v96c0 17.67 14.33 32 32 32v192c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32h192c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32V160c17.67 0 32-14.33 32-32zm-96-64h32v32h-32V64zM64 64h32v32H64V64zm32 384H64v-32h32v32zm352 0h-32v-32h32v32zm-32-96h-32c-17.67 0-32 14.33-32 32v32H160v-32c0-17.67-14.33-32-32-32H96V160h32c17.67 0 32-14.33 32-32V96h192v32c0 17.67 14.33 32 32 32h32v192z\"],\n    \"venus\": [288, 512, [], \"f221\", \"M288 176c0-79.5-64.5-144-144-144S0 96.5 0 176c0 68.5 47.9 125.9 112 140.4V368H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v36c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-36h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-51.6c64.1-14.5 112-71.9 112-140.4zm-224 0c0-44.1 35.9-80 80-80s80 35.9 80 80-35.9 80-80 80-80-35.9-80-80z\"],\n    \"venus-double\": [512, 512, [], \"f226\", \"M288 176c0-79.5-64.5-144-144-144S0 96.5 0 176c0 68.5 47.9 125.9 112 140.4V368H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v36c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-36h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-51.6c64.1-14.5 112-71.9 112-140.4zm-224 0c0-44.1 35.9-80 80-80s80 35.9 80 80-35.9 80-80 80-80-35.9-80-80zm336 140.4V368h36c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-36v36c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-36h-36c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h36v-51.6c-21.2-4.8-40.6-14.3-57.2-27.3 14-16.7 25-36 32.1-57.1 14.5 14.8 34.7 24 57.1 24 44.1 0 80-35.9 80-80s-35.9-80-80-80c-22.3 0-42.6 9.2-57.1 24-7.1-21.1-18-40.4-32.1-57.1C303.4 43.6 334.3 32 368 32c79.5 0 144 64.5 144 144 0 68.5-47.9 125.9-112 140.4z\"],\n    \"venus-mars\": [576, 512, [], \"f228\", \"M564 0h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-48.7 48.7C422.5 72.1 396.2 64 368 64c-33.7 0-64.6 11.6-89.2 30.9 14 16.7 25 36 32.1 57.1 14.5-14.8 34.7-24 57.1-24 44.1 0 80 35.9 80 80s-35.9 80-80 80c-22.3 0-42.6-9.2-57.1-24-7.1 21.1-18 40.4-32.1 57.1 24.5 19.4 55.5 30.9 89.2 30.9 79.5 0 144-64.5 144-144 0-28.2-8.1-54.5-22.1-76.7l48.7-48.7 16.9 16.9c2.4 2.4 5.4 3.5 8.4 3.5 6.2 0 12.1-4.8 12.1-12V12c0-6.6-5.4-12-12-12zM144 64C64.5 64 0 128.5 0 208c0 68.5 47.9 125.9 112 140.4V400H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v36c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-36h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-51.6c64.1-14.6 112-71.9 112-140.4 0-79.5-64.5-144-144-144zm0 224c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"],\n    \"vest\": [448, 512, [], \"e085\", \"M437.252,239.877,384,160V32A32,32,0,0,0,352,0H320a24.021,24.021,0,0,0-13.312,4.031l-25,16.672a103.794,103.794,0,0,1-115.376,0l-25-16.672A24.021,24.021,0,0,0,128,0H96A32,32,0,0,0,64,32V160L10.748,239.877A64,64,0,0,0,0,275.377V480a32,32,0,0,0,32,32H192V288a31.987,31.987,0,0,1,1.643-10.119L207.135,237.4,150.188,66.564A151.518,151.518,0,0,0,224,86.234a151.55,151.55,0,0,0,73.812-19.672L224,288V512H416a32,32,0,0,0,32-32V275.377A64,64,0,0,0,437.252,239.877ZM131.312,371.312l-48,48a16,16,0,0,1-22.624-22.624l48-48a16,16,0,0,1,22.624,22.624Zm256,48a15.992,15.992,0,0,1-22.624,0l-48-48a16,16,0,0,1,22.624-22.624l48,48A15.993,15.993,0,0,1,387.312,419.312Z\"],\n    \"vest-patches\": [448, 512, [], \"e086\", \"M437.252,239.877,384,160V32A32,32,0,0,0,352,0H320a23.982,23.982,0,0,0-13.312,4.031l-25,16.672a103.794,103.794,0,0,1-115.376,0l-25-16.672A23.982,23.982,0,0,0,128,0H96A32,32,0,0,0,64,32V160L10.748,239.877A64,64,0,0,0,0,275.377V480a32,32,0,0,0,32,32H192V288a31.987,31.987,0,0,1,1.643-10.119L207.135,237.4,150.188,66.561A151.579,151.579,0,0,0,224,86.234a151.565,151.565,0,0,0,73.811-19.668L224,288V512H416a32,32,0,0,0,32-32V275.377A64,64,0,0,0,437.252,239.877ZM63.5,272.484a12.01,12.01,0,0,1,17-16.968l15.5,15.5,15.5-15.5a12.01,12.01,0,0,1,17,16.968L112.984,288,128.5,303.516a12.01,12.01,0,0,1-17,16.968L96,304.984l-15.5,15.5a12.01,12.01,0,0,1-17-16.968L79.016,288ZM96,456a40,40,0,1,1,40-40A40,40,0,0,1,96,456ZM359.227,335.785,310.7,336a6.671,6.671,0,0,1-6.7-6.7l.215-48.574A24.987,24.987,0,0,1,331.43,256.1c12.789,1.162,22.129,12.619,22.056,25.419l-.037,5.057,5.051-.037c12.826-.035,24.236,9.275,25.4,22.076A24.948,24.948,0,0,1,359.227,335.785Z\"],\n    \"vial\": [480, 512, [], \"f492\", \"M477.7 186.1L309.5 18.3c-3.1-3.1-8.2-3.1-11.3 0l-34 33.9c-3.1 3.1-3.1 8.2 0 11.3l11.2 11.1L33 316.5c-38.8 38.7-45.1 102-9.4 143.5 20.6 24 49.5 36 78.4 35.9 26.4 0 52.8-10 72.9-30.1l246.3-245.7 11.2 11.1c3.1 3.1 8.2 3.1 11.3 0l34-33.9c3.1-3 3.1-8.1 0-11.2zM318 256H161l148-147.7 78.5 78.3L318 256z\"],\n    \"vials\": [640, 512, [], \"f493\", \"M72 64h24v240c0 44.1 35.9 80 80 80s80-35.9 80-80V64h24c4.4 0 8-3.6 8-8V8c0-4.4-3.6-8-8-8H72c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8zm72 0h64v96h-64V64zm480 384H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h608c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM360 64h24v240c0 44.1 35.9 80 80 80s80-35.9 80-80V64h24c4.4 0 8-3.6 8-8V8c0-4.4-3.6-8-8-8H360c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8zm72 0h64v96h-64V64z\"],\n    \"video\": [576, 512, [], \"f03d\", \"M336.2 64H47.8C21.4 64 0 85.4 0 111.8v288.4C0 426.6 21.4 448 47.8 448h288.4c26.4 0 47.8-21.4 47.8-47.8V111.8c0-26.4-21.4-47.8-47.8-47.8zm189.4 37.7L416 177.3v157.4l109.6 75.5c21.2 14.6 50.4-.3 50.4-25.8V127.5c0-25.4-29.1-40.4-50.4-25.8z\"],\n    \"video-slash\": [640, 512, [], \"f4e2\", \"M633.8 458.1l-55-42.5c15.4-1.4 29.2-13.7 29.2-31.1v-257c0-25.5-29.1-40.4-50.4-25.8L448 177.3v137.2l-32-24.7v-178c0-26.4-21.4-47.8-47.8-47.8H123.9L45.5 3.4C38.5-2 28.5-.8 23 6.2L3.4 31.4c-5.4 7-4.2 17 2.8 22.4L42.7 82 416 370.6l178.5 138c7 5.4 17 4.2 22.5-2.8l19.6-25.3c5.5-6.9 4.2-17-2.8-22.4zM32 400.2c0 26.4 21.4 47.8 47.8 47.8h288.4c11.2 0 21.4-4 29.6-10.5L32 154.7v245.5z\"],\n    \"vihara\": [640, 512, [], \"f6a7\", \"M632.88 400.71L544 352v-64l55.16-17.69c11.79-5.9 11.79-22.72 0-28.62L480 192v-64l27.31-16.3c7.72-7.72 5.61-20.74-4.16-25.62L320 0 136.85 86.07c-9.77 4.88-11.88 17.9-4.16 25.62L160 128v64L40.84 241.69c-11.79 5.9-11.79 22.72 0 28.62L96 288v64L7.12 400.71c-5.42 3.62-7.7 9.63-7 15.29.62 5.01 3.57 9.75 8.72 12.33L64 448v48c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-48h160v48c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-48h160v48c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-48l55.15-19.67c5.16-2.58 8.1-7.32 8.72-12.33.71-5.67-1.57-11.68-6.99-15.29zM224 128h192v64H224v-64zm-64 224v-64h320v64H160z\"],\n    \"virus\": [512, 512, [], \"e074\", \"M483.55,227.55H462c-50.68,0-76.07-61.27-40.23-97.11L437,115.19A28.44,28.44,0,0,0,396.8,75L381.56,90.22c-35.84,35.83-97.11,10.45-97.11-40.23V28.44a28.45,28.45,0,0,0-56.9,0V50c0,50.68-61.27,76.06-97.11,40.23L115.2,75A28.44,28.44,0,0,0,75,115.19l15.25,15.25c35.84,35.84,10.45,97.11-40.23,97.11H28.45a28.45,28.45,0,1,0,0,56.89H50c50.68,0,76.07,61.28,40.23,97.12L75,396.8A28.45,28.45,0,0,0,115.2,437l15.24-15.25c35.84-35.84,97.11-10.45,97.11,40.23v21.54a28.45,28.45,0,0,0,56.9,0V462c0-50.68,61.27-76.07,97.11-40.23L396.8,437A28.45,28.45,0,0,0,437,396.8l-15.25-15.24c-35.84-35.84-10.45-97.12,40.23-97.12h21.54a28.45,28.45,0,1,0,0-56.89ZM224,272a48,48,0,1,1,48-48A48,48,0,0,1,224,272Zm80,56a24,24,0,1,1,24-24A24,24,0,0,1,304,328Z\"],\n    \"virus-slash\": [640, 512, [], \"e075\", \"M114,227.6H92.4C76.7,227.6,64,240.3,64,256s12.7,28.4,28.4,28.4H114c50.7,0,76.1,61.3,40.2,97.1L139,396.8 c-11.5,10.7-12.2,28.7-1.6,40.2s28.7,12.2,40.2,1.6c0.5-0.5,1.1-1,1.6-1.6l15.2-15.2c35.8-35.8,97.1-10.5,97.1,40.2v21.5 c0,15.7,12.8,28.4,28.5,28.4c15.7,0,28.4-12.7,28.4-28.4V462c0-26.6,17-45.9,38.2-53.4l-244.5-189 C133.7,224.7,123.9,227.5,114,227.6z M617,505.8l19.6-25.3c5.4-7,4.2-17-2.8-22.5L470.6,332c4.2-25.4,24.9-47.5,55.4-47.5h21.5 c15.7,0,28.4-12.7,28.4-28.4s-12.7-28.4-28.4-28.4H526c-50.7,0-76.1-61.3-40.2-97.1l15.2-15.3c10.7-11.5,10-29.5-1.6-40.2 c-10.9-10.1-27.7-10.1-38.6,0l-15.2,15.2c-35.8,35.8-97.1,10.5-97.1-40.2V28.5C348.4,12.7,335.7,0,320,0 c-15.7,0-28.4,12.7-28.4,28.4V50c0,50.7-61.3,76.1-97.1,40.2L179.2,75c-11.1-11.1-29.4-10.6-40.5,0.5L45.5,3.4 c-7-5.4-17-4.2-22.5,2.8L3.4,31.5c-5.4,7-4.2,17,2.8,22.5l588.4,454.7C601.5,514.1,611.6,512.8,617,505.8z M335.4,227.5l-62.9-48.6 c4.9-1.8,10.2-2.8,15.4-2.9c26.5,0,48,21.5,48,48C336,225.2,335.5,226.3,335.4,227.5z\"],\n    \"viruses\": [640, 512, [], \"e076\", \"M624,352H611.88c-28.51,0-42.79-34.47-22.63-54.63l8.58-8.57a16,16,0,1,0-22.63-22.63l-8.57,8.58C546.47,294.91,512,280.63,512,252.12V240a16,16,0,0,0-32,0v12.12c0,28.51-34.47,42.79-54.63,22.63l-8.57-8.58a16,16,0,0,0-22.63,22.63l8.58,8.57c20.16,20.16,5.88,54.63-22.63,54.63H368a16,16,0,0,0,0,32h12.12c28.51,0,42.79,34.47,22.63,54.63l-8.58,8.57a16,16,0,1,0,22.63,22.63l8.57-8.58c20.16-20.16,54.63-5.88,54.63,22.63V496a16,16,0,0,0,32,0V483.88c0-28.51,34.47-42.79,54.63-22.63l8.57,8.58a16,16,0,1,0,22.63-22.63l-8.58-8.57C569.09,418.47,583.37,384,611.88,384H624a16,16,0,0,0,0-32ZM480,384a32,32,0,1,1,32-32A32,32,0,0,1,480,384ZM346.51,213.33h16.16a21.33,21.33,0,0,0,0-42.66H346.51c-38,0-57.05-46-30.17-72.84l11.43-11.44A21.33,21.33,0,0,0,297.6,56.23L286.17,67.66c-26.88,26.88-72.84,7.85-72.84-30.17V21.33a21.33,21.33,0,0,0-42.66,0V37.49c0,38-46,57.05-72.84,30.17L86.4,56.23A21.33,21.33,0,0,0,56.23,86.39L67.66,97.83c26.88,26.88,7.85,72.84-30.17,72.84H21.33a21.33,21.33,0,0,0,0,42.66H37.49c38,0,57.05,46,30.17,72.84L56.23,297.6A21.33,21.33,0,1,0,86.4,327.77l11.43-11.43c26.88-26.88,72.84-7.85,72.84,30.17v16.16a21.33,21.33,0,0,0,42.66,0V346.51c0-38,46-57.05,72.84-30.17l11.43,11.43a21.33,21.33,0,0,0,30.17-30.17l-11.43-11.43C289.46,259.29,308.49,213.33,346.51,213.33ZM160,192a32,32,0,1,1,32-32A32,32,0,0,1,160,192Zm80,32a16,16,0,1,1,16-16A16,16,0,0,1,240,224Z\"],\n    \"voicemail\": [640, 512, [], \"f897\", \"M496 128a144 144 0 0 0-119.74 224H263.74A144 144 0 1 0 144 416h352a144 144 0 0 0 0-288zM64 272a80 80 0 1 1 80 80 80 80 0 0 1-80-80zm432 80a80 80 0 1 1 80-80 80 80 0 0 1-80 80z\"],\n    \"volleyball-ball\": [512, 512, [], \"f45f\", \"M231.39 243.48a285.56 285.56 0 0 0-22.7-105.7c-90.8 42.4-157.5 122.4-180.3 216.8a249 249 0 0 0 56.9 81.1 333.87 333.87 0 0 1 146.1-192.2zm-36.9-134.4a284.23 284.23 0 0 0-57.4-70.7c-91 49.8-144.8 152.9-125 262.2 33.4-83.1 98.4-152 182.4-191.5zm187.6 165.1c8.6-99.8-27.3-197.5-97.5-264.4-14.7-1.7-51.6-5.5-98.9 8.5A333.87 333.87 0 0 1 279.19 241a285 285 0 0 0 102.9 33.18zm-124.7 9.5a286.33 286.33 0 0 0-80.2 72.6c82 57.3 184.5 75.1 277.5 47.8a247.15 247.15 0 0 0 42.2-89.9 336.1 336.1 0 0 1-80.9 10.4c-54.6-.1-108.9-14.1-158.6-40.9zm-98.3 99.7c-15.2 26-25.7 54.4-32.1 84.2a247.07 247.07 0 0 0 289-22.1c-112.9 16.1-203.3-24.8-256.9-62.1zm180.3-360.6c55.3 70.4 82.5 161.2 74.6 253.6a286.59 286.59 0 0 0 89.7-14.2c0-2 .3-4 .3-6 0-107.8-68.7-199.1-164.6-233.4z\"],\n    \"volume-down\": [384, 512, [], \"f027\", \"M215.03 72.04L126.06 161H24c-13.26 0-24 10.74-24 24v144c0 13.25 10.74 24 24 24h102.06l88.97 88.95c15.03 15.03 40.97 4.47 40.97-16.97V89.02c0-21.47-25.96-31.98-40.97-16.98zm123.2 108.08c-11.58-6.33-26.19-2.16-32.61 9.45-6.39 11.61-2.16 26.2 9.45 32.61C327.98 229.28 336 242.62 336 257c0 14.38-8.02 27.72-20.92 34.81-11.61 6.41-15.84 21-9.45 32.61 6.43 11.66 21.05 15.8 32.61 9.45 28.23-15.55 45.77-45 45.77-76.88s-17.54-61.32-45.78-76.87z\"],\n    \"volume-mute\": [512, 512, [], \"f6a9\", \"M215.03 71.05L126.06 160H24c-13.26 0-24 10.74-24 24v144c0 13.25 10.74 24 24 24h102.06l88.97 88.95c15.03 15.03 40.97 4.47 40.97-16.97V88.02c0-21.46-25.96-31.98-40.97-16.97zM461.64 256l45.64-45.64c6.3-6.3 6.3-16.52 0-22.82l-22.82-22.82c-6.3-6.3-16.52-6.3-22.82 0L416 210.36l-45.64-45.64c-6.3-6.3-16.52-6.3-22.82 0l-22.82 22.82c-6.3 6.3-6.3 16.52 0 22.82L370.36 256l-45.63 45.63c-6.3 6.3-6.3 16.52 0 22.82l22.82 22.82c6.3 6.3 16.52 6.3 22.82 0L416 301.64l45.64 45.64c6.3 6.3 16.52 6.3 22.82 0l22.82-22.82c6.3-6.3 6.3-16.52 0-22.82L461.64 256z\"],\n    \"volume-off\": [256, 512, [], \"f026\", \"M215 71l-89 89H24a24 24 0 0 0-24 24v144a24 24 0 0 0 24 24h102.06L215 441c15 15 41 4.47 41-17V88c0-21.47-26-32-41-17z\"],\n    \"volume-up\": [576, 512, [], \"f028\", \"M215.03 71.05L126.06 160H24c-13.26 0-24 10.74-24 24v144c0 13.25 10.74 24 24 24h102.06l88.97 88.95c15.03 15.03 40.97 4.47 40.97-16.97V88.02c0-21.46-25.96-31.98-40.97-16.97zm233.32-51.08c-11.17-7.33-26.18-4.24-33.51 6.95-7.34 11.17-4.22 26.18 6.95 33.51 66.27 43.49 105.82 116.6 105.82 195.58 0 78.98-39.55 152.09-105.82 195.58-11.17 7.32-14.29 22.34-6.95 33.5 7.04 10.71 21.93 14.56 33.51 6.95C528.27 439.58 576 351.33 576 256S528.27 72.43 448.35 19.97zM480 256c0-63.53-32.06-121.94-85.77-156.24-11.19-7.14-26.03-3.82-33.12 7.46s-3.78 26.21 7.41 33.36C408.27 165.97 432 209.11 432 256s-23.73 90.03-63.48 115.42c-11.19 7.14-14.5 22.07-7.41 33.36 6.51 10.36 21.12 15.14 33.12 7.46C447.94 377.94 480 319.54 480 256zm-141.77-76.87c-11.58-6.33-26.19-2.16-32.61 9.45-6.39 11.61-2.16 26.2 9.45 32.61C327.98 228.28 336 241.63 336 256c0 14.38-8.02 27.72-20.92 34.81-11.61 6.41-15.84 21-9.45 32.61 6.43 11.66 21.05 15.8 32.61 9.45 28.23-15.55 45.77-45 45.77-76.88s-17.54-61.32-45.78-76.86z\"],\n    \"vote-yea\": [640, 512, [], \"f772\", \"M608 320h-64v64h22.4c5.3 0 9.6 3.6 9.6 8v16c0 4.4-4.3 8-9.6 8H73.6c-5.3 0-9.6-3.6-9.6-8v-16c0-4.4 4.3-8 9.6-8H96v-64H32c-17.7 0-32 14.3-32 32v96c0 17.7 14.3 32 32 32h576c17.7 0 32-14.3 32-32v-96c0-17.7-14.3-32-32-32zm-96 64V64.3c0-17.9-14.5-32.3-32.3-32.3H160.4C142.5 32 128 46.5 128 64.3V384h384zM211.2 202l25.5-25.3c4.2-4.2 11-4.2 15.2.1l41.3 41.6 95.2-94.4c4.2-4.2 11-4.2 15.2.1l25.3 25.5c4.2 4.2 4.2 11-.1 15.2L300.5 292c-4.2 4.2-11 4.2-15.2-.1l-74.1-74.7c-4.3-4.2-4.2-11 0-15.2z\"],\n    \"vr-cardboard\": [640, 512, [], \"f729\", \"M608 64H32C14.33 64 0 78.33 0 96v320c0 17.67 14.33 32 32 32h160.22c25.19 0 48.03-14.77 58.36-37.74l27.74-61.64C286.21 331.08 302.35 320 320 320s33.79 11.08 41.68 28.62l27.74 61.64C399.75 433.23 422.6 448 447.78 448H608c17.67 0 32-14.33 32-32V96c0-17.67-14.33-32-32-32zM160 304c-35.35 0-64-28.65-64-64s28.65-64 64-64 64 28.65 64 64-28.65 64-64 64zm320 0c-35.35 0-64-28.65-64-64s28.65-64 64-64 64 28.65 64 64-28.65 64-64 64z\"],\n    \"walking\": [320, 512, [], \"f554\", \"M208 96c26.5 0 48-21.5 48-48S234.5 0 208 0s-48 21.5-48 48 21.5 48 48 48zm94.5 149.1l-23.3-11.8-9.7-29.4c-14.7-44.6-55.7-75.8-102.2-75.9-36-.1-55.9 10.1-93.3 25.2-21.6 8.7-39.3 25.2-49.7 46.2L17.6 213c-7.8 15.8-1.5 35 14.2 42.9 15.6 7.9 34.6 1.5 42.5-14.3L81 228c3.5-7 9.3-12.5 16.5-15.4l26.8-10.8-15.2 60.7c-5.2 20.8.4 42.9 14.9 58.8l59.9 65.4c7.2 7.9 12.3 17.4 14.9 27.7l18.3 73.3c4.3 17.1 21.7 27.6 38.8 23.3 17.1-4.3 27.6-21.7 23.3-38.8l-22.2-89c-2.6-10.3-7.7-19.9-14.9-27.7l-45.5-49.7 17.2-68.7 5.5 16.5c5.3 16.1 16.7 29.4 31.7 37l23.3 11.8c15.6 7.9 34.6 1.5 42.5-14.3 7.7-15.7 1.4-35.1-14.3-43zM73.6 385.8c-3.2 8.1-8 15.4-14.2 21.5l-50 50.1c-12.5 12.5-12.5 32.8 0 45.3s32.7 12.5 45.2 0l59.4-59.4c6.1-6.1 10.9-13.4 14.2-21.5l13.5-33.8c-55.3-60.3-38.7-41.8-47.4-53.7l-20.7 51.5z\"],\n    \"wallet\": [512, 512, [], \"f555\", \"M461.2 128H80c-8.84 0-16-7.16-16-16s7.16-16 16-16h384c8.84 0 16-7.16 16-16 0-26.51-21.49-48-48-48H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h397.2c28.02 0 50.8-21.53 50.8-48V176c0-26.47-22.78-48-50.8-48zM416 336c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"],\n    \"warehouse\": [640, 512, [], \"f494\", \"M504 352H136.4c-4.4 0-8 3.6-8 8l-.1 48c0 4.4 3.6 8 8 8H504c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm0 96H136.1c-4.4 0-8 3.6-8 8l-.1 48c0 4.4 3.6 8 8 8h368c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm0-192H136.6c-4.4 0-8 3.6-8 8l-.1 48c0 4.4 3.6 8 8 8H504c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm106.5-139L338.4 3.7a48.15 48.15 0 0 0-36.9 0L29.5 117C11.7 124.5 0 141.9 0 161.3V504c0 4.4 3.6 8 8 8h80c4.4 0 8-3.6 8-8V256c0-17.6 14.6-32 32.6-32h382.8c18 0 32.6 14.4 32.6 32v248c0 4.4 3.6 8 8 8h80c4.4 0 8-3.6 8-8V161.3c0-19.4-11.7-36.8-29.5-44.3z\"],\n    \"water\": [576, 512, [], \"f773\", \"M562.1 383.9c-21.5-2.4-42.1-10.5-57.9-22.9-14.1-11.1-34.2-11.3-48.2 0-37.9 30.4-107.2 30.4-145.7-1.5-13.5-11.2-33-9.1-46.7 1.8-38 30.1-106.9 30-145.2-1.7-13.5-11.2-33.3-8.9-47.1 2-15.5 12.2-36 20.1-57.7 22.4-7.9.8-13.6 7.8-13.6 15.7v32.2c0 9.1 7.6 16.8 16.7 16 28.8-2.5 56.1-11.4 79.4-25.9 56.5 34.6 137 34.1 192 0 56.5 34.6 137 34.1 192 0 23.3 14.2 50.9 23.3 79.1 25.8 9.1.8 16.7-6.9 16.7-16v-31.6c.1-8-5.7-15.4-13.8-16.3zm0-144c-21.5-2.4-42.1-10.5-57.9-22.9-14.1-11.1-34.2-11.3-48.2 0-37.9 30.4-107.2 30.4-145.7-1.5-13.5-11.2-33-9.1-46.7 1.8-38 30.1-106.9 30-145.2-1.7-13.5-11.2-33.3-8.9-47.1 2-15.5 12.2-36 20.1-57.7 22.4-7.9.8-13.6 7.8-13.6 15.7v32.2c0 9.1 7.6 16.8 16.7 16 28.8-2.5 56.1-11.4 79.4-25.9 56.5 34.6 137 34.1 192 0 56.5 34.6 137 34.1 192 0 23.3 14.2 50.9 23.3 79.1 25.8 9.1.8 16.7-6.9 16.7-16v-31.6c.1-8-5.7-15.4-13.8-16.3zm0-144C540.6 93.4 520 85.4 504.2 73 490.1 61.9 470 61.7 456 73c-37.9 30.4-107.2 30.4-145.7-1.5-13.5-11.2-33-9.1-46.7 1.8-38 30.1-106.9 30-145.2-1.7-13.5-11.2-33.3-8.9-47.1 2-15.5 12.2-36 20.1-57.7 22.4-7.9.8-13.6 7.8-13.6 15.7v32.2c0 9.1 7.6 16.8 16.7 16 28.8-2.5 56.1-11.4 79.4-25.9 56.5 34.6 137 34.1 192 0 56.5 34.6 137 34.1 192 0 23.3 14.2 50.9 23.3 79.1 25.8 9.1.8 16.7-6.9 16.7-16v-31.6c.1-8-5.7-15.4-13.8-16.3z\"],\n    \"wave-square\": [640, 512, [], \"f83e\", \"M476 480H324a36 36 0 0 1-36-36V96h-96v156a36 36 0 0 1-36 36H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h112V68a36 36 0 0 1 36-36h152a36 36 0 0 1 36 36v348h96V260a36 36 0 0 1 36-36h140a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16H512v156a36 36 0 0 1-36 36z\"],\n    \"weight\": [512, 512, [], \"f496\", \"M448 64h-25.98C438.44 92.28 448 125.01 448 160c0 105.87-86.13 192-192 192S64 265.87 64 160c0-34.99 9.56-67.72 25.98-96H64C28.71 64 0 92.71 0 128v320c0 35.29 28.71 64 64 64h384c35.29 0 64-28.71 64-64V128c0-35.29-28.71-64-64-64zM256 320c88.37 0 160-71.63 160-160S344.37 0 256 0 96 71.63 96 160s71.63 160 160 160zm-.3-151.94l33.58-78.36c3.5-8.17 12.94-11.92 21.03-8.41 8.12 3.48 11.88 12.89 8.41 21l-33.67 78.55C291.73 188 296 197.45 296 208c0 22.09-17.91 40-40 40s-40-17.91-40-40c0-21.98 17.76-39.77 39.7-39.94z\"],\n    \"weight-hanging\": [512, 512, [], \"f5cd\", \"M510.28 445.86l-73.03-292.13c-3.8-15.19-16.44-25.72-30.87-25.72h-60.25c3.57-10.05 5.88-20.72 5.88-32 0-53.02-42.98-96-96-96s-96 42.98-96 96c0 11.28 2.3 21.95 5.88 32h-60.25c-14.43 0-27.08 10.54-30.87 25.72L1.72 445.86C-6.61 479.17 16.38 512 48.03 512h415.95c31.64 0 54.63-32.83 46.3-66.14zM256 128c-17.64 0-32-14.36-32-32s14.36-32 32-32 32 14.36 32 32-14.36 32-32 32z\"],\n    \"wheelchair\": [512, 512, [], \"f193\", \"M496.101 385.669l14.227 28.663c3.929 7.915.697 17.516-7.218 21.445l-65.465 32.886c-16.049 7.967-35.556 1.194-43.189-15.055L331.679 320H192c-15.925 0-29.426-11.71-31.679-27.475C126.433 55.308 128.38 70.044 128 64c0-36.358 30.318-65.635 67.052-63.929 33.271 1.545 60.048 28.905 60.925 62.201.868 32.933-23.152 60.423-54.608 65.039l4.67 32.69H336c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H215.182l4.572 32H352a32 32 0 0 1 28.962 18.392L438.477 396.8l36.178-18.349c7.915-3.929 17.517-.697 21.446 7.218zM311.358 352h-24.506c-7.788 54.204-54.528 96-110.852 96-61.757 0-112-50.243-112-112 0-41.505 22.694-77.809 56.324-97.156-3.712-25.965-6.844-47.86-9.488-66.333C45.956 198.464 0 261.963 0 336c0 97.047 78.953 176 176 176 71.87 0 133.806-43.308 161.11-105.192L311.358 352z\"],\n    \"wifi\": [640, 512, [], \"f1eb\", \"M634.91 154.88C457.74-8.99 182.19-8.93 5.09 154.88c-6.66 6.16-6.79 16.59-.35 22.98l34.24 33.97c6.14 6.1 16.02 6.23 22.4.38 145.92-133.68 371.3-133.71 517.25 0 6.38 5.85 16.26 5.71 22.4-.38l34.24-33.97c6.43-6.39 6.3-16.82-.36-22.98zM320 352c-35.35 0-64 28.65-64 64s28.65 64 64 64 64-28.65 64-64-28.65-64-64-64zm202.67-83.59c-115.26-101.93-290.21-101.82-405.34 0-6.9 6.1-7.12 16.69-.57 23.15l34.44 33.99c6 5.92 15.66 6.32 22.05.8 83.95-72.57 209.74-72.41 293.49 0 6.39 5.52 16.05 5.13 22.05-.8l34.44-33.99c6.56-6.46 6.33-17.06-.56-23.15z\"],\n    \"wind\": [512, 512, [], \"f72e\", \"M156.7 256H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h142.2c15.9 0 30.8 10.9 33.4 26.6 3.3 20-12.1 37.4-31.6 37.4-14.1 0-26.1-9.2-30.4-21.9-2.1-6.3-8.6-10.1-15.2-10.1H81.6c-9.8 0-17.7 8.8-15.9 18.4 8.6 44.1 47.6 77.6 94.2 77.6 57.1 0 102.7-50.1 95.2-108.6C249 291 205.4 256 156.7 256zM16 224h336c59.7 0 106.8-54.8 93.8-116.7-7.6-36.2-36.9-65.5-73.1-73.1-55.4-11.6-105.1 24.9-114.9 75.5-1.9 9.6 6.1 18.3 15.8 18.3h32.8c6.7 0 13.1-3.8 15.2-10.1C325.9 105.2 337.9 96 352 96c19.4 0 34.9 17.4 31.6 37.4-2.6 15.7-17.4 26.6-33.4 26.6H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16zm384 32H243.7c19.3 16.6 33.2 38.8 39.8 64H400c26.5 0 48 21.5 48 48s-21.5 48-48 48c-17.9 0-33.3-9.9-41.6-24.4-2.9-5-8.7-7.6-14.5-7.6h-33.8c-10.9 0-19 10.8-15.3 21.1 17.8 50.6 70.5 84.8 129.4 72.3 41.2-8.7 75.1-41.6 84.7-82.7C526 321.5 470.5 256 400 256z\"],\n    \"window-close\": [512, 512, [], \"f410\", \"M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-83.6 290.5c4.8 4.8 4.8 12.6 0 17.4l-40.5 40.5c-4.8 4.8-12.6 4.8-17.4 0L256 313.3l-66.5 67.1c-4.8 4.8-12.6 4.8-17.4 0l-40.5-40.5c-4.8-4.8-4.8-12.6 0-17.4l67.1-66.5-67.1-66.5c-4.8-4.8-4.8-12.6 0-17.4l40.5-40.5c4.8-4.8 12.6-4.8 17.4 0l66.5 67.1 66.5-67.1c4.8-4.8 12.6-4.8 17.4 0l40.5 40.5c4.8 4.8 4.8 12.6 0 17.4L313.3 256l67.1 66.5z\"],\n    \"window-maximize\": [512, 512, [], \"f2d0\", \"M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-16 160H64v-84c0-6.6 5.4-12 12-12h360c6.6 0 12 5.4 12 12v84z\"],\n    \"window-minimize\": [512, 512, [], \"f2d1\", \"M464 352H48c-26.5 0-48 21.5-48 48v32c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-32c0-26.5-21.5-48-48-48z\"],\n    \"window-restore\": [512, 512, [], \"f2d2\", \"M512 48v288c0 26.5-21.5 48-48 48h-48V176c0-44.1-35.9-80-80-80H128V48c0-26.5 21.5-48 48-48h288c26.5 0 48 21.5 48 48zM384 176v288c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V176c0-26.5 21.5-48 48-48h288c26.5 0 48 21.5 48 48zm-68 28c0-6.6-5.4-12-12-12H76c-6.6 0-12 5.4-12 12v52h252v-52z\"],\n    \"wine-bottle\": [512, 512, [], \"f72f\", \"M507.31 72.57L439.43 4.69c-6.25-6.25-16.38-6.25-22.63 0l-22.63 22.63c-6.25 6.25-6.25 16.38 0 22.63l-76.67 76.67c-46.58-19.7-102.4-10.73-140.37 27.23L18.75 312.23c-24.99 24.99-24.99 65.52 0 90.51l90.51 90.51c24.99 24.99 65.52 24.99 90.51 0l158.39-158.39c37.96-37.96 46.93-93.79 27.23-140.37l76.67-76.67c6.25 6.25 16.38 6.25 22.63 0l22.63-22.63c6.24-6.24 6.24-16.37-.01-22.62zM179.22 423.29l-90.51-90.51 122.04-122.04 90.51 90.51-122.04 122.04z\"],\n    \"wine-glass\": [288, 512, [], \"f4e3\", \"M216 464h-40V346.81c68.47-15.89 118.05-79.91 111.4-154.16l-15.95-178.1C270.71 6.31 263.9 0 255.74 0H32.26c-8.15 0-14.97 6.31-15.7 14.55L.6 192.66C-6.05 266.91 43.53 330.93 112 346.82V464H72c-22.09 0-40 17.91-40 40 0 4.42 3.58 8 8 8h208c4.42 0 8-3.58 8-8 0-22.09-17.91-40-40-40z\"],\n    \"wine-glass-alt\": [288, 512, [], \"f5ce\", \"M216 464h-40V346.81c68.47-15.89 118.05-79.91 111.4-154.16l-15.95-178.1C270.71 6.31 263.9 0 255.74 0H32.26c-8.15 0-14.97 6.31-15.7 14.55L.6 192.66C-6.05 266.91 43.53 330.93 112 346.82V464H72c-22.09 0-40 17.91-40 40 0 4.42 3.58 8 8 8h208c4.42 0 8-3.58 8-8 0-22.09-17.91-40-40-40zM61.75 48h164.5l7.17 80H54.58l7.17-80z\"],\n    \"won-sign\": [576, 512, [], \"f159\", \"M564 192c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-48l18.6-80.6c1.7-7.5-4-14.7-11.7-14.7h-46.1c-5.7 0-10.6 4-11.7 9.5L450.7 128H340.8l-19.7-86c-1.3-5.5-6.1-9.3-11.7-9.3h-44c-5.6 0-10.4 3.8-11.7 9.3l-20 86H125l-17.5-85.7c-1.1-5.6-6.1-9.6-11.8-9.6H53.6c-7.7 0-13.4 7.1-11.7 14.6L60 128H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h62.3l7.2 32H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h83.9l40.9 182.6c1.2 5.5 6.1 9.4 11.7 9.4h56.8c5.6 0 10.4-3.9 11.7-9.3L259.3 288h55.1l42.4 182.7c1.3 5.4 6.1 9.3 11.7 9.3h56.8c5.6 0 10.4-3.9 11.7-9.3L479.1 288H564c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-70.1l7.4-32zM183.8 342c-6.2 25.8-6.8 47.2-7.3 47.2h-1.1s-1.7-22-6.8-47.2l-11-54h38.8zm27.5-118h-66.8l-6.5-32h80.8zm62.9 0l2-8.6c1.9-8 3.5-16 4.8-23.4h11.8c1.3 7.4 2.9 15.4 4.8 23.4l2 8.6zm130.9 118c-5.1 25.2-6.8 47.2-6.8 47.2h-1.1c-.6 0-1.1-21.4-7.3-47.2l-12.4-54h39.1zm25.2-118h-67.4l-7.3-32h81.6z\"],\n    \"wrench\": [512, 512, [], \"f0ad\", \"M507.73 109.1c-2.24-9.03-13.54-12.09-20.12-5.51l-74.36 74.36-67.88-11.31-11.31-67.88 74.36-74.36c6.62-6.62 3.43-17.9-5.66-20.16-47.38-11.74-99.55.91-136.58 37.93-39.64 39.64-50.55 97.1-34.05 147.2L18.74 402.76c-24.99 24.99-24.99 65.51 0 90.5 24.99 24.99 65.51 24.99 90.5 0l213.21-213.21c50.12 16.71 107.47 5.68 147.37-34.22 37.07-37.07 49.7-89.32 37.91-136.73zM64 472c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z\"],\n    \"x-ray\": [640, 512, [], \"f497\", \"M240 384c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zm160 32c8.8 0 16-7.2 16-16s-7.2-16-16-16-16 7.2-16 16 7.2 16 16 16zM624 0H16C7.2 0 0 7.2 0 16v32c0 8.8 7.2 16 16 16h608c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16zm0 448h-48V96H64v352H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h608c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM480 248c0 4.4-3.6 8-8 8H336v32h104c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H336v32h64c26.5 0 48 21.5 48 48s-21.5 48-48 48-48-21.5-48-48v-16h-64v16c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48h64v-32H200c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h104v-32H168c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h136v-32H200c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h104v-24c0-4.4 3.6-8 8-8h16c4.4 0 8 3.6 8 8v24h104c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H336v32h136c4.4 0 8 3.6 8 8v16z\"],\n    \"yen-sign\": [384, 512, [], \"f157\", \"M351.2 32h-65.3c-4.6 0-8.8 2.6-10.8 6.7l-55.4 113.2c-14.5 34.7-27.1 71.9-27.1 71.9h-1.3s-12.6-37.2-27.1-71.9L108.8 38.7c-2-4.1-6.2-6.7-10.8-6.7H32.8c-9.1 0-14.8 9.7-10.6 17.6L102.3 200H44c-6.6 0-12 5.4-12 12v32c0 6.6 5.4 12 12 12h88.2l19.8 37.2V320H44c-6.6 0-12 5.4-12 12v32c0 6.6 5.4 12 12 12h108v92c0 6.6 5.4 12 12 12h56c6.6 0 12-5.4 12-12v-92h108c6.6 0 12-5.4 12-12v-32c0-6.6-5.4-12-12-12H232v-26.8l19.8-37.2H340c6.6 0 12-5.4 12-12v-32c0-6.6-5.4-12-12-12h-58.3l80.1-150.4c4.3-7.9-1.5-17.6-10.6-17.6z\"],\n    \"yin-yang\": [496, 512, [], \"f6ad\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm0 376c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-128c-53.02 0-96 42.98-96 96s42.98 96 96 96c-106.04 0-192-85.96-192-192S141.96 64 248 64c53.02 0 96 42.98 96 96s-42.98 96-96 96zm0-128c-17.67 0-32 14.33-32 32s14.33 32 32 32 32-14.33 32-32-14.33-32-32-32z\"]\n  };\n  bunker(function () {\n    defineIcons('fas', icons);\n  });\n})();\n\n(function () {\n  'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return _typeof2(obj);\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      var ownKeys = Object.keys(source);\n\n      if (typeof Object.getOwnPropertySymbols === 'function') {\n        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n      }\n\n      ownKeys.forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    }\n\n    return target;\n  }\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    }\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n\n  var noop = function noop() {};\n\n  var _WINDOW = {};\n  var _DOCUMENT = {};\n  var _MUTATION_OBSERVER = null;\n  var _PERFORMANCE = {\n    mark: noop,\n    measure: noop\n  };\n\n  try {\n    if (typeof window !== 'undefined') _WINDOW = window;\n    if (typeof document !== 'undefined') _DOCUMENT = document;\n    if (typeof MutationObserver !== 'undefined') _MUTATION_OBSERVER = MutationObserver;\n    if (typeof performance !== 'undefined') _PERFORMANCE = performance;\n  } catch (e) {}\n\n  var _ref = _WINDOW.navigator || {},\n      _ref$userAgent = _ref.userAgent,\n      userAgent = _ref$userAgent === void 0 ? '' : _ref$userAgent;\n\n  var WINDOW = _WINDOW;\n  var DOCUMENT = _DOCUMENT;\n  var MUTATION_OBSERVER = _MUTATION_OBSERVER;\n  var PERFORMANCE = _PERFORMANCE;\n  var IS_BROWSER = !!WINDOW.document;\n  var IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === 'function' && typeof DOCUMENT.createElement === 'function';\n  var IS_IE = ~userAgent.indexOf('MSIE') || ~userAgent.indexOf('Trident/');\n  var NAMESPACE_IDENTIFIER = '___FONT_AWESOME___';\n  var UNITS_IN_GRID = 16;\n  var DEFAULT_FAMILY_PREFIX = 'fa';\n  var DEFAULT_REPLACEMENT_CLASS = 'svg-inline--fa';\n  var DATA_FA_I2SVG = 'data-fa-i2svg';\n  var DATA_FA_PSEUDO_ELEMENT = 'data-fa-pseudo-element';\n  var DATA_FA_PSEUDO_ELEMENT_PENDING = 'data-fa-pseudo-element-pending';\n  var DATA_PREFIX = 'data-prefix';\n  var DATA_ICON = 'data-icon';\n  var HTML_CLASS_I2SVG_BASE_CLASS = 'fontawesome-i2svg';\n  var MUTATION_APPROACH_ASYNC = 'async';\n  var TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS = ['HTML', 'HEAD', 'STYLE', 'SCRIPT'];\n\n  var PRODUCTION = function () {\n    try {\n      return \"production\" === 'production';\n    } catch (e) {\n      return false;\n    }\n  }();\n\n  var PREFIX_TO_STYLE = {\n    'fas': 'solid',\n    'far': 'regular',\n    'fal': 'light',\n    'fad': 'duotone',\n    'fab': 'brands',\n    'fak': 'kit',\n    'fa': 'solid'\n  };\n  var STYLE_TO_PREFIX = {\n    'solid': 'fas',\n    'regular': 'far',\n    'light': 'fal',\n    'duotone': 'fad',\n    'brands': 'fab',\n    'kit': 'fak'\n  };\n  var LAYERS_TEXT_CLASSNAME = 'fa-layers-text';\n  var FONT_FAMILY_PATTERN = /Font Awesome ([5 ]*)(Solid|Regular|Light|Duotone|Brands|Free|Pro|Kit).*/i; // TODO: do we need to handle font-weight for kit SVG pseudo-elements?\n\n  var FONT_WEIGHT_TO_PREFIX = {\n    '900': 'fas',\n    '400': 'far',\n    'normal': 'far',\n    '300': 'fal'\n  };\n  var oneToTen = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  var oneToTwenty = oneToTen.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]);\n  var ATTRIBUTES_WATCHED_FOR_MUTATION = ['class', 'data-prefix', 'data-icon', 'data-fa-transform', 'data-fa-mask'];\n  var DUOTONE_CLASSES = {\n    GROUP: 'group',\n    SWAP_OPACITY: 'swap-opacity',\n    PRIMARY: 'primary',\n    SECONDARY: 'secondary'\n  };\n  var RESERVED_CLASSES = ['xs', 'sm', 'lg', 'fw', 'ul', 'li', 'border', 'pull-left', 'pull-right', 'spin', 'pulse', 'rotate-90', 'rotate-180', 'rotate-270', 'flip-horizontal', 'flip-vertical', 'flip-both', 'stack', 'stack-1x', 'stack-2x', 'inverse', 'layers', 'layers-text', 'layers-counter', DUOTONE_CLASSES.GROUP, DUOTONE_CLASSES.SWAP_OPACITY, DUOTONE_CLASSES.PRIMARY, DUOTONE_CLASSES.SECONDARY].concat(oneToTen.map(function (n) {\n    return \"\".concat(n, \"x\");\n  })).concat(oneToTwenty.map(function (n) {\n    return \"w-\".concat(n);\n  }));\n  var initial = WINDOW.FontAwesomeConfig || {};\n\n  function getAttrConfig(attr) {\n    var element = DOCUMENT.querySelector('script[' + attr + ']');\n\n    if (element) {\n      return element.getAttribute(attr);\n    }\n  }\n\n  function coerce(val) {\n    // Getting an empty string will occur if the attribute is set on the HTML tag but without a value\n    // We'll assume that this is an indication that it should be toggled to true\n    // For example <script data-search-pseudo-elements src=\"...\"></script>\n    if (val === '') return true;\n    if (val === 'false') return false;\n    if (val === 'true') return true;\n    return val;\n  }\n\n  if (DOCUMENT && typeof DOCUMENT.querySelector === 'function') {\n    var attrs = [['data-family-prefix', 'familyPrefix'], ['data-replacement-class', 'replacementClass'], ['data-auto-replace-svg', 'autoReplaceSvg'], ['data-auto-add-css', 'autoAddCss'], ['data-auto-a11y', 'autoA11y'], ['data-search-pseudo-elements', 'searchPseudoElements'], ['data-observe-mutations', 'observeMutations'], ['data-mutate-approach', 'mutateApproach'], ['data-keep-original-source', 'keepOriginalSource'], ['data-measure-performance', 'measurePerformance'], ['data-show-missing-icons', 'showMissingIcons']];\n    attrs.forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          attr = _ref2[0],\n          key = _ref2[1];\n\n      var val = coerce(getAttrConfig(attr));\n\n      if (val !== undefined && val !== null) {\n        initial[key] = val;\n      }\n    });\n  }\n\n  var _default = {\n    familyPrefix: DEFAULT_FAMILY_PREFIX,\n    replacementClass: DEFAULT_REPLACEMENT_CLASS,\n    autoReplaceSvg: true,\n    autoAddCss: true,\n    autoA11y: true,\n    searchPseudoElements: false,\n    observeMutations: true,\n    mutateApproach: 'async',\n    keepOriginalSource: true,\n    measurePerformance: false,\n    showMissingIcons: true\n  };\n\n  var _config = _objectSpread({}, _default, initial);\n\n  if (!_config.autoReplaceSvg) _config.observeMutations = false;\n\n  var config = _objectSpread({}, _config);\n\n  WINDOW.FontAwesomeConfig = config;\n  var w = WINDOW || {};\n  if (!w[NAMESPACE_IDENTIFIER]) w[NAMESPACE_IDENTIFIER] = {};\n  if (!w[NAMESPACE_IDENTIFIER].styles) w[NAMESPACE_IDENTIFIER].styles = {};\n  if (!w[NAMESPACE_IDENTIFIER].hooks) w[NAMESPACE_IDENTIFIER].hooks = {};\n  if (!w[NAMESPACE_IDENTIFIER].shims) w[NAMESPACE_IDENTIFIER].shims = [];\n  var namespace = w[NAMESPACE_IDENTIFIER];\n  var functions = [];\n\n  var listener = function listener() {\n    DOCUMENT.removeEventListener('DOMContentLoaded', listener);\n    loaded = 1;\n    functions.map(function (fn) {\n      return fn();\n    });\n  };\n\n  var loaded = false;\n\n  if (IS_DOM) {\n    loaded = (DOCUMENT.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(DOCUMENT.readyState);\n    if (!loaded) DOCUMENT.addEventListener('DOMContentLoaded', listener);\n  }\n\n  function domready(fn) {\n    if (!IS_DOM) return;\n    loaded ? setTimeout(fn, 0) : functions.push(fn);\n  }\n\n  var PENDING = 'pending';\n  var SETTLED = 'settled';\n  var FULFILLED = 'fulfilled';\n  var REJECTED = 'rejected';\n\n  var NOOP = function NOOP() {};\n\n  var isNode = typeof global !== 'undefined' && typeof global.process !== 'undefined' && typeof global.process.emit === 'function';\n  var asyncSetTimer = typeof setImmediate === 'undefined' ? setTimeout : setImmediate;\n  var asyncQueue = [];\n  var asyncTimer;\n\n  function asyncFlush() {\n    // run promise callbacks\n    for (var i = 0; i < asyncQueue.length; i++) {\n      asyncQueue[i][0](asyncQueue[i][1]);\n    } // reset async asyncQueue\n\n\n    asyncQueue = [];\n    asyncTimer = false;\n  }\n\n  function asyncCall(callback, arg) {\n    asyncQueue.push([callback, arg]);\n\n    if (!asyncTimer) {\n      asyncTimer = true;\n      asyncSetTimer(asyncFlush, 0);\n    }\n  }\n\n  function invokeResolver(resolver, promise) {\n    function resolvePromise(value) {\n      resolve(promise, value);\n    }\n\n    function rejectPromise(reason) {\n      reject(promise, reason);\n    }\n\n    try {\n      resolver(resolvePromise, rejectPromise);\n    } catch (e) {\n      rejectPromise(e);\n    }\n  }\n\n  function invokeCallback(subscriber) {\n    var owner = subscriber.owner;\n    var settled = owner._state;\n    var value = owner._data;\n    var callback = subscriber[settled];\n    var promise = subscriber.then;\n\n    if (typeof callback === 'function') {\n      settled = FULFILLED;\n\n      try {\n        value = callback(value);\n      } catch (e) {\n        reject(promise, e);\n      }\n    }\n\n    if (!handleThenable(promise, value)) {\n      if (settled === FULFILLED) {\n        resolve(promise, value);\n      }\n\n      if (settled === REJECTED) {\n        reject(promise, value);\n      }\n    }\n  }\n\n  function handleThenable(promise, value) {\n    var resolved;\n\n    try {\n      if (promise === value) {\n        throw new TypeError('A promises callback cannot return that same promise.');\n      }\n\n      if (value && (typeof value === 'function' || _typeof(value) === 'object')) {\n        // then should be retrieved only once\n        var then = value.then;\n\n        if (typeof then === 'function') {\n          then.call(value, function (val) {\n            if (!resolved) {\n              resolved = true;\n\n              if (value === val) {\n                fulfill(promise, val);\n              } else {\n                resolve(promise, val);\n              }\n            }\n          }, function (reason) {\n            if (!resolved) {\n              resolved = true;\n              reject(promise, reason);\n            }\n          });\n          return true;\n        }\n      }\n    } catch (e) {\n      if (!resolved) {\n        reject(promise, e);\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  function resolve(promise, value) {\n    if (promise === value || !handleThenable(promise, value)) {\n      fulfill(promise, value);\n    }\n  }\n\n  function fulfill(promise, value) {\n    if (promise._state === PENDING) {\n      promise._state = SETTLED;\n      promise._data = value;\n      asyncCall(publishFulfillment, promise);\n    }\n  }\n\n  function reject(promise, reason) {\n    if (promise._state === PENDING) {\n      promise._state = SETTLED;\n      promise._data = reason;\n      asyncCall(publishRejection, promise);\n    }\n  }\n\n  function publish(promise) {\n    promise._then = promise._then.forEach(invokeCallback);\n  }\n\n  function publishFulfillment(promise) {\n    promise._state = FULFILLED;\n    publish(promise);\n  }\n\n  function publishRejection(promise) {\n    promise._state = REJECTED;\n    publish(promise);\n\n    if (!promise._handled && isNode) {\n      global.process.emit('unhandledRejection', promise._data, promise);\n    }\n  }\n\n  function notifyRejectionHandled(promise) {\n    global.process.emit('rejectionHandled', promise);\n  }\n  /**\n   * @class\n   */\n\n\n  function P(resolver) {\n    if (typeof resolver !== 'function') {\n      throw new TypeError('Promise resolver ' + resolver + ' is not a function');\n    }\n\n    if (this instanceof P === false) {\n      throw new TypeError('Failed to construct \\'Promise\\': Please use the \\'new\\' operator, this object constructor cannot be called as a function.');\n    }\n\n    this._then = [];\n    invokeResolver(resolver, this);\n  }\n\n  P.prototype = {\n    constructor: P,\n    _state: PENDING,\n    _then: null,\n    _data: undefined,\n    _handled: false,\n    then: function then(onFulfillment, onRejection) {\n      var subscriber = {\n        owner: this,\n        then: new this.constructor(NOOP),\n        fulfilled: onFulfillment,\n        rejected: onRejection\n      };\n\n      if ((onRejection || onFulfillment) && !this._handled) {\n        this._handled = true;\n\n        if (this._state === REJECTED && isNode) {\n          asyncCall(notifyRejectionHandled, this);\n        }\n      }\n\n      if (this._state === FULFILLED || this._state === REJECTED) {\n        // already resolved, call callback async\n        asyncCall(invokeCallback, subscriber);\n      } else {\n        // subscribe\n        this._then.push(subscriber);\n      }\n\n      return subscriber.then;\n    },\n    catch: function _catch(onRejection) {\n      return this.then(null, onRejection);\n    }\n  };\n\n  P.all = function (promises) {\n    if (!Array.isArray(promises)) {\n      throw new TypeError('You must pass an array to Promise.all().');\n    }\n\n    return new P(function (resolve, reject) {\n      var results = [];\n      var remaining = 0;\n\n      function resolver(index) {\n        remaining++;\n        return function (value) {\n          results[index] = value;\n\n          if (! --remaining) {\n            resolve(results);\n          }\n        };\n      }\n\n      for (var i = 0, promise; i < promises.length; i++) {\n        promise = promises[i];\n\n        if (promise && typeof promise.then === 'function') {\n          promise.then(resolver(i), reject);\n        } else {\n          results[i] = promise;\n        }\n      }\n\n      if (!remaining) {\n        resolve(results);\n      }\n    });\n  };\n\n  P.race = function (promises) {\n    if (!Array.isArray(promises)) {\n      throw new TypeError('You must pass an array to Promise.race().');\n    }\n\n    return new P(function (resolve, reject) {\n      for (var i = 0, promise; i < promises.length; i++) {\n        promise = promises[i];\n\n        if (promise && typeof promise.then === 'function') {\n          promise.then(resolve, reject);\n        } else {\n          resolve(promise);\n        }\n      }\n    });\n  };\n\n  P.resolve = function (value) {\n    if (value && _typeof(value) === 'object' && value.constructor === P) {\n      return value;\n    }\n\n    return new P(function (resolve) {\n      resolve(value);\n    });\n  };\n\n  P.reject = function (reason) {\n    return new P(function (resolve, reject) {\n      reject(reason);\n    });\n  };\n\n  var picked = typeof Promise === 'function' ? Promise : P;\n  var d = UNITS_IN_GRID;\n  var meaninglessTransform = {\n    size: 16,\n    x: 0,\n    y: 0,\n    rotate: 0,\n    flipX: false,\n    flipY: false\n  };\n\n  function isReserved(name) {\n    return ~RESERVED_CLASSES.indexOf(name);\n  }\n\n  function bunker(fn) {\n    try {\n      fn();\n    } catch (e) {\n      if (!PRODUCTION) {\n        throw e;\n      }\n    }\n  }\n\n  function insertCss(css) {\n    if (!css || !IS_DOM) {\n      return;\n    }\n\n    var style = DOCUMENT.createElement('style');\n    style.setAttribute('type', 'text/css');\n    style.innerHTML = css;\n    var headChildren = DOCUMENT.head.childNodes;\n    var beforeChild = null;\n\n    for (var i = headChildren.length - 1; i > -1; i--) {\n      var child = headChildren[i];\n      var tagName = (child.tagName || '').toUpperCase();\n\n      if (['STYLE', 'LINK'].indexOf(tagName) > -1) {\n        beforeChild = child;\n      }\n    }\n\n    DOCUMENT.head.insertBefore(style, beforeChild);\n    return css;\n  }\n\n  var idPool = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n  function nextUniqueId() {\n    var size = 12;\n    var id = '';\n\n    while (size-- > 0) {\n      id += idPool[Math.random() * 62 | 0];\n    }\n\n    return id;\n  }\n\n  function toArray(obj) {\n    var array = [];\n\n    for (var i = (obj || []).length >>> 0; i--;) {\n      array[i] = obj[i];\n    }\n\n    return array;\n  }\n\n  function classArray(node) {\n    if (node.classList) {\n      return toArray(node.classList);\n    } else {\n      return (node.getAttribute('class') || '').split(' ').filter(function (i) {\n        return i;\n      });\n    }\n  }\n\n  function getIconName(familyPrefix, cls) {\n    var parts = cls.split('-');\n    var prefix = parts[0];\n    var iconName = parts.slice(1).join('-');\n\n    if (prefix === familyPrefix && iconName !== '' && !isReserved(iconName)) {\n      return iconName;\n    } else {\n      return null;\n    }\n  }\n\n  function htmlEscape(str) {\n    return \"\".concat(str).replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  }\n\n  function joinAttributes(attributes) {\n    return Object.keys(attributes || {}).reduce(function (acc, attributeName) {\n      return acc + \"\".concat(attributeName, \"=\\\"\").concat(htmlEscape(attributes[attributeName]), \"\\\" \");\n    }, '').trim();\n  }\n\n  function joinStyles(styles) {\n    return Object.keys(styles || {}).reduce(function (acc, styleName) {\n      return acc + \"\".concat(styleName, \": \").concat(styles[styleName], \";\");\n    }, '');\n  }\n\n  function transformIsMeaningful(transform) {\n    return transform.size !== meaninglessTransform.size || transform.x !== meaninglessTransform.x || transform.y !== meaninglessTransform.y || transform.rotate !== meaninglessTransform.rotate || transform.flipX || transform.flipY;\n  }\n\n  function transformForSvg(_ref) {\n    var transform = _ref.transform,\n        containerWidth = _ref.containerWidth,\n        iconWidth = _ref.iconWidth;\n    var outer = {\n      transform: \"translate(\".concat(containerWidth / 2, \" 256)\")\n    };\n    var innerTranslate = \"translate(\".concat(transform.x * 32, \", \").concat(transform.y * 32, \") \");\n    var innerScale = \"scale(\".concat(transform.size / 16 * (transform.flipX ? -1 : 1), \", \").concat(transform.size / 16 * (transform.flipY ? -1 : 1), \") \");\n    var innerRotate = \"rotate(\".concat(transform.rotate, \" 0 0)\");\n    var inner = {\n      transform: \"\".concat(innerTranslate, \" \").concat(innerScale, \" \").concat(innerRotate)\n    };\n    var path = {\n      transform: \"translate(\".concat(iconWidth / 2 * -1, \" -256)\")\n    };\n    return {\n      outer: outer,\n      inner: inner,\n      path: path\n    };\n  }\n\n  function transformForCss(_ref2) {\n    var transform = _ref2.transform,\n        _ref2$width = _ref2.width,\n        width = _ref2$width === void 0 ? UNITS_IN_GRID : _ref2$width,\n        _ref2$height = _ref2.height,\n        height = _ref2$height === void 0 ? UNITS_IN_GRID : _ref2$height,\n        _ref2$startCentered = _ref2.startCentered,\n        startCentered = _ref2$startCentered === void 0 ? false : _ref2$startCentered;\n    var val = '';\n\n    if (startCentered && IS_IE) {\n      val += \"translate(\".concat(transform.x / d - width / 2, \"em, \").concat(transform.y / d - height / 2, \"em) \");\n    } else if (startCentered) {\n      val += \"translate(calc(-50% + \".concat(transform.x / d, \"em), calc(-50% + \").concat(transform.y / d, \"em)) \");\n    } else {\n      val += \"translate(\".concat(transform.x / d, \"em, \").concat(transform.y / d, \"em) \");\n    }\n\n    val += \"scale(\".concat(transform.size / d * (transform.flipX ? -1 : 1), \", \").concat(transform.size / d * (transform.flipY ? -1 : 1), \") \");\n    val += \"rotate(\".concat(transform.rotate, \"deg) \");\n    return val;\n  }\n\n  var ALL_SPACE = {\n    x: 0,\n    y: 0,\n    width: '100%',\n    height: '100%'\n  };\n\n  function fillBlack(abstract) {\n    var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (abstract.attributes && (abstract.attributes.fill || force)) {\n      abstract.attributes.fill = 'black';\n    }\n\n    return abstract;\n  }\n\n  function deGroup(abstract) {\n    if (abstract.tag === 'g') {\n      return abstract.children;\n    } else {\n      return [abstract];\n    }\n  }\n\n  function makeIconMasking(_ref) {\n    var children = _ref.children,\n        attributes = _ref.attributes,\n        main = _ref.main,\n        mask = _ref.mask,\n        explicitMaskId = _ref.maskId,\n        transform = _ref.transform;\n    var mainWidth = main.width,\n        mainPath = main.icon;\n    var maskWidth = mask.width,\n        maskPath = mask.icon;\n    var trans = transformForSvg({\n      transform: transform,\n      containerWidth: maskWidth,\n      iconWidth: mainWidth\n    });\n    var maskRect = {\n      tag: 'rect',\n      attributes: _objectSpread({}, ALL_SPACE, {\n        fill: 'white'\n      })\n    };\n    var maskInnerGroupChildrenMixin = mainPath.children ? {\n      children: mainPath.children.map(fillBlack)\n    } : {};\n    var maskInnerGroup = {\n      tag: 'g',\n      attributes: _objectSpread({}, trans.inner),\n      children: [fillBlack(_objectSpread({\n        tag: mainPath.tag,\n        attributes: _objectSpread({}, mainPath.attributes, trans.path)\n      }, maskInnerGroupChildrenMixin))]\n    };\n    var maskOuterGroup = {\n      tag: 'g',\n      attributes: _objectSpread({}, trans.outer),\n      children: [maskInnerGroup]\n    };\n    var maskId = \"mask-\".concat(explicitMaskId || nextUniqueId());\n    var clipId = \"clip-\".concat(explicitMaskId || nextUniqueId());\n    var maskTag = {\n      tag: 'mask',\n      attributes: _objectSpread({}, ALL_SPACE, {\n        id: maskId,\n        maskUnits: 'userSpaceOnUse',\n        maskContentUnits: 'userSpaceOnUse'\n      }),\n      children: [maskRect, maskOuterGroup]\n    };\n    var defs = {\n      tag: 'defs',\n      children: [{\n        tag: 'clipPath',\n        attributes: {\n          id: clipId\n        },\n        children: deGroup(maskPath)\n      }, maskTag]\n    };\n    children.push(defs, {\n      tag: 'rect',\n      attributes: _objectSpread({\n        fill: 'currentColor',\n        'clip-path': \"url(#\".concat(clipId, \")\"),\n        mask: \"url(#\".concat(maskId, \")\")\n      }, ALL_SPACE)\n    });\n    return {\n      children: children,\n      attributes: attributes\n    };\n  }\n\n  function makeIconStandard(_ref) {\n    var children = _ref.children,\n        attributes = _ref.attributes,\n        main = _ref.main,\n        transform = _ref.transform,\n        styles = _ref.styles;\n    var styleString = joinStyles(styles);\n\n    if (styleString.length > 0) {\n      attributes['style'] = styleString;\n    }\n\n    if (transformIsMeaningful(transform)) {\n      var trans = transformForSvg({\n        transform: transform,\n        containerWidth: main.width,\n        iconWidth: main.width\n      });\n      children.push({\n        tag: 'g',\n        attributes: _objectSpread({}, trans.outer),\n        children: [{\n          tag: 'g',\n          attributes: _objectSpread({}, trans.inner),\n          children: [{\n            tag: main.icon.tag,\n            children: main.icon.children,\n            attributes: _objectSpread({}, main.icon.attributes, trans.path)\n          }]\n        }]\n      });\n    } else {\n      children.push(main.icon);\n    }\n\n    return {\n      children: children,\n      attributes: attributes\n    };\n  }\n\n  function asIcon(_ref) {\n    var children = _ref.children,\n        main = _ref.main,\n        mask = _ref.mask,\n        attributes = _ref.attributes,\n        styles = _ref.styles,\n        transform = _ref.transform;\n\n    if (transformIsMeaningful(transform) && main.found && !mask.found) {\n      var width = main.width,\n          height = main.height;\n      var offset = {\n        x: width / height / 2,\n        y: 0.5\n      };\n      attributes['style'] = joinStyles(_objectSpread({}, styles, {\n        'transform-origin': \"\".concat(offset.x + transform.x / 16, \"em \").concat(offset.y + transform.y / 16, \"em\")\n      }));\n    }\n\n    return [{\n      tag: 'svg',\n      attributes: attributes,\n      children: children\n    }];\n  }\n\n  function asSymbol(_ref) {\n    var prefix = _ref.prefix,\n        iconName = _ref.iconName,\n        children = _ref.children,\n        attributes = _ref.attributes,\n        symbol = _ref.symbol;\n    var id = symbol === true ? \"\".concat(prefix, \"-\").concat(config.familyPrefix, \"-\").concat(iconName) : symbol;\n    return [{\n      tag: 'svg',\n      attributes: {\n        style: 'display: none;'\n      },\n      children: [{\n        tag: 'symbol',\n        attributes: _objectSpread({}, attributes, {\n          id: id\n        }),\n        children: children\n      }]\n    }];\n  }\n\n  function makeInlineSvgAbstract(params) {\n    var _params$icons = params.icons,\n        main = _params$icons.main,\n        mask = _params$icons.mask,\n        prefix = params.prefix,\n        iconName = params.iconName,\n        transform = params.transform,\n        symbol = params.symbol,\n        title = params.title,\n        maskId = params.maskId,\n        titleId = params.titleId,\n        extra = params.extra,\n        _params$watchable = params.watchable,\n        watchable = _params$watchable === void 0 ? false : _params$watchable;\n\n    var _ref = mask.found ? mask : main,\n        width = _ref.width,\n        height = _ref.height;\n\n    var isUploadedIcon = prefix === 'fak';\n    var widthClass = isUploadedIcon ? '' : \"fa-w-\".concat(Math.ceil(width / height * 16));\n    var attrClass = [config.replacementClass, iconName ? \"\".concat(config.familyPrefix, \"-\").concat(iconName) : '', widthClass].filter(function (c) {\n      return extra.classes.indexOf(c) === -1;\n    }).filter(function (c) {\n      return c !== '' || !!c;\n    }).concat(extra.classes).join(' ');\n    var content = {\n      children: [],\n      attributes: _objectSpread({}, extra.attributes, {\n        'data-prefix': prefix,\n        'data-icon': iconName,\n        'class': attrClass,\n        'role': extra.attributes.role || 'img',\n        'xmlns': 'http://www.w3.org/2000/svg',\n        'viewBox': \"0 0 \".concat(width, \" \").concat(height)\n      })\n    };\n    var uploadedIconWidthStyle = isUploadedIcon && !~extra.classes.indexOf('fa-fw') ? {\n      width: \"\".concat(width / height * 16 * 0.0625, \"em\")\n    } : {};\n\n    if (watchable) {\n      content.attributes[DATA_FA_I2SVG] = '';\n    }\n\n    if (title) content.children.push({\n      tag: 'title',\n      attributes: {\n        id: content.attributes['aria-labelledby'] || \"title-\".concat(titleId || nextUniqueId())\n      },\n      children: [title]\n    });\n\n    var args = _objectSpread({}, content, {\n      prefix: prefix,\n      iconName: iconName,\n      main: main,\n      mask: mask,\n      maskId: maskId,\n      transform: transform,\n      symbol: symbol,\n      styles: _objectSpread({}, uploadedIconWidthStyle, extra.styles)\n    });\n\n    var _ref2 = mask.found && main.found ? makeIconMasking(args) : makeIconStandard(args),\n        children = _ref2.children,\n        attributes = _ref2.attributes;\n\n    args.children = children;\n    args.attributes = attributes;\n\n    if (symbol) {\n      return asSymbol(args);\n    } else {\n      return asIcon(args);\n    }\n  }\n\n  function makeLayersTextAbstract(params) {\n    var content = params.content,\n        width = params.width,\n        height = params.height,\n        transform = params.transform,\n        title = params.title,\n        extra = params.extra,\n        _params$watchable2 = params.watchable,\n        watchable = _params$watchable2 === void 0 ? false : _params$watchable2;\n\n    var attributes = _objectSpread({}, extra.attributes, title ? {\n      'title': title\n    } : {}, {\n      'class': extra.classes.join(' ')\n    });\n\n    if (watchable) {\n      attributes[DATA_FA_I2SVG] = '';\n    }\n\n    var styles = _objectSpread({}, extra.styles);\n\n    if (transformIsMeaningful(transform)) {\n      styles['transform'] = transformForCss({\n        transform: transform,\n        startCentered: true,\n        width: width,\n        height: height\n      });\n      styles['-webkit-transform'] = styles['transform'];\n    }\n\n    var styleString = joinStyles(styles);\n\n    if (styleString.length > 0) {\n      attributes['style'] = styleString;\n    }\n\n    var val = [];\n    val.push({\n      tag: 'span',\n      attributes: attributes,\n      children: [content]\n    });\n\n    if (title) {\n      val.push({\n        tag: 'span',\n        attributes: {\n          class: 'sr-only'\n        },\n        children: [title]\n      });\n    }\n\n    return val;\n  }\n\n  function makeLayersCounterAbstract(params) {\n    var content = params.content,\n        title = params.title,\n        extra = params.extra;\n\n    var attributes = _objectSpread({}, extra.attributes, title ? {\n      'title': title\n    } : {}, {\n      'class': extra.classes.join(' ')\n    });\n\n    var styleString = joinStyles(extra.styles);\n\n    if (styleString.length > 0) {\n      attributes['style'] = styleString;\n    }\n\n    var val = [];\n    val.push({\n      tag: 'span',\n      attributes: attributes,\n      children: [content]\n    });\n\n    if (title) {\n      val.push({\n        tag: 'span',\n        attributes: {\n          class: 'sr-only'\n        },\n        children: [title]\n      });\n    }\n\n    return val;\n  }\n\n  var noop$1 = function noop() {};\n\n  var p = config.measurePerformance && PERFORMANCE && PERFORMANCE.mark && PERFORMANCE.measure ? PERFORMANCE : {\n    mark: noop$1,\n    measure: noop$1\n  };\n  var preamble = \"FA \\\"5.15.4\\\"\";\n\n  var begin = function begin(name) {\n    p.mark(\"\".concat(preamble, \" \").concat(name, \" begins\"));\n    return function () {\n      return end(name);\n    };\n  };\n\n  var end = function end(name) {\n    p.mark(\"\".concat(preamble, \" \").concat(name, \" ends\"));\n    p.measure(\"\".concat(preamble, \" \").concat(name), \"\".concat(preamble, \" \").concat(name, \" begins\"), \"\".concat(preamble, \" \").concat(name, \" ends\"));\n  };\n\n  var perf = {\n    begin: begin,\n    end: end\n  };\n  /**\n   * Internal helper to bind a function known to have 4 arguments\n   * to a given context.\n   */\n\n  var bindInternal4 = function bindInternal4(func, thisContext) {\n    return function (a, b, c, d) {\n      return func.call(thisContext, a, b, c, d);\n    };\n  };\n  /**\n   * # Reduce\n   *\n   * A fast object `.reduce()` implementation.\n   *\n   * @param  {Object}   subject      The object to reduce over.\n   * @param  {Function} fn           The reducer function.\n   * @param  {mixed}    initialValue The initial value for the reducer, defaults to subject[0].\n   * @param  {Object}   thisContext  The context for the reducer.\n   * @return {mixed}                 The final result.\n   */\n\n\n  var reduce = function fastReduceObject(subject, fn, initialValue, thisContext) {\n    var keys = Object.keys(subject),\n        length = keys.length,\n        iterator = thisContext !== undefined ? bindInternal4(fn, thisContext) : fn,\n        i,\n        key,\n        result;\n\n    if (initialValue === undefined) {\n      i = 1;\n      result = subject[keys[0]];\n    } else {\n      i = 0;\n      result = initialValue;\n    }\n\n    for (; i < length; i++) {\n      key = keys[i];\n      result = iterator(result, subject[key], key, subject);\n    }\n\n    return result;\n  };\n\n  function toHex(unicode) {\n    var result = '';\n\n    for (var i = 0; i < unicode.length; i++) {\n      var hex = unicode.charCodeAt(i).toString(16);\n      result += ('000' + hex).slice(-4);\n    }\n\n    return result;\n  }\n\n  function defineIcons(prefix, icons) {\n    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var _params$skipHooks = params.skipHooks,\n        skipHooks = _params$skipHooks === void 0 ? false : _params$skipHooks;\n    var normalized = Object.keys(icons).reduce(function (acc, iconName) {\n      var icon = icons[iconName];\n      var expanded = !!icon.icon;\n\n      if (expanded) {\n        acc[icon.iconName] = icon.icon;\n      } else {\n        acc[iconName] = icon;\n      }\n\n      return acc;\n    }, {});\n\n    if (typeof namespace.hooks.addPack === 'function' && !skipHooks) {\n      namespace.hooks.addPack(prefix, normalized);\n    } else {\n      namespace.styles[prefix] = _objectSpread({}, namespace.styles[prefix] || {}, normalized);\n    }\n    /**\n     * Font Awesome 4 used the prefix of `fa` for all icons. With the introduction\n     * of new styles we needed to differentiate between them. Prefix `fa` is now an alias\n     * for `fas` so we'll easy the upgrade process for our users by automatically defining\n     * this as well.\n     */\n\n\n    if (prefix === 'fas') {\n      defineIcons('fa', icons);\n    }\n  }\n\n  var styles = namespace.styles,\n      shims = namespace.shims;\n  var _byUnicode = {};\n  var _byLigature = {};\n  var _byOldName = {};\n\n  var build = function build() {\n    var lookup = function lookup(reducer) {\n      return reduce(styles, function (o, style, prefix) {\n        o[prefix] = reduce(style, reducer, {});\n        return o;\n      }, {});\n    };\n\n    _byUnicode = lookup(function (acc, icon, iconName) {\n      if (icon[3]) {\n        acc[icon[3]] = iconName;\n      }\n\n      return acc;\n    });\n    _byLigature = lookup(function (acc, icon, iconName) {\n      var ligatures = icon[2];\n      acc[iconName] = iconName;\n      ligatures.forEach(function (ligature) {\n        acc[ligature] = iconName;\n      });\n      return acc;\n    });\n    var hasRegular = ('far' in styles);\n    _byOldName = reduce(shims, function (acc, shim) {\n      var oldName = shim[0];\n      var prefix = shim[1];\n      var iconName = shim[2];\n\n      if (prefix === 'far' && !hasRegular) {\n        prefix = 'fas';\n      }\n\n      acc[oldName] = {\n        prefix: prefix,\n        iconName: iconName\n      };\n      return acc;\n    }, {});\n  };\n\n  build();\n\n  function byUnicode(prefix, unicode) {\n    return (_byUnicode[prefix] || {})[unicode];\n  }\n\n  function byLigature(prefix, ligature) {\n    return (_byLigature[prefix] || {})[ligature];\n  }\n\n  function byOldName(name) {\n    return _byOldName[name] || {\n      prefix: null,\n      iconName: null\n    };\n  }\n\n  var styles$1 = namespace.styles;\n\n  var emptyCanonicalIcon = function emptyCanonicalIcon() {\n    return {\n      prefix: null,\n      iconName: null,\n      rest: []\n    };\n  };\n\n  function getCanonicalIcon(values) {\n    return values.reduce(function (acc, cls) {\n      var iconName = getIconName(config.familyPrefix, cls);\n\n      if (styles$1[cls]) {\n        acc.prefix = cls;\n      } else if (config.autoFetchSvg && Object.keys(PREFIX_TO_STYLE).indexOf(cls) > -1) {\n        acc.prefix = cls;\n      } else if (iconName) {\n        var shim = acc.prefix === 'fa' ? byOldName(iconName) : {};\n        acc.iconName = shim.iconName || iconName;\n        acc.prefix = shim.prefix || acc.prefix;\n      } else if (cls !== config.replacementClass && cls.indexOf('fa-w-') !== 0) {\n        acc.rest.push(cls);\n      }\n\n      return acc;\n    }, emptyCanonicalIcon());\n  }\n\n  function iconFromMapping(mapping, prefix, iconName) {\n    if (mapping && mapping[prefix] && mapping[prefix][iconName]) {\n      return {\n        prefix: prefix,\n        iconName: iconName,\n        icon: mapping[prefix][iconName]\n      };\n    }\n  }\n\n  function toHtml(abstractNodes) {\n    var tag = abstractNodes.tag,\n        _abstractNodes$attrib = abstractNodes.attributes,\n        attributes = _abstractNodes$attrib === void 0 ? {} : _abstractNodes$attrib,\n        _abstractNodes$childr = abstractNodes.children,\n        children = _abstractNodes$childr === void 0 ? [] : _abstractNodes$childr;\n\n    if (typeof abstractNodes === 'string') {\n      return htmlEscape(abstractNodes);\n    } else {\n      return \"<\".concat(tag, \" \").concat(joinAttributes(attributes), \">\").concat(children.map(toHtml).join(''), \"</\").concat(tag, \">\");\n    }\n  }\n\n  var noop$2 = function noop() {};\n\n  function isWatched(node) {\n    var i2svg = node.getAttribute ? node.getAttribute(DATA_FA_I2SVG) : null;\n    return typeof i2svg === 'string';\n  }\n\n  function getMutator() {\n    if (config.autoReplaceSvg === true) {\n      return mutators.replace;\n    }\n\n    var mutator = mutators[config.autoReplaceSvg];\n    return mutator || mutators.replace;\n  }\n\n  var mutators = {\n    replace: function replace(mutation) {\n      var node = mutation[0];\n      var abstract = mutation[1];\n      var newOuterHTML = abstract.map(function (a) {\n        return toHtml(a);\n      }).join('\\n');\n\n      if (node.parentNode && node.outerHTML) {\n        node.outerHTML = newOuterHTML + (config.keepOriginalSource && node.tagName.toLowerCase() !== 'svg' ? \"<!-- \".concat(node.outerHTML, \" Font Awesome fontawesome.com -->\") : '');\n      } else if (node.parentNode) {\n        var newNode = document.createElement('span');\n        node.parentNode.replaceChild(newNode, node);\n        newNode.outerHTML = newOuterHTML;\n      }\n    },\n    nest: function nest(mutation) {\n      var node = mutation[0];\n      var abstract = mutation[1]; // If we already have a replaced node we do not want to continue nesting within it.\n      // Short-circuit to the standard replacement\n\n      if (~classArray(node).indexOf(config.replacementClass)) {\n        return mutators.replace(mutation);\n      }\n\n      var forSvg = new RegExp(\"\".concat(config.familyPrefix, \"-.*\"));\n      delete abstract[0].attributes.style;\n      delete abstract[0].attributes.id;\n      var splitClasses = abstract[0].attributes.class.split(' ').reduce(function (acc, cls) {\n        if (cls === config.replacementClass || cls.match(forSvg)) {\n          acc.toSvg.push(cls);\n        } else {\n          acc.toNode.push(cls);\n        }\n\n        return acc;\n      }, {\n        toNode: [],\n        toSvg: []\n      });\n      abstract[0].attributes.class = splitClasses.toSvg.join(' ');\n      var newInnerHTML = abstract.map(function (a) {\n        return toHtml(a);\n      }).join('\\n');\n      node.setAttribute('class', splitClasses.toNode.join(' '));\n      node.setAttribute(DATA_FA_I2SVG, '');\n      node.innerHTML = newInnerHTML;\n    }\n  };\n\n  function performOperationSync(op) {\n    op();\n  }\n\n  function perform(mutations, callback) {\n    var callbackFunction = typeof callback === 'function' ? callback : noop$2;\n\n    if (mutations.length === 0) {\n      callbackFunction();\n    } else {\n      var frame = performOperationSync;\n\n      if (config.mutateApproach === MUTATION_APPROACH_ASYNC) {\n        frame = WINDOW.requestAnimationFrame || performOperationSync;\n      }\n\n      frame(function () {\n        var mutator = getMutator();\n        var mark = perf.begin('mutate');\n        mutations.map(mutator);\n        mark();\n        callbackFunction();\n      });\n    }\n  }\n\n  var disabled = false;\n\n  function disableObservation() {\n    disabled = true;\n  }\n\n  function enableObservation() {\n    disabled = false;\n  }\n\n  var mo = null;\n\n  function observe(options) {\n    if (!MUTATION_OBSERVER) {\n      return;\n    }\n\n    if (!config.observeMutations) {\n      return;\n    }\n\n    var treeCallback = options.treeCallback,\n        nodeCallback = options.nodeCallback,\n        pseudoElementsCallback = options.pseudoElementsCallback,\n        _options$observeMutat = options.observeMutationsRoot,\n        observeMutationsRoot = _options$observeMutat === void 0 ? DOCUMENT : _options$observeMutat;\n    mo = new MUTATION_OBSERVER(function (objects) {\n      if (disabled) return;\n      toArray(objects).forEach(function (mutationRecord) {\n        if (mutationRecord.type === 'childList' && mutationRecord.addedNodes.length > 0 && !isWatched(mutationRecord.addedNodes[0])) {\n          if (config.searchPseudoElements) {\n            pseudoElementsCallback(mutationRecord.target);\n          }\n\n          treeCallback(mutationRecord.target);\n        }\n\n        if (mutationRecord.type === 'attributes' && mutationRecord.target.parentNode && config.searchPseudoElements) {\n          pseudoElementsCallback(mutationRecord.target.parentNode);\n        }\n\n        if (mutationRecord.type === 'attributes' && isWatched(mutationRecord.target) && ~ATTRIBUTES_WATCHED_FOR_MUTATION.indexOf(mutationRecord.attributeName)) {\n          if (mutationRecord.attributeName === 'class') {\n            var _getCanonicalIcon = getCanonicalIcon(classArray(mutationRecord.target)),\n                prefix = _getCanonicalIcon.prefix,\n                iconName = _getCanonicalIcon.iconName;\n\n            if (prefix) mutationRecord.target.setAttribute('data-prefix', prefix);\n            if (iconName) mutationRecord.target.setAttribute('data-icon', iconName);\n          } else {\n            nodeCallback(mutationRecord.target);\n          }\n        }\n      });\n    });\n    if (!IS_DOM) return;\n    mo.observe(observeMutationsRoot, {\n      childList: true,\n      attributes: true,\n      characterData: true,\n      subtree: true\n    });\n  }\n\n  function disconnect() {\n    if (!mo) return;\n    mo.disconnect();\n  }\n\n  function styleParser(node) {\n    var style = node.getAttribute('style');\n    var val = [];\n\n    if (style) {\n      val = style.split(';').reduce(function (acc, style) {\n        var styles = style.split(':');\n        var prop = styles[0];\n        var value = styles.slice(1);\n\n        if (prop && value.length > 0) {\n          acc[prop] = value.join(':').trim();\n        }\n\n        return acc;\n      }, {});\n    }\n\n    return val;\n  }\n\n  function classParser(node) {\n    var existingPrefix = node.getAttribute('data-prefix');\n    var existingIconName = node.getAttribute('data-icon');\n    var innerText = node.innerText !== undefined ? node.innerText.trim() : '';\n    var val = getCanonicalIcon(classArray(node));\n\n    if (existingPrefix && existingIconName) {\n      val.prefix = existingPrefix;\n      val.iconName = existingIconName;\n    }\n\n    if (val.prefix && innerText.length > 1) {\n      val.iconName = byLigature(val.prefix, node.innerText);\n    } else if (val.prefix && innerText.length === 1) {\n      val.iconName = byUnicode(val.prefix, toHex(node.innerText));\n    }\n\n    return val;\n  }\n\n  var parseTransformString = function parseTransformString(transformString) {\n    var transform = {\n      size: 16,\n      x: 0,\n      y: 0,\n      flipX: false,\n      flipY: false,\n      rotate: 0\n    };\n\n    if (!transformString) {\n      return transform;\n    } else {\n      return transformString.toLowerCase().split(' ').reduce(function (acc, n) {\n        var parts = n.toLowerCase().split('-');\n        var first = parts[0];\n        var rest = parts.slice(1).join('-');\n\n        if (first && rest === 'h') {\n          acc.flipX = true;\n          return acc;\n        }\n\n        if (first && rest === 'v') {\n          acc.flipY = true;\n          return acc;\n        }\n\n        rest = parseFloat(rest);\n\n        if (isNaN(rest)) {\n          return acc;\n        }\n\n        switch (first) {\n          case 'grow':\n            acc.size = acc.size + rest;\n            break;\n\n          case 'shrink':\n            acc.size = acc.size - rest;\n            break;\n\n          case 'left':\n            acc.x = acc.x - rest;\n            break;\n\n          case 'right':\n            acc.x = acc.x + rest;\n            break;\n\n          case 'up':\n            acc.y = acc.y - rest;\n            break;\n\n          case 'down':\n            acc.y = acc.y + rest;\n            break;\n\n          case 'rotate':\n            acc.rotate = acc.rotate + rest;\n            break;\n        }\n\n        return acc;\n      }, transform);\n    }\n  };\n\n  function transformParser(node) {\n    return parseTransformString(node.getAttribute('data-fa-transform'));\n  }\n\n  function symbolParser(node) {\n    var symbol = node.getAttribute('data-fa-symbol');\n    return symbol === null ? false : symbol === '' ? true : symbol;\n  }\n\n  function attributesParser(node) {\n    var extraAttributes = toArray(node.attributes).reduce(function (acc, attr) {\n      if (acc.name !== 'class' && acc.name !== 'style') {\n        acc[attr.name] = attr.value;\n      }\n\n      return acc;\n    }, {});\n    var title = node.getAttribute('title');\n    var titleId = node.getAttribute('data-fa-title-id');\n\n    if (config.autoA11y) {\n      if (title) {\n        extraAttributes['aria-labelledby'] = \"\".concat(config.replacementClass, \"-title-\").concat(titleId || nextUniqueId());\n      } else {\n        extraAttributes['aria-hidden'] = 'true';\n        extraAttributes['focusable'] = 'false';\n      }\n    }\n\n    return extraAttributes;\n  }\n\n  function maskParser(node) {\n    var mask = node.getAttribute('data-fa-mask');\n\n    if (!mask) {\n      return emptyCanonicalIcon();\n    } else {\n      return getCanonicalIcon(mask.split(' ').map(function (i) {\n        return i.trim();\n      }));\n    }\n  }\n\n  function blankMeta() {\n    return {\n      iconName: null,\n      title: null,\n      titleId: null,\n      prefix: null,\n      transform: meaninglessTransform,\n      symbol: false,\n      mask: null,\n      maskId: null,\n      extra: {\n        classes: [],\n        styles: {},\n        attributes: {}\n      }\n    };\n  }\n\n  function parseMeta(node) {\n    var _classParser = classParser(node),\n        iconName = _classParser.iconName,\n        prefix = _classParser.prefix,\n        extraClasses = _classParser.rest;\n\n    var extraStyles = styleParser(node);\n    var transform = transformParser(node);\n    var symbol = symbolParser(node);\n    var extraAttributes = attributesParser(node);\n    var mask = maskParser(node);\n    return {\n      iconName: iconName,\n      title: node.getAttribute('title'),\n      titleId: node.getAttribute('data-fa-title-id'),\n      prefix: prefix,\n      transform: transform,\n      symbol: symbol,\n      mask: mask,\n      maskId: node.getAttribute('data-fa-mask-id'),\n      extra: {\n        classes: extraClasses,\n        styles: extraStyles,\n        attributes: extraAttributes\n      }\n    };\n  }\n\n  function MissingIcon(error) {\n    this.name = 'MissingIcon';\n    this.message = error || 'Icon unavailable';\n    this.stack = new Error().stack;\n  }\n\n  MissingIcon.prototype = Object.create(Error.prototype);\n  MissingIcon.prototype.constructor = MissingIcon;\n  var FILL = {\n    fill: 'currentColor'\n  };\n  var ANIMATION_BASE = {\n    attributeType: 'XML',\n    repeatCount: 'indefinite',\n    dur: '2s'\n  };\n  var RING = {\n    tag: 'path',\n    attributes: _objectSpread({}, FILL, {\n      d: 'M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z'\n    })\n  };\n\n  var OPACITY_ANIMATE = _objectSpread({}, ANIMATION_BASE, {\n    attributeName: 'opacity'\n  });\n\n  var DOT = {\n    tag: 'circle',\n    attributes: _objectSpread({}, FILL, {\n      cx: '256',\n      cy: '364',\n      r: '28'\n    }),\n    children: [{\n      tag: 'animate',\n      attributes: _objectSpread({}, ANIMATION_BASE, {\n        attributeName: 'r',\n        values: '28;14;28;28;14;28;'\n      })\n    }, {\n      tag: 'animate',\n      attributes: _objectSpread({}, OPACITY_ANIMATE, {\n        values: '1;0;1;1;0;1;'\n      })\n    }]\n  };\n  var QUESTION = {\n    tag: 'path',\n    attributes: _objectSpread({}, FILL, {\n      opacity: '1',\n      d: 'M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z'\n    }),\n    children: [{\n      tag: 'animate',\n      attributes: _objectSpread({}, OPACITY_ANIMATE, {\n        values: '1;0;0;0;0;1;'\n      })\n    }]\n  };\n  var EXCLAMATION = {\n    tag: 'path',\n    attributes: _objectSpread({}, FILL, {\n      opacity: '0',\n      d: 'M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z'\n    }),\n    children: [{\n      tag: 'animate',\n      attributes: _objectSpread({}, OPACITY_ANIMATE, {\n        values: '0;0;1;1;0;0;'\n      })\n    }]\n  };\n  var missing = {\n    tag: 'g',\n    children: [RING, DOT, QUESTION, EXCLAMATION]\n  };\n  var styles$2 = namespace.styles;\n\n  function asFoundIcon(icon) {\n    var width = icon[0];\n    var height = icon[1];\n\n    var _icon$slice = icon.slice(4),\n        _icon$slice2 = _slicedToArray(_icon$slice, 1),\n        vectorData = _icon$slice2[0];\n\n    var element = null;\n\n    if (Array.isArray(vectorData)) {\n      element = {\n        tag: 'g',\n        attributes: {\n          class: \"\".concat(config.familyPrefix, \"-\").concat(DUOTONE_CLASSES.GROUP)\n        },\n        children: [{\n          tag: 'path',\n          attributes: {\n            class: \"\".concat(config.familyPrefix, \"-\").concat(DUOTONE_CLASSES.SECONDARY),\n            fill: 'currentColor',\n            d: vectorData[0]\n          }\n        }, {\n          tag: 'path',\n          attributes: {\n            class: \"\".concat(config.familyPrefix, \"-\").concat(DUOTONE_CLASSES.PRIMARY),\n            fill: 'currentColor',\n            d: vectorData[1]\n          }\n        }]\n      };\n    } else {\n      element = {\n        tag: 'path',\n        attributes: {\n          fill: 'currentColor',\n          d: vectorData\n        }\n      };\n    }\n\n    return {\n      found: true,\n      width: width,\n      height: height,\n      icon: element\n    };\n  }\n\n  function findIcon(iconName, prefix) {\n    return new picked(function (resolve, reject) {\n      var val = {\n        found: false,\n        width: 512,\n        height: 512,\n        icon: missing\n      };\n\n      if (iconName && prefix && styles$2[prefix] && styles$2[prefix][iconName]) {\n        var icon = styles$2[prefix][iconName];\n        return resolve(asFoundIcon(icon));\n      }\n\n      if (iconName && prefix && !config.showMissingIcons) {\n        reject(new MissingIcon(\"Icon is missing for prefix \".concat(prefix, \" with icon name \").concat(iconName)));\n      } else {\n        resolve(val);\n      }\n    });\n  }\n\n  var styles$3 = namespace.styles;\n\n  function generateSvgReplacementMutation(node, nodeMeta) {\n    var iconName = nodeMeta.iconName,\n        title = nodeMeta.title,\n        titleId = nodeMeta.titleId,\n        prefix = nodeMeta.prefix,\n        transform = nodeMeta.transform,\n        symbol = nodeMeta.symbol,\n        mask = nodeMeta.mask,\n        maskId = nodeMeta.maskId,\n        extra = nodeMeta.extra;\n    return new picked(function (resolve, reject) {\n      picked.all([findIcon(iconName, prefix), findIcon(mask.iconName, mask.prefix)]).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            main = _ref2[0],\n            mask = _ref2[1];\n\n        resolve([node, makeInlineSvgAbstract({\n          icons: {\n            main: main,\n            mask: mask\n          },\n          prefix: prefix,\n          iconName: iconName,\n          transform: transform,\n          symbol: symbol,\n          mask: mask,\n          maskId: maskId,\n          title: title,\n          titleId: titleId,\n          extra: extra,\n          watchable: true\n        })]);\n      });\n    });\n  }\n\n  function generateLayersText(node, nodeMeta) {\n    var title = nodeMeta.title,\n        transform = nodeMeta.transform,\n        extra = nodeMeta.extra;\n    var width = null;\n    var height = null;\n\n    if (IS_IE) {\n      var computedFontSize = parseInt(getComputedStyle(node).fontSize, 10);\n      var boundingClientRect = node.getBoundingClientRect();\n      width = boundingClientRect.width / computedFontSize;\n      height = boundingClientRect.height / computedFontSize;\n    }\n\n    if (config.autoA11y && !title) {\n      extra.attributes['aria-hidden'] = 'true';\n    }\n\n    return picked.resolve([node, makeLayersTextAbstract({\n      content: node.innerHTML,\n      width: width,\n      height: height,\n      transform: transform,\n      title: title,\n      extra: extra,\n      watchable: true\n    })]);\n  }\n\n  function generateMutation(node) {\n    var nodeMeta = parseMeta(node);\n\n    if (~nodeMeta.extra.classes.indexOf(LAYERS_TEXT_CLASSNAME)) {\n      return generateLayersText(node, nodeMeta);\n    } else {\n      return generateSvgReplacementMutation(node, nodeMeta);\n    }\n  }\n\n  function onTree(root) {\n    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (!IS_DOM) return;\n    var htmlClassList = DOCUMENT.documentElement.classList;\n\n    var hclAdd = function hclAdd(suffix) {\n      return htmlClassList.add(\"\".concat(HTML_CLASS_I2SVG_BASE_CLASS, \"-\").concat(suffix));\n    };\n\n    var hclRemove = function hclRemove(suffix) {\n      return htmlClassList.remove(\"\".concat(HTML_CLASS_I2SVG_BASE_CLASS, \"-\").concat(suffix));\n    };\n\n    var prefixes = config.autoFetchSvg ? Object.keys(PREFIX_TO_STYLE) : Object.keys(styles$3);\n    var prefixesDomQuery = [\".\".concat(LAYERS_TEXT_CLASSNAME, \":not([\").concat(DATA_FA_I2SVG, \"])\")].concat(prefixes.map(function (p) {\n      return \".\".concat(p, \":not([\").concat(DATA_FA_I2SVG, \"])\");\n    })).join(', ');\n\n    if (prefixesDomQuery.length === 0) {\n      return;\n    }\n\n    var candidates = [];\n\n    try {\n      candidates = toArray(root.querySelectorAll(prefixesDomQuery));\n    } catch (e) {// noop\n    }\n\n    if (candidates.length > 0) {\n      hclAdd('pending');\n      hclRemove('complete');\n    } else {\n      return;\n    }\n\n    var mark = perf.begin('onTree');\n    var mutations = candidates.reduce(function (acc, node) {\n      try {\n        var mutation = generateMutation(node);\n\n        if (mutation) {\n          acc.push(mutation);\n        }\n      } catch (e) {\n        if (!PRODUCTION) {\n          if (e instanceof MissingIcon) {\n            console.error(e);\n          }\n        }\n      }\n\n      return acc;\n    }, []);\n    return new picked(function (resolve, reject) {\n      picked.all(mutations).then(function (resolvedMutations) {\n        perform(resolvedMutations, function () {\n          hclAdd('active');\n          hclAdd('complete');\n          hclRemove('pending');\n          if (typeof callback === 'function') callback();\n          mark();\n          resolve();\n        });\n      }).catch(function () {\n        mark();\n        reject();\n      });\n    });\n  }\n\n  function onNode(node) {\n    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    generateMutation(node).then(function (mutation) {\n      if (mutation) {\n        perform([mutation], callback);\n      }\n    });\n  }\n\n  function replaceForPosition(node, position) {\n    var pendingAttribute = \"\".concat(DATA_FA_PSEUDO_ELEMENT_PENDING).concat(position.replace(':', '-'));\n    return new picked(function (resolve, reject) {\n      if (node.getAttribute(pendingAttribute) !== null) {\n        // This node is already being processed\n        return resolve();\n      }\n\n      var children = toArray(node.children);\n      var alreadyProcessedPseudoElement = children.filter(function (c) {\n        return c.getAttribute(DATA_FA_PSEUDO_ELEMENT) === position;\n      })[0];\n      var styles = WINDOW.getComputedStyle(node, position);\n      var fontFamily = styles.getPropertyValue('font-family').match(FONT_FAMILY_PATTERN);\n      var fontWeight = styles.getPropertyValue('font-weight');\n      var content = styles.getPropertyValue('content');\n\n      if (alreadyProcessedPseudoElement && !fontFamily) {\n        // If we've already processed it but the current computed style does not result in a font-family,\n        // that probably means that a class name that was previously present to make the icon has been\n        // removed. So we now should delete the icon.\n        node.removeChild(alreadyProcessedPseudoElement);\n        return resolve();\n      } else if (fontFamily && content !== 'none' && content !== '') {\n        var _content = styles.getPropertyValue('content');\n\n        var prefix = ~['Solid', 'Regular', 'Light', 'Duotone', 'Brands', 'Kit'].indexOf(fontFamily[2]) ? STYLE_TO_PREFIX[fontFamily[2].toLowerCase()] : FONT_WEIGHT_TO_PREFIX[fontWeight];\n        var hexValue = toHex(_content.length === 3 ? _content.substr(1, 1) : _content);\n        var iconName = byUnicode(prefix, hexValue);\n        var iconIdentifier = iconName; // Only convert the pseudo element in this :before/:after position into an icon if we haven't\n        // already done so with the same prefix and iconName\n\n        if (iconName && (!alreadyProcessedPseudoElement || alreadyProcessedPseudoElement.getAttribute(DATA_PREFIX) !== prefix || alreadyProcessedPseudoElement.getAttribute(DATA_ICON) !== iconIdentifier)) {\n          node.setAttribute(pendingAttribute, iconIdentifier);\n\n          if (alreadyProcessedPseudoElement) {\n            // Delete the old one, since we're replacing it with a new one\n            node.removeChild(alreadyProcessedPseudoElement);\n          }\n\n          var meta = blankMeta();\n          var extra = meta.extra;\n          extra.attributes[DATA_FA_PSEUDO_ELEMENT] = position;\n          findIcon(iconName, prefix).then(function (main) {\n            var abstract = makeInlineSvgAbstract(_objectSpread({}, meta, {\n              icons: {\n                main: main,\n                mask: emptyCanonicalIcon()\n              },\n              prefix: prefix,\n              iconName: iconIdentifier,\n              extra: extra,\n              watchable: true\n            }));\n            var element = DOCUMENT.createElement('svg');\n\n            if (position === ':before') {\n              node.insertBefore(element, node.firstChild);\n            } else {\n              node.appendChild(element);\n            }\n\n            element.outerHTML = abstract.map(function (a) {\n              return toHtml(a);\n            }).join('\\n');\n            node.removeAttribute(pendingAttribute);\n            resolve();\n          }).catch(reject);\n        } else {\n          resolve();\n        }\n      } else {\n        resolve();\n      }\n    });\n  }\n\n  function replace(node) {\n    return picked.all([replaceForPosition(node, ':before'), replaceForPosition(node, ':after')]);\n  }\n\n  function processable(node) {\n    return node.parentNode !== document.head && !~TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS.indexOf(node.tagName.toUpperCase()) && !node.getAttribute(DATA_FA_PSEUDO_ELEMENT) && (!node.parentNode || node.parentNode.tagName !== 'svg');\n  }\n\n  function searchPseudoElements(root) {\n    if (!IS_DOM) return;\n    return new picked(function (resolve, reject) {\n      var operations = toArray(root.querySelectorAll('*')).filter(processable).map(replace);\n      var end = perf.begin('searchPseudoElements');\n      disableObservation();\n      picked.all(operations).then(function () {\n        end();\n        enableObservation();\n        resolve();\n      }).catch(function () {\n        end();\n        enableObservation();\n        reject();\n      });\n    });\n  }\n\n  var baseStyles = \"svg:not(:root).svg-inline--fa{overflow:visible}.svg-inline--fa{display:inline-block;font-size:inherit;height:1em;overflow:visible;vertical-align:-.125em}.svg-inline--fa.fa-lg{vertical-align:-.225em}.svg-inline--fa.fa-w-1{width:.0625em}.svg-inline--fa.fa-w-2{width:.125em}.svg-inline--fa.fa-w-3{width:.1875em}.svg-inline--fa.fa-w-4{width:.25em}.svg-inline--fa.fa-w-5{width:.3125em}.svg-inline--fa.fa-w-6{width:.375em}.svg-inline--fa.fa-w-7{width:.4375em}.svg-inline--fa.fa-w-8{width:.5em}.svg-inline--fa.fa-w-9{width:.5625em}.svg-inline--fa.fa-w-10{width:.625em}.svg-inline--fa.fa-w-11{width:.6875em}.svg-inline--fa.fa-w-12{width:.75em}.svg-inline--fa.fa-w-13{width:.8125em}.svg-inline--fa.fa-w-14{width:.875em}.svg-inline--fa.fa-w-15{width:.9375em}.svg-inline--fa.fa-w-16{width:1em}.svg-inline--fa.fa-w-17{width:1.0625em}.svg-inline--fa.fa-w-18{width:1.125em}.svg-inline--fa.fa-w-19{width:1.1875em}.svg-inline--fa.fa-w-20{width:1.25em}.svg-inline--fa.fa-pull-left{margin-right:.3em;width:auto}.svg-inline--fa.fa-pull-right{margin-left:.3em;width:auto}.svg-inline--fa.fa-border{height:1.5em}.svg-inline--fa.fa-li{width:2em}.svg-inline--fa.fa-fw{width:1.25em}.fa-layers svg.svg-inline--fa{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0}.fa-layers{display:inline-block;height:1em;position:relative;text-align:center;vertical-align:-.125em;width:1em}.fa-layers svg.svg-inline--fa{-webkit-transform-origin:center center;transform-origin:center center}.fa-layers-counter,.fa-layers-text{display:inline-block;position:absolute;text-align:center}.fa-layers-text{left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);-webkit-transform-origin:center center;transform-origin:center center}.fa-layers-counter{background-color:#ff253a;border-radius:1em;-webkit-box-sizing:border-box;box-sizing:border-box;color:#fff;height:1.5em;line-height:1;max-width:5em;min-width:1.5em;overflow:hidden;padding:.25em;right:0;text-overflow:ellipsis;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top right;transform-origin:top right}.fa-layers-bottom-right{bottom:0;right:0;top:auto;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:bottom right;transform-origin:bottom right}.fa-layers-bottom-left{bottom:0;left:0;right:auto;top:auto;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:bottom left;transform-origin:bottom left}.fa-layers-top-right{right:0;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top right;transform-origin:top right}.fa-layers-top-left{left:0;right:auto;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top left;transform-origin:top left}.fa-lg{font-size:1.3333333333em;line-height:.75em;vertical-align:-.0667em}.fa-xs{font-size:.75em}.fa-sm{font-size:.875em}.fa-1x{font-size:1em}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-6x{font-size:6em}.fa-7x{font-size:7em}.fa-8x{font-size:8em}.fa-9x{font-size:9em}.fa-10x{font-size:10em}.fa-fw{text-align:center;width:1.25em}.fa-ul{list-style-type:none;margin-left:2.5em;padding-left:0}.fa-ul>li{position:relative}.fa-li{left:-2em;position:absolute;text-align:center;width:2em;line-height:inherit}.fa-border{border:solid .08em #eee;border-radius:.1em;padding:.2em .25em .15em}.fa-pull-left{float:left}.fa-pull-right{float:right}.fa.fa-pull-left,.fab.fa-pull-left,.fal.fa-pull-left,.far.fa-pull-left,.fas.fa-pull-left{margin-right:.3em}.fa.fa-pull-right,.fab.fa-pull-right,.fal.fa-pull-right,.far.fa-pull-right,.fas.fa-pull-right{margin-left:.3em}.fa-spin{-webkit-animation:fa-spin 2s infinite linear;animation:fa-spin 2s infinite linear}.fa-pulse{-webkit-animation:fa-spin 1s infinite steps(8);animation:fa-spin 1s infinite steps(8)}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.fa-rotate-90{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{-webkit-transform:scale(-1,1);transform:scale(-1,1)}.fa-flip-vertical{-webkit-transform:scale(1,-1);transform:scale(1,-1)}.fa-flip-both,.fa-flip-horizontal.fa-flip-vertical{-webkit-transform:scale(-1,-1);transform:scale(-1,-1)}:root .fa-flip-both,:root .fa-flip-horizontal,:root .fa-flip-vertical,:root .fa-rotate-180,:root .fa-rotate-270,:root .fa-rotate-90{-webkit-filter:none;filter:none}.fa-stack{display:inline-block;height:2em;position:relative;width:2.5em}.fa-stack-1x,.fa-stack-2x{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0}.svg-inline--fa.fa-stack-1x{height:1em;width:1.25em}.svg-inline--fa.fa-stack-2x{height:2em;width:2.5em}.fa-inverse{color:#fff}.sr-only{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.sr-only-focusable:active,.sr-only-focusable:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;width:auto}.svg-inline--fa .fa-primary{fill:var(--fa-primary-color,currentColor);opacity:1;opacity:var(--fa-primary-opacity,1)}.svg-inline--fa .fa-secondary{fill:var(--fa-secondary-color,currentColor);opacity:.4;opacity:var(--fa-secondary-opacity,.4)}.svg-inline--fa.fa-swap-opacity .fa-primary{opacity:.4;opacity:var(--fa-secondary-opacity,.4)}.svg-inline--fa.fa-swap-opacity .fa-secondary{opacity:1;opacity:var(--fa-primary-opacity,1)}.svg-inline--fa mask .fa-primary,.svg-inline--fa mask .fa-secondary{fill:#000}.fad.fa-inverse{color:#fff}\";\n\n  function css() {\n    var dfp = DEFAULT_FAMILY_PREFIX;\n    var drc = DEFAULT_REPLACEMENT_CLASS;\n    var fp = config.familyPrefix;\n    var rc = config.replacementClass;\n    var s = baseStyles;\n\n    if (fp !== dfp || rc !== drc) {\n      var dPatt = new RegExp(\"\\\\.\".concat(dfp, \"\\\\-\"), 'g');\n      var customPropPatt = new RegExp(\"\\\\--\".concat(dfp, \"\\\\-\"), 'g');\n      var rPatt = new RegExp(\"\\\\.\".concat(drc), 'g');\n      s = s.replace(dPatt, \".\".concat(fp, \"-\")).replace(customPropPatt, \"--\".concat(fp, \"-\")).replace(rPatt, \".\".concat(rc));\n    }\n\n    return s;\n  }\n\n  var Library = /*#__PURE__*/function () {\n    function Library() {\n      _classCallCheck(this, Library);\n\n      this.definitions = {};\n    }\n\n    _createClass(Library, [{\n      key: \"add\",\n      value: function add() {\n        var _this = this;\n\n        for (var _len = arguments.length, definitions = new Array(_len), _key = 0; _key < _len; _key++) {\n          definitions[_key] = arguments[_key];\n        }\n\n        var additions = definitions.reduce(this._pullDefinitions, {});\n        Object.keys(additions).forEach(function (key) {\n          _this.definitions[key] = _objectSpread({}, _this.definitions[key] || {}, additions[key]);\n          defineIcons(key, additions[key]);\n          build();\n        });\n      }\n    }, {\n      key: \"reset\",\n      value: function reset() {\n        this.definitions = {};\n      }\n    }, {\n      key: \"_pullDefinitions\",\n      value: function _pullDefinitions(additions, definition) {\n        var normalized = definition.prefix && definition.iconName && definition.icon ? {\n          0: definition\n        } : definition;\n        Object.keys(normalized).map(function (key) {\n          var _normalized$key = normalized[key],\n              prefix = _normalized$key.prefix,\n              iconName = _normalized$key.iconName,\n              icon = _normalized$key.icon;\n          if (!additions[prefix]) additions[prefix] = {};\n          additions[prefix][iconName] = icon;\n        });\n        return additions;\n      }\n    }]);\n\n    return Library;\n  }();\n\n  function ensureCss() {\n    if (config.autoAddCss && !_cssInserted) {\n      insertCss(css());\n      _cssInserted = true;\n    }\n  }\n\n  function apiObject(val, abstractCreator) {\n    Object.defineProperty(val, 'abstract', {\n      get: abstractCreator\n    });\n    Object.defineProperty(val, 'html', {\n      get: function get() {\n        return val.abstract.map(function (a) {\n          return toHtml(a);\n        });\n      }\n    });\n    Object.defineProperty(val, 'node', {\n      get: function get() {\n        if (!IS_DOM) return;\n        var container = DOCUMENT.createElement('div');\n        container.innerHTML = val.html;\n        return container.children;\n      }\n    });\n    return val;\n  }\n\n  function findIconDefinition(iconLookup) {\n    var _iconLookup$prefix = iconLookup.prefix,\n        prefix = _iconLookup$prefix === void 0 ? 'fa' : _iconLookup$prefix,\n        iconName = iconLookup.iconName;\n    if (!iconName) return;\n    return iconFromMapping(library.definitions, prefix, iconName) || iconFromMapping(namespace.styles, prefix, iconName);\n  }\n\n  function resolveIcons(next) {\n    return function (maybeIconDefinition) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var iconDefinition = (maybeIconDefinition || {}).icon ? maybeIconDefinition : findIconDefinition(maybeIconDefinition || {});\n      var mask = params.mask;\n\n      if (mask) {\n        mask = (mask || {}).icon ? mask : findIconDefinition(mask || {});\n      }\n\n      return next(iconDefinition, _objectSpread({}, params, {\n        mask: mask\n      }));\n    };\n  }\n\n  var library = new Library();\n\n  var noAuto = function noAuto() {\n    config.autoReplaceSvg = false;\n    config.observeMutations = false;\n    disconnect();\n  };\n\n  var _cssInserted = false;\n  var dom = {\n    i2svg: function i2svg() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (IS_DOM) {\n        ensureCss();\n        var _params$node = params.node,\n            node = _params$node === void 0 ? DOCUMENT : _params$node,\n            _params$callback = params.callback,\n            callback = _params$callback === void 0 ? function () {} : _params$callback;\n\n        if (config.searchPseudoElements) {\n          searchPseudoElements(node);\n        }\n\n        return onTree(node, callback);\n      } else {\n        return picked.reject('Operation requires a DOM of some kind.');\n      }\n    },\n    css: css,\n    insertCss: function insertCss$$1() {\n      if (!_cssInserted) {\n        insertCss(css());\n        _cssInserted = true;\n      }\n    },\n    watch: function watch() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var autoReplaceSvgRoot = params.autoReplaceSvgRoot,\n          observeMutationsRoot = params.observeMutationsRoot;\n\n      if (config.autoReplaceSvg === false) {\n        config.autoReplaceSvg = true;\n      }\n\n      config.observeMutations = true;\n      domready(function () {\n        autoReplace({\n          autoReplaceSvgRoot: autoReplaceSvgRoot\n        });\n        observe({\n          treeCallback: onTree,\n          nodeCallback: onNode,\n          pseudoElementsCallback: searchPseudoElements,\n          observeMutationsRoot: observeMutationsRoot\n        });\n      });\n    }\n  };\n  var parse = {\n    transform: function transform(transformString) {\n      return parseTransformString(transformString);\n    }\n  };\n  var icon = resolveIcons(function (iconDefinition) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _params$transform = params.transform,\n        transform = _params$transform === void 0 ? meaninglessTransform : _params$transform,\n        _params$symbol = params.symbol,\n        symbol = _params$symbol === void 0 ? false : _params$symbol,\n        _params$mask = params.mask,\n        mask = _params$mask === void 0 ? null : _params$mask,\n        _params$maskId = params.maskId,\n        maskId = _params$maskId === void 0 ? null : _params$maskId,\n        _params$title = params.title,\n        title = _params$title === void 0 ? null : _params$title,\n        _params$titleId = params.titleId,\n        titleId = _params$titleId === void 0 ? null : _params$titleId,\n        _params$classes = params.classes,\n        classes = _params$classes === void 0 ? [] : _params$classes,\n        _params$attributes = params.attributes,\n        attributes = _params$attributes === void 0 ? {} : _params$attributes,\n        _params$styles = params.styles,\n        styles = _params$styles === void 0 ? {} : _params$styles;\n    if (!iconDefinition) return;\n    var prefix = iconDefinition.prefix,\n        iconName = iconDefinition.iconName,\n        icon = iconDefinition.icon;\n    return apiObject(_objectSpread({\n      type: 'icon'\n    }, iconDefinition), function () {\n      ensureCss();\n\n      if (config.autoA11y) {\n        if (title) {\n          attributes['aria-labelledby'] = \"\".concat(config.replacementClass, \"-title-\").concat(titleId || nextUniqueId());\n        } else {\n          attributes['aria-hidden'] = 'true';\n          attributes['focusable'] = 'false';\n        }\n      }\n\n      return makeInlineSvgAbstract({\n        icons: {\n          main: asFoundIcon(icon),\n          mask: mask ? asFoundIcon(mask.icon) : {\n            found: false,\n            width: null,\n            height: null,\n            icon: {}\n          }\n        },\n        prefix: prefix,\n        iconName: iconName,\n        transform: _objectSpread({}, meaninglessTransform, transform),\n        symbol: symbol,\n        title: title,\n        maskId: maskId,\n        titleId: titleId,\n        extra: {\n          attributes: attributes,\n          styles: styles,\n          classes: classes\n        }\n      });\n    });\n  });\n\n  var text = function text(content) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _params$transform2 = params.transform,\n        transform = _params$transform2 === void 0 ? meaninglessTransform : _params$transform2,\n        _params$title2 = params.title,\n        title = _params$title2 === void 0 ? null : _params$title2,\n        _params$classes2 = params.classes,\n        classes = _params$classes2 === void 0 ? [] : _params$classes2,\n        _params$attributes2 = params.attributes,\n        attributes = _params$attributes2 === void 0 ? {} : _params$attributes2,\n        _params$styles2 = params.styles,\n        styles = _params$styles2 === void 0 ? {} : _params$styles2;\n    return apiObject({\n      type: 'text',\n      content: content\n    }, function () {\n      ensureCss();\n      return makeLayersTextAbstract({\n        content: content,\n        transform: _objectSpread({}, meaninglessTransform, transform),\n        title: title,\n        extra: {\n          attributes: attributes,\n          styles: styles,\n          classes: [\"\".concat(config.familyPrefix, \"-layers-text\")].concat(_toConsumableArray(classes))\n        }\n      });\n    });\n  };\n\n  var counter = function counter(content) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _params$title3 = params.title,\n        title = _params$title3 === void 0 ? null : _params$title3,\n        _params$classes3 = params.classes,\n        classes = _params$classes3 === void 0 ? [] : _params$classes3,\n        _params$attributes3 = params.attributes,\n        attributes = _params$attributes3 === void 0 ? {} : _params$attributes3,\n        _params$styles3 = params.styles,\n        styles = _params$styles3 === void 0 ? {} : _params$styles3;\n    return apiObject({\n      type: 'counter',\n      content: content\n    }, function () {\n      ensureCss();\n      return makeLayersCounterAbstract({\n        content: content.toString(),\n        title: title,\n        extra: {\n          attributes: attributes,\n          styles: styles,\n          classes: [\"\".concat(config.familyPrefix, \"-layers-counter\")].concat(_toConsumableArray(classes))\n        }\n      });\n    });\n  };\n\n  var layer = function layer(assembler) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _params$classes4 = params.classes,\n        classes = _params$classes4 === void 0 ? [] : _params$classes4;\n    return apiObject({\n      type: 'layer'\n    }, function () {\n      ensureCss();\n      var children = [];\n      assembler(function (args) {\n        Array.isArray(args) ? args.map(function (a) {\n          children = children.concat(a.abstract);\n        }) : children = children.concat(args.abstract);\n      });\n      return [{\n        tag: 'span',\n        attributes: {\n          class: [\"\".concat(config.familyPrefix, \"-layers\")].concat(_toConsumableArray(classes)).join(' ')\n        },\n        children: children\n      }];\n    });\n  };\n\n  var api = {\n    noAuto: noAuto,\n    config: config,\n    dom: dom,\n    library: library,\n    parse: parse,\n    findIconDefinition: findIconDefinition,\n    icon: icon,\n    text: text,\n    counter: counter,\n    layer: layer,\n    toHtml: toHtml\n  };\n\n  var autoReplace = function autoReplace() {\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _params$autoReplaceSv = params.autoReplaceSvgRoot,\n        autoReplaceSvgRoot = _params$autoReplaceSv === void 0 ? DOCUMENT : _params$autoReplaceSv;\n    if ((Object.keys(namespace.styles).length > 0 || config.autoFetchSvg) && IS_DOM && config.autoReplaceSvg) api.dom.i2svg({\n      node: autoReplaceSvgRoot\n    });\n  };\n\n  function bootstrap() {\n    if (IS_BROWSER) {\n      if (!WINDOW.FontAwesome) {\n        WINDOW.FontAwesome = api;\n      }\n\n      domready(function () {\n        autoReplace();\n        observe({\n          treeCallback: onTree,\n          nodeCallback: onNode,\n          pseudoElementsCallback: searchPseudoElements\n        });\n      });\n    }\n\n    namespace.hooks = _objectSpread({}, namespace.hooks, {\n      addPack: function addPack(prefix, icons) {\n        namespace.styles[prefix] = _objectSpread({}, namespace.styles[prefix] || {}, icons);\n        build();\n        autoReplace();\n      },\n      addShims: function addShims(shims) {\n        var _namespace$shims;\n\n        (_namespace$shims = namespace.shims).push.apply(_namespace$shims, _toConsumableArray(shims));\n\n        build();\n        autoReplace();\n      }\n    });\n  }\n\n  bunker(bootstrap);\n})();","var scope = typeof global !== \"undefined\" && global || typeof self !== \"undefined\" && self || window;\nvar apply = Function.prototype.apply; // DOM APIs, for completeness\n\nexports.setTimeout = function () {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\n\nexports.setInterval = function () {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\n\nexports.clearTimeout = exports.clearInterval = function (timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\n\nTimeout.prototype.unref = Timeout.prototype.ref = function () {};\n\nTimeout.prototype.close = function () {\n  this._clearFn.call(scope, this._id);\n}; // Does not start the time, just sets up the members needed.\n\n\nexports.enroll = function (item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  var msecs = item._idleTimeout;\n\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout) item._onTimeout();\n    }, msecs);\n  }\n}; // setimmediate attaches itself to the global object\n\n\nrequire(\"setimmediate\"); // On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\n\n\nexports.setImmediate = typeof self !== \"undefined\" && self.setImmediate || typeof global !== \"undefined\" && global.setImmediate || this && this.setImmediate;\nexports.clearImmediate = typeof self !== \"undefined\" && self.clearImmediate || typeof global !== \"undefined\" && global.clearImmediate || this && this.clearImmediate;","(function (global, undefined) {\n  \"use strict\";\n\n  if (global.setImmediate) {\n    return;\n  }\n\n  var nextHandle = 1; // Spec says greater than zero\n\n  var tasksByHandle = {};\n  var currentlyRunningATask = false;\n  var doc = global.document;\n  var registerImmediate;\n\n  function setImmediate(callback) {\n    // Callback can either be a function or a string\n    if (typeof callback !== \"function\") {\n      callback = new Function(\"\" + callback);\n    } // Copy function arguments\n\n\n    var args = new Array(arguments.length - 1);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 1];\n    } // Store and register the task\n\n\n    var task = {\n      callback: callback,\n      args: args\n    };\n    tasksByHandle[nextHandle] = task;\n    registerImmediate(nextHandle);\n    return nextHandle++;\n  }\n\n  function clearImmediate(handle) {\n    delete tasksByHandle[handle];\n  }\n\n  function run(task) {\n    var callback = task.callback;\n    var args = task.args;\n\n    switch (args.length) {\n      case 0:\n        callback();\n        break;\n\n      case 1:\n        callback(args[0]);\n        break;\n\n      case 2:\n        callback(args[0], args[1]);\n        break;\n\n      case 3:\n        callback(args[0], args[1], args[2]);\n        break;\n\n      default:\n        callback.apply(undefined, args);\n        break;\n    }\n  }\n\n  function runIfPresent(handle) {\n    // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n    // So if we're currently running a task, we'll need to delay this invocation.\n    if (currentlyRunningATask) {\n      // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n      // \"too much recursion\" error.\n      setTimeout(runIfPresent, 0, handle);\n    } else {\n      var task = tasksByHandle[handle];\n\n      if (task) {\n        currentlyRunningATask = true;\n\n        try {\n          run(task);\n        } finally {\n          clearImmediate(handle);\n          currentlyRunningATask = false;\n        }\n      }\n    }\n  }\n\n  function installNextTickImplementation() {\n    registerImmediate = function registerImmediate(handle) {\n      process.nextTick(function () {\n        runIfPresent(handle);\n      });\n    };\n  }\n\n  function canUsePostMessage() {\n    // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n    // where `global.postMessage` means something completely different and can't be used for this purpose.\n    if (global.postMessage && !global.importScripts) {\n      var postMessageIsAsynchronous = true;\n      var oldOnMessage = global.onmessage;\n\n      global.onmessage = function () {\n        postMessageIsAsynchronous = false;\n      };\n\n      global.postMessage(\"\", \"*\");\n      global.onmessage = oldOnMessage;\n      return postMessageIsAsynchronous;\n    }\n  }\n\n  function installPostMessageImplementation() {\n    // Installs an event handler on `global` for the `message` event: see\n    // * https://developer.mozilla.org/en/DOM/window.postMessage\n    // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n    var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\n    var onGlobalMessage = function onGlobalMessage(event) {\n      if (event.source === global && typeof event.data === \"string\" && event.data.indexOf(messagePrefix) === 0) {\n        runIfPresent(+event.data.slice(messagePrefix.length));\n      }\n    };\n\n    if (global.addEventListener) {\n      global.addEventListener(\"message\", onGlobalMessage, false);\n    } else {\n      global.attachEvent(\"onmessage\", onGlobalMessage);\n    }\n\n    registerImmediate = function registerImmediate(handle) {\n      global.postMessage(messagePrefix + handle, \"*\");\n    };\n  }\n\n  function installMessageChannelImplementation() {\n    var channel = new MessageChannel();\n\n    channel.port1.onmessage = function (event) {\n      var handle = event.data;\n      runIfPresent(handle);\n    };\n\n    registerImmediate = function registerImmediate(handle) {\n      channel.port2.postMessage(handle);\n    };\n  }\n\n  function installReadyStateChangeImplementation() {\n    var html = doc.documentElement;\n\n    registerImmediate = function registerImmediate(handle) {\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var script = doc.createElement(\"script\");\n\n      script.onreadystatechange = function () {\n        runIfPresent(handle);\n        script.onreadystatechange = null;\n        html.removeChild(script);\n        script = null;\n      };\n\n      html.appendChild(script);\n    };\n  }\n\n  function installSetTimeoutImplementation() {\n    registerImmediate = function registerImmediate(handle) {\n      setTimeout(runIfPresent, 0, handle);\n    };\n  } // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\n\n  var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n  attachTo = attachTo && attachTo.setTimeout ? attachTo : global; // Don't get fooled by e.g. browserify environments.\n\n  if ({}.toString.call(global.process) === \"[object process]\") {\n    // For Node.js before 0.9\n    installNextTickImplementation();\n  } else if (canUsePostMessage()) {\n    // For non-IE10 modern browsers\n    installPostMessageImplementation();\n  } else if (global.MessageChannel) {\n    // For web workers, where supported\n    installMessageChannelImplementation();\n  } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n    // For IE 6–8\n    installReadyStateChangeImplementation();\n  } else {\n    // For older browsers\n    installSetTimeoutImplementation();\n  }\n\n  attachTo.setImmediate = setImmediate;\n  attachTo.clearImmediate = clearImmediate;\n})(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self);","// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","import Rails from \"@rails/ujs\"\nimport * as ActiveStorage from \"@rails/activestorage\"\nimport \"channels\"\nimport \"bootstrap\"\nimport \"jquery\"\nimport \"d3/dist/d3.js\"\nimport \"bootstrap-icons/font/bootstrap-icons.css\"\nimport \"@fortawesome/fontawesome-free/scss/fontawesome.scss\"\nimport \"@fortawesome/fontawesome-free/js/all.js\"\n\nRails.start()\nActiveStorage.start()\n\nwindow.jQuery = $;\nwindow.$ = $;\n\n\n$.fn.isInViewport = function() {\n    var elementTop = $(this).offset().top;\n    var elementBottom = elementTop + $(this).outerHeight();\n\n    var viewportTop = $(window).scrollTop();\n    var viewportBottom = viewportTop + $(window).height();\n\n    return elementBottom > viewportTop && elementTop < viewportBottom;\n};\n"],"sourceRoot":""}